[DEBUG] 2020-02-16 20:21:07.724 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:21:07.741 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:21:07.760 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:21:07.867 [http-nio-8080-exec-5] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:21:07.873 [http-nio-8080-exec-5] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:21:08.029 [http-nio-8080-exec-5] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:21:08.030 [http-nio-8080-exec-5] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:21:08.064 [http-nio-8080-exec-5] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:21:08.544 [http-nio-8080-exec-5] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:21:08.571 [http-nio-8080-exec-5] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:21:08.573 [http-nio-8080-exec-5] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:21:08.598 [http-nio-8080-exec-5] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:21:08.648 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1c6a7895
[DEBUG] 2020-02-16 20:21:08.648 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1c6a7895
[DEBUG] 2020-02-16 20:21:08.648 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c6a7895
[DEBUG] 2020-02-16 20:21:08.649 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5b991e3f
[DEBUG] 2020-02-16 20:21:08.650 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2de9759
[DEBUG] 2020-02-16 20:21:08.650 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3cfdb183
[DEBUG] 2020-02-16 20:21:08.651 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@54271cda
[DEBUG] 2020-02-16 20:21:08.651 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@54271cda
[DEBUG] 2020-02-16 20:21:08.652 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@54271cda
[DEBUG] 2020-02-16 20:21:08.653 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@487061d9
[DEBUG] 2020-02-16 20:21:08.653 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@487061d9
[DEBUG] 2020-02-16 20:21:08.653 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@487061d9
[DEBUG] 2020-02-16 20:21:08.654 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4d1489ec
[DEBUG] 2020-02-16 20:21:08.655 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4d1489ec
[DEBUG] 2020-02-16 20:21:08.656 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d1489ec
[DEBUG] 2020-02-16 20:21:08.659 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3a046ddf
[DEBUG] 2020-02-16 20:21:08.659 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3a046ddf
[DEBUG] 2020-02-16 20:21:08.659 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3a046ddf
[DEBUG] 2020-02-16 20:21:08.660 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@63444657
[DEBUG] 2020-02-16 20:21:08.660 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@63444657
[DEBUG] 2020-02-16 20:21:08.661 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@63444657
[DEBUG] 2020-02-16 20:21:08.661 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1e5b4cc9
[DEBUG] 2020-02-16 20:21:08.661 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1e5b4cc9
[DEBUG] 2020-02-16 20:21:08.661 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1e5b4cc9
[DEBUG] 2020-02-16 20:21:08.662 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@37111052
[DEBUG] 2020-02-16 20:21:08.662 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@37111052
[DEBUG] 2020-02-16 20:21:08.663 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@37111052
[DEBUG] 2020-02-16 20:21:08.664 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4408ae29
[DEBUG] 2020-02-16 20:21:08.664 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4408ae29
[DEBUG] 2020-02-16 20:21:08.665 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ea1c3e3
[DEBUG] 2020-02-16 20:21:08.665 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ea1c3e3
[DEBUG] 2020-02-16 20:21:08.666 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@76b71bde
[DEBUG] 2020-02-16 20:21:08.666 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@76b71bde
[DEBUG] 2020-02-16 20:21:08.668 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7c2a30bb
[DEBUG] 2020-02-16 20:21:08.669 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@44f5429a
[DEBUG] 2020-02-16 20:21:08.671 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2efbb895
[DEBUG] 2020-02-16 20:21:08.672 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2efbb895
[DEBUG] 2020-02-16 20:21:08.673 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5d6787e2
[DEBUG] 2020-02-16 20:21:08.673 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5d6787e2
[DEBUG] 2020-02-16 20:21:08.682 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2dc12cfe
[DEBUG] 2020-02-16 20:21:08.682 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2dc12cfe
[DEBUG] 2020-02-16 20:21:08.684 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@693995f9
[DEBUG] 2020-02-16 20:21:08.684 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@693995f9
[DEBUG] 2020-02-16 20:21:08.684 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5a5fcd98
[DEBUG] 2020-02-16 20:21:08.685 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5a5fcd98
[DEBUG] 2020-02-16 20:21:08.686 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@70d8ec2c
[DEBUG] 2020-02-16 20:21:08.686 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@70d8ec2c
[DEBUG] 2020-02-16 20:21:08.688 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@738c4b2
[DEBUG] 2020-02-16 20:21:08.688 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@738c4b2
[DEBUG] 2020-02-16 20:21:08.690 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@66e37daf
[DEBUG] 2020-02-16 20:21:08.690 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@66e37daf
[DEBUG] 2020-02-16 20:21:08.693 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7a4e1cc7
[DEBUG] 2020-02-16 20:21:08.693 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7a4e1cc7
[DEBUG] 2020-02-16 20:21:08.694 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7eb046b4
[DEBUG] 2020-02-16 20:21:08.694 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7eb046b4
[DEBUG] 2020-02-16 20:21:08.695 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@cd1199a
[DEBUG] 2020-02-16 20:21:08.695 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@cd1199a
[DEBUG] 2020-02-16 20:21:08.697 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4a7b987c
[DEBUG] 2020-02-16 20:21:08.697 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4a7b987c
[DEBUG] 2020-02-16 20:21:08.697 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4a7b987c
[DEBUG] 2020-02-16 20:21:08.702 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@125e8e88
[DEBUG] 2020-02-16 20:21:08.703 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5d1cffbf
[DEBUG] 2020-02-16 20:21:08.704 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d1cffbf
[DEBUG] 2020-02-16 20:21:08.704 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d1cffbf
[DEBUG] 2020-02-16 20:21:08.704 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@214e6f93
[DEBUG] 2020-02-16 20:21:08.705 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@681c9000
[DEBUG] 2020-02-16 20:21:08.705 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@681c9000
[DEBUG] 2020-02-16 20:21:08.706 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1dcf0b83
[DEBUG] 2020-02-16 20:21:08.706 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1dcf0b83
[DEBUG] 2020-02-16 20:21:08.707 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c91152a
[DEBUG] 2020-02-16 20:21:08.707 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c91152a
[DEBUG] 2020-02-16 20:21:08.708 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@41d0cdec
[DEBUG] 2020-02-16 20:21:08.708 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@41d0cdec
[DEBUG] 2020-02-16 20:21:08.709 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1bb76bac
[DEBUG] 2020-02-16 20:21:08.709 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1bb76bac
[DEBUG] 2020-02-16 20:21:08.709 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7b6ba4cd
[DEBUG] 2020-02-16 20:21:08.710 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@60a4b697
[DEBUG] 2020-02-16 20:21:08.710 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@60a4b697
[DEBUG] 2020-02-16 20:21:08.710 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@60a4b697
[DEBUG] 2020-02-16 20:21:08.711 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@64e9f7e1
[DEBUG] 2020-02-16 20:21:08.711 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@64e9f7e1
[DEBUG] 2020-02-16 20:21:08.711 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@64e9f7e1
[DEBUG] 2020-02-16 20:21:08.712 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@36d42a52
[DEBUG] 2020-02-16 20:21:08.712 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@530a1adc
[DEBUG] 2020-02-16 20:21:08.713 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4d9047a
[DEBUG] 2020-02-16 20:21:08.713 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4d9047a
[DEBUG] 2020-02-16 20:21:08.713 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4d9047a
[DEBUG] 2020-02-16 20:21:08.714 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@b6bfd3c
[DEBUG] 2020-02-16 20:21:08.714 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@b6bfd3c
[DEBUG] 2020-02-16 20:21:08.714 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@b6bfd3c
[DEBUG] 2020-02-16 20:21:08.715 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2d74c156
[DEBUG] 2020-02-16 20:21:08.716 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@f5780c
[DEBUG] 2020-02-16 20:21:08.719 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6b759bc6
[DEBUG] 2020-02-16 20:21:08.720 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b759bc6
[DEBUG] 2020-02-16 20:21:08.721 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54fac0ee
[DEBUG] 2020-02-16 20:21:08.722 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2f53aa60
[DEBUG] 2020-02-16 20:21:08.722 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f53aa60
[DEBUG] 2020-02-16 20:21:08.724 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@10890132
[DEBUG] 2020-02-16 20:21:08.724 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10890132
[DEBUG] 2020-02-16 20:21:08.724 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4bb33fb8
[DEBUG] 2020-02-16 20:21:08.724 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3aaecd4b
[DEBUG] 2020-02-16 20:21:08.725 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1f121a77
[DEBUG] 2020-02-16 20:21:08.728 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3b5ee3d0
[DEBUG] 2020-02-16 20:21:08.728 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b5ee3d0
[DEBUG] 2020-02-16 20:21:08.728 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@744f9641
[DEBUG] 2020-02-16 20:21:08.728 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@343fd34f
[DEBUG] 2020-02-16 20:21:08.728 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@39f6aaa9
[DEBUG] 2020-02-16 20:21:08.728 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1c070b0f
[DEBUG] 2020-02-16 20:21:08.728 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@14f27b50
[DEBUG] 2020-02-16 20:21:08.728 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5e1d672a
[DEBUG] 2020-02-16 20:21:08.729 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@52b23da2
[DEBUG] 2020-02-16 20:21:08.729 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@76490b88
[DEBUG] 2020-02-16 20:21:08.767 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:21:08.771 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:21:08.773 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:21:08.773 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:21:08.775 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:21:08.776 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:21:08.776 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:21:08.777 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:21:08.778 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:21:08.778 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:21:08.779 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:21:08.779 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:21:08.779 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:21:08.780 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:21:08.787 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:21:08.788 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:21:08.788 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:21:08.933 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:21:09.663 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:21:09.663 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:21:09.663 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:21:09.724 [http-nio-8080-exec-5] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:21:09.745 [http-nio-8080-exec-5] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:21:09.783 [http-nio-8080-exec-5] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:21:09.840 [http-nio-8080-exec-5] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:21:09.844 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3918503] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3e17ee8]
[DEBUG] 2020-02-16 20:21:09.915 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:21:09.949 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:21:09.955 [http-nio-8080-exec-5] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:21:09.960 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:21:10.003 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.008 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:21:10.013 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:21:10.016 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:21:10.018 [http-nio-8080-exec-5] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:21:10.022 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:21:10.023 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.023 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:21:10.023 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:21:10.023 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:21:10.023 [http-nio-8080-exec-5] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:21:10.023 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.023 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:21:10.023 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:21:10.023 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:21:10.023 [http-nio-8080-exec-5] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:21:10.024 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.025 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:21:10.025 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:21:10.025 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:21:10.025 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:21:10.025 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.026 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:21:10.027 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:21:10.027 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:21:10.027 [http-nio-8080-exec-5] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:21:10.027 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.027 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:21:10.031 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:21:10.031 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:21:10.031 [http-nio-8080-exec-5] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:21:10.031 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.031 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:21:10.031 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:21:10.032 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:21:10.032 [http-nio-8080-exec-5] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:21:10.032 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.032 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:21:10.032 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:21:10.032 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:21:10.032 [http-nio-8080-exec-5] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:21:10.032 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.032 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:21:10.032 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:21:10.033 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:21:10.033 [http-nio-8080-exec-5] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:21:10.033 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.033 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:21:10.033 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:21:10.033 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:21:10.033 [http-nio-8080-exec-5] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:21:10.038 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:21:10.040 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.042 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.053 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.055 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.056 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:21:10.060 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:21:10.063 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:21:10.063 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:21:10.066 [http-nio-8080-exec-5] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:21:10.067 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.067 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:21:10.068 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:21:10.068 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:21:10.068 [http-nio-8080-exec-5] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:21:10.068 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:21:10.068 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:21:10.069 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:21:10.069 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:21:10.069 [http-nio-8080-exec-5] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:21:10.070 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:21:10.070 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:21:10.072 [http-nio-8080-exec-5] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:21:10.073 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:21:10.079 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.079 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:21:10.079 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:21:10.079 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:21:10.079 [http-nio-8080-exec-5] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:21:10.079 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:21:10.079 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.079 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:21:10.079 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:21:10.079 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:21:10.079 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:21:10.090 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.090 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:21:10.090 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:21:10.090 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:21:10.091 [http-nio-8080-exec-5] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:21:10.091 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.091 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:21:10.091 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:21:10.091 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:21:10.091 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:21:10.092 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:21:10.092 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:21:10.095 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:21:10.099 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:21:10.101 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:21:10.103 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:21:10.105 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:21:10.105 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:21:10.105 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:21:10.105 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:21:10.105 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:21:10.105 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:21:10.105 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:21:10.105 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:21:10.105 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:21:10.105 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:21:10.105 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:21:10.105 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:21:10.105 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:21:10.114 [http-nio-8080-exec-5] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:21:10.114 [http-nio-8080-exec-5] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:21:10.114 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:21:10.114 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:21:10.115 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:21:10.116 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:21:10.116 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:21:10.117 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:21:10.117 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:21:10.126 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:21:10.126 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:21:10.191 [http-nio-8080-exec-5] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:21:10.192 [http-nio-8080-exec-5] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:21:10.192 [http-nio-8080-exec-5] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:21:10.192 [http-nio-8080-exec-5] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:21:10.192 [http-nio-8080-exec-5] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:21:10.192 [http-nio-8080-exec-5] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:21:10.192 [http-nio-8080-exec-5] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:21:10.192 [http-nio-8080-exec-5] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:21:10.192 [http-nio-8080-exec-5] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:21:10.192 [http-nio-8080-exec-5] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:21:10.192 [http-nio-8080-exec-5] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:21:10.192 [http-nio-8080-exec-5] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:21:10.192 [http-nio-8080-exec-5] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:21:10.192 [http-nio-8080-exec-5] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:21:10.193 [http-nio-8080-exec-5] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:21:10.193 [http-nio-8080-exec-5] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:21:10.193 [http-nio-8080-exec-5] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:21:10.193 [http-nio-8080-exec-5] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:21:10.193 [http-nio-8080-exec-5] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:21:10.193 [http-nio-8080-exec-5] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:21:10.193 [http-nio-8080-exec-5] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:21:10.193 [http-nio-8080-exec-5] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:21:10.193 [http-nio-8080-exec-5] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:21:10.193 [http-nio-8080-exec-5] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:21:10.195 [http-nio-8080-exec-5] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:21:10.195 [http-nio-8080-exec-5] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:21:10.195 [http-nio-8080-exec-5] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:21:10.195 [http-nio-8080-exec-5] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:21:10.195 [http-nio-8080-exec-5] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:21:10.195 [http-nio-8080-exec-5] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:21:10.195 [http-nio-8080-exec-5] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:21:10.195 [http-nio-8080-exec-5] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:21:10.195 [http-nio-8080-exec-5] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:21:10.195 [http-nio-8080-exec-5] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:21:10.196 [http-nio-8080-exec-5] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:21:10.196 [http-nio-8080-exec-5] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:21:10.196 [http-nio-8080-exec-5] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:21:10.196 [http-nio-8080-exec-5] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:21:10.196 [http-nio-8080-exec-5] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:21:10.258 [http-nio-8080-exec-5] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:21:10.294 [http-nio-8080-exec-5] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:21:10.294 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@29a8016, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:21:10.347 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:21:10.347 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:21:10.362 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:21:10.362 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:21:10.370 [http-nio-8080-exec-5] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:21:10.371 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:21:10.372 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3918503] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4c7b8d5c]
[DEBUG] 2020-02-16 20:21:10.426 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:21:10.427 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:21:10.437 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:21:10.437 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:21:10.698 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:21:10.699 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:21:10.701 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:21:10.701 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:21:10.807 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:21:10.808 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:21:10.808 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:21:10.808 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:21:10.808 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:21:10.820 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:21:10.820 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:21:10.820 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:21:10.820 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:21:10.820 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:21:10.820 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:21:10.820 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:21:10.909 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18617879]
[DEBUG] 2020-02-16 20:21:10.911 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:21:10.911 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:21:10.911 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:21:10.911 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:21:10.915 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e3e1cef]
[DEBUG] 2020-02-16 20:21:10.916 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:21:10.916 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:21:10.916 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:21:10.916 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:21:10.916 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:21:10.916 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:21:10.916 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:21:10.916 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:21:10.918 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:21:10.918 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:21:10.918 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:21:10.919 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:21:10.919 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:21:10.919 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:21:10.920 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4e69fae7]
[DEBUG] 2020-02-16 20:21:10.925 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:21:10.925 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:21:10.943 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:21:10.948 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:21:10.950 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:21:10.950 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5963f978]
[DEBUG] 2020-02-16 20:21:10.950 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:21:10.950 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:21:10.950 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:21:10.950 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:21:10.952 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@742b6762]
[DEBUG] 2020-02-16 20:21:10.955 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:21:10.958 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:21:10.962 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:21:10.962 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:21:10.962 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:21:10.962 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:21:10.962 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:21:10.962 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:21:10.962 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:21:10.962 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:21:10.962 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:21:10.962 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:21:10.962 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:21:10.962 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:21:10.962 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1f65ccf9]
[DEBUG] 2020-02-16 20:21:10.962 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:21:10.962 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:21:10.962 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:21:10.965 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:21:10.965 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:21:10.999 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:21:11.000 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ef6fbc1]
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:21:11.001 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:21:11.002 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20eee9da]
[DEBUG] 2020-02-16 20:21:11.004 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@499e5527]
[DEBUG] 2020-02-16 20:21:11.005 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:21:11.005 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:21:11.005 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:21:11.005 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:21:11.005 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:21:11.005 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:21:11.005 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:21:11.005 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:21:11.005 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@fdf86ed]
[DEBUG] 2020-02-16 20:21:11.006 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:21:11.006 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:21:11.006 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:21:11.008 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:21:11.008 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:21:11.008 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2485ad2b]
[DEBUG] 2020-02-16 20:21:11.008 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f8dac55]
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@597282d1]
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3fff13a7]
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:21:11.009 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:21:11.010 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:21:11.010 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:21:11.011 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:21:11.012 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:21:11.015 [http-nio-8080-exec-5] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:21:11.021 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ddfe162]
[DEBUG] 2020-02-16 20:21:11.021 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47b0878b]
[DEBUG] 2020-02-16 20:21:11.021 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:21:11.021 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:21:11.022 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:21:11.022 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:21:11.022 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:21:11.022 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:21:11.024 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:21:11.026 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:21:11.026 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:21:11.087 [http-nio-8080-exec-5] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:21:11.087 [http-nio-8080-exec-5] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:21:11.090 [http-nio-8080-exec-5] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:21:11.113 [http-nio-8080-exec-5] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:21:11.113 [http-nio-8080-exec-5] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:21:11.114 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:21:11.114 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:21:11.121 [http-nio-8080-exec-5] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@178ff71b
[DEBUG] 2020-02-16 20:21:11.126 [http-nio-8080-exec-5] SessionFactoryRegistry - Registering SessionFactory: fc56a1d5-84a6-4b97-b069-257808b9a16b (<unnamed>)
[DEBUG] 2020-02-16 20:21:11.126 [http-nio-8080-exec-5] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:21:11.248 [http-nio-8080-exec-5] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:21:11.284 [http-nio-8080-exec-5] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:21:11.308 [http-nio-8080-exec-5] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3e67768a
[DEBUG] 2020-02-16 20:21:11.339 [http-nio-8080-exec-5] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:21:11.344 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:21:11.358 [http-nio-8080-exec-5] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:21:11.383 [http-nio-8080-exec-5] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:21:11.400 [http-nio-8080-exec-5] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:21:11.403 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:21:11.405 [http-nio-8080-exec-5] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:21:11.405 [http-nio-8080-exec-5] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:21:11.418 [http-nio-8080-exec-5] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:21:11.418 [http-nio-8080-exec-5] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:21:11.418 [http-nio-8080-exec-5] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:21:11.418 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:21:11.425 [http-nio-8080-exec-5] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:21:11.425 [http-nio-8080-exec-5] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:21:11.425 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:21:11.444 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:21:11.516 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:21:11.522 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:21:11.534 [http-nio-8080-exec-5] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:21:11.535 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:21:11.537 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:21:11.543 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:21:11.547 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:21:11.548 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.560 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:21:11.560 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.560 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:21:11.560 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.560 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@21100795
[DEBUG] 2020-02-16 20:21:11.560 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@7c0f0442
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.561 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:21:11.628 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:21:11.629 [http-nio-8080-exec-5] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:21:11.636 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:21:11.639 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:21:11.641 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:21:11.645 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:21:11.645 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:21:11.645 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.645 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:21:11.645 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.645 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:21:11.645 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.645 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:21:11.645 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.645 [http-nio-8080-exec-5] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:21:11.645 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:21:11.647 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:21:11.648 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:21:11.648 [http-nio-8080-exec-5] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:21:11.649 [http-nio-8080-exec-5] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:21:11.649 [http-nio-8080-exec-5] Loader - Done entity load
[DEBUG] 2020-02-16 20:21:11.649 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:21:11.649 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:21:11.649 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:21:11.649 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:21:11.649 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:21:11.649 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:21:11.650 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:21:11.650 [http-nio-8080-exec-5] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:21:11.652 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:21:11.652 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:21:11.654 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:21:11.654 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:21:11.654 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:21:11.655 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.655 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:21:11.655 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.655 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:21:11.655 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.655 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:21:11.655 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.655 [http-nio-8080-exec-5] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:21:11.655 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:21:11.657 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:21:11.657 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:21:11.658 [http-nio-8080-exec-5] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:21:11.658 [http-nio-8080-exec-5] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:21:11.658 [http-nio-8080-exec-5] Loader - Done entity load
[DEBUG] 2020-02-16 20:21:11.658 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:21:11.658 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:21:11.658 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:21:11.658 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:21:11.658 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:21:11.658 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:21:11.660 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:21:11.665 [http-nio-8080-exec-5] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:21:11.665 [http-nio-8080-exec-5] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:21:11.681 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:21:11.682 [http-nio-8080-exec-5] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:21:11.682 [http-nio-8080-exec-5] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:21:11.682 [http-nio-8080-exec-5] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:21:11.682 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:21:11.682 [http-nio-8080-exec-5] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:21:11.682 [http-nio-8080-exec-5] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:21:11.682 [http-nio-8080-exec-5] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:21:11.682 [http-nio-8080-exec-5] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:21:11.682 [http-nio-8080-exec-5] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:21:11.682 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:21:11.682 [http-nio-8080-exec-5] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:21:11.682 [http-nio-8080-exec-5] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:21:11.682 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:21:11.682 [http-nio-8080-exec-5] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:21:11.688 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:21:11.688 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:21:11.689 [http-nio-8080-exec-5] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:21:11.689 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:21:11.689 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:21:11.689 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:21:11.689 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.689 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:21:11.689 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.689 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:21:11.689 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.689 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:21:11.690 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.690 [http-nio-8080-exec-5] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:21:11.690 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:21:11.710 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.711 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@132b6cf8
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] Loader - Done entity load
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:21:11.712 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:21:11.714 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:21:11.715 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.716 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@e35a787
[DEBUG] 2020-02-16 20:21:11.716 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:21:11.716 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:21:11.716 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:21:11.716 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:21:11.716 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:21:11.716 [http-nio-8080-exec-5] Loader - Done entity load
[DEBUG] 2020-02-16 20:21:11.716 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:21:11.716 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:22:04.392 [http-nio-8080-exec-7] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:22:04.399 [http-nio-8080-exec-7] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:22:04.408 [http-nio-8080-exec-7] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:22:04.500 [http-nio-8080-exec-7] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:22:04.502 [http-nio-8080-exec-7] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:22:04.641 [http-nio-8080-exec-7] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:22:04.642 [http-nio-8080-exec-7] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:22:04.647 [http-nio-8080-exec-7] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:22:04.843 [http-nio-8080-exec-7] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:22:04.864 [http-nio-8080-exec-7] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:22:04.865 [http-nio-8080-exec-7] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:22:04.889 [http-nio-8080-exec-7] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:22:04.925 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6ea82dfe
[DEBUG] 2020-02-16 20:22:04.926 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6ea82dfe
[DEBUG] 2020-02-16 20:22:04.926 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6ea82dfe
[DEBUG] 2020-02-16 20:22:04.926 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2a33492c
[DEBUG] 2020-02-16 20:22:04.926 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e591fe
[DEBUG] 2020-02-16 20:22:04.927 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@33701ea4
[DEBUG] 2020-02-16 20:22:04.927 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4a5133f4
[DEBUG] 2020-02-16 20:22:04.927 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4a5133f4
[DEBUG] 2020-02-16 20:22:04.927 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4a5133f4
[DEBUG] 2020-02-16 20:22:04.928 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2354e2d1
[DEBUG] 2020-02-16 20:22:04.928 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2354e2d1
[DEBUG] 2020-02-16 20:22:04.929 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2354e2d1
[DEBUG] 2020-02-16 20:22:04.931 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5c526af8
[DEBUG] 2020-02-16 20:22:04.931 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5c526af8
[DEBUG] 2020-02-16 20:22:04.931 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5c526af8
[DEBUG] 2020-02-16 20:22:04.931 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@158e590
[DEBUG] 2020-02-16 20:22:04.932 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@158e590
[DEBUG] 2020-02-16 20:22:04.932 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@158e590
[DEBUG] 2020-02-16 20:22:04.933 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7f25abab
[DEBUG] 2020-02-16 20:22:04.933 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7f25abab
[DEBUG] 2020-02-16 20:22:04.933 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f25abab
[DEBUG] 2020-02-16 20:22:04.933 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@54a4e89
[DEBUG] 2020-02-16 20:22:04.933 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@54a4e89
[DEBUG] 2020-02-16 20:22:04.934 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@54a4e89
[DEBUG] 2020-02-16 20:22:04.934 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@66d2b609
[DEBUG] 2020-02-16 20:22:04.934 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@66d2b609
[DEBUG] 2020-02-16 20:22:04.934 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@66d2b609
[DEBUG] 2020-02-16 20:22:04.935 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@49e9c968
[DEBUG] 2020-02-16 20:22:04.935 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@49e9c968
[DEBUG] 2020-02-16 20:22:04.937 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@56664f06
[DEBUG] 2020-02-16 20:22:04.937 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@56664f06
[DEBUG] 2020-02-16 20:22:04.938 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@59ddbe1e
[DEBUG] 2020-02-16 20:22:04.939 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@59ddbe1e
[DEBUG] 2020-02-16 20:22:04.939 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@36170cff
[DEBUG] 2020-02-16 20:22:04.940 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@731cb18b
[DEBUG] 2020-02-16 20:22:04.940 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6d321f14
[DEBUG] 2020-02-16 20:22:04.940 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d321f14
[DEBUG] 2020-02-16 20:22:04.941 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3fd828d1
[DEBUG] 2020-02-16 20:22:04.941 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3fd828d1
[DEBUG] 2020-02-16 20:22:04.942 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4ee7f880
[DEBUG] 2020-02-16 20:22:04.942 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4ee7f880
[DEBUG] 2020-02-16 20:22:04.944 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b47f0ab
[DEBUG] 2020-02-16 20:22:04.944 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b47f0ab
[DEBUG] 2020-02-16 20:22:04.945 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51fc2674
[DEBUG] 2020-02-16 20:22:04.945 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51fc2674
[DEBUG] 2020-02-16 20:22:04.945 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@551a349
[DEBUG] 2020-02-16 20:22:04.946 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@551a349
[DEBUG] 2020-02-16 20:22:04.946 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7c011a1b
[DEBUG] 2020-02-16 20:22:04.946 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7c011a1b
[DEBUG] 2020-02-16 20:22:04.948 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@44fd8d20
[DEBUG] 2020-02-16 20:22:04.948 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@44fd8d20
[DEBUG] 2020-02-16 20:22:04.949 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6a9b4169
[DEBUG] 2020-02-16 20:22:04.949 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6a9b4169
[DEBUG] 2020-02-16 20:22:04.951 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4465bf04
[DEBUG] 2020-02-16 20:22:04.952 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4465bf04
[DEBUG] 2020-02-16 20:22:04.954 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2b62c294
[DEBUG] 2020-02-16 20:22:04.954 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2b62c294
[DEBUG] 2020-02-16 20:22:04.955 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@291d79a6
[DEBUG] 2020-02-16 20:22:04.955 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@291d79a6
[DEBUG] 2020-02-16 20:22:04.955 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@291d79a6
[DEBUG] 2020-02-16 20:22:04.956 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7e6df11c
[DEBUG] 2020-02-16 20:22:04.959 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@745c033f
[DEBUG] 2020-02-16 20:22:04.959 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@745c033f
[DEBUG] 2020-02-16 20:22:04.959 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@745c033f
[DEBUG] 2020-02-16 20:22:04.960 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@57834cb4
[DEBUG] 2020-02-16 20:22:04.961 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@149db4b6
[DEBUG] 2020-02-16 20:22:04.961 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@149db4b6
[DEBUG] 2020-02-16 20:22:04.962 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@290a1cce
[DEBUG] 2020-02-16 20:22:04.962 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@290a1cce
[DEBUG] 2020-02-16 20:22:04.963 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@32ef4815
[DEBUG] 2020-02-16 20:22:04.963 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@32ef4815
[DEBUG] 2020-02-16 20:22:04.964 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3c58d28
[DEBUG] 2020-02-16 20:22:04.965 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c58d28
[DEBUG] 2020-02-16 20:22:04.966 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f354ce5
[DEBUG] 2020-02-16 20:22:04.967 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f354ce5
[DEBUG] 2020-02-16 20:22:04.967 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6c0bd0e7
[DEBUG] 2020-02-16 20:22:04.968 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@18cddcb4
[DEBUG] 2020-02-16 20:22:04.968 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@18cddcb4
[DEBUG] 2020-02-16 20:22:04.968 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@18cddcb4
[DEBUG] 2020-02-16 20:22:04.969 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2936b1b0
[DEBUG] 2020-02-16 20:22:04.969 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2936b1b0
[DEBUG] 2020-02-16 20:22:04.969 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2936b1b0
[DEBUG] 2020-02-16 20:22:04.971 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@41ba85cd
[DEBUG] 2020-02-16 20:22:04.971 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@a55ec2c
[DEBUG] 2020-02-16 20:22:04.972 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@309b2fbd
[DEBUG] 2020-02-16 20:22:04.972 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@309b2fbd
[DEBUG] 2020-02-16 20:22:04.972 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@309b2fbd
[DEBUG] 2020-02-16 20:22:04.975 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@30badffb
[DEBUG] 2020-02-16 20:22:04.975 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@30badffb
[DEBUG] 2020-02-16 20:22:04.975 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@30badffb
[DEBUG] 2020-02-16 20:22:04.976 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@318ab887
[DEBUG] 2020-02-16 20:22:04.976 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1f08afaf
[DEBUG] 2020-02-16 20:22:04.977 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@e553ad3
[DEBUG] 2020-02-16 20:22:04.977 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e553ad3
[DEBUG] 2020-02-16 20:22:04.978 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@efba8b3
[DEBUG] 2020-02-16 20:22:04.978 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7acb5380
[DEBUG] 2020-02-16 20:22:04.979 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7acb5380
[DEBUG] 2020-02-16 20:22:04.980 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1c2e86fc
[DEBUG] 2020-02-16 20:22:04.980 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1c2e86fc
[DEBUG] 2020-02-16 20:22:04.981 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@47505005
[DEBUG] 2020-02-16 20:22:04.981 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2fcf41aa
[DEBUG] 2020-02-16 20:22:04.982 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3a622a4d
[DEBUG] 2020-02-16 20:22:04.984 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@11fdcad
[DEBUG] 2020-02-16 20:22:04.984 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@11fdcad
[DEBUG] 2020-02-16 20:22:04.984 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7939bbb3
[DEBUG] 2020-02-16 20:22:04.985 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7297c5e
[DEBUG] 2020-02-16 20:22:04.985 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5d603375
[DEBUG] 2020-02-16 20:22:04.985 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c9632b9
[DEBUG] 2020-02-16 20:22:04.985 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8c6e2bb
[DEBUG] 2020-02-16 20:22:04.985 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4441a471
[DEBUG] 2020-02-16 20:22:04.985 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@18e6cc17
[DEBUG] 2020-02-16 20:22:04.985 [http-nio-8080-exec-7] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15e83648
[DEBUG] 2020-02-16 20:22:05.027 [http-nio-8080-exec-7] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:22:05.027 [http-nio-8080-exec-7] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:22:05.028 [http-nio-8080-exec-7] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:22:05.028 [http-nio-8080-exec-7] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:22:05.030 [http-nio-8080-exec-7] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:22:05.030 [http-nio-8080-exec-7] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:22:05.031 [http-nio-8080-exec-7] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:22:05.032 [http-nio-8080-exec-7] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:22:05.032 [http-nio-8080-exec-7] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:22:05.032 [http-nio-8080-exec-7] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:22:05.033 [http-nio-8080-exec-7] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:22:05.033 [http-nio-8080-exec-7] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:22:05.033 [http-nio-8080-exec-7] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:22:05.034 [http-nio-8080-exec-7] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:22:05.041 [http-nio-8080-exec-7] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:22:05.042 [http-nio-8080-exec-7] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:22:05.042 [http-nio-8080-exec-7] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:22:05.202 [http-nio-8080-exec-7] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:22:05.486 [http-nio-8080-exec-7] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:22:05.487 [http-nio-8080-exec-7] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:22:05.487 [http-nio-8080-exec-7] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:22:05.509 [http-nio-8080-exec-7] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:22:05.531 [http-nio-8080-exec-7] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:22:05.942 [http-nio-8080-exec-7] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:22:05.982 [http-nio-8080-exec-7] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:22:05.986 [http-nio-8080-exec-7] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a9a234] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74939de3]
[DEBUG] 2020-02-16 20:22:06.068 [http-nio-8080-exec-7] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:22:06.089 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:22:06.094 [http-nio-8080-exec-7] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:22:06.097 [http-nio-8080-exec-7] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:22:06.111 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.114 [http-nio-8080-exec-7] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:22:06.116 [http-nio-8080-exec-7] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:22:06.119 [http-nio-8080-exec-7] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:22:06.122 [http-nio-8080-exec-7] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:22:06.125 [http-nio-8080-exec-7] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:22:06.126 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:22:06.127 [http-nio-8080-exec-7] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.128 [http-nio-8080-exec-7] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:22:06.129 [http-nio-8080-exec-7] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:22:06.129 [http-nio-8080-exec-7] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:22:06.129 [http-nio-8080-exec-7] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:22:06.129 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.129 [http-nio-8080-exec-7] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:22:06.129 [http-nio-8080-exec-7] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:22:06.129 [http-nio-8080-exec-7] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:22:06.129 [http-nio-8080-exec-7] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:22:06.130 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:22:06.131 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.132 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.143 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.144 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.144 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:22:06.145 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:22:06.145 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:22:06.146 [http-nio-8080-exec-7] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:22:06.148 [http-nio-8080-exec-7] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:22:06.148 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.148 [http-nio-8080-exec-7] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:22:06.149 [http-nio-8080-exec-7] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:22:06.149 [http-nio-8080-exec-7] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:22:06.149 [http-nio-8080-exec-7] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:22:06.149 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:22:06.149 [http-nio-8080-exec-7] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:22:06.149 [http-nio-8080-exec-7] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:22:06.149 [http-nio-8080-exec-7] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:22:06.149 [http-nio-8080-exec-7] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:22:06.150 [http-nio-8080-exec-7] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:22:06.150 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:22:06.150 [http-nio-8080-exec-7] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:22:06.150 [http-nio-8080-exec-7] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:22:06.152 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.152 [http-nio-8080-exec-7] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:22:06.152 [http-nio-8080-exec-7] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:22:06.152 [http-nio-8080-exec-7] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:22:06.152 [http-nio-8080-exec-7] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:22:06.153 [http-nio-8080-exec-7] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:22:06.153 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.153 [http-nio-8080-exec-7] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:22:06.153 [http-nio-8080-exec-7] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:22:06.153 [http-nio-8080-exec-7] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:22:06.153 [http-nio-8080-exec-7] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:22:06.160 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.160 [http-nio-8080-exec-7] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:22:06.160 [http-nio-8080-exec-7] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:22:06.160 [http-nio-8080-exec-7] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:22:06.160 [http-nio-8080-exec-7] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:22:06.160 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.160 [http-nio-8080-exec-7] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:22:06.160 [http-nio-8080-exec-7] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:22:06.160 [http-nio-8080-exec-7] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:22:06.160 [http-nio-8080-exec-7] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:22:06.161 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:22:06.161 [http-nio-8080-exec-7] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:22:06.162 [http-nio-8080-exec-7] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:22:06.163 [http-nio-8080-exec-7] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:22:06.163 [http-nio-8080-exec-7] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:22:06.163 [http-nio-8080-exec-7] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:22:06.164 [http-nio-8080-exec-7] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:22:06.164 [http-nio-8080-exec-7] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:22:06.164 [http-nio-8080-exec-7] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:22:06.164 [http-nio-8080-exec-7] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:22:06.164 [http-nio-8080-exec-7] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:22:06.164 [http-nio-8080-exec-7] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:22:06.164 [http-nio-8080-exec-7] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:22:06.164 [http-nio-8080-exec-7] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:22:06.164 [http-nio-8080-exec-7] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:22:06.164 [http-nio-8080-exec-7] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:22:06.164 [http-nio-8080-exec-7] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:22:06.164 [http-nio-8080-exec-7] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:22:06.164 [http-nio-8080-exec-7] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:22:06.168 [http-nio-8080-exec-7] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:22:06.168 [http-nio-8080-exec-7] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:22:06.168 [http-nio-8080-exec-7] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:22:06.168 [http-nio-8080-exec-7] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:22:06.169 [http-nio-8080-exec-7] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:22:06.171 [http-nio-8080-exec-7] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:22:06.171 [http-nio-8080-exec-7] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:22:06.171 [http-nio-8080-exec-7] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:22:06.171 [http-nio-8080-exec-7] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:22:06.175 [http-nio-8080-exec-7] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:22:06.176 [http-nio-8080-exec-7] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:22:06.223 [http-nio-8080-exec-7] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:22:06.224 [http-nio-8080-exec-7] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:22:06.225 [http-nio-8080-exec-7] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:22:06.225 [http-nio-8080-exec-7] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:22:06.225 [http-nio-8080-exec-7] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:22:06.225 [http-nio-8080-exec-7] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:22:06.225 [http-nio-8080-exec-7] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:22:06.225 [http-nio-8080-exec-7] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:22:06.225 [http-nio-8080-exec-7] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:22:06.225 [http-nio-8080-exec-7] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:22:06.225 [http-nio-8080-exec-7] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:22:06.225 [http-nio-8080-exec-7] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:22:06.225 [http-nio-8080-exec-7] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:22:06.226 [http-nio-8080-exec-7] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:22:06.227 [http-nio-8080-exec-7] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:22:06.227 [http-nio-8080-exec-7] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:22:06.227 [http-nio-8080-exec-7] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:22:06.227 [http-nio-8080-exec-7] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:22:06.283 [http-nio-8080-exec-7] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:22:06.297 [http-nio-8080-exec-7] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:22:06.297 [http-nio-8080-exec-7] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@46aa4505, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:22:06.316 [http-nio-8080-exec-7] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:22:06.316 [http-nio-8080-exec-7] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:22:06.317 [http-nio-8080-exec-7] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:22:06.317 [http-nio-8080-exec-7] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:22:06.321 [http-nio-8080-exec-7] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:22:06.322 [http-nio-8080-exec-7] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:22:06.322 [http-nio-8080-exec-7] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a9a234] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1da53bb4]
[DEBUG] 2020-02-16 20:22:06.365 [http-nio-8080-exec-7] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:22:06.365 [http-nio-8080-exec-7] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:22:06.375 [http-nio-8080-exec-7] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:22:06.375 [http-nio-8080-exec-7] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:22:06.550 [http-nio-8080-exec-7] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:22:06.550 [http-nio-8080-exec-7] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:22:06.551 [http-nio-8080-exec-7] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:22:06.552 [http-nio-8080-exec-7] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:22:06.597 [http-nio-8080-exec-7] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:22:06.597 [http-nio-8080-exec-7] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:22:06.597 [http-nio-8080-exec-7] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:22:06.597 [http-nio-8080-exec-7] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:22:06.597 [http-nio-8080-exec-7] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:22:06.600 [http-nio-8080-exec-7] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:22:06.600 [http-nio-8080-exec-7] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:22:06.600 [http-nio-8080-exec-7] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:22:06.600 [http-nio-8080-exec-7] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:22:06.600 [http-nio-8080-exec-7] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:22:06.600 [http-nio-8080-exec-7] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:22:06.600 [http-nio-8080-exec-7] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:22:06.623 [http-nio-8080-exec-7] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36e5257]
[DEBUG] 2020-02-16 20:22:06.625 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:22:06.626 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:22:06.626 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:22:06.626 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:22:06.630 [http-nio-8080-exec-7] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c352239]
[DEBUG] 2020-02-16 20:22:06.632 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:22:06.632 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:22:06.632 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:22:06.632 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:22:06.632 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:22:06.632 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:22:06.632 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:22:06.632 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:22:06.632 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:22:06.632 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:22:06.632 [http-nio-8080-exec-7] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:22:06.632 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:22:06.632 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:22:06.632 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:22:06.633 [http-nio-8080-exec-7] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3f7dde76]
[DEBUG] 2020-02-16 20:22:06.634 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:22:06.635 [http-nio-8080-exec-7] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:22:06.648 [http-nio-8080-exec-7] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:22:06.652 [http-nio-8080-exec-7] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:22:06.654 [http-nio-8080-exec-7] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:22:06.654 [http-nio-8080-exec-7] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e31383e]
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a4793bd]
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@55e58f09]
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:22:06.655 [http-nio-8080-exec-7] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:22:06.656 [http-nio-8080-exec-7] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:22:06.656 [http-nio-8080-exec-7] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:22:06.656 [http-nio-8080-exec-7] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:22:06.669 [http-nio-8080-exec-7] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:22:06.670 [http-nio-8080-exec-7] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cf7b41e]
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:22:06.674 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:22:06.675 [http-nio-8080-exec-7] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78ced226]
[DEBUG] 2020-02-16 20:22:06.676 [http-nio-8080-exec-7] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1146d17]
[DEBUG] 2020-02-16 20:22:06.678 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:22:06.678 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:22:06.678 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:22:06.678 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:22:06.678 [http-nio-8080-exec-7] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:22:06.678 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:22:06.678 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:22:06.678 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:22:06.678 [http-nio-8080-exec-7] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@44f9e8c3]
[DEBUG] 2020-02-16 20:22:06.678 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:22:06.678 [http-nio-8080-exec-7] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:22:06.679 [http-nio-8080-exec-7] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:22:06.680 [http-nio-8080-exec-7] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:22:06.680 [http-nio-8080-exec-7] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22fb1f65]
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b7ac1e4]
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@498b176a]
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6eb145a5]
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:22:06.681 [http-nio-8080-exec-7] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:22:06.682 [http-nio-8080-exec-7] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:22:06.682 [http-nio-8080-exec-7] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:22:06.682 [http-nio-8080-exec-7] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:22:06.683 [http-nio-8080-exec-7] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:22:06.685 [http-nio-8080-exec-7] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:22:06.692 [http-nio-8080-exec-7] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19107842]
[DEBUG] 2020-02-16 20:22:06.692 [http-nio-8080-exec-7] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ba2135d]
[DEBUG] 2020-02-16 20:22:06.692 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:22:06.693 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:22:06.693 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:22:06.693 [http-nio-8080-exec-7] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:22:06.693 [http-nio-8080-exec-7] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:22:06.693 [http-nio-8080-exec-7] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:22:06.694 [http-nio-8080-exec-7] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:22:06.694 [http-nio-8080-exec-7] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:22:06.694 [http-nio-8080-exec-7] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:22:06.720 [http-nio-8080-exec-7] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:22:06.720 [http-nio-8080-exec-7] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:22:06.720 [http-nio-8080-exec-7] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:22:06.725 [http-nio-8080-exec-7] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:22:06.725 [http-nio-8080-exec-7] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:22:06.726 [http-nio-8080-exec-7] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:22:06.726 [http-nio-8080-exec-7] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:22:06.728 [http-nio-8080-exec-7] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@35043727
[DEBUG] 2020-02-16 20:22:06.729 [http-nio-8080-exec-7] SessionFactoryRegistry - Registering SessionFactory: eb66d309-2db3-4816-aa79-ada386669d26 (<unnamed>)
[DEBUG] 2020-02-16 20:22:06.729 [http-nio-8080-exec-7] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:22:06.797 [http-nio-8080-exec-7] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:22:06.860 [http-nio-8080-exec-7] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:22:06.910 [http-nio-8080-exec-7] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7239e303
[DEBUG] 2020-02-16 20:22:06.943 [http-nio-8080-exec-7] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:22:06.947 [http-nio-8080-exec-7] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:22:06.959 [http-nio-8080-exec-7] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:22:06.978 [http-nio-8080-exec-7] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:22:06.994 [http-nio-8080-exec-7] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:22:06.996 [http-nio-8080-exec-7] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:22:06.997 [http-nio-8080-exec-7] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:22:06.998 [http-nio-8080-exec-7] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:22:07.008 [http-nio-8080-exec-7] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:22:07.008 [http-nio-8080-exec-7] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:22:07.009 [http-nio-8080-exec-7] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:22:07.009 [http-nio-8080-exec-7] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:22:07.013 [http-nio-8080-exec-7] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:22:07.013 [http-nio-8080-exec-7] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:22:07.014 [http-nio-8080-exec-7] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:22:07.031 [http-nio-8080-exec-7] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:22:07.052 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:22:07.055 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:22:07.067 [http-nio-8080-exec-7] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:22:07.068 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:22:07.070 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:22:07.080 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:22:07.080 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.080 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:22:07.080 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.080 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:22:07.080 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.080 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:22:07.080 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.080 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:22:07.080 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.080 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:22:07.080 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.081 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:22:07.081 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.081 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:22:07.081 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.081 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:22:07.081 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.081 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:22:07.081 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.090 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:22:07.090 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.090 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:22:07.090 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.090 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@4d8a4731
[DEBUG] 2020-02-16 20:22:07.090 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:22:07.091 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.092 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:22:07.092 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.092 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:22:07.092 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.092 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@4249584e
[DEBUG] 2020-02-16 20:22:07.092 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.092 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:22:07.097 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:22:07.097 [http-nio-8080-exec-7] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:22:07.100 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:22:07.106 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:22:07.109 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:22:07.114 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:22:07.114 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:22:07.114 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.114 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:22:07.114 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.114 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:22:07.114 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.114 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:22:07.114 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.114 [http-nio-8080-exec-7] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:22:07.114 [http-nio-8080-exec-7] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:22:07.117 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:22:07.117 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:22:07.118 [http-nio-8080-exec-7] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:22:07.118 [http-nio-8080-exec-7] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:22:07.119 [http-nio-8080-exec-7] Loader - Done entity load
[DEBUG] 2020-02-16 20:22:07.119 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:22:07.120 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:22:07.120 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:22:07.120 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:22:07.120 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:22:07.120 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:22:07.120 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:22:07.120 [http-nio-8080-exec-7] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:22:07.123 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:22:07.123 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:22:07.124 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:22:07.124 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:22:07.124 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:22:07.124 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.124 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:22:07.124 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.124 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:22:07.124 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.124 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:22:07.124 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.124 [http-nio-8080-exec-7] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:22:07.124 [http-nio-8080-exec-7] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:22:07.125 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:22:07.125 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:22:07.126 [http-nio-8080-exec-7] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:22:07.126 [http-nio-8080-exec-7] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:22:07.126 [http-nio-8080-exec-7] Loader - Done entity load
[DEBUG] 2020-02-16 20:22:07.126 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:22:07.126 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:22:07.126 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:22:07.126 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:22:07.126 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:22:07.126 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:22:07.127 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:22:07.131 [http-nio-8080-exec-7] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:22:07.132 [http-nio-8080-exec-7] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:22:07.133 [http-nio-8080-exec-7] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:22:07.133 [http-nio-8080-exec-7] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:22:07.133 [http-nio-8080-exec-7] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:22:07.133 [http-nio-8080-exec-7] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:22:07.133 [http-nio-8080-exec-7] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:22:07.133 [http-nio-8080-exec-7] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:22:07.133 [http-nio-8080-exec-7] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:22:07.133 [http-nio-8080-exec-7] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:22:07.133 [http-nio-8080-exec-7] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:22:07.134 [http-nio-8080-exec-7] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:22:07.134 [http-nio-8080-exec-7] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:22:07.134 [http-nio-8080-exec-7] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:22:07.134 [http-nio-8080-exec-7] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:22:07.134 [http-nio-8080-exec-7] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:22:07.134 [http-nio-8080-exec-7] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:22:07.135 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:22:07.135 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:22:07.136 [http-nio-8080-exec-7] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:22:07.136 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:22:07.136 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:22:07.136 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:22:07.136 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.136 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:22:07.136 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.136 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:22:07.136 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.136 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:22:07.136 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.136 [http-nio-8080-exec-7] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:22:07.136 [http-nio-8080-exec-7] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:22:07.137 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:22:07.137 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6bb9dbec
[DEBUG] 2020-02-16 20:22:07.138 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.139 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:22:07.139 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:22:07.139 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:22:07.139 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:22:07.139 [http-nio-8080-exec-7] Loader - Done entity load
[DEBUG] 2020-02-16 20:22:07.139 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:22:07.140 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:22:07.140 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:22:07.140 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.140 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:22:07.140 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.140 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:22:07.140 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.140 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:22:07.143 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.143 [http-nio-8080-exec-7] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:22:07.143 [http-nio-8080-exec-7] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:22:07.145 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:22:07.146 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:22:07.146 [http-nio-8080-exec-7] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:22:07.146 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:22:07.146 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:22:07.146 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.146 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:22:07.146 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@1f0860a4
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] Loader - Done entity load
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:22:07.147 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:23:05.859 [http-nio-8080-exec-17] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:23:05.870 [http-nio-8080-exec-17] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:23:05.873 [http-nio-8080-exec-17] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:23:05.944 [http-nio-8080-exec-17] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:23:05.948 [http-nio-8080-exec-17] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:23:06.083 [http-nio-8080-exec-17] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:23:06.084 [http-nio-8080-exec-17] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:23:06.092 [http-nio-8080-exec-17] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:23:06.277 [http-nio-8080-exec-17] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:23:06.291 [http-nio-8080-exec-17] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:23:06.291 [http-nio-8080-exec-17] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:23:06.308 [http-nio-8080-exec-17] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:23:06.335 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2ee4eb20
[DEBUG] 2020-02-16 20:23:06.336 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2ee4eb20
[DEBUG] 2020-02-16 20:23:06.336 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ee4eb20
[DEBUG] 2020-02-16 20:23:06.336 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@103eb0eb
[DEBUG] 2020-02-16 20:23:06.336 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2d79d1eb
[DEBUG] 2020-02-16 20:23:06.336 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2a2a6b78
[DEBUG] 2020-02-16 20:23:06.337 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6f81c9f9
[DEBUG] 2020-02-16 20:23:06.337 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6f81c9f9
[DEBUG] 2020-02-16 20:23:06.337 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6f81c9f9
[DEBUG] 2020-02-16 20:23:06.338 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@768758c8
[DEBUG] 2020-02-16 20:23:06.338 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@768758c8
[DEBUG] 2020-02-16 20:23:06.338 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@768758c8
[DEBUG] 2020-02-16 20:23:06.338 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1c9c3a8
[DEBUG] 2020-02-16 20:23:06.338 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1c9c3a8
[DEBUG] 2020-02-16 20:23:06.338 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c9c3a8
[DEBUG] 2020-02-16 20:23:06.339 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4687886
[DEBUG] 2020-02-16 20:23:06.339 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4687886
[DEBUG] 2020-02-16 20:23:06.339 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4687886
[DEBUG] 2020-02-16 20:23:06.339 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7374cf7d
[DEBUG] 2020-02-16 20:23:06.340 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7374cf7d
[DEBUG] 2020-02-16 20:23:06.340 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7374cf7d
[DEBUG] 2020-02-16 20:23:06.340 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2cdf4d42
[DEBUG] 2020-02-16 20:23:06.340 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2cdf4d42
[DEBUG] 2020-02-16 20:23:06.340 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2cdf4d42
[DEBUG] 2020-02-16 20:23:06.341 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@429f5015
[DEBUG] 2020-02-16 20:23:06.341 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@429f5015
[DEBUG] 2020-02-16 20:23:06.341 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@429f5015
[DEBUG] 2020-02-16 20:23:06.341 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@614bce31
[DEBUG] 2020-02-16 20:23:06.341 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@614bce31
[DEBUG] 2020-02-16 20:23:06.342 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@29b3bc3c
[DEBUG] 2020-02-16 20:23:06.342 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@29b3bc3c
[DEBUG] 2020-02-16 20:23:06.342 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7388c92d
[DEBUG] 2020-02-16 20:23:06.342 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7388c92d
[DEBUG] 2020-02-16 20:23:06.343 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@61ee3e5b
[DEBUG] 2020-02-16 20:23:06.343 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ca2e9b
[DEBUG] 2020-02-16 20:23:06.343 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@592796db
[DEBUG] 2020-02-16 20:23:06.343 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@592796db
[DEBUG] 2020-02-16 20:23:06.345 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3fce3f1e
[DEBUG] 2020-02-16 20:23:06.345 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3fce3f1e
[DEBUG] 2020-02-16 20:23:06.346 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2f7b32d9
[DEBUG] 2020-02-16 20:23:06.346 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f7b32d9
[DEBUG] 2020-02-16 20:23:06.348 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@340ebf42
[DEBUG] 2020-02-16 20:23:06.348 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@340ebf42
[DEBUG] 2020-02-16 20:23:06.349 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6ff01bb6
[DEBUG] 2020-02-16 20:23:06.350 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6ff01bb6
[DEBUG] 2020-02-16 20:23:06.350 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3db637eb
[DEBUG] 2020-02-16 20:23:06.350 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3db637eb
[DEBUG] 2020-02-16 20:23:06.351 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f5f399
[DEBUG] 2020-02-16 20:23:06.351 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f5f399
[DEBUG] 2020-02-16 20:23:06.352 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@57ba87fc
[DEBUG] 2020-02-16 20:23:06.352 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@57ba87fc
[DEBUG] 2020-02-16 20:23:06.352 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@35c99e3d
[DEBUG] 2020-02-16 20:23:06.352 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@35c99e3d
[DEBUG] 2020-02-16 20:23:06.353 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3602a647
[DEBUG] 2020-02-16 20:23:06.353 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3602a647
[DEBUG] 2020-02-16 20:23:06.354 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@37fc4ab2
[DEBUG] 2020-02-16 20:23:06.354 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@37fc4ab2
[DEBUG] 2020-02-16 20:23:06.354 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@273c627a
[DEBUG] 2020-02-16 20:23:06.354 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@273c627a
[DEBUG] 2020-02-16 20:23:06.354 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@273c627a
[DEBUG] 2020-02-16 20:23:06.356 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2f9726f
[DEBUG] 2020-02-16 20:23:06.356 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3ec6dc13
[DEBUG] 2020-02-16 20:23:06.356 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ec6dc13
[DEBUG] 2020-02-16 20:23:06.356 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ec6dc13
[DEBUG] 2020-02-16 20:23:06.357 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c83595e
[DEBUG] 2020-02-16 20:23:06.358 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@136e0916
[DEBUG] 2020-02-16 20:23:06.358 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@136e0916
[DEBUG] 2020-02-16 20:23:06.359 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7b2f2d52
[DEBUG] 2020-02-16 20:23:06.359 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7b2f2d52
[DEBUG] 2020-02-16 20:23:06.360 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@74e992fe
[DEBUG] 2020-02-16 20:23:06.360 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@74e992fe
[DEBUG] 2020-02-16 20:23:06.360 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@31fea6a3
[DEBUG] 2020-02-16 20:23:06.360 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@31fea6a3
[DEBUG] 2020-02-16 20:23:06.360 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2706ac98
[DEBUG] 2020-02-16 20:23:06.360 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2706ac98
[DEBUG] 2020-02-16 20:23:06.361 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4613ef7e
[DEBUG] 2020-02-16 20:23:06.361 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@66112415
[DEBUG] 2020-02-16 20:23:06.361 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@66112415
[DEBUG] 2020-02-16 20:23:06.361 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@66112415
[DEBUG] 2020-02-16 20:23:06.362 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@407c70ed
[DEBUG] 2020-02-16 20:23:06.362 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@407c70ed
[DEBUG] 2020-02-16 20:23:06.362 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@407c70ed
[DEBUG] 2020-02-16 20:23:06.363 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@39049ab9
[DEBUG] 2020-02-16 20:23:06.363 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e1b80b9
[DEBUG] 2020-02-16 20:23:06.363 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@dd96a5d
[DEBUG] 2020-02-16 20:23:06.363 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@dd96a5d
[DEBUG] 2020-02-16 20:23:06.363 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@dd96a5d
[DEBUG] 2020-02-16 20:23:06.364 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@549518f
[DEBUG] 2020-02-16 20:23:06.364 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@549518f
[DEBUG] 2020-02-16 20:23:06.364 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@549518f
[DEBUG] 2020-02-16 20:23:06.364 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@ef0ca4f
[DEBUG] 2020-02-16 20:23:06.364 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4c2f0aa3
[DEBUG] 2020-02-16 20:23:06.365 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6f659b21
[DEBUG] 2020-02-16 20:23:06.365 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6f659b21
[DEBUG] 2020-02-16 20:23:06.366 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2c4b27d1
[DEBUG] 2020-02-16 20:23:06.367 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@10fcccba
[DEBUG] 2020-02-16 20:23:06.367 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@10fcccba
[DEBUG] 2020-02-16 20:23:06.369 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@73b6fb7d
[DEBUG] 2020-02-16 20:23:06.369 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@73b6fb7d
[DEBUG] 2020-02-16 20:23:06.369 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6b24bda2
[DEBUG] 2020-02-16 20:23:06.369 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@193eabfb
[DEBUG] 2020-02-16 20:23:06.370 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@556f28fc
[DEBUG] 2020-02-16 20:23:06.372 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@69a5c091
[DEBUG] 2020-02-16 20:23:06.372 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@69a5c091
[DEBUG] 2020-02-16 20:23:06.372 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@57a4f0c9
[DEBUG] 2020-02-16 20:23:06.372 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@166aed78
[DEBUG] 2020-02-16 20:23:06.373 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@432a3cc1
[DEBUG] 2020-02-16 20:23:06.373 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@433065f7
[DEBUG] 2020-02-16 20:23:06.373 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@33e2e7e0
[DEBUG] 2020-02-16 20:23:06.373 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7222cdc9
[DEBUG] 2020-02-16 20:23:06.373 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@607c2b78
[DEBUG] 2020-02-16 20:23:06.373 [http-nio-8080-exec-17] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2023e55d
[DEBUG] 2020-02-16 20:23:06.396 [http-nio-8080-exec-17] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:23:06.396 [http-nio-8080-exec-17] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:23:06.396 [http-nio-8080-exec-17] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:23:06.397 [http-nio-8080-exec-17] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:23:06.397 [http-nio-8080-exec-17] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:23:06.397 [http-nio-8080-exec-17] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:23:06.398 [http-nio-8080-exec-17] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:23:06.398 [http-nio-8080-exec-17] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:23:06.399 [http-nio-8080-exec-17] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:23:06.399 [http-nio-8080-exec-17] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:23:06.399 [http-nio-8080-exec-17] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:23:06.399 [http-nio-8080-exec-17] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:23:06.400 [http-nio-8080-exec-17] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:23:06.400 [http-nio-8080-exec-17] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:23:06.406 [http-nio-8080-exec-17] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:23:06.406 [http-nio-8080-exec-17] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:23:06.406 [http-nio-8080-exec-17] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:23:06.500 [http-nio-8080-exec-17] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:23:06.836 [http-nio-8080-exec-17] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:23:06.840 [http-nio-8080-exec-17] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:23:06.840 [http-nio-8080-exec-17] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:23:06.860 [http-nio-8080-exec-17] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:23:06.875 [http-nio-8080-exec-17] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:23:06.901 [http-nio-8080-exec-17] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:23:06.934 [http-nio-8080-exec-17] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:23:06.938 [http-nio-8080-exec-17] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ab8c70b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@77c0c263]
[DEBUG] 2020-02-16 20:23:06.974 [http-nio-8080-exec-17] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:23:06.993 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:23:06.997 [http-nio-8080-exec-17] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:23:07.000 [http-nio-8080-exec-17] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:23:07.015 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.018 [http-nio-8080-exec-17] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:23:07.019 [http-nio-8080-exec-17] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:23:07.021 [http-nio-8080-exec-17] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:23:07.022 [http-nio-8080-exec-17] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:23:07.024 [http-nio-8080-exec-17] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:23:07.025 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.025 [http-nio-8080-exec-17] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:23:07.025 [http-nio-8080-exec-17] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:23:07.025 [http-nio-8080-exec-17] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:23:07.025 [http-nio-8080-exec-17] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:23:07.025 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.025 [http-nio-8080-exec-17] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:23:07.025 [http-nio-8080-exec-17] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:23:07.026 [http-nio-8080-exec-17] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:23:07.027 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.027 [http-nio-8080-exec-17] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:23:07.027 [http-nio-8080-exec-17] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:23:07.027 [http-nio-8080-exec-17] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:23:07.027 [http-nio-8080-exec-17] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:23:07.027 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.027 [http-nio-8080-exec-17] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:23:07.028 [http-nio-8080-exec-17] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:23:07.028 [http-nio-8080-exec-17] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:23:07.028 [http-nio-8080-exec-17] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:23:07.028 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.028 [http-nio-8080-exec-17] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:23:07.028 [http-nio-8080-exec-17] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:23:07.028 [http-nio-8080-exec-17] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:23:07.028 [http-nio-8080-exec-17] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:23:07.028 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.028 [http-nio-8080-exec-17] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:23:07.028 [http-nio-8080-exec-17] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:23:07.028 [http-nio-8080-exec-17] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:23:07.028 [http-nio-8080-exec-17] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:23:07.029 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:23:07.031 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.033 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.039 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.039 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.039 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:23:07.040 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:23:07.040 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:23:07.040 [http-nio-8080-exec-17] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:23:07.042 [http-nio-8080-exec-17] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:23:07.042 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.042 [http-nio-8080-exec-17] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:23:07.042 [http-nio-8080-exec-17] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:23:07.042 [http-nio-8080-exec-17] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:23:07.042 [http-nio-8080-exec-17] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:23:07.042 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:23:07.042 [http-nio-8080-exec-17] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:23:07.042 [http-nio-8080-exec-17] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:23:07.042 [http-nio-8080-exec-17] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:23:07.043 [http-nio-8080-exec-17] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:23:07.043 [http-nio-8080-exec-17] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:23:07.043 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:23:07.043 [http-nio-8080-exec-17] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:23:07.044 [http-nio-8080-exec-17] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:23:07.046 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.046 [http-nio-8080-exec-17] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:23:07.046 [http-nio-8080-exec-17] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:23:07.046 [http-nio-8080-exec-17] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:23:07.046 [http-nio-8080-exec-17] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:23:07.046 [http-nio-8080-exec-17] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:23:07.046 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.046 [http-nio-8080-exec-17] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:23:07.047 [http-nio-8080-exec-17] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:23:07.047 [http-nio-8080-exec-17] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:23:07.047 [http-nio-8080-exec-17] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:23:07.054 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.055 [http-nio-8080-exec-17] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:23:07.055 [http-nio-8080-exec-17] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:23:07.055 [http-nio-8080-exec-17] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:23:07.055 [http-nio-8080-exec-17] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:23:07.055 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.055 [http-nio-8080-exec-17] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:23:07.055 [http-nio-8080-exec-17] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:23:07.055 [http-nio-8080-exec-17] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:23:07.055 [http-nio-8080-exec-17] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:23:07.056 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:23:07.056 [http-nio-8080-exec-17] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:23:07.058 [http-nio-8080-exec-17] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:23:07.058 [http-nio-8080-exec-17] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:23:07.058 [http-nio-8080-exec-17] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:23:07.058 [http-nio-8080-exec-17] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:23:07.058 [http-nio-8080-exec-17] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:23:07.058 [http-nio-8080-exec-17] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:23:07.058 [http-nio-8080-exec-17] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:23:07.059 [http-nio-8080-exec-17] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:23:07.059 [http-nio-8080-exec-17] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:23:07.059 [http-nio-8080-exec-17] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:23:07.059 [http-nio-8080-exec-17] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:23:07.059 [http-nio-8080-exec-17] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:23:07.059 [http-nio-8080-exec-17] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:23:07.059 [http-nio-8080-exec-17] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:23:07.059 [http-nio-8080-exec-17] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:23:07.059 [http-nio-8080-exec-17] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:23:07.059 [http-nio-8080-exec-17] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:23:07.064 [http-nio-8080-exec-17] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:23:07.064 [http-nio-8080-exec-17] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:23:07.064 [http-nio-8080-exec-17] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:23:07.064 [http-nio-8080-exec-17] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:23:07.065 [http-nio-8080-exec-17] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:23:07.065 [http-nio-8080-exec-17] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:23:07.065 [http-nio-8080-exec-17] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:23:07.065 [http-nio-8080-exec-17] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:23:07.066 [http-nio-8080-exec-17] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:23:07.068 [http-nio-8080-exec-17] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:23:07.068 [http-nio-8080-exec-17] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:23:07.116 [http-nio-8080-exec-17] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:23:07.117 [http-nio-8080-exec-17] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:23:07.118 [http-nio-8080-exec-17] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:23:07.118 [http-nio-8080-exec-17] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:23:07.118 [http-nio-8080-exec-17] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:23:07.118 [http-nio-8080-exec-17] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:23:07.118 [http-nio-8080-exec-17] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:23:07.118 [http-nio-8080-exec-17] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:23:07.118 [http-nio-8080-exec-17] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:23:07.118 [http-nio-8080-exec-17] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:23:07.118 [http-nio-8080-exec-17] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:23:07.118 [http-nio-8080-exec-17] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:23:07.118 [http-nio-8080-exec-17] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:23:07.118 [http-nio-8080-exec-17] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:23:07.118 [http-nio-8080-exec-17] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:23:07.118 [http-nio-8080-exec-17] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:23:07.118 [http-nio-8080-exec-17] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:23:07.119 [http-nio-8080-exec-17] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:23:07.165 [http-nio-8080-exec-17] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:23:07.178 [http-nio-8080-exec-17] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:23:07.178 [http-nio-8080-exec-17] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6c9acd99, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:23:07.190 [http-nio-8080-exec-17] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:23:07.190 [http-nio-8080-exec-17] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:23:07.191 [http-nio-8080-exec-17] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:23:07.191 [http-nio-8080-exec-17] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:23:07.193 [http-nio-8080-exec-17] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:23:07.195 [http-nio-8080-exec-17] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:23:07.195 [http-nio-8080-exec-17] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ab8c70b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5fecd95]
[DEBUG] 2020-02-16 20:23:07.228 [http-nio-8080-exec-17] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:23:07.228 [http-nio-8080-exec-17] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:23:07.235 [http-nio-8080-exec-17] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:23:07.235 [http-nio-8080-exec-17] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:23:07.383 [http-nio-8080-exec-17] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:23:07.383 [http-nio-8080-exec-17] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:23:07.387 [http-nio-8080-exec-17] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:23:07.388 [http-nio-8080-exec-17] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:23:07.439 [http-nio-8080-exec-17] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:23:07.439 [http-nio-8080-exec-17] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:23:07.439 [http-nio-8080-exec-17] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:23:07.439 [http-nio-8080-exec-17] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:23:07.439 [http-nio-8080-exec-17] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:23:07.441 [http-nio-8080-exec-17] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:23:07.442 [http-nio-8080-exec-17] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:23:07.442 [http-nio-8080-exec-17] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:23:07.442 [http-nio-8080-exec-17] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:23:07.442 [http-nio-8080-exec-17] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:23:07.442 [http-nio-8080-exec-17] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:23:07.442 [http-nio-8080-exec-17] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:23:07.457 [http-nio-8080-exec-17] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74b3e81a]
[DEBUG] 2020-02-16 20:23:07.458 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:23:07.458 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:23:07.458 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:23:07.458 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:23:07.460 [http-nio-8080-exec-17] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3575ac2f]
[DEBUG] 2020-02-16 20:23:07.461 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:23:07.461 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:23:07.461 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:23:07.461 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:23:07.462 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:23:07.462 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:23:07.462 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:23:07.462 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:23:07.462 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:23:07.462 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:23:07.462 [http-nio-8080-exec-17] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:23:07.462 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:23:07.462 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:23:07.462 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:23:07.463 [http-nio-8080-exec-17] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@350c8005]
[DEBUG] 2020-02-16 20:23:07.465 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:23:07.465 [http-nio-8080-exec-17] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:23:07.473 [http-nio-8080-exec-17] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:23:07.476 [http-nio-8080-exec-17] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:23:07.477 [http-nio-8080-exec-17] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:23:07.477 [http-nio-8080-exec-17] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48786e91]
[DEBUG] 2020-02-16 20:23:07.477 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:23:07.478 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:23:07.478 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:23:07.478 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:23:07.478 [http-nio-8080-exec-17] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c24f2a2]
[DEBUG] 2020-02-16 20:23:07.479 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:23:07.480 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:23:07.480 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:23:07.480 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:23:07.480 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:23:07.480 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:23:07.480 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:23:07.480 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:23:07.480 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:23:07.480 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:23:07.480 [http-nio-8080-exec-17] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:23:07.480 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:23:07.480 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:23:07.480 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:23:07.480 [http-nio-8080-exec-17] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7f02e4ea]
[DEBUG] 2020-02-16 20:23:07.481 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:23:07.481 [http-nio-8080-exec-17] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:23:07.481 [http-nio-8080-exec-17] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:23:07.482 [http-nio-8080-exec-17] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:23:07.482 [http-nio-8080-exec-17] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:23:07.491 [http-nio-8080-exec-17] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:23:07.491 [http-nio-8080-exec-17] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:23:07.491 [http-nio-8080-exec-17] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:23:07.491 [http-nio-8080-exec-17] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:23:07.491 [http-nio-8080-exec-17] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:23:07.491 [http-nio-8080-exec-17] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:23:07.491 [http-nio-8080-exec-17] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:23:07.491 [http-nio-8080-exec-17] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:23:07.491 [http-nio-8080-exec-17] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:23:07.491 [http-nio-8080-exec-17] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a6371ec]
[DEBUG] 2020-02-16 20:23:07.491 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:23:07.492 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:23:07.492 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:23:07.492 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:23:07.492 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:23:07.492 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:23:07.492 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:23:07.492 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:23:07.492 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:23:07.492 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:23:07.492 [http-nio-8080-exec-17] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62a101f9]
[DEBUG] 2020-02-16 20:23:07.493 [http-nio-8080-exec-17] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e817771]
[DEBUG] 2020-02-16 20:23:07.494 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:23:07.494 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:23:07.494 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:23:07.494 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:23:07.494 [http-nio-8080-exec-17] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:23:07.494 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:23:07.494 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:23:07.494 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:23:07.494 [http-nio-8080-exec-17] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@69a8116b]
[DEBUG] 2020-02-16 20:23:07.494 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:23:07.494 [http-nio-8080-exec-17] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:23:07.494 [http-nio-8080-exec-17] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:23:07.498 [http-nio-8080-exec-17] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:23:07.498 [http-nio-8080-exec-17] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1640fef1]
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8450cc]
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@609eead1]
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:23:07.499 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:23:07.500 [http-nio-8080-exec-17] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:23:07.500 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:23:07.500 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:23:07.500 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:23:07.500 [http-nio-8080-exec-17] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5fa39ec7]
[DEBUG] 2020-02-16 20:23:07.500 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:23:07.500 [http-nio-8080-exec-17] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:23:07.500 [http-nio-8080-exec-17] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:23:07.501 [http-nio-8080-exec-17] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:23:07.501 [http-nio-8080-exec-17] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:23:07.503 [http-nio-8080-exec-17] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:23:07.503 [http-nio-8080-exec-17] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:23:07.505 [http-nio-8080-exec-17] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:23:07.508 [http-nio-8080-exec-17] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@324e6b1f]
[DEBUG] 2020-02-16 20:23:07.508 [http-nio-8080-exec-17] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43476d35]
[DEBUG] 2020-02-16 20:23:07.508 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:23:07.508 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:23:07.508 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:23:07.508 [http-nio-8080-exec-17] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:23:07.508 [http-nio-8080-exec-17] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:23:07.509 [http-nio-8080-exec-17] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:23:07.510 [http-nio-8080-exec-17] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:23:07.510 [http-nio-8080-exec-17] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:23:07.510 [http-nio-8080-exec-17] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:23:07.534 [http-nio-8080-exec-17] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:23:07.534 [http-nio-8080-exec-17] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:23:07.534 [http-nio-8080-exec-17] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:23:07.548 [http-nio-8080-exec-17] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:23:07.549 [http-nio-8080-exec-17] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:23:07.549 [http-nio-8080-exec-17] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:23:07.549 [http-nio-8080-exec-17] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:23:07.552 [http-nio-8080-exec-17] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6a731d30
[DEBUG] 2020-02-16 20:23:07.554 [http-nio-8080-exec-17] SessionFactoryRegistry - Registering SessionFactory: 977694eb-e511-4b58-9bb0-90e7e63581c3 (<unnamed>)
[DEBUG] 2020-02-16 20:23:07.554 [http-nio-8080-exec-17] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:23:07.616 [http-nio-8080-exec-17] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:23:07.632 [http-nio-8080-exec-17] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:23:07.645 [http-nio-8080-exec-17] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@72488653
[DEBUG] 2020-02-16 20:23:07.662 [http-nio-8080-exec-17] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:23:07.664 [http-nio-8080-exec-17] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:23:07.667 [http-nio-8080-exec-17] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:23:07.686 [http-nio-8080-exec-17] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:23:07.696 [http-nio-8080-exec-17] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:23:07.697 [http-nio-8080-exec-17] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:23:07.698 [http-nio-8080-exec-17] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:23:07.698 [http-nio-8080-exec-17] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:23:07.705 [http-nio-8080-exec-17] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:23:07.705 [http-nio-8080-exec-17] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:23:07.706 [http-nio-8080-exec-17] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:23:07.706 [http-nio-8080-exec-17] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:23:07.710 [http-nio-8080-exec-17] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:23:07.710 [http-nio-8080-exec-17] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:23:07.710 [http-nio-8080-exec-17] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:23:07.723 [http-nio-8080-exec-17] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:23:07.740 [http-nio-8080-exec-17] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:23:07.742 [http-nio-8080-exec-17] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:23:07.749 [http-nio-8080-exec-17] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:23:07.749 [http-nio-8080-exec-17] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:23:07.750 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:23:07.750 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:23:07.751 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.756 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:23:07.756 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.756 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:23:07.756 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.756 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6e45854d
[DEBUG] 2020-02-16 20:23:07.756 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.756 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@4d980cbe
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.757 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:23:07.760 [http-nio-8080-exec-17] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:23:07.760 [http-nio-8080-exec-17] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:23:07.766 [http-nio-8080-exec-17] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:23:07.770 [http-nio-8080-exec-17] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:23:07.771 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:23:07.773 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:23:07.773 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:23:07.773 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.773 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:23:07.773 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.773 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:23:07.773 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.773 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:23:07.773 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.774 [http-nio-8080-exec-17] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:23:07.774 [http-nio-8080-exec-17] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:23:07.777 [http-nio-8080-exec-17] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:23:07.777 [http-nio-8080-exec-17] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:23:07.778 [http-nio-8080-exec-17] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:23:07.778 [http-nio-8080-exec-17] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:23:07.778 [http-nio-8080-exec-17] Loader - Done entity load
[DEBUG] 2020-02-16 20:23:07.778 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:23:07.779 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:23:07.779 [http-nio-8080-exec-17] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:23:07.779 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:23:07.779 [http-nio-8080-exec-17] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:23:07.779 [http-nio-8080-exec-17] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:23:07.779 [http-nio-8080-exec-17] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:23:07.779 [http-nio-8080-exec-17] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:23:07.780 [http-nio-8080-exec-17] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:23:07.781 [http-nio-8080-exec-17] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:23:07.785 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:23:07.785 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:23:07.785 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:23:07.785 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.785 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:23:07.785 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.785 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:23:07.785 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.785 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:23:07.785 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.786 [http-nio-8080-exec-17] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:23:07.786 [http-nio-8080-exec-17] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:23:07.787 [http-nio-8080-exec-17] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:23:07.788 [http-nio-8080-exec-17] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:23:07.788 [http-nio-8080-exec-17] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:23:07.788 [http-nio-8080-exec-17] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:23:07.789 [http-nio-8080-exec-17] Loader - Done entity load
[DEBUG] 2020-02-16 20:23:07.789 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:23:07.789 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:23:07.789 [http-nio-8080-exec-17] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:23:07.789 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:23:07.789 [http-nio-8080-exec-17] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:23:07.789 [http-nio-8080-exec-17] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:23:07.790 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:23:07.793 [http-nio-8080-exec-17] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:23:07.794 [http-nio-8080-exec-17] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:23:07.796 [http-nio-8080-exec-17] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:23:07.796 [http-nio-8080-exec-17] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:23:07.796 [http-nio-8080-exec-17] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:23:07.796 [http-nio-8080-exec-17] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:23:07.797 [http-nio-8080-exec-17] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:23:07.797 [http-nio-8080-exec-17] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:23:07.797 [http-nio-8080-exec-17] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:23:07.797 [http-nio-8080-exec-17] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:23:07.797 [http-nio-8080-exec-17] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:23:07.797 [http-nio-8080-exec-17] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:23:07.797 [http-nio-8080-exec-17] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:23:07.798 [http-nio-8080-exec-17] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:23:07.798 [http-nio-8080-exec-17] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:23:07.798 [http-nio-8080-exec-17] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:23:07.798 [http-nio-8080-exec-17] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:23:07.800 [http-nio-8080-exec-17] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:23:07.800 [http-nio-8080-exec-17] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:23:07.801 [http-nio-8080-exec-17] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:23:07.801 [http-nio-8080-exec-17] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:23:07.801 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:23:07.805 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:23:07.805 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.805 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:23:07.805 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.805 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:23:07.805 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.805 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:23:07.805 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.805 [http-nio-8080-exec-17] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:23:07.805 [http-nio-8080-exec-17] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:23:07.806 [http-nio-8080-exec-17] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:23:07.807 [http-nio-8080-exec-17] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@784686c2
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:23:07.808 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:23:07.809 [http-nio-8080-exec-17] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:23:07.809 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:23:07.809 [http-nio-8080-exec-17] Loader - Done entity load
[DEBUG] 2020-02-16 20:23:07.809 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:23:07.809 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:23:07.809 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:23:07.809 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.809 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:23:07.809 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.809 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:23:07.809 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.809 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:23:07.809 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.809 [http-nio-8080-exec-17] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:23:07.809 [http-nio-8080-exec-17] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:23:07.811 [http-nio-8080-exec-17] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:23:07.811 [http-nio-8080-exec-17] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:23:07.812 [http-nio-8080-exec-17] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:23:07.812 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:23:07.812 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:23:07.812 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.812 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:23:07.812 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.812 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:23:07.812 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.812 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:23:07.812 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.812 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:23:07.812 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.812 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:23:07.812 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.812 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:23:07.812 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.813 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:23:07.814 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@67d44956
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] Loader - Done entity load
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:23:07.815 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:25:20.655 [http-nio-8080-exec-26] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:25:20.659 [http-nio-8080-exec-26] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:25:20.661 [http-nio-8080-exec-26] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:25:20.715 [http-nio-8080-exec-26] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:25:20.718 [http-nio-8080-exec-26] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:25:20.808 [http-nio-8080-exec-26] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:25:20.809 [http-nio-8080-exec-26] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:25:20.811 [http-nio-8080-exec-26] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:25:20.974 [http-nio-8080-exec-26] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:25:20.991 [http-nio-8080-exec-26] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:25:20.992 [http-nio-8080-exec-26] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:25:21.010 [http-nio-8080-exec-26] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:25:21.040 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@727a9f82
[DEBUG] 2020-02-16 20:25:21.040 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@727a9f82
[DEBUG] 2020-02-16 20:25:21.041 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@727a9f82
[DEBUG] 2020-02-16 20:25:21.041 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c3146e3
[DEBUG] 2020-02-16 20:25:21.041 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@102e5009
[DEBUG] 2020-02-16 20:25:21.041 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2a97dfc
[DEBUG] 2020-02-16 20:25:21.042 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@29c801c6
[DEBUG] 2020-02-16 20:25:21.042 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@29c801c6
[DEBUG] 2020-02-16 20:25:21.042 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29c801c6
[DEBUG] 2020-02-16 20:25:21.042 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@19d8d8bd
[DEBUG] 2020-02-16 20:25:21.043 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@19d8d8bd
[DEBUG] 2020-02-16 20:25:21.043 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@19d8d8bd
[DEBUG] 2020-02-16 20:25:21.043 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3d279c32
[DEBUG] 2020-02-16 20:25:21.043 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3d279c32
[DEBUG] 2020-02-16 20:25:21.044 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3d279c32
[DEBUG] 2020-02-16 20:25:21.044 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@33f06349
[DEBUG] 2020-02-16 20:25:21.044 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@33f06349
[DEBUG] 2020-02-16 20:25:21.044 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@33f06349
[DEBUG] 2020-02-16 20:25:21.045 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6647e992
[DEBUG] 2020-02-16 20:25:21.045 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6647e992
[DEBUG] 2020-02-16 20:25:21.045 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6647e992
[DEBUG] 2020-02-16 20:25:21.046 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@508b390f
[DEBUG] 2020-02-16 20:25:21.046 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@508b390f
[DEBUG] 2020-02-16 20:25:21.046 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@508b390f
[DEBUG] 2020-02-16 20:25:21.047 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3f13f405
[DEBUG] 2020-02-16 20:25:21.047 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3f13f405
[DEBUG] 2020-02-16 20:25:21.047 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f13f405
[DEBUG] 2020-02-16 20:25:21.048 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@57c28595
[DEBUG] 2020-02-16 20:25:21.048 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@57c28595
[DEBUG] 2020-02-16 20:25:21.049 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f30c52
[DEBUG] 2020-02-16 20:25:21.049 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f30c52
[DEBUG] 2020-02-16 20:25:21.049 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@f97e66f
[DEBUG] 2020-02-16 20:25:21.049 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@f97e66f
[DEBUG] 2020-02-16 20:25:21.050 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6ce6b919
[DEBUG] 2020-02-16 20:25:21.050 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7914cc6d
[DEBUG] 2020-02-16 20:25:21.050 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1d081729
[DEBUG] 2020-02-16 20:25:21.051 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1d081729
[DEBUG] 2020-02-16 20:25:21.051 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2db4aab3
[DEBUG] 2020-02-16 20:25:21.051 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2db4aab3
[DEBUG] 2020-02-16 20:25:21.052 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@64373fe0
[DEBUG] 2020-02-16 20:25:21.052 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@64373fe0
[DEBUG] 2020-02-16 20:25:21.053 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ca7262a
[DEBUG] 2020-02-16 20:25:21.053 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ca7262a
[DEBUG] 2020-02-16 20:25:21.053 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6f181e2d
[DEBUG] 2020-02-16 20:25:21.054 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6f181e2d
[DEBUG] 2020-02-16 20:25:21.055 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@396bc074
[DEBUG] 2020-02-16 20:25:21.055 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@396bc074
[DEBUG] 2020-02-16 20:25:21.056 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f197219
[DEBUG] 2020-02-16 20:25:21.056 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f197219
[DEBUG] 2020-02-16 20:25:21.056 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5e510d72
[DEBUG] 2020-02-16 20:25:21.056 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5e510d72
[DEBUG] 2020-02-16 20:25:21.057 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5ccab9c9
[DEBUG] 2020-02-16 20:25:21.057 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5ccab9c9
[DEBUG] 2020-02-16 20:25:21.058 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4444e579
[DEBUG] 2020-02-16 20:25:21.058 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4444e579
[DEBUG] 2020-02-16 20:25:21.058 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@48695b1c
[DEBUG] 2020-02-16 20:25:21.059 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48695b1c
[DEBUG] 2020-02-16 20:25:21.059 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@e534791
[DEBUG] 2020-02-16 20:25:21.059 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@e534791
[DEBUG] 2020-02-16 20:25:21.059 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@e534791
[DEBUG] 2020-02-16 20:25:21.060 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@18f199e5
[DEBUG] 2020-02-16 20:25:21.061 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@73ecc479
[DEBUG] 2020-02-16 20:25:21.061 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@73ecc479
[DEBUG] 2020-02-16 20:25:21.061 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@73ecc479
[DEBUG] 2020-02-16 20:25:21.062 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@38d2d0f6
[DEBUG] 2020-02-16 20:25:21.063 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@572ccac5
[DEBUG] 2020-02-16 20:25:21.063 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@572ccac5
[DEBUG] 2020-02-16 20:25:21.064 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4e0615d2
[DEBUG] 2020-02-16 20:25:21.064 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e0615d2
[DEBUG] 2020-02-16 20:25:21.065 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b5347a2
[DEBUG] 2020-02-16 20:25:21.065 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b5347a2
[DEBUG] 2020-02-16 20:25:21.066 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1163d952
[DEBUG] 2020-02-16 20:25:21.066 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1163d952
[DEBUG] 2020-02-16 20:25:21.068 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@70d3bdf0
[DEBUG] 2020-02-16 20:25:21.069 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@70d3bdf0
[DEBUG] 2020-02-16 20:25:21.069 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@52a3a247
[DEBUG] 2020-02-16 20:25:21.070 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2b81cd5b
[DEBUG] 2020-02-16 20:25:21.070 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2b81cd5b
[DEBUG] 2020-02-16 20:25:21.070 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2b81cd5b
[DEBUG] 2020-02-16 20:25:21.071 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@557631a
[DEBUG] 2020-02-16 20:25:21.071 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@557631a
[DEBUG] 2020-02-16 20:25:21.071 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@557631a
[DEBUG] 2020-02-16 20:25:21.071 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4cc91341
[DEBUG] 2020-02-16 20:25:21.072 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6997c5b1
[DEBUG] 2020-02-16 20:25:21.072 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@361d6469
[DEBUG] 2020-02-16 20:25:21.072 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@361d6469
[DEBUG] 2020-02-16 20:25:21.072 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@361d6469
[DEBUG] 2020-02-16 20:25:21.073 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5e6c7515
[DEBUG] 2020-02-16 20:25:21.073 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5e6c7515
[DEBUG] 2020-02-16 20:25:21.073 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5e6c7515
[DEBUG] 2020-02-16 20:25:21.073 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ef61271
[DEBUG] 2020-02-16 20:25:21.073 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@77a03760
[DEBUG] 2020-02-16 20:25:21.074 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5f63016f
[DEBUG] 2020-02-16 20:25:21.074 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f63016f
[DEBUG] 2020-02-16 20:25:21.074 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@73c6da8d
[DEBUG] 2020-02-16 20:25:21.075 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1dc25d20
[DEBUG] 2020-02-16 20:25:21.075 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1dc25d20
[DEBUG] 2020-02-16 20:25:21.076 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@55e44d68
[DEBUG] 2020-02-16 20:25:21.076 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@55e44d68
[DEBUG] 2020-02-16 20:25:21.076 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@c132d78
[DEBUG] 2020-02-16 20:25:21.076 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@39133df8
[DEBUG] 2020-02-16 20:25:21.077 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@29f72b15
[DEBUG] 2020-02-16 20:25:21.079 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5e5dad8d
[DEBUG] 2020-02-16 20:25:21.079 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5e5dad8d
[DEBUG] 2020-02-16 20:25:21.079 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3a9835d1
[DEBUG] 2020-02-16 20:25:21.079 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@204ac687
[DEBUG] 2020-02-16 20:25:21.079 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@780a2798
[DEBUG] 2020-02-16 20:25:21.079 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@274a37a3
[DEBUG] 2020-02-16 20:25:21.079 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5c87b826
[DEBUG] 2020-02-16 20:25:21.079 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a0f23cf
[DEBUG] 2020-02-16 20:25:21.079 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@390f7f1
[DEBUG] 2020-02-16 20:25:21.079 [http-nio-8080-exec-26] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@75113f0f
[DEBUG] 2020-02-16 20:25:21.103 [http-nio-8080-exec-26] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:25:21.105 [http-nio-8080-exec-26] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:25:21.106 [http-nio-8080-exec-26] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:25:21.106 [http-nio-8080-exec-26] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:25:21.108 [http-nio-8080-exec-26] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:25:21.109 [http-nio-8080-exec-26] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:25:21.109 [http-nio-8080-exec-26] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:25:21.110 [http-nio-8080-exec-26] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:25:21.111 [http-nio-8080-exec-26] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:25:21.111 [http-nio-8080-exec-26] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:25:21.112 [http-nio-8080-exec-26] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:25:21.112 [http-nio-8080-exec-26] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:25:21.112 [http-nio-8080-exec-26] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:25:21.112 [http-nio-8080-exec-26] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:25:21.117 [http-nio-8080-exec-26] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:25:21.117 [http-nio-8080-exec-26] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:25:21.117 [http-nio-8080-exec-26] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:25:21.226 [http-nio-8080-exec-26] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:25:21.443 [http-nio-8080-exec-26] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:25:21.443 [http-nio-8080-exec-26] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:25:21.443 [http-nio-8080-exec-26] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:25:21.466 [http-nio-8080-exec-26] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:25:21.479 [http-nio-8080-exec-26] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:25:21.509 [http-nio-8080-exec-26] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:25:21.550 [http-nio-8080-exec-26] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:25:21.552 [http-nio-8080-exec-26] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7208495c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2688d9a5]
[DEBUG] 2020-02-16 20:25:21.589 [http-nio-8080-exec-26] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:25:21.613 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:25:21.618 [http-nio-8080-exec-26] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:25:21.620 [http-nio-8080-exec-26] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:25:21.640 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.643 [http-nio-8080-exec-26] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:25:21.644 [http-nio-8080-exec-26] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:25:21.645 [http-nio-8080-exec-26] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:25:21.648 [http-nio-8080-exec-26] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:25:21.653 [http-nio-8080-exec-26] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:25:21.655 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.655 [http-nio-8080-exec-26] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:25:21.656 [http-nio-8080-exec-26] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:25:21.657 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.657 [http-nio-8080-exec-26] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:25:21.657 [http-nio-8080-exec-26] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:25:21.657 [http-nio-8080-exec-26] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:25:21.657 [http-nio-8080-exec-26] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:25:21.657 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.657 [http-nio-8080-exec-26] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:25:21.657 [http-nio-8080-exec-26] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:25:21.657 [http-nio-8080-exec-26] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:25:21.657 [http-nio-8080-exec-26] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:25:21.657 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.658 [http-nio-8080-exec-26] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:25:21.658 [http-nio-8080-exec-26] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:25:21.658 [http-nio-8080-exec-26] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:25:21.658 [http-nio-8080-exec-26] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:25:21.658 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.658 [http-nio-8080-exec-26] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:25:21.658 [http-nio-8080-exec-26] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:25:21.658 [http-nio-8080-exec-26] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:25:21.658 [http-nio-8080-exec-26] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:25:21.658 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.658 [http-nio-8080-exec-26] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:25:21.659 [http-nio-8080-exec-26] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:25:21.660 [http-nio-8080-exec-26] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:25:21.660 [http-nio-8080-exec-26] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:25:21.661 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:25:21.662 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.664 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.678 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.678 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.679 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:25:21.680 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:25:21.680 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:25:21.680 [http-nio-8080-exec-26] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:25:21.684 [http-nio-8080-exec-26] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:25:21.684 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.684 [http-nio-8080-exec-26] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:25:21.684 [http-nio-8080-exec-26] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:25:21.684 [http-nio-8080-exec-26] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:25:21.685 [http-nio-8080-exec-26] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:25:21.685 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:25:21.685 [http-nio-8080-exec-26] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:25:21.685 [http-nio-8080-exec-26] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:25:21.685 [http-nio-8080-exec-26] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:25:21.685 [http-nio-8080-exec-26] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:25:21.686 [http-nio-8080-exec-26] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:25:21.686 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:25:21.686 [http-nio-8080-exec-26] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:25:21.687 [http-nio-8080-exec-26] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:25:21.689 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.689 [http-nio-8080-exec-26] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:25:21.689 [http-nio-8080-exec-26] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:25:21.689 [http-nio-8080-exec-26] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:25:21.689 [http-nio-8080-exec-26] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:25:21.689 [http-nio-8080-exec-26] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:25:21.689 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.689 [http-nio-8080-exec-26] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:25:21.689 [http-nio-8080-exec-26] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:25:21.689 [http-nio-8080-exec-26] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:25:21.689 [http-nio-8080-exec-26] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:25:21.694 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.694 [http-nio-8080-exec-26] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:25:21.694 [http-nio-8080-exec-26] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:25:21.694 [http-nio-8080-exec-26] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:25:21.694 [http-nio-8080-exec-26] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:25:21.694 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.694 [http-nio-8080-exec-26] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:25:21.694 [http-nio-8080-exec-26] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:25:21.695 [http-nio-8080-exec-26] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:25:21.695 [http-nio-8080-exec-26] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:25:21.695 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:25:21.695 [http-nio-8080-exec-26] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:25:21.696 [http-nio-8080-exec-26] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:25:21.697 [http-nio-8080-exec-26] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:25:21.698 [http-nio-8080-exec-26] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:25:21.699 [http-nio-8080-exec-26] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:25:21.700 [http-nio-8080-exec-26] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:25:21.700 [http-nio-8080-exec-26] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:25:21.700 [http-nio-8080-exec-26] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:25:21.700 [http-nio-8080-exec-26] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:25:21.700 [http-nio-8080-exec-26] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:25:21.700 [http-nio-8080-exec-26] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:25:21.700 [http-nio-8080-exec-26] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:25:21.700 [http-nio-8080-exec-26] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:25:21.700 [http-nio-8080-exec-26] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:25:21.700 [http-nio-8080-exec-26] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:25:21.700 [http-nio-8080-exec-26] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:25:21.700 [http-nio-8080-exec-26] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:25:21.700 [http-nio-8080-exec-26] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:25:21.707 [http-nio-8080-exec-26] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:25:21.708 [http-nio-8080-exec-26] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:25:21.708 [http-nio-8080-exec-26] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:25:21.708 [http-nio-8080-exec-26] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:25:21.708 [http-nio-8080-exec-26] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:25:21.709 [http-nio-8080-exec-26] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:25:21.709 [http-nio-8080-exec-26] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:25:21.709 [http-nio-8080-exec-26] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:25:21.709 [http-nio-8080-exec-26] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:25:21.712 [http-nio-8080-exec-26] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:25:21.712 [http-nio-8080-exec-26] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:25:21.761 [http-nio-8080-exec-26] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:25:21.761 [http-nio-8080-exec-26] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:25:21.762 [http-nio-8080-exec-26] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:25:21.808 [http-nio-8080-exec-26] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:25:21.827 [http-nio-8080-exec-26] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:25:21.827 [http-nio-8080-exec-26] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6d2e5dfe, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:25:21.842 [http-nio-8080-exec-26] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:25:21.842 [http-nio-8080-exec-26] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:25:21.843 [http-nio-8080-exec-26] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:25:21.843 [http-nio-8080-exec-26] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:25:21.849 [http-nio-8080-exec-26] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:25:21.851 [http-nio-8080-exec-26] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:25:21.851 [http-nio-8080-exec-26] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7208495c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@14439317]
[DEBUG] 2020-02-16 20:25:21.892 [http-nio-8080-exec-26] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:25:21.892 [http-nio-8080-exec-26] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:25:21.898 [http-nio-8080-exec-26] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:25:21.898 [http-nio-8080-exec-26] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:25:22.083 [http-nio-8080-exec-26] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:25:22.083 [http-nio-8080-exec-26] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:25:22.085 [http-nio-8080-exec-26] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:25:22.085 [http-nio-8080-exec-26] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:25:22.124 [http-nio-8080-exec-26] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:25:22.124 [http-nio-8080-exec-26] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:25:22.124 [http-nio-8080-exec-26] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:25:22.124 [http-nio-8080-exec-26] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:25:22.124 [http-nio-8080-exec-26] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:25:22.126 [http-nio-8080-exec-26] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:25:22.126 [http-nio-8080-exec-26] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:25:22.126 [http-nio-8080-exec-26] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:25:22.126 [http-nio-8080-exec-26] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:25:22.126 [http-nio-8080-exec-26] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:25:22.126 [http-nio-8080-exec-26] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:25:22.126 [http-nio-8080-exec-26] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:25:22.148 [http-nio-8080-exec-26] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75c6d53c]
[DEBUG] 2020-02-16 20:25:22.149 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:25:22.150 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:25:22.150 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:25:22.150 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:25:22.153 [http-nio-8080-exec-26] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f4f8c32]
[DEBUG] 2020-02-16 20:25:22.155 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:25:22.155 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:25:22.155 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:25:22.155 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:25:22.155 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:25:22.155 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:25:22.155 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:25:22.155 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:25:22.155 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:25:22.155 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:25:22.155 [http-nio-8080-exec-26] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:25:22.155 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:25:22.156 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:25:22.156 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:25:22.156 [http-nio-8080-exec-26] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7b8dcd7e]
[DEBUG] 2020-02-16 20:25:22.158 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:25:22.158 [http-nio-8080-exec-26] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:25:22.172 [http-nio-8080-exec-26] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:25:22.175 [http-nio-8080-exec-26] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:25:22.177 [http-nio-8080-exec-26] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:25:22.177 [http-nio-8080-exec-26] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d7f7bb3]
[DEBUG] 2020-02-16 20:25:22.177 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:25:22.177 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:25:22.177 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:25:22.177 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:25:22.177 [http-nio-8080-exec-26] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35c3ad9c]
[DEBUG] 2020-02-16 20:25:22.177 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:25:22.177 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:25:22.179 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:25:22.180 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:25:22.180 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:25:22.180 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:25:22.180 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:25:22.180 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:25:22.180 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:25:22.180 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:25:22.180 [http-nio-8080-exec-26] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:25:22.180 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:25:22.180 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:25:22.180 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:25:22.180 [http-nio-8080-exec-26] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6d72998f]
[DEBUG] 2020-02-16 20:25:22.180 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:25:22.180 [http-nio-8080-exec-26] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:25:22.180 [http-nio-8080-exec-26] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:25:22.181 [http-nio-8080-exec-26] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:25:22.181 [http-nio-8080-exec-26] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:25:22.193 [http-nio-8080-exec-26] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:25:22.193 [http-nio-8080-exec-26] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:25:22.193 [http-nio-8080-exec-26] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:25:22.193 [http-nio-8080-exec-26] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:25:22.193 [http-nio-8080-exec-26] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:25:22.193 [http-nio-8080-exec-26] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:25:22.193 [http-nio-8080-exec-26] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:25:22.193 [http-nio-8080-exec-26] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:25:22.193 [http-nio-8080-exec-26] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:25:22.194 [http-nio-8080-exec-26] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@132f819b]
[DEBUG] 2020-02-16 20:25:22.194 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:25:22.194 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:25:22.194 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:25:22.194 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:25:22.194 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:25:22.194 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:25:22.194 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:25:22.194 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:25:22.194 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:25:22.194 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:25:22.194 [http-nio-8080-exec-26] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@752de31f]
[DEBUG] 2020-02-16 20:25:22.196 [http-nio-8080-exec-26] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5be4c55f]
[DEBUG] 2020-02-16 20:25:22.203 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:25:22.203 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:25:22.203 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:25:22.203 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:25:22.203 [http-nio-8080-exec-26] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:25:22.204 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:25:22.204 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:25:22.204 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:25:22.204 [http-nio-8080-exec-26] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ea123b1]
[DEBUG] 2020-02-16 20:25:22.204 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:25:22.204 [http-nio-8080-exec-26] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:25:22.205 [http-nio-8080-exec-26] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:25:22.206 [http-nio-8080-exec-26] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:25:22.206 [http-nio-8080-exec-26] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:25:22.206 [http-nio-8080-exec-26] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d3307f]
[DEBUG] 2020-02-16 20:25:22.206 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:25:22.206 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:25:22.206 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:25:22.206 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:25:22.206 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:25:22.206 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:25:22.206 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:25:22.206 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:25:22.206 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:25:22.206 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:25:22.207 [http-nio-8080-exec-26] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1afc03c]
[DEBUG] 2020-02-16 20:25:22.207 [http-nio-8080-exec-26] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47fa3105]
[DEBUG] 2020-02-16 20:25:22.207 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:25:22.207 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:25:22.207 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:25:22.207 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:25:22.207 [http-nio-8080-exec-26] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:25:22.207 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:25:22.207 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:25:22.207 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:25:22.207 [http-nio-8080-exec-26] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4da89cd0]
[DEBUG] 2020-02-16 20:25:22.207 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:25:22.207 [http-nio-8080-exec-26] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:25:22.207 [http-nio-8080-exec-26] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:25:22.207 [http-nio-8080-exec-26] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:25:22.207 [http-nio-8080-exec-26] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:25:22.208 [http-nio-8080-exec-26] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:25:22.208 [http-nio-8080-exec-26] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:25:22.209 [http-nio-8080-exec-26] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:25:22.213 [http-nio-8080-exec-26] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@211ebc26]
[DEBUG] 2020-02-16 20:25:22.213 [http-nio-8080-exec-26] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74236685]
[DEBUG] 2020-02-16 20:25:22.213 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:25:22.213 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:25:22.213 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:25:22.213 [http-nio-8080-exec-26] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:25:22.213 [http-nio-8080-exec-26] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:25:22.213 [http-nio-8080-exec-26] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:25:22.215 [http-nio-8080-exec-26] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:25:22.216 [http-nio-8080-exec-26] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:25:22.216 [http-nio-8080-exec-26] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:25:22.240 [http-nio-8080-exec-26] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:25:22.240 [http-nio-8080-exec-26] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:25:22.240 [http-nio-8080-exec-26] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:25:22.244 [http-nio-8080-exec-26] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:25:22.245 [http-nio-8080-exec-26] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:25:22.245 [http-nio-8080-exec-26] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:25:22.245 [http-nio-8080-exec-26] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:25:22.248 [http-nio-8080-exec-26] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7fc2d9ac
[DEBUG] 2020-02-16 20:25:22.249 [http-nio-8080-exec-26] SessionFactoryRegistry - Registering SessionFactory: a23d9ec1-757e-4663-a8a3-4de09a2c31b5 (<unnamed>)
[DEBUG] 2020-02-16 20:25:22.249 [http-nio-8080-exec-26] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:25:22.313 [http-nio-8080-exec-26] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:25:22.332 [http-nio-8080-exec-26] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:25:22.344 [http-nio-8080-exec-26] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@242e557b
[DEBUG] 2020-02-16 20:25:22.361 [http-nio-8080-exec-26] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:25:22.363 [http-nio-8080-exec-26] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:25:22.367 [http-nio-8080-exec-26] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:25:22.383 [http-nio-8080-exec-26] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:25:22.393 [http-nio-8080-exec-26] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:25:22.394 [http-nio-8080-exec-26] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:25:22.395 [http-nio-8080-exec-26] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:25:22.395 [http-nio-8080-exec-26] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:25:22.403 [http-nio-8080-exec-26] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:25:22.404 [http-nio-8080-exec-26] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:25:22.404 [http-nio-8080-exec-26] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:25:22.404 [http-nio-8080-exec-26] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:25:22.409 [http-nio-8080-exec-26] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:25:22.409 [http-nio-8080-exec-26] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:25:22.409 [http-nio-8080-exec-26] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:25:22.419 [http-nio-8080-exec-26] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:25:22.442 [http-nio-8080-exec-26] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:25:22.445 [http-nio-8080-exec-26] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:25:22.450 [http-nio-8080-exec-26] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:25:22.451 [http-nio-8080-exec-26] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:25:22.452 [http-nio-8080-exec-26] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:25:22.454 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:25:22.454 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.454 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:25:22.454 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.454 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:25:22.454 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.454 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:25:22.454 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.454 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:25:22.454 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.454 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:25:22.454 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.454 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:25:22.454 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.454 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:25:22.455 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.455 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:25:22.455 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.455 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:25:22.455 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.460 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:25:22.460 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.460 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:25:22.460 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.460 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@53c296b8
[DEBUG] 2020-02-16 20:25:22.460 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@50063bc8
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.461 [http-nio-8080-exec-26] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:25:22.464 [http-nio-8080-exec-26] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:25:22.464 [http-nio-8080-exec-26] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:25:22.470 [http-nio-8080-exec-26] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:25:22.474 [http-nio-8080-exec-26] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:25:22.476 [http-nio-8080-exec-26] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:25:22.479 [http-nio-8080-exec-26] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:25:22.479 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:25:22.479 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.479 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:25:22.479 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.479 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:25:22.479 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.479 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:25:22.479 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.479 [http-nio-8080-exec-26] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:25:22.479 [http-nio-8080-exec-26] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:25:22.482 [http-nio-8080-exec-26] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:25:22.482 [http-nio-8080-exec-26] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:25:22.483 [http-nio-8080-exec-26] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:25:22.483 [http-nio-8080-exec-26] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:25:22.483 [http-nio-8080-exec-26] Loader - Done entity load
[DEBUG] 2020-02-16 20:25:22.483 [http-nio-8080-exec-26] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:25:22.483 [http-nio-8080-exec-26] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:25:22.483 [http-nio-8080-exec-26] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:25:22.483 [http-nio-8080-exec-26] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:25:22.484 [http-nio-8080-exec-26] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:25:22.484 [http-nio-8080-exec-26] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:25:22.484 [http-nio-8080-exec-26] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:25:22.484 [http-nio-8080-exec-26] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:25:22.485 [http-nio-8080-exec-26] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:25:22.486 [http-nio-8080-exec-26] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:25:22.486 [http-nio-8080-exec-26] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:25:22.487 [http-nio-8080-exec-26] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:25:22.487 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:25:22.487 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.487 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:25:22.487 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.487 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:25:22.487 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.487 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:25:22.487 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.488 [http-nio-8080-exec-26] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:25:22.488 [http-nio-8080-exec-26] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:25:22.489 [http-nio-8080-exec-26] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:25:22.489 [http-nio-8080-exec-26] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:25:22.489 [http-nio-8080-exec-26] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:25:22.489 [http-nio-8080-exec-26] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:25:22.489 [http-nio-8080-exec-26] Loader - Done entity load
[DEBUG] 2020-02-16 20:25:22.489 [http-nio-8080-exec-26] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:25:22.489 [http-nio-8080-exec-26] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:25:22.489 [http-nio-8080-exec-26] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:25:22.489 [http-nio-8080-exec-26] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:25:22.489 [http-nio-8080-exec-26] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:25:22.489 [http-nio-8080-exec-26] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:25:22.490 [http-nio-8080-exec-26] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:25:22.494 [http-nio-8080-exec-26] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:25:22.495 [http-nio-8080-exec-26] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:25:22.495 [http-nio-8080-exec-26] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:25:22.496 [http-nio-8080-exec-26] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:25:22.496 [http-nio-8080-exec-26] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:25:22.496 [http-nio-8080-exec-26] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:25:22.496 [http-nio-8080-exec-26] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:25:22.496 [http-nio-8080-exec-26] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:25:22.496 [http-nio-8080-exec-26] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:25:22.496 [http-nio-8080-exec-26] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:25:22.497 [http-nio-8080-exec-26] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:25:22.497 [http-nio-8080-exec-26] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:25:22.497 [http-nio-8080-exec-26] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:25:22.497 [http-nio-8080-exec-26] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:25:22.497 [http-nio-8080-exec-26] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:25:22.497 [http-nio-8080-exec-26] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:25:22.497 [http-nio-8080-exec-26] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:25:22.503 [http-nio-8080-exec-26] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:25:22.503 [http-nio-8080-exec-26] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:25:22.504 [http-nio-8080-exec-26] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:25:22.504 [http-nio-8080-exec-26] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:25:22.506 [http-nio-8080-exec-26] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:25:22.507 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:25:22.507 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.507 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:25:22.507 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.507 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:25:22.507 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.507 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:25:22.507 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.507 [http-nio-8080-exec-26] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:25:22.507 [http-nio-8080-exec-26] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:25:22.510 [http-nio-8080-exec-26] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:25:22.510 [http-nio-8080-exec-26] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:25:22.511 [http-nio-8080-exec-26] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@5c5b80bb
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] Loader - Done entity load
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.512 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:25:22.513 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.513 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:25:22.513 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.513 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:25:22.513 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.513 [http-nio-8080-exec-26] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:25:22.513 [http-nio-8080-exec-26] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:25:22.514 [http-nio-8080-exec-26] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:25:22.514 [http-nio-8080-exec-26] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:25:22.515 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@5ea5757d
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] Loader - Done entity load
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:25:22.516 [http-nio-8080-exec-26] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:27:26.315 [http-nio-8080-exec-35] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:27:26.320 [http-nio-8080-exec-35] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:27:26.323 [http-nio-8080-exec-35] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:27:26.421 [http-nio-8080-exec-35] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:27:26.423 [http-nio-8080-exec-35] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:27:26.592 [http-nio-8080-exec-35] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:27:26.594 [http-nio-8080-exec-35] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:27:26.597 [http-nio-8080-exec-35] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:27:26.768 [http-nio-8080-exec-35] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:27:26.788 [http-nio-8080-exec-35] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:27:26.789 [http-nio-8080-exec-35] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:27:26.807 [http-nio-8080-exec-35] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:27:26.837 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@57f6478c
[DEBUG] 2020-02-16 20:27:26.837 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@57f6478c
[DEBUG] 2020-02-16 20:27:26.837 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@57f6478c
[DEBUG] 2020-02-16 20:27:26.838 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1fb39206
[DEBUG] 2020-02-16 20:27:26.838 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@16136e35
[DEBUG] 2020-02-16 20:27:26.838 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3b8fa7f9
[DEBUG] 2020-02-16 20:27:26.839 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4e5522fa
[DEBUG] 2020-02-16 20:27:26.839 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4e5522fa
[DEBUG] 2020-02-16 20:27:26.839 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e5522fa
[DEBUG] 2020-02-16 20:27:26.839 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@68a4276f
[DEBUG] 2020-02-16 20:27:26.840 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@68a4276f
[DEBUG] 2020-02-16 20:27:26.840 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@68a4276f
[DEBUG] 2020-02-16 20:27:26.841 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@115d224c
[DEBUG] 2020-02-16 20:27:26.841 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@115d224c
[DEBUG] 2020-02-16 20:27:26.841 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@115d224c
[DEBUG] 2020-02-16 20:27:26.841 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3d79805
[DEBUG] 2020-02-16 20:27:26.841 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3d79805
[DEBUG] 2020-02-16 20:27:26.841 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3d79805
[DEBUG] 2020-02-16 20:27:26.842 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@aa4fef4
[DEBUG] 2020-02-16 20:27:26.842 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@aa4fef4
[DEBUG] 2020-02-16 20:27:26.842 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@aa4fef4
[DEBUG] 2020-02-16 20:27:26.842 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4017434d
[DEBUG] 2020-02-16 20:27:26.842 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4017434d
[DEBUG] 2020-02-16 20:27:26.842 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4017434d
[DEBUG] 2020-02-16 20:27:26.844 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7b30c5f6
[DEBUG] 2020-02-16 20:27:26.844 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7b30c5f6
[DEBUG] 2020-02-16 20:27:26.844 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7b30c5f6
[DEBUG] 2020-02-16 20:27:26.844 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5fbec09d
[DEBUG] 2020-02-16 20:27:26.844 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5fbec09d
[DEBUG] 2020-02-16 20:27:26.845 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5b89f6a1
[DEBUG] 2020-02-16 20:27:26.845 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5b89f6a1
[DEBUG] 2020-02-16 20:27:26.846 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6943c27f
[DEBUG] 2020-02-16 20:27:26.846 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6943c27f
[DEBUG] 2020-02-16 20:27:26.846 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@725a2b9d
[DEBUG] 2020-02-16 20:27:26.846 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@14d89d3b
[DEBUG] 2020-02-16 20:27:26.848 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3a1bd10a
[DEBUG] 2020-02-16 20:27:26.848 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3a1bd10a
[DEBUG] 2020-02-16 20:27:26.849 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@74f8bba7
[DEBUG] 2020-02-16 20:27:26.849 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74f8bba7
[DEBUG] 2020-02-16 20:27:26.850 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3dce2ff8
[DEBUG] 2020-02-16 20:27:26.850 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dce2ff8
[DEBUG] 2020-02-16 20:27:26.852 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@788977d6
[DEBUG] 2020-02-16 20:27:26.852 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@788977d6
[DEBUG] 2020-02-16 20:27:26.853 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6519d292
[DEBUG] 2020-02-16 20:27:26.853 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6519d292
[DEBUG] 2020-02-16 20:27:26.853 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@afb4c7f
[DEBUG] 2020-02-16 20:27:26.853 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@afb4c7f
[DEBUG] 2020-02-16 20:27:26.854 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5199daf6
[DEBUG] 2020-02-16 20:27:26.854 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5199daf6
[DEBUG] 2020-02-16 20:27:26.855 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4c6a192
[DEBUG] 2020-02-16 20:27:26.855 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4c6a192
[DEBUG] 2020-02-16 20:27:26.856 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ddecd2f
[DEBUG] 2020-02-16 20:27:26.856 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ddecd2f
[DEBUG] 2020-02-16 20:27:26.856 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3538ac6e
[DEBUG] 2020-02-16 20:27:26.857 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3538ac6e
[DEBUG] 2020-02-16 20:27:26.857 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7170f618
[DEBUG] 2020-02-16 20:27:26.857 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7170f618
[DEBUG] 2020-02-16 20:27:26.858 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3baea721
[DEBUG] 2020-02-16 20:27:26.858 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3baea721
[DEBUG] 2020-02-16 20:27:26.858 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3baea721
[DEBUG] 2020-02-16 20:27:26.859 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@509361bf
[DEBUG] 2020-02-16 20:27:26.860 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3ac279ab
[DEBUG] 2020-02-16 20:27:26.860 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ac279ab
[DEBUG] 2020-02-16 20:27:26.860 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ac279ab
[DEBUG] 2020-02-16 20:27:26.860 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@57be1d2
[DEBUG] 2020-02-16 20:27:26.861 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7de1a7f6
[DEBUG] 2020-02-16 20:27:26.861 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7de1a7f6
[DEBUG] 2020-02-16 20:27:26.861 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1dd76f95
[DEBUG] 2020-02-16 20:27:26.861 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1dd76f95
[DEBUG] 2020-02-16 20:27:26.862 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@231c2c68
[DEBUG] 2020-02-16 20:27:26.862 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@231c2c68
[DEBUG] 2020-02-16 20:27:26.862 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@71697cd2
[DEBUG] 2020-02-16 20:27:26.862 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71697cd2
[DEBUG] 2020-02-16 20:27:26.863 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@595b36fa
[DEBUG] 2020-02-16 20:27:26.863 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@595b36fa
[DEBUG] 2020-02-16 20:27:26.863 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3abd6ece
[DEBUG] 2020-02-16 20:27:26.864 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7944ab8c
[DEBUG] 2020-02-16 20:27:26.864 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7944ab8c
[DEBUG] 2020-02-16 20:27:26.864 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7944ab8c
[DEBUG] 2020-02-16 20:27:26.864 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21fbca1b
[DEBUG] 2020-02-16 20:27:26.864 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21fbca1b
[DEBUG] 2020-02-16 20:27:26.864 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21fbca1b
[DEBUG] 2020-02-16 20:27:26.865 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@63716a11
[DEBUG] 2020-02-16 20:27:26.865 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4362b921
[DEBUG] 2020-02-16 20:27:26.865 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@342de9f1
[DEBUG] 2020-02-16 20:27:26.865 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@342de9f1
[DEBUG] 2020-02-16 20:27:26.865 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@342de9f1
[DEBUG] 2020-02-16 20:27:26.866 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7c863fbf
[DEBUG] 2020-02-16 20:27:26.866 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7c863fbf
[DEBUG] 2020-02-16 20:27:26.866 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7c863fbf
[DEBUG] 2020-02-16 20:27:26.866 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@316a963d
[DEBUG] 2020-02-16 20:27:26.866 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@53510e76
[DEBUG] 2020-02-16 20:27:26.867 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@eebeedd
[DEBUG] 2020-02-16 20:27:26.867 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@eebeedd
[DEBUG] 2020-02-16 20:27:26.868 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5c80bbe7
[DEBUG] 2020-02-16 20:27:26.870 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5bcfa5b8
[DEBUG] 2020-02-16 20:27:26.870 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5bcfa5b8
[DEBUG] 2020-02-16 20:27:26.871 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@b6e2947
[DEBUG] 2020-02-16 20:27:26.871 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b6e2947
[DEBUG] 2020-02-16 20:27:26.872 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3725fe1e
[DEBUG] 2020-02-16 20:27:26.872 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@262126ef
[DEBUG] 2020-02-16 20:27:26.874 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@8291afb
[DEBUG] 2020-02-16 20:27:26.876 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@9af9e25
[DEBUG] 2020-02-16 20:27:26.876 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9af9e25
[DEBUG] 2020-02-16 20:27:26.876 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5e5aa0e9
[DEBUG] 2020-02-16 20:27:26.876 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@33ece9ff
[DEBUG] 2020-02-16 20:27:26.876 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2579e8b9
[DEBUG] 2020-02-16 20:27:26.876 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c118ef
[DEBUG] 2020-02-16 20:27:26.876 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f17bd76
[DEBUG] 2020-02-16 20:27:26.876 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5b600e7a
[DEBUG] 2020-02-16 20:27:26.876 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@31b6098f
[DEBUG] 2020-02-16 20:27:26.876 [http-nio-8080-exec-35] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3d3c6936
[DEBUG] 2020-02-16 20:27:26.907 [http-nio-8080-exec-35] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:27:26.907 [http-nio-8080-exec-35] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:27:26.908 [http-nio-8080-exec-35] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:27:26.908 [http-nio-8080-exec-35] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:27:26.908 [http-nio-8080-exec-35] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:27:26.908 [http-nio-8080-exec-35] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:27:26.909 [http-nio-8080-exec-35] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:27:26.909 [http-nio-8080-exec-35] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:27:26.910 [http-nio-8080-exec-35] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:27:26.910 [http-nio-8080-exec-35] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:27:26.911 [http-nio-8080-exec-35] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:27:26.911 [http-nio-8080-exec-35] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:27:26.911 [http-nio-8080-exec-35] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:27:26.912 [http-nio-8080-exec-35] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:27:26.929 [http-nio-8080-exec-35] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:27:26.929 [http-nio-8080-exec-35] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:27:26.929 [http-nio-8080-exec-35] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:27:27.020 [http-nio-8080-exec-35] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:27:27.211 [http-nio-8080-exec-35] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:27:27.211 [http-nio-8080-exec-35] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:27:27.211 [http-nio-8080-exec-35] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:27:27.270 [http-nio-8080-exec-35] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:27:27.287 [http-nio-8080-exec-35] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:27:27.318 [http-nio-8080-exec-35] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:27:27.347 [http-nio-8080-exec-35] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:27:27.358 [http-nio-8080-exec-35] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@212c1ad1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1d4789de]
[DEBUG] 2020-02-16 20:27:27.430 [http-nio-8080-exec-35] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:27:27.450 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:27:27.455 [http-nio-8080-exec-35] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:27:27.457 [http-nio-8080-exec-35] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:27:27.476 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.479 [http-nio-8080-exec-35] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:27:27.480 [http-nio-8080-exec-35] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:27:27.482 [http-nio-8080-exec-35] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:27:27.483 [http-nio-8080-exec-35] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:27:27.486 [http-nio-8080-exec-35] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:27:27.487 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.487 [http-nio-8080-exec-35] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:27:27.487 [http-nio-8080-exec-35] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:27:27.487 [http-nio-8080-exec-35] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:27:27.487 [http-nio-8080-exec-35] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:27:27.487 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.487 [http-nio-8080-exec-35] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:27:27.487 [http-nio-8080-exec-35] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:27:27.487 [http-nio-8080-exec-35] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:27:27.487 [http-nio-8080-exec-35] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:27:27.487 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.487 [http-nio-8080-exec-35] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:27:27.487 [http-nio-8080-exec-35] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:27:27.487 [http-nio-8080-exec-35] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:27:27.487 [http-nio-8080-exec-35] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:27:27.488 [http-nio-8080-exec-35] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:27:27.489 [http-nio-8080-exec-35] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:27:27.489 [http-nio-8080-exec-35] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:27:27.489 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.489 [http-nio-8080-exec-35] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:27:27.489 [http-nio-8080-exec-35] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:27:27.489 [http-nio-8080-exec-35] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:27:27.489 [http-nio-8080-exec-35] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:27:27.489 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.489 [http-nio-8080-exec-35] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:27:27.489 [http-nio-8080-exec-35] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:27:27.489 [http-nio-8080-exec-35] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:27:27.489 [http-nio-8080-exec-35] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:27:27.491 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:27:27.492 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.493 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.502 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.502 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.503 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:27:27.504 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:27:27.504 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:27:27.504 [http-nio-8080-exec-35] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:27:27.506 [http-nio-8080-exec-35] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:27:27.506 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.506 [http-nio-8080-exec-35] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:27:27.506 [http-nio-8080-exec-35] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:27:27.506 [http-nio-8080-exec-35] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:27:27.506 [http-nio-8080-exec-35] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:27:27.507 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:27:27.507 [http-nio-8080-exec-35] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:27:27.507 [http-nio-8080-exec-35] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:27:27.507 [http-nio-8080-exec-35] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:27:27.507 [http-nio-8080-exec-35] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:27:27.508 [http-nio-8080-exec-35] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:27:27.508 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:27:27.508 [http-nio-8080-exec-35] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:27:27.508 [http-nio-8080-exec-35] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:27:27.510 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.510 [http-nio-8080-exec-35] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:27:27.510 [http-nio-8080-exec-35] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:27:27.510 [http-nio-8080-exec-35] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:27:27.510 [http-nio-8080-exec-35] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:27:27.510 [http-nio-8080-exec-35] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:27:27.510 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.510 [http-nio-8080-exec-35] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:27:27.510 [http-nio-8080-exec-35] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:27:27.510 [http-nio-8080-exec-35] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:27:27.510 [http-nio-8080-exec-35] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:27:27.520 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.520 [http-nio-8080-exec-35] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:27:27.520 [http-nio-8080-exec-35] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:27:27.520 [http-nio-8080-exec-35] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:27:27.520 [http-nio-8080-exec-35] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:27:27.520 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.520 [http-nio-8080-exec-35] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:27:27.520 [http-nio-8080-exec-35] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:27:27.521 [http-nio-8080-exec-35] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:27:27.521 [http-nio-8080-exec-35] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:27:27.521 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:27:27.521 [http-nio-8080-exec-35] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:27:27.522 [http-nio-8080-exec-35] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:27:27.523 [http-nio-8080-exec-35] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:27:27.523 [http-nio-8080-exec-35] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:27:27.523 [http-nio-8080-exec-35] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:27:27.523 [http-nio-8080-exec-35] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:27:27.523 [http-nio-8080-exec-35] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:27:27.523 [http-nio-8080-exec-35] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:27:27.523 [http-nio-8080-exec-35] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:27:27.523 [http-nio-8080-exec-35] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:27:27.523 [http-nio-8080-exec-35] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:27:27.524 [http-nio-8080-exec-35] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:27:27.524 [http-nio-8080-exec-35] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:27:27.524 [http-nio-8080-exec-35] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:27:27.524 [http-nio-8080-exec-35] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:27:27.524 [http-nio-8080-exec-35] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:27:27.524 [http-nio-8080-exec-35] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:27:27.524 [http-nio-8080-exec-35] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:27:27.529 [http-nio-8080-exec-35] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:27:27.529 [http-nio-8080-exec-35] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:27:27.529 [http-nio-8080-exec-35] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:27:27.529 [http-nio-8080-exec-35] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:27:27.530 [http-nio-8080-exec-35] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:27:27.531 [http-nio-8080-exec-35] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:27:27.531 [http-nio-8080-exec-35] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:27:27.531 [http-nio-8080-exec-35] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:27:27.531 [http-nio-8080-exec-35] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:27:27.536 [http-nio-8080-exec-35] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:27:27.537 [http-nio-8080-exec-35] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:27:27.588 [http-nio-8080-exec-35] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:27:27.589 [http-nio-8080-exec-35] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:27:27.589 [http-nio-8080-exec-35] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:27:27.589 [http-nio-8080-exec-35] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:27:27.589 [http-nio-8080-exec-35] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:27:27.589 [http-nio-8080-exec-35] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:27:27.589 [http-nio-8080-exec-35] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:27:27.589 [http-nio-8080-exec-35] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:27:27.589 [http-nio-8080-exec-35] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:27:27.589 [http-nio-8080-exec-35] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:27:27.589 [http-nio-8080-exec-35] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:27:27.589 [http-nio-8080-exec-35] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:27:27.590 [http-nio-8080-exec-35] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:27:27.637 [http-nio-8080-exec-35] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:27:27.652 [http-nio-8080-exec-35] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:27:27.652 [http-nio-8080-exec-35] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@155e0a2d, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:27:27.673 [http-nio-8080-exec-35] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:27:27.673 [http-nio-8080-exec-35] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:27:27.674 [http-nio-8080-exec-35] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:27:27.674 [http-nio-8080-exec-35] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:27:27.676 [http-nio-8080-exec-35] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:27:27.677 [http-nio-8080-exec-35] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:27:27.677 [http-nio-8080-exec-35] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@212c1ad1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6e436da8]
[DEBUG] 2020-02-16 20:27:27.713 [http-nio-8080-exec-35] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:27:27.713 [http-nio-8080-exec-35] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:27:27.727 [http-nio-8080-exec-35] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:27:27.727 [http-nio-8080-exec-35] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:27:27.896 [http-nio-8080-exec-35] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:27:27.897 [http-nio-8080-exec-35] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:27:27.899 [http-nio-8080-exec-35] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:27:27.899 [http-nio-8080-exec-35] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:27:27.962 [http-nio-8080-exec-35] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:27:27.962 [http-nio-8080-exec-35] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:27:27.962 [http-nio-8080-exec-35] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:27:27.962 [http-nio-8080-exec-35] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:27:27.962 [http-nio-8080-exec-35] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:27:27.967 [http-nio-8080-exec-35] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:27:27.967 [http-nio-8080-exec-35] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:27:27.967 [http-nio-8080-exec-35] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:27:27.967 [http-nio-8080-exec-35] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:27:27.967 [http-nio-8080-exec-35] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:27:27.967 [http-nio-8080-exec-35] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:27:27.967 [http-nio-8080-exec-35] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:27:27.986 [http-nio-8080-exec-35] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56ddac33]
[DEBUG] 2020-02-16 20:27:27.988 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:27:27.988 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:27:27.988 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:27:27.988 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:27:27.991 [http-nio-8080-exec-35] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fcadf8d]
[DEBUG] 2020-02-16 20:27:27.992 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:27:27.992 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:27:27.992 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:27:27.993 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:27:27.993 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:27:27.993 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:27:27.993 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:27:27.993 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:27:27.993 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:27:27.995 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:27:27.995 [http-nio-8080-exec-35] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:27:27.995 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:27:27.995 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:27:27.995 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:27:27.996 [http-nio-8080-exec-35] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@38166f62]
[DEBUG] 2020-02-16 20:27:27.998 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:27:27.998 [http-nio-8080-exec-35] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:27:28.009 [http-nio-8080-exec-35] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:27:28.012 [http-nio-8080-exec-35] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:27:28.014 [http-nio-8080-exec-35] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:27:28.014 [http-nio-8080-exec-35] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@539811a8]
[DEBUG] 2020-02-16 20:27:28.014 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:27:28.014 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:27:28.014 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:27:28.014 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:27:28.014 [http-nio-8080-exec-35] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54ee05e1]
[DEBUG] 2020-02-16 20:27:28.014 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:27:28.014 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:27:28.015 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:27:28.015 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:27:28.015 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:27:28.015 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:27:28.015 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:27:28.015 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:27:28.015 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:27:28.015 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:27:28.015 [http-nio-8080-exec-35] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:27:28.015 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:27:28.016 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:27:28.016 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:27:28.016 [http-nio-8080-exec-35] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2378182d]
[DEBUG] 2020-02-16 20:27:28.016 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:27:28.016 [http-nio-8080-exec-35] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:27:28.016 [http-nio-8080-exec-35] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:27:28.017 [http-nio-8080-exec-35] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:27:28.017 [http-nio-8080-exec-35] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:27:28.030 [http-nio-8080-exec-35] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:27:28.031 [http-nio-8080-exec-35] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:27:28.031 [http-nio-8080-exec-35] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:27:28.031 [http-nio-8080-exec-35] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:27:28.031 [http-nio-8080-exec-35] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:27:28.031 [http-nio-8080-exec-35] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:27:28.031 [http-nio-8080-exec-35] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:27:28.031 [http-nio-8080-exec-35] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:27:28.031 [http-nio-8080-exec-35] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:27:28.031 [http-nio-8080-exec-35] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@715cafe3]
[DEBUG] 2020-02-16 20:27:28.031 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:27:28.032 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:27:28.032 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:27:28.032 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:27:28.032 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:27:28.032 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:27:28.032 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:27:28.032 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:27:28.032 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:27:28.032 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:27:28.032 [http-nio-8080-exec-35] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d21b39]
[DEBUG] 2020-02-16 20:27:28.033 [http-nio-8080-exec-35] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ba1dd0a]
[DEBUG] 2020-02-16 20:27:28.034 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:27:28.034 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:27:28.034 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:27:28.034 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:27:28.034 [http-nio-8080-exec-35] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:27:28.034 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:27:28.034 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:27:28.034 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:27:28.034 [http-nio-8080-exec-35] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@332124e]
[DEBUG] 2020-02-16 20:27:28.034 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:27:28.034 [http-nio-8080-exec-35] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:27:28.035 [http-nio-8080-exec-35] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c823be5]
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41052193]
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78fe5923]
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:27:28.036 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:27:28.037 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:27:28.037 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:27:28.037 [http-nio-8080-exec-35] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3a9da721]
[DEBUG] 2020-02-16 20:27:28.037 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:27:28.037 [http-nio-8080-exec-35] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:27:28.037 [http-nio-8080-exec-35] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:27:28.038 [http-nio-8080-exec-35] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:27:28.038 [http-nio-8080-exec-35] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:27:28.039 [http-nio-8080-exec-35] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:27:28.039 [http-nio-8080-exec-35] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:27:28.041 [http-nio-8080-exec-35] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:27:28.046 [http-nio-8080-exec-35] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f182874]
[DEBUG] 2020-02-16 20:27:28.046 [http-nio-8080-exec-35] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6348b712]
[DEBUG] 2020-02-16 20:27:28.046 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:27:28.046 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:27:28.046 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:27:28.046 [http-nio-8080-exec-35] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:27:28.046 [http-nio-8080-exec-35] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:27:28.046 [http-nio-8080-exec-35] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:27:28.048 [http-nio-8080-exec-35] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:27:28.048 [http-nio-8080-exec-35] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:27:28.049 [http-nio-8080-exec-35] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:27:28.077 [http-nio-8080-exec-35] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:27:28.077 [http-nio-8080-exec-35] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:27:28.078 [http-nio-8080-exec-35] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:27:28.087 [http-nio-8080-exec-35] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:27:28.087 [http-nio-8080-exec-35] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:27:28.088 [http-nio-8080-exec-35] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:27:28.088 [http-nio-8080-exec-35] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:27:28.089 [http-nio-8080-exec-35] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3e84daf1
[DEBUG] 2020-02-16 20:27:28.091 [http-nio-8080-exec-35] SessionFactoryRegistry - Registering SessionFactory: 27902bcf-b21f-4887-88a8-e594a343828b (<unnamed>)
[DEBUG] 2020-02-16 20:27:28.092 [http-nio-8080-exec-35] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:27:28.149 [http-nio-8080-exec-35] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:27:28.166 [http-nio-8080-exec-35] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:27:28.180 [http-nio-8080-exec-35] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3c2c57e1
[DEBUG] 2020-02-16 20:27:28.199 [http-nio-8080-exec-35] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:27:28.203 [http-nio-8080-exec-35] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:27:28.207 [http-nio-8080-exec-35] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:27:28.231 [http-nio-8080-exec-35] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:27:28.247 [http-nio-8080-exec-35] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:27:28.248 [http-nio-8080-exec-35] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:27:28.249 [http-nio-8080-exec-35] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:27:28.249 [http-nio-8080-exec-35] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:27:28.254 [http-nio-8080-exec-35] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:27:28.255 [http-nio-8080-exec-35] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:27:28.263 [http-nio-8080-exec-35] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:27:28.263 [http-nio-8080-exec-35] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:27:28.272 [http-nio-8080-exec-35] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:27:28.272 [http-nio-8080-exec-35] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:27:28.272 [http-nio-8080-exec-35] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:27:28.289 [http-nio-8080-exec-35] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:27:28.348 [http-nio-8080-exec-35] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:27:28.350 [http-nio-8080-exec-35] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:27:28.358 [http-nio-8080-exec-35] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:27:28.359 [http-nio-8080-exec-35] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:27:28.363 [http-nio-8080-exec-35] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:27:28.367 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:27:28.368 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.378 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:27:28.378 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.378 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:27:28.378 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.378 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@9f97c54
[DEBUG] 2020-02-16 20:27:28.378 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.379 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:27:28.380 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.380 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:27:28.380 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.380 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@3a5ba602
[DEBUG] 2020-02-16 20:27:28.380 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.380 [http-nio-8080-exec-35] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:27:28.383 [http-nio-8080-exec-35] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:27:28.384 [http-nio-8080-exec-35] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:27:28.387 [http-nio-8080-exec-35] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:27:28.391 [http-nio-8080-exec-35] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:27:28.395 [http-nio-8080-exec-35] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:27:28.400 [http-nio-8080-exec-35] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:27:28.400 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:27:28.400 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.400 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:27:28.400 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.400 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:27:28.400 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.400 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:27:28.400 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.402 [http-nio-8080-exec-35] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:27:28.402 [http-nio-8080-exec-35] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:27:28.404 [http-nio-8080-exec-35] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:27:28.404 [http-nio-8080-exec-35] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:27:28.405 [http-nio-8080-exec-35] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:27:28.405 [http-nio-8080-exec-35] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:27:28.405 [http-nio-8080-exec-35] Loader - Done entity load
[DEBUG] 2020-02-16 20:27:28.405 [http-nio-8080-exec-35] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:27:28.406 [http-nio-8080-exec-35] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:27:28.406 [http-nio-8080-exec-35] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:27:28.406 [http-nio-8080-exec-35] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:27:28.406 [http-nio-8080-exec-35] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:27:28.406 [http-nio-8080-exec-35] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:27:28.406 [http-nio-8080-exec-35] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:27:28.406 [http-nio-8080-exec-35] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:27:28.465 [http-nio-8080-exec-35] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:27:28.465 [http-nio-8080-exec-35] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:27:28.465 [http-nio-8080-exec-35] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:27:28.466 [http-nio-8080-exec-35] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:27:28.466 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:27:28.466 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.466 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:27:28.466 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.466 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:27:28.466 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.466 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:27:28.466 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.467 [http-nio-8080-exec-35] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:27:28.467 [http-nio-8080-exec-35] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:27:28.473 [http-nio-8080-exec-35] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:27:28.473 [http-nio-8080-exec-35] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:27:28.473 [http-nio-8080-exec-35] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:27:28.473 [http-nio-8080-exec-35] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:27:28.474 [http-nio-8080-exec-35] Loader - Done entity load
[DEBUG] 2020-02-16 20:27:28.474 [http-nio-8080-exec-35] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:27:28.474 [http-nio-8080-exec-35] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:27:28.474 [http-nio-8080-exec-35] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:27:28.474 [http-nio-8080-exec-35] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:27:28.474 [http-nio-8080-exec-35] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:27:28.474 [http-nio-8080-exec-35] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:27:28.475 [http-nio-8080-exec-35] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:27:28.480 [http-nio-8080-exec-35] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:27:28.480 [http-nio-8080-exec-35] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:27:28.482 [http-nio-8080-exec-35] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:27:28.482 [http-nio-8080-exec-35] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:27:28.482 [http-nio-8080-exec-35] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:27:28.483 [http-nio-8080-exec-35] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:27:28.483 [http-nio-8080-exec-35] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:27:28.483 [http-nio-8080-exec-35] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:27:28.483 [http-nio-8080-exec-35] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:27:28.483 [http-nio-8080-exec-35] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:27:28.483 [http-nio-8080-exec-35] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:27:28.483 [http-nio-8080-exec-35] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:27:28.483 [http-nio-8080-exec-35] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:27:28.483 [http-nio-8080-exec-35] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:27:28.483 [http-nio-8080-exec-35] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:27:28.483 [http-nio-8080-exec-35] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:27:28.484 [http-nio-8080-exec-35] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:27:28.486 [http-nio-8080-exec-35] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:27:28.487 [http-nio-8080-exec-35] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:27:28.487 [http-nio-8080-exec-35] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:27:28.487 [http-nio-8080-exec-35] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:27:28.487 [http-nio-8080-exec-35] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:27:28.487 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:27:28.487 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.487 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:27:28.487 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.488 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:27:28.488 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.488 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:27:28.488 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.488 [http-nio-8080-exec-35] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:27:28.488 [http-nio-8080-exec-35] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:27:28.489 [http-nio-8080-exec-35] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:27:28.489 [http-nio-8080-exec-35] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@787c75d4
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] Loader - Done entity load
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:27:28.490 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.491 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:27:28.491 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.491 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:27:28.491 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.491 [http-nio-8080-exec-35] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:27:28.491 [http-nio-8080-exec-35] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:27:28.492 [http-nio-8080-exec-35] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:27:28.492 [http-nio-8080-exec-35] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@21242404
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] Loader - Done entity load
[DEBUG] 2020-02-16 20:27:28.493 [http-nio-8080-exec-35] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:27:28.494 [http-nio-8080-exec-35] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:28:29.759 [http-nio-8080-exec-42] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:28:29.764 [http-nio-8080-exec-42] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:28:29.771 [http-nio-8080-exec-42] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:28:29.829 [http-nio-8080-exec-42] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:28:29.830 [http-nio-8080-exec-42] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:28:29.925 [http-nio-8080-exec-42] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:28:29.925 [http-nio-8080-exec-42] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:28:29.927 [http-nio-8080-exec-42] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:28:30.130 [http-nio-8080-exec-42] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:28:30.148 [http-nio-8080-exec-42] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:28:30.149 [http-nio-8080-exec-42] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:28:30.168 [http-nio-8080-exec-42] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:28:30.198 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2fb935c
[DEBUG] 2020-02-16 20:28:30.199 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2fb935c
[DEBUG] 2020-02-16 20:28:30.199 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2fb935c
[DEBUG] 2020-02-16 20:28:30.199 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@127b3b75
[DEBUG] 2020-02-16 20:28:30.199 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7d607b27
[DEBUG] 2020-02-16 20:28:30.200 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6035490b
[DEBUG] 2020-02-16 20:28:30.200 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@750555b7
[DEBUG] 2020-02-16 20:28:30.200 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@750555b7
[DEBUG] 2020-02-16 20:28:30.200 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@750555b7
[DEBUG] 2020-02-16 20:28:30.201 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@47046ed2
[DEBUG] 2020-02-16 20:28:30.201 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@47046ed2
[DEBUG] 2020-02-16 20:28:30.201 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47046ed2
[DEBUG] 2020-02-16 20:28:30.202 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@429f0e92
[DEBUG] 2020-02-16 20:28:30.202 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@429f0e92
[DEBUG] 2020-02-16 20:28:30.202 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@429f0e92
[DEBUG] 2020-02-16 20:28:30.203 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4055484
[DEBUG] 2020-02-16 20:28:30.203 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4055484
[DEBUG] 2020-02-16 20:28:30.203 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4055484
[DEBUG] 2020-02-16 20:28:30.204 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@77d1be00
[DEBUG] 2020-02-16 20:28:30.204 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@77d1be00
[DEBUG] 2020-02-16 20:28:30.204 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@77d1be00
[DEBUG] 2020-02-16 20:28:30.205 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@27ab1158
[DEBUG] 2020-02-16 20:28:30.205 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@27ab1158
[DEBUG] 2020-02-16 20:28:30.205 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@27ab1158
[DEBUG] 2020-02-16 20:28:30.205 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4aafa867
[DEBUG] 2020-02-16 20:28:30.205 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4aafa867
[DEBUG] 2020-02-16 20:28:30.205 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4aafa867
[DEBUG] 2020-02-16 20:28:30.206 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f9653b
[DEBUG] 2020-02-16 20:28:30.206 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f9653b
[DEBUG] 2020-02-16 20:28:30.207 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@13a074d1
[DEBUG] 2020-02-16 20:28:30.207 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@13a074d1
[DEBUG] 2020-02-16 20:28:30.207 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2aa2331d
[DEBUG] 2020-02-16 20:28:30.207 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2aa2331d
[DEBUG] 2020-02-16 20:28:30.208 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@635c1cf8
[DEBUG] 2020-02-16 20:28:30.208 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f2cbf31
[DEBUG] 2020-02-16 20:28:30.209 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7f5905d9
[DEBUG] 2020-02-16 20:28:30.209 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7f5905d9
[DEBUG] 2020-02-16 20:28:30.209 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@42066575
[DEBUG] 2020-02-16 20:28:30.209 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@42066575
[DEBUG] 2020-02-16 20:28:30.210 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@17ca6154
[DEBUG] 2020-02-16 20:28:30.210 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@17ca6154
[DEBUG] 2020-02-16 20:28:30.212 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@723eac22
[DEBUG] 2020-02-16 20:28:30.212 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@723eac22
[DEBUG] 2020-02-16 20:28:30.213 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5df644ee
[DEBUG] 2020-02-16 20:28:30.214 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5df644ee
[DEBUG] 2020-02-16 20:28:30.216 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3daf42aa
[DEBUG] 2020-02-16 20:28:30.216 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3daf42aa
[DEBUG] 2020-02-16 20:28:30.217 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10228ac5
[DEBUG] 2020-02-16 20:28:30.217 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10228ac5
[DEBUG] 2020-02-16 20:28:30.217 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1a6cf9b1
[DEBUG] 2020-02-16 20:28:30.217 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1a6cf9b1
[DEBUG] 2020-02-16 20:28:30.218 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4daf357c
[DEBUG] 2020-02-16 20:28:30.218 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4daf357c
[DEBUG] 2020-02-16 20:28:30.219 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@42cf45d7
[DEBUG] 2020-02-16 20:28:30.219 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@42cf45d7
[DEBUG] 2020-02-16 20:28:30.220 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@305e785b
[DEBUG] 2020-02-16 20:28:30.220 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@305e785b
[DEBUG] 2020-02-16 20:28:30.220 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@713f658d
[DEBUG] 2020-02-16 20:28:30.220 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@713f658d
[DEBUG] 2020-02-16 20:28:30.220 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@713f658d
[DEBUG] 2020-02-16 20:28:30.221 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5ef64880
[DEBUG] 2020-02-16 20:28:30.222 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@56244482
[DEBUG] 2020-02-16 20:28:30.222 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56244482
[DEBUG] 2020-02-16 20:28:30.222 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56244482
[DEBUG] 2020-02-16 20:28:30.222 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@58305137
[DEBUG] 2020-02-16 20:28:30.223 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3867def4
[DEBUG] 2020-02-16 20:28:30.223 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3867def4
[DEBUG] 2020-02-16 20:28:30.223 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@41a2efa8
[DEBUG] 2020-02-16 20:28:30.224 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@41a2efa8
[DEBUG] 2020-02-16 20:28:30.224 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@14b086da
[DEBUG] 2020-02-16 20:28:30.224 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@14b086da
[DEBUG] 2020-02-16 20:28:30.224 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2cd37058
[DEBUG] 2020-02-16 20:28:30.224 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cd37058
[DEBUG] 2020-02-16 20:28:30.225 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4aa994af
[DEBUG] 2020-02-16 20:28:30.225 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4aa994af
[DEBUG] 2020-02-16 20:28:30.225 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a04d1a3
[DEBUG] 2020-02-16 20:28:30.227 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@311f2146
[DEBUG] 2020-02-16 20:28:30.227 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@311f2146
[DEBUG] 2020-02-16 20:28:30.227 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@311f2146
[DEBUG] 2020-02-16 20:28:30.228 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7a61657e
[DEBUG] 2020-02-16 20:28:30.228 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7a61657e
[DEBUG] 2020-02-16 20:28:30.228 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7a61657e
[DEBUG] 2020-02-16 20:28:30.229 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5645b05c
[DEBUG] 2020-02-16 20:28:30.229 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4e569afd
[DEBUG] 2020-02-16 20:28:30.230 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4237bab6
[DEBUG] 2020-02-16 20:28:30.230 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4237bab6
[DEBUG] 2020-02-16 20:28:30.230 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4237bab6
[DEBUG] 2020-02-16 20:28:30.230 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4973922c
[DEBUG] 2020-02-16 20:28:30.230 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4973922c
[DEBUG] 2020-02-16 20:28:30.230 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4973922c
[DEBUG] 2020-02-16 20:28:30.230 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@57119f80
[DEBUG] 2020-02-16 20:28:30.231 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3ae41cdc
[DEBUG] 2020-02-16 20:28:30.231 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3cfe371a
[DEBUG] 2020-02-16 20:28:30.231 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3cfe371a
[DEBUG] 2020-02-16 20:28:30.232 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@13a7717f
[DEBUG] 2020-02-16 20:28:30.232 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4f3b7ce5
[DEBUG] 2020-02-16 20:28:30.232 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4f3b7ce5
[DEBUG] 2020-02-16 20:28:30.233 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1f14b513
[DEBUG] 2020-02-16 20:28:30.234 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1f14b513
[DEBUG] 2020-02-16 20:28:30.234 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@c1c232c
[DEBUG] 2020-02-16 20:28:30.235 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@64c0d41
[DEBUG] 2020-02-16 20:28:30.237 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5ba9bd31
[DEBUG] 2020-02-16 20:28:30.239 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1fb7fc63
[DEBUG] 2020-02-16 20:28:30.239 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1fb7fc63
[DEBUG] 2020-02-16 20:28:30.240 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2c50859e
[DEBUG] 2020-02-16 20:28:30.240 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@637f56a7
[DEBUG] 2020-02-16 20:28:30.240 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@68e8a9e3
[DEBUG] 2020-02-16 20:28:30.240 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4545f8bf
[DEBUG] 2020-02-16 20:28:30.240 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6d91f9fc
[DEBUG] 2020-02-16 20:28:30.240 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74424087
[DEBUG] 2020-02-16 20:28:30.240 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@59c8485d
[DEBUG] 2020-02-16 20:28:30.240 [http-nio-8080-exec-42] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3322d3db
[DEBUG] 2020-02-16 20:28:30.266 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:28:30.267 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:28:30.267 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:28:30.267 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:28:30.268 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:28:30.268 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:28:30.269 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:28:30.271 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:28:30.272 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:28:30.272 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:28:30.273 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:28:30.273 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:28:30.273 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:28:30.273 [http-nio-8080-exec-42] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:28:30.280 [http-nio-8080-exec-42] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:28:30.280 [http-nio-8080-exec-42] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:28:30.280 [http-nio-8080-exec-42] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:28:30.379 [http-nio-8080-exec-42] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:28:30.571 [http-nio-8080-exec-42] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:28:30.571 [http-nio-8080-exec-42] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:28:30.571 [http-nio-8080-exec-42] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:28:30.590 [http-nio-8080-exec-42] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:28:30.633 [http-nio-8080-exec-42] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:28:30.653 [http-nio-8080-exec-42] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:28:30.690 [http-nio-8080-exec-42] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:28:30.693 [http-nio-8080-exec-42] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52e05221] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@26a43c1e]
[DEBUG] 2020-02-16 20:28:30.767 [http-nio-8080-exec-42] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:28:30.789 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:28:30.793 [http-nio-8080-exec-42] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:28:30.796 [http-nio-8080-exec-42] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:28:30.833 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.837 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:28:30.839 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:28:30.840 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:28:30.843 [http-nio-8080-exec-42] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:28:30.845 [http-nio-8080-exec-42] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:28:30.846 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.846 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:28:30.846 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:28:30.846 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:28:30.846 [http-nio-8080-exec-42] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:28:30.846 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.847 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:28:30.847 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:28:30.847 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:28:30.847 [http-nio-8080-exec-42] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:28:30.847 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.848 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:28:30.849 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:28:30.849 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:28:30.849 [http-nio-8080-exec-42] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:28:30.849 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.849 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:28:30.849 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:28:30.849 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:28:30.849 [http-nio-8080-exec-42] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:28:30.850 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.850 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:28:30.850 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:28:30.850 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:28:30.850 [http-nio-8080-exec-42] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:28:30.850 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.850 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:28:30.850 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:28:30.850 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:28:30.850 [http-nio-8080-exec-42] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:28:30.850 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.850 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:28:30.851 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:28:30.851 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:28:30.851 [http-nio-8080-exec-42] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:28:30.851 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.851 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:28:30.851 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:28:30.851 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:28:30.852 [http-nio-8080-exec-42] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:28:30.852 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.852 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:28:30.852 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:28:30.852 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:28:30.852 [http-nio-8080-exec-42] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:28:30.854 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:28:30.855 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.857 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.866 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.866 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.866 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:28:30.867 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:28:30.867 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:28:30.867 [http-nio-8080-exec-42] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:28:30.870 [http-nio-8080-exec-42] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:28:30.871 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.871 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:28:30.871 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:28:30.871 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:28:30.871 [http-nio-8080-exec-42] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:28:30.871 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:28:30.872 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:28:30.872 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:28:30.872 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:28:30.872 [http-nio-8080-exec-42] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:28:30.872 [http-nio-8080-exec-42] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:28:30.873 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:28:30.873 [http-nio-8080-exec-42] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:28:30.873 [http-nio-8080-exec-42] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:28:30.876 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.876 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:28:30.876 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:28:30.876 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:28:30.876 [http-nio-8080-exec-42] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:28:30.876 [http-nio-8080-exec-42] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:28:30.876 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.877 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:28:30.877 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:28:30.877 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:28:30.877 [http-nio-8080-exec-42] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:28:30.887 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.887 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:28:30.887 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:28:30.887 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:28:30.887 [http-nio-8080-exec-42] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:28:30.888 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.888 [http-nio-8080-exec-42] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:28:30.888 [http-nio-8080-exec-42] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:28:30.888 [http-nio-8080-exec-42] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:28:30.888 [http-nio-8080-exec-42] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:28:30.888 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:28:30.888 [http-nio-8080-exec-42] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:28:30.891 [http-nio-8080-exec-42] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:28:30.892 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:28:30.893 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:28:30.896 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:28:30.903 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:28:30.903 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:28:30.903 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:28:30.903 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:28:30.903 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:28:30.903 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:28:30.903 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:28:30.903 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:28:30.903 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:28:30.904 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:28:30.904 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:28:30.905 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:28:30.905 [http-nio-8080-exec-42] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:28:30.913 [http-nio-8080-exec-42] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:28:30.914 [http-nio-8080-exec-42] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:28:30.914 [http-nio-8080-exec-42] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:28:30.914 [http-nio-8080-exec-42] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:28:30.915 [http-nio-8080-exec-42] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:28:30.916 [http-nio-8080-exec-42] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:28:30.916 [http-nio-8080-exec-42] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:28:30.916 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:28:30.916 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:28:30.920 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:28:30.920 [http-nio-8080-exec-42] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:28:30.965 [http-nio-8080-exec-42] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:28:30.969 [http-nio-8080-exec-42] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:28:30.969 [http-nio-8080-exec-42] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:28:30.969 [http-nio-8080-exec-42] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:28:30.969 [http-nio-8080-exec-42] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:28:30.969 [http-nio-8080-exec-42] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:28:30.969 [http-nio-8080-exec-42] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:28:30.969 [http-nio-8080-exec-42] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:28:30.969 [http-nio-8080-exec-42] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:28:30.969 [http-nio-8080-exec-42] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:28:30.969 [http-nio-8080-exec-42] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:28:30.970 [http-nio-8080-exec-42] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:28:30.970 [http-nio-8080-exec-42] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:28:30.970 [http-nio-8080-exec-42] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:28:30.970 [http-nio-8080-exec-42] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:28:30.971 [http-nio-8080-exec-42] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:28:30.971 [http-nio-8080-exec-42] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:28:30.971 [http-nio-8080-exec-42] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:28:30.971 [http-nio-8080-exec-42] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:28:30.971 [http-nio-8080-exec-42] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:28:30.971 [http-nio-8080-exec-42] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:28:30.971 [http-nio-8080-exec-42] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:28:30.971 [http-nio-8080-exec-42] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:28:30.971 [http-nio-8080-exec-42] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:28:30.971 [http-nio-8080-exec-42] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:28:30.971 [http-nio-8080-exec-42] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:28:30.971 [http-nio-8080-exec-42] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:28:30.971 [http-nio-8080-exec-42] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:28:30.971 [http-nio-8080-exec-42] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:28:30.971 [http-nio-8080-exec-42] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:28:30.972 [http-nio-8080-exec-42] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:28:30.972 [http-nio-8080-exec-42] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:28:30.972 [http-nio-8080-exec-42] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:28:30.972 [http-nio-8080-exec-42] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:28:30.972 [http-nio-8080-exec-42] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:28:30.972 [http-nio-8080-exec-42] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:28:30.972 [http-nio-8080-exec-42] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:28:30.972 [http-nio-8080-exec-42] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:28:30.972 [http-nio-8080-exec-42] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:28:31.021 [http-nio-8080-exec-42] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:28:31.037 [http-nio-8080-exec-42] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:28:31.037 [http-nio-8080-exec-42] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6d3fbb24, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:28:31.055 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:28:31.055 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:28:31.056 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:28:31.056 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:28:31.062 [http-nio-8080-exec-42] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:28:31.063 [http-nio-8080-exec-42] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:28:31.063 [http-nio-8080-exec-42] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52e05221] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@14d7d65]
[DEBUG] 2020-02-16 20:28:31.099 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:28:31.099 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:28:31.114 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:28:31.114 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:28:31.291 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:28:31.291 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:28:31.293 [http-nio-8080-exec-42] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:28:31.293 [http-nio-8080-exec-42] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:28:31.343 [http-nio-8080-exec-42] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:28:31.343 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:28:31.343 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:28:31.343 [http-nio-8080-exec-42] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:28:31.343 [http-nio-8080-exec-42] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:28:31.348 [http-nio-8080-exec-42] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:28:31.348 [http-nio-8080-exec-42] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:28:31.348 [http-nio-8080-exec-42] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:28:31.348 [http-nio-8080-exec-42] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:28:31.348 [http-nio-8080-exec-42] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:28:31.348 [http-nio-8080-exec-42] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:28:31.348 [http-nio-8080-exec-42] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:28:31.366 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7853300f]
[DEBUG] 2020-02-16 20:28:31.367 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:28:31.367 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:28:31.367 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:28:31.367 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:28:31.372 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@105157f3]
[DEBUG] 2020-02-16 20:28:31.373 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:28:31.373 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:28:31.373 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:28:31.374 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:28:31.374 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:28:31.374 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:28:31.374 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:28:31.374 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:28:31.375 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:28:31.375 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:28:31.375 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:28:31.375 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:28:31.375 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:28:31.375 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:28:31.376 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2c77f6de]
[DEBUG] 2020-02-16 20:28:31.377 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:28:31.378 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:28:31.386 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:28:31.390 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:28:31.392 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:28:31.393 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66fe4dec]
[DEBUG] 2020-02-16 20:28:31.393 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:28:31.393 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:28:31.393 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:28:31.393 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:28:31.393 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4562c6a6]
[DEBUG] 2020-02-16 20:28:31.393 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:28:31.393 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:28:31.394 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:28:31.394 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:28:31.394 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:28:31.394 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:28:31.394 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:28:31.394 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:28:31.396 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:28:31.396 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:28:31.396 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:28:31.396 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:28:31.396 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:28:31.396 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:28:31.396 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4b0b8d67]
[DEBUG] 2020-02-16 20:28:31.396 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:28:31.396 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:28:31.396 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:28:31.397 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:28:31.397 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:28:31.409 [http-nio-8080-exec-42] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26895c36]
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:28:31.410 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:28:31.411 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d0b1945]
[DEBUG] 2020-02-16 20:28:31.413 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ba24400]
[DEBUG] 2020-02-16 20:28:31.414 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:28:31.415 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:28:31.415 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:28:31.415 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:28:31.415 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:28:31.415 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:28:31.415 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:28:31.415 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:28:31.415 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@22e92f27]
[DEBUG] 2020-02-16 20:28:31.415 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:28:31.415 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:28:31.416 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:28:31.421 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:28:31.421 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e2ea9d3]
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3235a3]
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57b32aa1]
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2a8d2987]
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:28:31.422 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:28:31.423 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:28:31.423 [http-nio-8080-exec-42] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:28:31.425 [http-nio-8080-exec-42] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:28:31.426 [http-nio-8080-exec-42] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:28:31.428 [http-nio-8080-exec-42] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:28:31.432 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1af6e39b]
[DEBUG] 2020-02-16 20:28:31.432 [http-nio-8080-exec-42] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e89d202]
[DEBUG] 2020-02-16 20:28:31.432 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:28:31.432 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:28:31.432 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:28:31.432 [http-nio-8080-exec-42] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:28:31.432 [http-nio-8080-exec-42] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:28:31.432 [http-nio-8080-exec-42] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:28:31.433 [http-nio-8080-exec-42] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:28:31.434 [http-nio-8080-exec-42] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:28:31.434 [http-nio-8080-exec-42] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:28:31.458 [http-nio-8080-exec-42] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:28:31.458 [http-nio-8080-exec-42] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:28:31.459 [http-nio-8080-exec-42] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:28:31.465 [http-nio-8080-exec-42] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:28:31.465 [http-nio-8080-exec-42] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:28:31.466 [http-nio-8080-exec-42] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:28:31.466 [http-nio-8080-exec-42] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:28:31.467 [http-nio-8080-exec-42] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7a556f3a
[DEBUG] 2020-02-16 20:28:31.470 [http-nio-8080-exec-42] SessionFactoryRegistry - Registering SessionFactory: ac28ce0a-361a-44e9-8961-c82842d14677 (<unnamed>)
[DEBUG] 2020-02-16 20:28:31.470 [http-nio-8080-exec-42] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:28:31.527 [http-nio-8080-exec-42] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:28:31.545 [http-nio-8080-exec-42] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:28:31.558 [http-nio-8080-exec-42] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5a1f1144
[DEBUG] 2020-02-16 20:28:31.575 [http-nio-8080-exec-42] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:28:31.578 [http-nio-8080-exec-42] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:28:31.583 [http-nio-8080-exec-42] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:28:31.621 [http-nio-8080-exec-42] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:28:31.632 [http-nio-8080-exec-42] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:28:31.633 [http-nio-8080-exec-42] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:28:31.634 [http-nio-8080-exec-42] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:28:31.634 [http-nio-8080-exec-42] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:28:31.641 [http-nio-8080-exec-42] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:28:31.641 [http-nio-8080-exec-42] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:28:31.641 [http-nio-8080-exec-42] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:28:31.641 [http-nio-8080-exec-42] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:28:31.646 [http-nio-8080-exec-42] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:28:31.646 [http-nio-8080-exec-42] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:28:31.646 [http-nio-8080-exec-42] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:28:31.657 [http-nio-8080-exec-42] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:28:31.683 [http-nio-8080-exec-42] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:28:31.686 [http-nio-8080-exec-42] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:28:31.692 [http-nio-8080-exec-42] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:28:31.692 [http-nio-8080-exec-42] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:28:31.694 [http-nio-8080-exec-42] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:28:31.698 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.708 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:28:31.708 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.708 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:28:31.708 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.708 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@643d88dd
[DEBUG] 2020-02-16 20:28:31.708 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@1ea12e81
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.709 [http-nio-8080-exec-42] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:28:31.712 [http-nio-8080-exec-42] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:28:31.712 [http-nio-8080-exec-42] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:28:31.717 [http-nio-8080-exec-42] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:28:31.754 [http-nio-8080-exec-42] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:28:31.756 [http-nio-8080-exec-42] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:28:31.760 [http-nio-8080-exec-42] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:28:31.760 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:28:31.760 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.760 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:28:31.760 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.760 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:28:31.760 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.760 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:28:31.760 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.761 [http-nio-8080-exec-42] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:28:31.761 [http-nio-8080-exec-42] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:28:31.767 [http-nio-8080-exec-42] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:28:31.768 [http-nio-8080-exec-42] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:28:31.768 [http-nio-8080-exec-42] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:28:31.768 [http-nio-8080-exec-42] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:28:31.769 [http-nio-8080-exec-42] Loader - Done entity load
[DEBUG] 2020-02-16 20:28:31.769 [http-nio-8080-exec-42] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:28:31.769 [http-nio-8080-exec-42] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:28:31.770 [http-nio-8080-exec-42] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:28:31.770 [http-nio-8080-exec-42] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:28:31.770 [http-nio-8080-exec-42] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:28:31.770 [http-nio-8080-exec-42] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:28:31.770 [http-nio-8080-exec-42] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:28:31.770 [http-nio-8080-exec-42] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:28:31.771 [http-nio-8080-exec-42] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:28:31.771 [http-nio-8080-exec-42] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:28:31.772 [http-nio-8080-exec-42] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:28:31.774 [http-nio-8080-exec-42] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:28:31.774 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:28:31.774 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.774 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:28:31.774 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.774 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:28:31.774 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.774 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:28:31.774 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.774 [http-nio-8080-exec-42] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:28:31.774 [http-nio-8080-exec-42] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:28:31.775 [http-nio-8080-exec-42] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:28:31.775 [http-nio-8080-exec-42] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:28:31.775 [http-nio-8080-exec-42] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:28:31.775 [http-nio-8080-exec-42] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:28:31.775 [http-nio-8080-exec-42] Loader - Done entity load
[DEBUG] 2020-02-16 20:28:31.776 [http-nio-8080-exec-42] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:28:31.776 [http-nio-8080-exec-42] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:28:31.776 [http-nio-8080-exec-42] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:28:31.776 [http-nio-8080-exec-42] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:28:31.776 [http-nio-8080-exec-42] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:28:31.776 [http-nio-8080-exec-42] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:28:31.779 [http-nio-8080-exec-42] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:28:31.784 [http-nio-8080-exec-42] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:28:31.785 [http-nio-8080-exec-42] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:28:31.787 [http-nio-8080-exec-42] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:28:31.787 [http-nio-8080-exec-42] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:28:31.787 [http-nio-8080-exec-42] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:28:31.787 [http-nio-8080-exec-42] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:28:31.787 [http-nio-8080-exec-42] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:28:31.787 [http-nio-8080-exec-42] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:28:31.787 [http-nio-8080-exec-42] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:28:31.788 [http-nio-8080-exec-42] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:28:31.788 [http-nio-8080-exec-42] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:28:31.788 [http-nio-8080-exec-42] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:28:31.788 [http-nio-8080-exec-42] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:28:31.788 [http-nio-8080-exec-42] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:28:31.788 [http-nio-8080-exec-42] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:28:31.788 [http-nio-8080-exec-42] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:28:31.788 [http-nio-8080-exec-42] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:28:31.789 [http-nio-8080-exec-42] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:28:31.789 [http-nio-8080-exec-42] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:28:31.790 [http-nio-8080-exec-42] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:28:31.790 [http-nio-8080-exec-42] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:28:31.791 [http-nio-8080-exec-42] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:28:31.791 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:28:31.791 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.791 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:28:31.791 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.791 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:28:31.791 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.791 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:28:31.791 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.791 [http-nio-8080-exec-42] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:28:31.791 [http-nio-8080-exec-42] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:28:31.792 [http-nio-8080-exec-42] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:28:31.792 [http-nio-8080-exec-42] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:28:31.792 [http-nio-8080-exec-42] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@31f0d97d
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.793 [http-nio-8080-exec-42] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:28:31.794 [http-nio-8080-exec-42] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:28:31.794 [http-nio-8080-exec-42] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:28:31.794 [http-nio-8080-exec-42] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:28:31.794 [http-nio-8080-exec-42] Loader - Done entity load
[DEBUG] 2020-02-16 20:28:31.794 [http-nio-8080-exec-42] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:28:31.794 [http-nio-8080-exec-42] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:28:31.794 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:28:31.794 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.794 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:28:31.794 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.794 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:28:31.794 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.794 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:28:31.794 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.794 [http-nio-8080-exec-42] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:28:31.794 [http-nio-8080-exec-42] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:28:31.795 [http-nio-8080-exec-42] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:28:31.795 [http-nio-8080-exec-42] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@3a66b82
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:28:31.796 [http-nio-8080-exec-42] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:28:31.799 [http-nio-8080-exec-42] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:28:31.799 [http-nio-8080-exec-42] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:28:31.799 [http-nio-8080-exec-42] Loader - Done entity load
[DEBUG] 2020-02-16 20:28:31.799 [http-nio-8080-exec-42] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:28:31.799 [http-nio-8080-exec-42] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:29:08.345 [http-nio-8080-exec-50] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:29:08.351 [http-nio-8080-exec-50] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:29:08.355 [http-nio-8080-exec-50] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:29:08.431 [http-nio-8080-exec-50] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:29:08.435 [http-nio-8080-exec-50] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:29:08.567 [http-nio-8080-exec-50] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:29:08.568 [http-nio-8080-exec-50] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:29:08.571 [http-nio-8080-exec-50] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:29:08.782 [http-nio-8080-exec-50] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:29:08.801 [http-nio-8080-exec-50] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:29:08.802 [http-nio-8080-exec-50] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:29:08.819 [http-nio-8080-exec-50] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:29:08.847 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6220fecd
[DEBUG] 2020-02-16 20:29:08.847 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6220fecd
[DEBUG] 2020-02-16 20:29:08.847 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6220fecd
[DEBUG] 2020-02-16 20:29:08.847 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@64a3c8
[DEBUG] 2020-02-16 20:29:08.847 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2e2843ff
[DEBUG] 2020-02-16 20:29:08.849 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2744484
[DEBUG] 2020-02-16 20:29:08.851 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@54b648aa
[DEBUG] 2020-02-16 20:29:08.851 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@54b648aa
[DEBUG] 2020-02-16 20:29:08.851 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@54b648aa
[DEBUG] 2020-02-16 20:29:08.852 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3ab17f16
[DEBUG] 2020-02-16 20:29:08.853 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3ab17f16
[DEBUG] 2020-02-16 20:29:08.853 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3ab17f16
[DEBUG] 2020-02-16 20:29:08.854 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@74da0c5c
[DEBUG] 2020-02-16 20:29:08.854 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@74da0c5c
[DEBUG] 2020-02-16 20:29:08.854 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@74da0c5c
[DEBUG] 2020-02-16 20:29:08.854 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@189d471
[DEBUG] 2020-02-16 20:29:08.854 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@189d471
[DEBUG] 2020-02-16 20:29:08.854 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@189d471
[DEBUG] 2020-02-16 20:29:08.855 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@20a3403f
[DEBUG] 2020-02-16 20:29:08.855 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@20a3403f
[DEBUG] 2020-02-16 20:29:08.855 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@20a3403f
[DEBUG] 2020-02-16 20:29:08.855 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@62fa3d9b
[DEBUG] 2020-02-16 20:29:08.856 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@62fa3d9b
[DEBUG] 2020-02-16 20:29:08.856 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@62fa3d9b
[DEBUG] 2020-02-16 20:29:08.856 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@305973c3
[DEBUG] 2020-02-16 20:29:08.856 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@305973c3
[DEBUG] 2020-02-16 20:29:08.856 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@305973c3
[DEBUG] 2020-02-16 20:29:08.857 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@430d3def
[DEBUG] 2020-02-16 20:29:08.857 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@430d3def
[DEBUG] 2020-02-16 20:29:08.857 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@179315c3
[DEBUG] 2020-02-16 20:29:08.857 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@179315c3
[DEBUG] 2020-02-16 20:29:08.858 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6d91ba16
[DEBUG] 2020-02-16 20:29:08.858 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6d91ba16
[DEBUG] 2020-02-16 20:29:08.858 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52093edf
[DEBUG] 2020-02-16 20:29:08.858 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@55da8fe9
[DEBUG] 2020-02-16 20:29:08.859 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@79ec856e
[DEBUG] 2020-02-16 20:29:08.859 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@79ec856e
[DEBUG] 2020-02-16 20:29:08.860 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@55f00a8e
[DEBUG] 2020-02-16 20:29:08.860 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@55f00a8e
[DEBUG] 2020-02-16 20:29:08.860 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@fb42fc2
[DEBUG] 2020-02-16 20:29:08.861 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@fb42fc2
[DEBUG] 2020-02-16 20:29:08.862 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c0fb632
[DEBUG] 2020-02-16 20:29:08.862 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c0fb632
[DEBUG] 2020-02-16 20:29:08.863 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2b2d6f
[DEBUG] 2020-02-16 20:29:08.863 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2b2d6f
[DEBUG] 2020-02-16 20:29:08.864 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5bedf0e
[DEBUG] 2020-02-16 20:29:08.864 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5bedf0e
[DEBUG] 2020-02-16 20:29:08.866 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7cc70a33
[DEBUG] 2020-02-16 20:29:08.866 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7cc70a33
[DEBUG] 2020-02-16 20:29:08.875 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@328c799
[DEBUG] 2020-02-16 20:29:08.875 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@328c799
[DEBUG] 2020-02-16 20:29:08.876 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@52a1b52d
[DEBUG] 2020-02-16 20:29:08.878 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@52a1b52d
[DEBUG] 2020-02-16 20:29:08.879 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@926bed2
[DEBUG] 2020-02-16 20:29:08.880 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@926bed2
[DEBUG] 2020-02-16 20:29:08.882 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@23a85c1d
[DEBUG] 2020-02-16 20:29:08.882 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@23a85c1d
[DEBUG] 2020-02-16 20:29:08.883 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@57b0e489
[DEBUG] 2020-02-16 20:29:08.884 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57b0e489
[DEBUG] 2020-02-16 20:29:08.884 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57b0e489
[DEBUG] 2020-02-16 20:29:08.885 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@46759d19
[DEBUG] 2020-02-16 20:29:08.885 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1e45338a
[DEBUG] 2020-02-16 20:29:08.886 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e45338a
[DEBUG] 2020-02-16 20:29:08.886 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e45338a
[DEBUG] 2020-02-16 20:29:08.887 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@39a88a04
[DEBUG] 2020-02-16 20:29:08.887 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6e98c204
[DEBUG] 2020-02-16 20:29:08.887 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6e98c204
[DEBUG] 2020-02-16 20:29:08.888 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1e171b8e
[DEBUG] 2020-02-16 20:29:08.888 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e171b8e
[DEBUG] 2020-02-16 20:29:08.889 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1e43c2ab
[DEBUG] 2020-02-16 20:29:08.889 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1e43c2ab
[DEBUG] 2020-02-16 20:29:08.889 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6e825bb3
[DEBUG] 2020-02-16 20:29:08.889 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e825bb3
[DEBUG] 2020-02-16 20:29:08.890 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@477e0315
[DEBUG] 2020-02-16 20:29:08.890 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@477e0315
[DEBUG] 2020-02-16 20:29:08.890 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7df73173
[DEBUG] 2020-02-16 20:29:08.892 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7ccf9e4e
[DEBUG] 2020-02-16 20:29:08.892 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7ccf9e4e
[DEBUG] 2020-02-16 20:29:08.892 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7ccf9e4e
[DEBUG] 2020-02-16 20:29:08.893 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@43eaf86d
[DEBUG] 2020-02-16 20:29:08.893 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@43eaf86d
[DEBUG] 2020-02-16 20:29:08.893 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@43eaf86d
[DEBUG] 2020-02-16 20:29:08.894 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@66b64092
[DEBUG] 2020-02-16 20:29:08.894 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@524c239a
[DEBUG] 2020-02-16 20:29:08.894 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@497a8082
[DEBUG] 2020-02-16 20:29:08.894 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@497a8082
[DEBUG] 2020-02-16 20:29:08.894 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@497a8082
[DEBUG] 2020-02-16 20:29:08.895 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6eabf86d
[DEBUG] 2020-02-16 20:29:08.895 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6eabf86d
[DEBUG] 2020-02-16 20:29:08.895 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6eabf86d
[DEBUG] 2020-02-16 20:29:08.895 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@251d350
[DEBUG] 2020-02-16 20:29:08.895 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7551fa33
[DEBUG] 2020-02-16 20:29:08.897 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@a2e2eb1
[DEBUG] 2020-02-16 20:29:08.897 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a2e2eb1
[DEBUG] 2020-02-16 20:29:08.897 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@50c5a76e
[DEBUG] 2020-02-16 20:29:08.898 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6a09f961
[DEBUG] 2020-02-16 20:29:08.898 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6a09f961
[DEBUG] 2020-02-16 20:29:08.898 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4f489170
[DEBUG] 2020-02-16 20:29:08.898 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4f489170
[DEBUG] 2020-02-16 20:29:08.899 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@67693c0b
[DEBUG] 2020-02-16 20:29:08.900 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b1d62e3
[DEBUG] 2020-02-16 20:29:08.902 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6656b3c2
[DEBUG] 2020-02-16 20:29:08.906 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@55313bac
[DEBUG] 2020-02-16 20:29:08.907 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@55313bac
[DEBUG] 2020-02-16 20:29:08.907 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20284603
[DEBUG] 2020-02-16 20:29:08.907 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@63812134
[DEBUG] 2020-02-16 20:29:08.907 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6bd55ba6
[DEBUG] 2020-02-16 20:29:08.907 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50057b6d
[DEBUG] 2020-02-16 20:29:08.907 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@32ff2730
[DEBUG] 2020-02-16 20:29:08.907 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@581d28da
[DEBUG] 2020-02-16 20:29:08.907 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19544014
[DEBUG] 2020-02-16 20:29:08.907 [http-nio-8080-exec-50] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62718e40
[DEBUG] 2020-02-16 20:29:08.938 [http-nio-8080-exec-50] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:29:08.939 [http-nio-8080-exec-50] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:29:08.939 [http-nio-8080-exec-50] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:29:08.939 [http-nio-8080-exec-50] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:29:08.941 [http-nio-8080-exec-50] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:29:08.943 [http-nio-8080-exec-50] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:29:08.944 [http-nio-8080-exec-50] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:29:08.945 [http-nio-8080-exec-50] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:29:08.945 [http-nio-8080-exec-50] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:29:08.946 [http-nio-8080-exec-50] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:29:08.946 [http-nio-8080-exec-50] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:29:08.946 [http-nio-8080-exec-50] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:29:08.946 [http-nio-8080-exec-50] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:29:08.947 [http-nio-8080-exec-50] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:29:08.951 [http-nio-8080-exec-50] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:29:08.951 [http-nio-8080-exec-50] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:29:08.951 [http-nio-8080-exec-50] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:29:09.110 [http-nio-8080-exec-50] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:29:09.382 [http-nio-8080-exec-50] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:29:09.382 [http-nio-8080-exec-50] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:29:09.382 [http-nio-8080-exec-50] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:29:09.435 [http-nio-8080-exec-50] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:29:09.451 [http-nio-8080-exec-50] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:29:09.488 [http-nio-8080-exec-50] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:29:09.547 [http-nio-8080-exec-50] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:29:09.553 [http-nio-8080-exec-50] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@481767f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5f38c945]
[DEBUG] 2020-02-16 20:29:09.645 [http-nio-8080-exec-50] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:29:09.676 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:29:09.682 [http-nio-8080-exec-50] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:29:09.684 [http-nio-8080-exec-50] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:29:09.702 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.707 [http-nio-8080-exec-50] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:29:09.709 [http-nio-8080-exec-50] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:29:09.711 [http-nio-8080-exec-50] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:29:09.713 [http-nio-8080-exec-50] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:29:09.715 [http-nio-8080-exec-50] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:29:09.716 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.716 [http-nio-8080-exec-50] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:29:09.716 [http-nio-8080-exec-50] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:29:09.716 [http-nio-8080-exec-50] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:29:09.716 [http-nio-8080-exec-50] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:29:09.716 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.716 [http-nio-8080-exec-50] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:29:09.716 [http-nio-8080-exec-50] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:29:09.716 [http-nio-8080-exec-50] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:29:09.716 [http-nio-8080-exec-50] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:29:09.718 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.718 [http-nio-8080-exec-50] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:29:09.718 [http-nio-8080-exec-50] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:29:09.718 [http-nio-8080-exec-50] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:29:09.718 [http-nio-8080-exec-50] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:29:09.718 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.718 [http-nio-8080-exec-50] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:29:09.719 [http-nio-8080-exec-50] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:29:09.720 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.720 [http-nio-8080-exec-50] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:29:09.720 [http-nio-8080-exec-50] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:29:09.720 [http-nio-8080-exec-50] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:29:09.720 [http-nio-8080-exec-50] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:29:09.720 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.720 [http-nio-8080-exec-50] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:29:09.720 [http-nio-8080-exec-50] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:29:09.720 [http-nio-8080-exec-50] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:29:09.720 [http-nio-8080-exec-50] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:29:09.723 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:29:09.726 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.727 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.738 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.738 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.738 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:29:09.739 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:29:09.739 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:29:09.739 [http-nio-8080-exec-50] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:09.741 [http-nio-8080-exec-50] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:29:09.741 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.741 [http-nio-8080-exec-50] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:29:09.741 [http-nio-8080-exec-50] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:29:09.742 [http-nio-8080-exec-50] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:29:09.742 [http-nio-8080-exec-50] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:29:09.742 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:29:09.742 [http-nio-8080-exec-50] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:29:09.742 [http-nio-8080-exec-50] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:29:09.742 [http-nio-8080-exec-50] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:29:09.742 [http-nio-8080-exec-50] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:29:09.743 [http-nio-8080-exec-50] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:29:09.743 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:29:09.743 [http-nio-8080-exec-50] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:29:09.743 [http-nio-8080-exec-50] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:29:09.748 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.748 [http-nio-8080-exec-50] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:29:09.749 [http-nio-8080-exec-50] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:29:09.749 [http-nio-8080-exec-50] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:29:09.749 [http-nio-8080-exec-50] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:29:09.749 [http-nio-8080-exec-50] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:29:09.749 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.749 [http-nio-8080-exec-50] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:29:09.749 [http-nio-8080-exec-50] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:29:09.749 [http-nio-8080-exec-50] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:29:09.749 [http-nio-8080-exec-50] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:29:09.756 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.756 [http-nio-8080-exec-50] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:29:09.756 [http-nio-8080-exec-50] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:29:09.756 [http-nio-8080-exec-50] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:29:09.756 [http-nio-8080-exec-50] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:29:09.756 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.756 [http-nio-8080-exec-50] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:29:09.756 [http-nio-8080-exec-50] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:29:09.756 [http-nio-8080-exec-50] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:29:09.756 [http-nio-8080-exec-50] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:29:09.757 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:29:09.758 [http-nio-8080-exec-50] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:09.759 [http-nio-8080-exec-50] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:29:09.759 [http-nio-8080-exec-50] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:29:09.760 [http-nio-8080-exec-50] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:29:09.760 [http-nio-8080-exec-50] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:29:09.760 [http-nio-8080-exec-50] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:29:09.760 [http-nio-8080-exec-50] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:29:09.760 [http-nio-8080-exec-50] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:29:09.760 [http-nio-8080-exec-50] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:29:09.760 [http-nio-8080-exec-50] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:29:09.760 [http-nio-8080-exec-50] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:29:09.760 [http-nio-8080-exec-50] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:29:09.760 [http-nio-8080-exec-50] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:29:09.760 [http-nio-8080-exec-50] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:29:09.760 [http-nio-8080-exec-50] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:29:09.760 [http-nio-8080-exec-50] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:29:09.760 [http-nio-8080-exec-50] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:29:09.760 [http-nio-8080-exec-50] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:29:09.767 [http-nio-8080-exec-50] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:29:09.767 [http-nio-8080-exec-50] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:29:09.767 [http-nio-8080-exec-50] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:09.767 [http-nio-8080-exec-50] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:29:09.771 [http-nio-8080-exec-50] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:29:09.772 [http-nio-8080-exec-50] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:29:09.773 [http-nio-8080-exec-50] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:29:09.773 [http-nio-8080-exec-50] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:29:09.773 [http-nio-8080-exec-50] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:29:09.775 [http-nio-8080-exec-50] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:29:09.775 [http-nio-8080-exec-50] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:29:09.819 [http-nio-8080-exec-50] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:29:09.820 [http-nio-8080-exec-50] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:29:09.821 [http-nio-8080-exec-50] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:29:09.821 [http-nio-8080-exec-50] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:29:09.821 [http-nio-8080-exec-50] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:29:09.821 [http-nio-8080-exec-50] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:29:09.821 [http-nio-8080-exec-50] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:29:09.861 [http-nio-8080-exec-50] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:29:09.888 [http-nio-8080-exec-50] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:29:09.888 [http-nio-8080-exec-50] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@40866610, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:29:09.955 [http-nio-8080-exec-50] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:29:09.957 [http-nio-8080-exec-50] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:29:09.960 [http-nio-8080-exec-50] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:29:09.961 [http-nio-8080-exec-50] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:29:09.967 [http-nio-8080-exec-50] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:29:09.967 [http-nio-8080-exec-50] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:29:09.968 [http-nio-8080-exec-50] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@481767f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3ca7131d]
[DEBUG] 2020-02-16 20:29:10.021 [http-nio-8080-exec-50] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:29:10.021 [http-nio-8080-exec-50] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:29:10.028 [http-nio-8080-exec-50] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:29:10.029 [http-nio-8080-exec-50] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:29:10.221 [http-nio-8080-exec-50] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:29:10.221 [http-nio-8080-exec-50] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:29:10.223 [http-nio-8080-exec-50] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:29:10.223 [http-nio-8080-exec-50] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:29:10.280 [http-nio-8080-exec-50] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:10.280 [http-nio-8080-exec-50] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:29:10.280 [http-nio-8080-exec-50] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:29:10.280 [http-nio-8080-exec-50] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:29:10.280 [http-nio-8080-exec-50] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:29:10.283 [http-nio-8080-exec-50] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:29:10.283 [http-nio-8080-exec-50] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:29:10.283 [http-nio-8080-exec-50] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:29:10.283 [http-nio-8080-exec-50] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:29:10.283 [http-nio-8080-exec-50] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:29:10.283 [http-nio-8080-exec-50] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:29:10.283 [http-nio-8080-exec-50] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:29:10.304 [http-nio-8080-exec-50] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@afc51ec]
[DEBUG] 2020-02-16 20:29:10.305 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:29:10.306 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:29:10.306 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:29:10.306 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:29:10.308 [http-nio-8080-exec-50] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cb13770]
[DEBUG] 2020-02-16 20:29:10.309 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:29:10.309 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:29:10.309 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:29:10.309 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:29:10.309 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:29:10.309 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:29:10.309 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:29:10.309 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:29:10.310 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:29:10.311 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:29:10.311 [http-nio-8080-exec-50] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:29:10.311 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:29:10.311 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:29:10.311 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:29:10.312 [http-nio-8080-exec-50] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1bc75dfb]
[DEBUG] 2020-02-16 20:29:10.313 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:29:10.313 [http-nio-8080-exec-50] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:29:10.329 [http-nio-8080-exec-50] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:29:10.332 [http-nio-8080-exec-50] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:29:10.334 [http-nio-8080-exec-50] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:29:10.334 [http-nio-8080-exec-50] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33b3cad9]
[DEBUG] 2020-02-16 20:29:10.334 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:29:10.334 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:29:10.334 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:29:10.334 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:29:10.334 [http-nio-8080-exec-50] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71f5128d]
[DEBUG] 2020-02-16 20:29:10.334 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:29:10.334 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:29:10.337 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:29:10.341 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:29:10.341 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:29:10.341 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:29:10.341 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:29:10.341 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:29:10.341 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:29:10.341 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:29:10.341 [http-nio-8080-exec-50] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:29:10.341 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:29:10.341 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:29:10.341 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:29:10.341 [http-nio-8080-exec-50] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2ebab552]
[DEBUG] 2020-02-16 20:29:10.341 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:29:10.341 [http-nio-8080-exec-50] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:29:10.341 [http-nio-8080-exec-50] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:29:10.341 [http-nio-8080-exec-50] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:29:10.343 [http-nio-8080-exec-50] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:29:10.356 [http-nio-8080-exec-50] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:29:10.357 [http-nio-8080-exec-50] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:29:10.357 [http-nio-8080-exec-50] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:29:10.357 [http-nio-8080-exec-50] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:29:10.357 [http-nio-8080-exec-50] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:29:10.357 [http-nio-8080-exec-50] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:29:10.357 [http-nio-8080-exec-50] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:29:10.357 [http-nio-8080-exec-50] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:29:10.358 [http-nio-8080-exec-50] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:29:10.358 [http-nio-8080-exec-50] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51ae2314]
[DEBUG] 2020-02-16 20:29:10.358 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:29:10.358 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:29:10.358 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:29:10.358 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:29:10.358 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:29:10.358 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:29:10.358 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:29:10.358 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:29:10.358 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:29:10.358 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:29:10.359 [http-nio-8080-exec-50] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ed3313e]
[DEBUG] 2020-02-16 20:29:10.360 [http-nio-8080-exec-50] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@470d8dff]
[DEBUG] 2020-02-16 20:29:10.361 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:29:10.361 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:29:10.361 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:29:10.361 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:29:10.361 [http-nio-8080-exec-50] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:29:10.362 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:29:10.362 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:29:10.362 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:29:10.362 [http-nio-8080-exec-50] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@29cb03d0]
[DEBUG] 2020-02-16 20:29:10.362 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:29:10.362 [http-nio-8080-exec-50] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:29:10.362 [http-nio-8080-exec-50] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a2e7d07]
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@621150a3]
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f71de3f]
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:29:10.364 [http-nio-8080-exec-50] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:29:10.365 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:29:10.365 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:29:10.365 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:29:10.365 [http-nio-8080-exec-50] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@324e23c3]
[DEBUG] 2020-02-16 20:29:10.365 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:29:10.365 [http-nio-8080-exec-50] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:29:10.365 [http-nio-8080-exec-50] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:29:10.366 [http-nio-8080-exec-50] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:29:10.366 [http-nio-8080-exec-50] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:29:10.366 [http-nio-8080-exec-50] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:29:10.367 [http-nio-8080-exec-50] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:29:10.370 [http-nio-8080-exec-50] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:29:10.375 [http-nio-8080-exec-50] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fc39e3c]
[DEBUG] 2020-02-16 20:29:10.375 [http-nio-8080-exec-50] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c529897]
[DEBUG] 2020-02-16 20:29:10.375 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:29:10.375 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:29:10.375 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:29:10.375 [http-nio-8080-exec-50] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:29:10.375 [http-nio-8080-exec-50] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:29:10.375 [http-nio-8080-exec-50] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:29:10.377 [http-nio-8080-exec-50] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:29:10.377 [http-nio-8080-exec-50] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:29:10.377 [http-nio-8080-exec-50] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:29:10.408 [http-nio-8080-exec-50] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:29:10.408 [http-nio-8080-exec-50] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:29:10.408 [http-nio-8080-exec-50] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:29:10.413 [http-nio-8080-exec-50] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:29:10.413 [http-nio-8080-exec-50] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:29:10.416 [http-nio-8080-exec-50] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:29:10.416 [http-nio-8080-exec-50] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:29:10.420 [http-nio-8080-exec-50] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5fa81f0a
[DEBUG] 2020-02-16 20:29:10.422 [http-nio-8080-exec-50] SessionFactoryRegistry - Registering SessionFactory: e24c5d83-f9be-4a18-aa53-8c7395d9971b (<unnamed>)
[DEBUG] 2020-02-16 20:29:10.422 [http-nio-8080-exec-50] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:29:10.483 [http-nio-8080-exec-50] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:29:10.503 [http-nio-8080-exec-50] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:29:10.523 [http-nio-8080-exec-50] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@22c312b3
[DEBUG] 2020-02-16 20:29:10.544 [http-nio-8080-exec-50] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:29:10.547 [http-nio-8080-exec-50] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:29:10.549 [http-nio-8080-exec-50] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:29:10.564 [http-nio-8080-exec-50] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:29:10.579 [http-nio-8080-exec-50] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:29:10.579 [http-nio-8080-exec-50] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:29:10.581 [http-nio-8080-exec-50] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:29:10.581 [http-nio-8080-exec-50] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:29:10.592 [http-nio-8080-exec-50] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:29:10.593 [http-nio-8080-exec-50] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:29:10.593 [http-nio-8080-exec-50] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:29:10.593 [http-nio-8080-exec-50] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:29:10.602 [http-nio-8080-exec-50] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:29:10.602 [http-nio-8080-exec-50] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:29:10.602 [http-nio-8080-exec-50] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:29:10.616 [http-nio-8080-exec-50] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:29:10.801 [http-nio-8080-exec-50] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:29:10.803 [http-nio-8080-exec-50] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:29:10.810 [http-nio-8080-exec-50] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:29:10.811 [http-nio-8080-exec-50] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:29:10.811 [http-nio-8080-exec-50] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:29:10.813 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:29:10.813 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.813 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:29:10.813 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.813 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:10.813 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.813 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:29:10.813 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.814 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:29:10.814 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.814 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:29:10.814 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.814 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:29:10.814 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.814 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:29:10.814 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.814 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:29:10.814 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.814 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:29:10.814 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.826 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:10.826 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.826 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:29:10.826 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.826 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@1da94b
[DEBUG] 2020-02-16 20:29:10.826 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@b493638
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.827 [http-nio-8080-exec-50] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:29:10.830 [http-nio-8080-exec-50] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:29:10.830 [http-nio-8080-exec-50] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:29:10.836 [http-nio-8080-exec-50] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:29:10.842 [http-nio-8080-exec-50] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:29:10.844 [http-nio-8080-exec-50] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:29:10.849 [http-nio-8080-exec-50] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:29:10.849 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:10.849 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.849 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:29:10.849 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.849 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:10.849 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.849 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:29:10.849 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.850 [http-nio-8080-exec-50] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:29:10.850 [http-nio-8080-exec-50] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:29:10.851 [http-nio-8080-exec-50] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:29:10.852 [http-nio-8080-exec-50] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:29:10.852 [http-nio-8080-exec-50] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:29:10.852 [http-nio-8080-exec-50] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:10.852 [http-nio-8080-exec-50] Loader - Done entity load
[DEBUG] 2020-02-16 20:29:10.852 [http-nio-8080-exec-50] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:29:10.852 [http-nio-8080-exec-50] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:10.853 [http-nio-8080-exec-50] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:29:10.853 [http-nio-8080-exec-50] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:10.853 [http-nio-8080-exec-50] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:29:10.853 [http-nio-8080-exec-50] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:29:10.853 [http-nio-8080-exec-50] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:29:10.853 [http-nio-8080-exec-50] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:29:10.854 [http-nio-8080-exec-50] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:29:10.854 [http-nio-8080-exec-50] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:29:10.854 [http-nio-8080-exec-50] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:29:10.854 [http-nio-8080-exec-50] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:29:10.854 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:10.854 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.854 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:29:10.854 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.854 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:10.854 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.854 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:29:10.855 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.855 [http-nio-8080-exec-50] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:29:10.855 [http-nio-8080-exec-50] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:29:10.856 [http-nio-8080-exec-50] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:29:10.857 [http-nio-8080-exec-50] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:29:10.858 [http-nio-8080-exec-50] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:29:10.858 [http-nio-8080-exec-50] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:10.858 [http-nio-8080-exec-50] Loader - Done entity load
[DEBUG] 2020-02-16 20:29:10.858 [http-nio-8080-exec-50] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:29:10.858 [http-nio-8080-exec-50] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:10.858 [http-nio-8080-exec-50] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:29:10.858 [http-nio-8080-exec-50] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:10.858 [http-nio-8080-exec-50] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:29:10.859 [http-nio-8080-exec-50] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:29:10.861 [http-nio-8080-exec-50] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:29:10.864 [http-nio-8080-exec-50] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:29:10.864 [http-nio-8080-exec-50] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:29:10.865 [http-nio-8080-exec-50] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:29:10.866 [http-nio-8080-exec-50] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:29:10.866 [http-nio-8080-exec-50] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:29:10.866 [http-nio-8080-exec-50] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:29:10.866 [http-nio-8080-exec-50] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:29:10.866 [http-nio-8080-exec-50] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:29:10.866 [http-nio-8080-exec-50] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:29:10.866 [http-nio-8080-exec-50] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:29:10.866 [http-nio-8080-exec-50] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:29:10.866 [http-nio-8080-exec-50] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:29:10.866 [http-nio-8080-exec-50] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:29:10.866 [http-nio-8080-exec-50] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:29:10.866 [http-nio-8080-exec-50] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:29:10.866 [http-nio-8080-exec-50] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:29:10.867 [http-nio-8080-exec-50] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:29:10.875 [http-nio-8080-exec-50] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:29:10.875 [http-nio-8080-exec-50] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:29:10.875 [http-nio-8080-exec-50] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:29:10.875 [http-nio-8080-exec-50] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:29:10.876 [http-nio-8080-exec-50] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:29:10.876 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:10.876 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.876 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:29:10.877 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.877 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:10.877 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.877 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:29:10.877 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.877 [http-nio-8080-exec-50] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:29:10.877 [http-nio-8080-exec-50] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:29:10.878 [http-nio-8080-exec-50] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:29:10.878 [http-nio-8080-exec-50] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:29:10.882 [http-nio-8080-exec-50] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:29:10.883 [http-nio-8080-exec-50] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:29:10.883 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:29:10.883 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.884 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@4f0fee9f
[DEBUG] 2020-02-16 20:29:10.885 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] Loader - Done entity load
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:29:10.886 [http-nio-8080-exec-50] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:29:10.889 [http-nio-8080-exec-50] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:29:10.890 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.891 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:10.891 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.891 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:29:10.891 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.891 [http-nio-8080-exec-50] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@3f414554
[DEBUG] 2020-02-16 20:29:10.891 [http-nio-8080-exec-50] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:10.891 [http-nio-8080-exec-50] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:29:10.891 [http-nio-8080-exec-50] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:10.891 [http-nio-8080-exec-50] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:29:10.891 [http-nio-8080-exec-50] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:10.891 [http-nio-8080-exec-50] Loader - Done entity load
[DEBUG] 2020-02-16 20:29:10.891 [http-nio-8080-exec-50] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:29:10.891 [http-nio-8080-exec-50] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:29:49.890 [http-nio-8080-exec-53] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:29:49.896 [http-nio-8080-exec-53] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:29:49.899 [http-nio-8080-exec-53] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:29:49.987 [http-nio-8080-exec-53] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:29:49.988 [http-nio-8080-exec-53] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:29:50.090 [http-nio-8080-exec-53] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:29:50.091 [http-nio-8080-exec-53] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:29:50.092 [http-nio-8080-exec-53] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:29:50.261 [http-nio-8080-exec-53] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:29:50.277 [http-nio-8080-exec-53] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:29:50.278 [http-nio-8080-exec-53] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:29:50.297 [http-nio-8080-exec-53] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:29:50.326 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1e954364
[DEBUG] 2020-02-16 20:29:50.327 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1e954364
[DEBUG] 2020-02-16 20:29:50.327 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1e954364
[DEBUG] 2020-02-16 20:29:50.327 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@580c8bd
[DEBUG] 2020-02-16 20:29:50.327 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@72d1233f
[DEBUG] 2020-02-16 20:29:50.328 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@113fbb87
[DEBUG] 2020-02-16 20:29:50.329 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5910d4ff
[DEBUG] 2020-02-16 20:29:50.329 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5910d4ff
[DEBUG] 2020-02-16 20:29:50.329 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5910d4ff
[DEBUG] 2020-02-16 20:29:50.330 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@17a3faf2
[DEBUG] 2020-02-16 20:29:50.330 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@17a3faf2
[DEBUG] 2020-02-16 20:29:50.330 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@17a3faf2
[DEBUG] 2020-02-16 20:29:50.331 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@70e0f9cc
[DEBUG] 2020-02-16 20:29:50.331 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@70e0f9cc
[DEBUG] 2020-02-16 20:29:50.331 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@70e0f9cc
[DEBUG] 2020-02-16 20:29:50.331 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6859e926
[DEBUG] 2020-02-16 20:29:50.332 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6859e926
[DEBUG] 2020-02-16 20:29:50.332 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6859e926
[DEBUG] 2020-02-16 20:29:50.332 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@a18c607
[DEBUG] 2020-02-16 20:29:50.332 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@a18c607
[DEBUG] 2020-02-16 20:29:50.332 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@a18c607
[DEBUG] 2020-02-16 20:29:50.333 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@38f02f70
[DEBUG] 2020-02-16 20:29:50.333 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@38f02f70
[DEBUG] 2020-02-16 20:29:50.333 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38f02f70
[DEBUG] 2020-02-16 20:29:50.334 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@ac934a5
[DEBUG] 2020-02-16 20:29:50.334 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@ac934a5
[DEBUG] 2020-02-16 20:29:50.334 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@ac934a5
[DEBUG] 2020-02-16 20:29:50.334 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@37a28603
[DEBUG] 2020-02-16 20:29:50.334 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@37a28603
[DEBUG] 2020-02-16 20:29:50.335 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@197334f
[DEBUG] 2020-02-16 20:29:50.335 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@197334f
[DEBUG] 2020-02-16 20:29:50.336 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4ce0b3c2
[DEBUG] 2020-02-16 20:29:50.336 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4ce0b3c2
[DEBUG] 2020-02-16 20:29:50.336 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3ef780e6
[DEBUG] 2020-02-16 20:29:50.337 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26701411
[DEBUG] 2020-02-16 20:29:50.337 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@579d066a
[DEBUG] 2020-02-16 20:29:50.337 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@579d066a
[DEBUG] 2020-02-16 20:29:50.338 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@74f21955
[DEBUG] 2020-02-16 20:29:50.338 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74f21955
[DEBUG] 2020-02-16 20:29:50.339 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6a2bfb5f
[DEBUG] 2020-02-16 20:29:50.339 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6a2bfb5f
[DEBUG] 2020-02-16 20:29:50.340 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@194522d
[DEBUG] 2020-02-16 20:29:50.340 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@194522d
[DEBUG] 2020-02-16 20:29:50.340 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2b1e7a29
[DEBUG] 2020-02-16 20:29:50.340 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2b1e7a29
[DEBUG] 2020-02-16 20:29:50.341 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6abb2d11
[DEBUG] 2020-02-16 20:29:50.341 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6abb2d11
[DEBUG] 2020-02-16 20:29:50.341 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3251dbc9
[DEBUG] 2020-02-16 20:29:50.341 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3251dbc9
[DEBUG] 2020-02-16 20:29:50.342 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@78e75d2e
[DEBUG] 2020-02-16 20:29:50.342 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@78e75d2e
[DEBUG] 2020-02-16 20:29:50.343 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4efb2fb8
[DEBUG] 2020-02-16 20:29:50.343 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4efb2fb8
[DEBUG] 2020-02-16 20:29:50.344 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@20345559
[DEBUG] 2020-02-16 20:29:50.344 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@20345559
[DEBUG] 2020-02-16 20:29:50.344 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@39b087
[DEBUG] 2020-02-16 20:29:50.344 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@39b087
[DEBUG] 2020-02-16 20:29:50.345 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4ec5c24b
[DEBUG] 2020-02-16 20:29:50.345 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ec5c24b
[DEBUG] 2020-02-16 20:29:50.345 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ec5c24b
[DEBUG] 2020-02-16 20:29:50.346 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6c8e332b
[DEBUG] 2020-02-16 20:29:50.348 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@57d2db07
[DEBUG] 2020-02-16 20:29:50.348 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@57d2db07
[DEBUG] 2020-02-16 20:29:50.348 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@57d2db07
[DEBUG] 2020-02-16 20:29:50.349 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6a2abf5f
[DEBUG] 2020-02-16 20:29:50.351 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6983caa6
[DEBUG] 2020-02-16 20:29:50.351 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6983caa6
[DEBUG] 2020-02-16 20:29:50.352 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1d62b6ca
[DEBUG] 2020-02-16 20:29:50.353 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1d62b6ca
[DEBUG] 2020-02-16 20:29:50.353 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@463dff8f
[DEBUG] 2020-02-16 20:29:50.353 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@463dff8f
[DEBUG] 2020-02-16 20:29:50.354 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@774b93df
[DEBUG] 2020-02-16 20:29:50.354 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@774b93df
[DEBUG] 2020-02-16 20:29:50.354 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2bbf00c0
[DEBUG] 2020-02-16 20:29:50.354 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2bbf00c0
[DEBUG] 2020-02-16 20:29:50.354 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7da19e3b
[DEBUG] 2020-02-16 20:29:50.355 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@d41db40
[DEBUG] 2020-02-16 20:29:50.355 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@d41db40
[DEBUG] 2020-02-16 20:29:50.355 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@d41db40
[DEBUG] 2020-02-16 20:29:50.356 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10f91caf
[DEBUG] 2020-02-16 20:29:50.356 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10f91caf
[DEBUG] 2020-02-16 20:29:50.356 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10f91caf
[DEBUG] 2020-02-16 20:29:50.356 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6d67a225
[DEBUG] 2020-02-16 20:29:50.356 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@54e73a3b
[DEBUG] 2020-02-16 20:29:50.357 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@56a45af
[DEBUG] 2020-02-16 20:29:50.357 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@56a45af
[DEBUG] 2020-02-16 20:29:50.357 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@56a45af
[DEBUG] 2020-02-16 20:29:50.358 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3a285248
[DEBUG] 2020-02-16 20:29:50.358 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3a285248
[DEBUG] 2020-02-16 20:29:50.358 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3a285248
[DEBUG] 2020-02-16 20:29:50.358 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@72a92b01
[DEBUG] 2020-02-16 20:29:50.358 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@64c1298b
[DEBUG] 2020-02-16 20:29:50.359 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@12cfc5f
[DEBUG] 2020-02-16 20:29:50.359 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12cfc5f
[DEBUG] 2020-02-16 20:29:50.359 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7e7739de
[DEBUG] 2020-02-16 20:29:50.360 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3ce653fc
[DEBUG] 2020-02-16 20:29:50.360 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3ce653fc
[DEBUG] 2020-02-16 20:29:50.361 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@16bea3ad
[DEBUG] 2020-02-16 20:29:50.361 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@16bea3ad
[DEBUG] 2020-02-16 20:29:50.362 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@128c6556
[DEBUG] 2020-02-16 20:29:50.362 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65965cf2
[DEBUG] 2020-02-16 20:29:50.363 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3a341b9c
[DEBUG] 2020-02-16 20:29:50.365 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2a9ff2dd
[DEBUG] 2020-02-16 20:29:50.365 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2a9ff2dd
[DEBUG] 2020-02-16 20:29:50.366 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4e6628e3
[DEBUG] 2020-02-16 20:29:50.366 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@53c253c2
[DEBUG] 2020-02-16 20:29:50.366 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6aa0a890
[DEBUG] 2020-02-16 20:29:50.366 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@20927da7
[DEBUG] 2020-02-16 20:29:50.366 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5fcc7866
[DEBUG] 2020-02-16 20:29:50.366 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1e517c1e
[DEBUG] 2020-02-16 20:29:50.366 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@71dab36c
[DEBUG] 2020-02-16 20:29:50.366 [http-nio-8080-exec-53] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@429687b5
[DEBUG] 2020-02-16 20:29:50.388 [http-nio-8080-exec-53] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:29:50.389 [http-nio-8080-exec-53] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:29:50.389 [http-nio-8080-exec-53] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:29:50.389 [http-nio-8080-exec-53] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:29:50.389 [http-nio-8080-exec-53] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:29:50.390 [http-nio-8080-exec-53] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:29:50.391 [http-nio-8080-exec-53] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:29:50.391 [http-nio-8080-exec-53] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:29:50.392 [http-nio-8080-exec-53] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:29:50.392 [http-nio-8080-exec-53] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:29:50.392 [http-nio-8080-exec-53] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:29:50.392 [http-nio-8080-exec-53] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:29:50.392 [http-nio-8080-exec-53] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:29:50.393 [http-nio-8080-exec-53] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:29:50.399 [http-nio-8080-exec-53] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:29:50.400 [http-nio-8080-exec-53] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:29:50.400 [http-nio-8080-exec-53] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:29:50.520 [http-nio-8080-exec-53] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:29:50.758 [http-nio-8080-exec-53] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:29:50.758 [http-nio-8080-exec-53] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:29:50.758 [http-nio-8080-exec-53] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:29:50.784 [http-nio-8080-exec-53] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:29:50.803 [http-nio-8080-exec-53] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:29:51.017 [http-nio-8080-exec-53] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:29:51.055 [http-nio-8080-exec-53] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:29:51.057 [http-nio-8080-exec-53] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61db69a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@49c2af70]
[DEBUG] 2020-02-16 20:29:51.102 [http-nio-8080-exec-53] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:29:51.123 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:29:51.127 [http-nio-8080-exec-53] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:29:51.130 [http-nio-8080-exec-53] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:29:51.150 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.155 [http-nio-8080-exec-53] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:29:51.156 [http-nio-8080-exec-53] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:29:51.157 [http-nio-8080-exec-53] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:29:51.160 [http-nio-8080-exec-53] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:29:51.164 [http-nio-8080-exec-53] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:29:51.165 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.166 [http-nio-8080-exec-53] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:29:51.166 [http-nio-8080-exec-53] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:29:51.166 [http-nio-8080-exec-53] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:29:51.166 [http-nio-8080-exec-53] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:29:51.166 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.166 [http-nio-8080-exec-53] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:29:51.166 [http-nio-8080-exec-53] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:29:51.166 [http-nio-8080-exec-53] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:29:51.166 [http-nio-8080-exec-53] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:29:51.166 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.166 [http-nio-8080-exec-53] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:29:51.166 [http-nio-8080-exec-53] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.167 [http-nio-8080-exec-53] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:29:51.168 [http-nio-8080-exec-53] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:29:51.168 [http-nio-8080-exec-53] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:29:51.168 [http-nio-8080-exec-53] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:29:51.168 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.168 [http-nio-8080-exec-53] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:29:51.168 [http-nio-8080-exec-53] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:29:51.168 [http-nio-8080-exec-53] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:29:51.168 [http-nio-8080-exec-53] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:29:51.168 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.168 [http-nio-8080-exec-53] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:29:51.168 [http-nio-8080-exec-53] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:29:51.168 [http-nio-8080-exec-53] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:29:51.168 [http-nio-8080-exec-53] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:29:51.169 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:29:51.170 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.173 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.182 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.182 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.183 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:29:51.184 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:29:51.184 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:29:51.185 [http-nio-8080-exec-53] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:51.190 [http-nio-8080-exec-53] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:29:51.190 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.191 [http-nio-8080-exec-53] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:29:51.191 [http-nio-8080-exec-53] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:29:51.191 [http-nio-8080-exec-53] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:29:51.191 [http-nio-8080-exec-53] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:29:51.191 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:29:51.191 [http-nio-8080-exec-53] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:29:51.191 [http-nio-8080-exec-53] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:29:51.191 [http-nio-8080-exec-53] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:29:51.192 [http-nio-8080-exec-53] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:29:51.192 [http-nio-8080-exec-53] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:29:51.193 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:29:51.193 [http-nio-8080-exec-53] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:29:51.193 [http-nio-8080-exec-53] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:29:51.198 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.198 [http-nio-8080-exec-53] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:29:51.198 [http-nio-8080-exec-53] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:29:51.198 [http-nio-8080-exec-53] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:29:51.198 [http-nio-8080-exec-53] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:29:51.198 [http-nio-8080-exec-53] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:29:51.198 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.198 [http-nio-8080-exec-53] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:29:51.198 [http-nio-8080-exec-53] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:29:51.198 [http-nio-8080-exec-53] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:29:51.198 [http-nio-8080-exec-53] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:29:51.203 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.204 [http-nio-8080-exec-53] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:29:51.204 [http-nio-8080-exec-53] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:29:51.204 [http-nio-8080-exec-53] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:29:51.204 [http-nio-8080-exec-53] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:29:51.204 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.204 [http-nio-8080-exec-53] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:29:51.204 [http-nio-8080-exec-53] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:29:51.204 [http-nio-8080-exec-53] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:29:51.205 [http-nio-8080-exec-53] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:29:51.205 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:29:51.205 [http-nio-8080-exec-53] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:29:51.206 [http-nio-8080-exec-53] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:29:51.207 [http-nio-8080-exec-53] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:29:51.208 [http-nio-8080-exec-53] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:29:51.209 [http-nio-8080-exec-53] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:29:51.210 [http-nio-8080-exec-53] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:29:51.210 [http-nio-8080-exec-53] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:29:51.210 [http-nio-8080-exec-53] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:29:51.210 [http-nio-8080-exec-53] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:29:51.210 [http-nio-8080-exec-53] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:29:51.210 [http-nio-8080-exec-53] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:29:51.210 [http-nio-8080-exec-53] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:29:51.210 [http-nio-8080-exec-53] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:29:51.210 [http-nio-8080-exec-53] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:29:51.210 [http-nio-8080-exec-53] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:29:51.210 [http-nio-8080-exec-53] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:29:51.210 [http-nio-8080-exec-53] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:29:51.210 [http-nio-8080-exec-53] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:29:51.214 [http-nio-8080-exec-53] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:29:51.214 [http-nio-8080-exec-53] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:29:51.214 [http-nio-8080-exec-53] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:51.215 [http-nio-8080-exec-53] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:29:51.216 [http-nio-8080-exec-53] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:29:51.217 [http-nio-8080-exec-53] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:29:51.218 [http-nio-8080-exec-53] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:29:51.218 [http-nio-8080-exec-53] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:29:51.218 [http-nio-8080-exec-53] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:29:51.221 [http-nio-8080-exec-53] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:29:51.221 [http-nio-8080-exec-53] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:29:51.261 [http-nio-8080-exec-53] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:29:51.262 [http-nio-8080-exec-53] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:29:51.263 [http-nio-8080-exec-53] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:29:51.311 [http-nio-8080-exec-53] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:29:51.326 [http-nio-8080-exec-53] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:29:51.326 [http-nio-8080-exec-53] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6a2ba493, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:29:51.349 [http-nio-8080-exec-53] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:29:51.349 [http-nio-8080-exec-53] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:29:51.350 [http-nio-8080-exec-53] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:29:51.351 [http-nio-8080-exec-53] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:29:51.355 [http-nio-8080-exec-53] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:29:51.356 [http-nio-8080-exec-53] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:29:51.357 [http-nio-8080-exec-53] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61db69a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@b6f8ec5]
[DEBUG] 2020-02-16 20:29:51.390 [http-nio-8080-exec-53] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:29:51.390 [http-nio-8080-exec-53] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:29:51.401 [http-nio-8080-exec-53] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:29:51.401 [http-nio-8080-exec-53] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:29:51.956 [http-nio-8080-exec-53] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:29:51.956 [http-nio-8080-exec-53] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:29:51.958 [http-nio-8080-exec-53] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:29:51.958 [http-nio-8080-exec-53] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:29:52.017 [http-nio-8080-exec-53] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:52.017 [http-nio-8080-exec-53] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:29:52.017 [http-nio-8080-exec-53] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:29:52.017 [http-nio-8080-exec-53] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:29:52.017 [http-nio-8080-exec-53] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:29:52.020 [http-nio-8080-exec-53] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:29:52.020 [http-nio-8080-exec-53] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:29:52.021 [http-nio-8080-exec-53] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:29:52.021 [http-nio-8080-exec-53] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:29:52.021 [http-nio-8080-exec-53] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:29:52.021 [http-nio-8080-exec-53] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:29:52.021 [http-nio-8080-exec-53] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:29:52.055 [http-nio-8080-exec-53] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b9f1baa]
[DEBUG] 2020-02-16 20:29:52.057 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:29:52.057 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:29:52.057 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:29:52.057 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:29:52.062 [http-nio-8080-exec-53] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54ae85f5]
[DEBUG] 2020-02-16 20:29:52.073 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:29:52.074 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:29:52.074 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:29:52.074 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:29:52.074 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:29:52.075 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:29:52.075 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:29:52.075 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:29:52.075 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:29:52.075 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:29:52.075 [http-nio-8080-exec-53] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:29:52.076 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:29:52.076 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:29:52.076 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:29:52.078 [http-nio-8080-exec-53] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@10198251]
[DEBUG] 2020-02-16 20:29:52.084 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:29:52.096 [http-nio-8080-exec-53] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:29:52.126 [http-nio-8080-exec-53] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:29:52.139 [http-nio-8080-exec-53] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3007e745]
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@656fe460]
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@362cc918]
[DEBUG] 2020-02-16 20:29:52.141 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:29:52.142 [http-nio-8080-exec-53] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:29:52.142 [http-nio-8080-exec-53] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:29:52.142 [http-nio-8080-exec-53] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:29:52.142 [http-nio-8080-exec-53] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:29:52.153 [http-nio-8080-exec-53] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:29:52.153 [http-nio-8080-exec-53] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:29:52.153 [http-nio-8080-exec-53] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:29:52.153 [http-nio-8080-exec-53] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:29:52.153 [http-nio-8080-exec-53] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:29:52.153 [http-nio-8080-exec-53] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:29:52.153 [http-nio-8080-exec-53] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:29:52.153 [http-nio-8080-exec-53] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:29:52.153 [http-nio-8080-exec-53] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:29:52.153 [http-nio-8080-exec-53] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f28057d]
[DEBUG] 2020-02-16 20:29:52.153 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:29:52.153 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:29:52.153 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:29:52.153 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:29:52.153 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:29:52.154 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:29:52.154 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:29:52.154 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:29:52.154 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:29:52.154 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:29:52.154 [http-nio-8080-exec-53] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ad6b08c]
[DEBUG] 2020-02-16 20:29:52.155 [http-nio-8080-exec-53] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7062b864]
[DEBUG] 2020-02-16 20:29:52.156 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:29:52.156 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:29:52.156 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:29:52.156 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:29:52.156 [http-nio-8080-exec-53] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:29:52.156 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:29:52.156 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:29:52.156 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:29:52.156 [http-nio-8080-exec-53] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@43a38753]
[DEBUG] 2020-02-16 20:29:52.156 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:29:52.156 [http-nio-8080-exec-53] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:29:52.156 [http-nio-8080-exec-53] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:29:52.170 [http-nio-8080-exec-53] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:29:52.170 [http-nio-8080-exec-53] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:29:52.170 [http-nio-8080-exec-53] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@147c13c6]
[DEBUG] 2020-02-16 20:29:52.170 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:29:52.170 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:29:52.170 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:29:52.170 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:29:52.170 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:29:52.170 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:29:52.170 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:29:52.170 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:29:52.170 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:29:52.170 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:29:52.170 [http-nio-8080-exec-53] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a39199e]
[DEBUG] 2020-02-16 20:29:52.170 [http-nio-8080-exec-53] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e8013b1]
[DEBUG] 2020-02-16 20:29:52.171 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:29:52.172 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:29:52.172 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:29:52.172 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:29:52.172 [http-nio-8080-exec-53] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:29:52.172 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:29:52.172 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:29:52.172 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:29:52.172 [http-nio-8080-exec-53] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@560a299c]
[DEBUG] 2020-02-16 20:29:52.172 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:29:52.172 [http-nio-8080-exec-53] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:29:52.173 [http-nio-8080-exec-53] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:29:52.173 [http-nio-8080-exec-53] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:29:52.173 [http-nio-8080-exec-53] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:29:52.175 [http-nio-8080-exec-53] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:29:52.176 [http-nio-8080-exec-53] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:29:52.179 [http-nio-8080-exec-53] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:29:52.186 [http-nio-8080-exec-53] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18bb57fb]
[DEBUG] 2020-02-16 20:29:52.187 [http-nio-8080-exec-53] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a9f2581]
[DEBUG] 2020-02-16 20:29:52.187 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:29:52.187 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:29:52.187 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:29:52.187 [http-nio-8080-exec-53] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:29:52.187 [http-nio-8080-exec-53] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:29:52.187 [http-nio-8080-exec-53] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:29:52.188 [http-nio-8080-exec-53] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:29:52.188 [http-nio-8080-exec-53] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:29:52.189 [http-nio-8080-exec-53] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:29:52.241 [http-nio-8080-exec-53] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:29:52.241 [http-nio-8080-exec-53] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:29:52.241 [http-nio-8080-exec-53] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:29:52.247 [http-nio-8080-exec-53] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:29:52.247 [http-nio-8080-exec-53] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:29:52.247 [http-nio-8080-exec-53] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:29:52.247 [http-nio-8080-exec-53] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:29:52.248 [http-nio-8080-exec-53] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3fd11d0
[DEBUG] 2020-02-16 20:29:52.250 [http-nio-8080-exec-53] SessionFactoryRegistry - Registering SessionFactory: 2973c311-494b-4edd-9b6f-19bb4b29b3cc (<unnamed>)
[DEBUG] 2020-02-16 20:29:52.250 [http-nio-8080-exec-53] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:29:52.455 [http-nio-8080-exec-53] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:29:52.489 [http-nio-8080-exec-53] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:29:52.501 [http-nio-8080-exec-53] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6bba6d9e
[DEBUG] 2020-02-16 20:29:52.519 [http-nio-8080-exec-53] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:29:52.521 [http-nio-8080-exec-53] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:29:52.524 [http-nio-8080-exec-53] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:29:52.547 [http-nio-8080-exec-53] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:29:52.557 [http-nio-8080-exec-53] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:29:52.558 [http-nio-8080-exec-53] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:29:52.559 [http-nio-8080-exec-53] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:29:52.559 [http-nio-8080-exec-53] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:29:52.567 [http-nio-8080-exec-53] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:29:52.567 [http-nio-8080-exec-53] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:29:52.567 [http-nio-8080-exec-53] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:29:52.567 [http-nio-8080-exec-53] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:29:52.571 [http-nio-8080-exec-53] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:29:52.571 [http-nio-8080-exec-53] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:29:52.571 [http-nio-8080-exec-53] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:29:52.581 [http-nio-8080-exec-53] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:29:52.603 [http-nio-8080-exec-53] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:29:52.605 [http-nio-8080-exec-53] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:29:52.611 [http-nio-8080-exec-53] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:29:52.611 [http-nio-8080-exec-53] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:29:52.613 [http-nio-8080-exec-53] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:29:52.618 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:29:52.618 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.618 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:29:52.618 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.618 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:52.618 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.618 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:29:52.618 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.618 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:29:52.618 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.618 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:29:52.618 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.618 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:29:52.618 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.618 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:29:52.618 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.619 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:29:52.619 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.619 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:29:52.619 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.624 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:52.624 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.624 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:29:52.624 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.624 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@c6041ac
[DEBUG] 2020-02-16 20:29:52.624 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@10eb1554
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.625 [http-nio-8080-exec-53] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:29:52.628 [http-nio-8080-exec-53] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:29:52.628 [http-nio-8080-exec-53] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:29:52.690 [http-nio-8080-exec-53] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:29:52.693 [http-nio-8080-exec-53] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:29:52.694 [http-nio-8080-exec-53] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:29:52.697 [http-nio-8080-exec-53] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:29:52.697 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:52.697 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.697 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:29:52.697 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.697 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:52.697 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.697 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:29:52.697 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.697 [http-nio-8080-exec-53] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:29:52.697 [http-nio-8080-exec-53] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:29:52.702 [http-nio-8080-exec-53] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:29:52.703 [http-nio-8080-exec-53] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:29:52.703 [http-nio-8080-exec-53] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:29:52.704 [http-nio-8080-exec-53] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:52.704 [http-nio-8080-exec-53] Loader - Done entity load
[DEBUG] 2020-02-16 20:29:52.704 [http-nio-8080-exec-53] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:29:52.704 [http-nio-8080-exec-53] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:52.704 [http-nio-8080-exec-53] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:29:52.704 [http-nio-8080-exec-53] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:52.704 [http-nio-8080-exec-53] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:29:52.705 [http-nio-8080-exec-53] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:29:52.705 [http-nio-8080-exec-53] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:29:52.705 [http-nio-8080-exec-53] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:29:52.708 [http-nio-8080-exec-53] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:29:52.709 [http-nio-8080-exec-53] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:29:52.709 [http-nio-8080-exec-53] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:29:52.709 [http-nio-8080-exec-53] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:29:52.709 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:52.709 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.709 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:29:52.709 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.709 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:52.709 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.709 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:29:52.709 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.709 [http-nio-8080-exec-53] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:29:52.709 [http-nio-8080-exec-53] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:29:52.715 [http-nio-8080-exec-53] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:29:52.715 [http-nio-8080-exec-53] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:29:52.715 [http-nio-8080-exec-53] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:29:52.715 [http-nio-8080-exec-53] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:52.715 [http-nio-8080-exec-53] Loader - Done entity load
[DEBUG] 2020-02-16 20:29:52.715 [http-nio-8080-exec-53] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:29:52.715 [http-nio-8080-exec-53] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:52.715 [http-nio-8080-exec-53] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:29:52.715 [http-nio-8080-exec-53] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:52.715 [http-nio-8080-exec-53] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:29:52.715 [http-nio-8080-exec-53] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:29:52.716 [http-nio-8080-exec-53] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:29:52.720 [http-nio-8080-exec-53] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:29:52.721 [http-nio-8080-exec-53] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:29:52.722 [http-nio-8080-exec-53] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:29:52.722 [http-nio-8080-exec-53] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:29:52.722 [http-nio-8080-exec-53] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:29:52.722 [http-nio-8080-exec-53] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:29:52.722 [http-nio-8080-exec-53] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:29:52.722 [http-nio-8080-exec-53] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:29:52.722 [http-nio-8080-exec-53] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:29:52.722 [http-nio-8080-exec-53] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:29:52.722 [http-nio-8080-exec-53] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:29:52.723 [http-nio-8080-exec-53] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:29:52.723 [http-nio-8080-exec-53] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:29:52.723 [http-nio-8080-exec-53] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:29:52.723 [http-nio-8080-exec-53] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:29:52.723 [http-nio-8080-exec-53] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:29:52.723 [http-nio-8080-exec-53] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:29:52.729 [http-nio-8080-exec-53] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:29:52.735 [http-nio-8080-exec-53] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:29:52.735 [http-nio-8080-exec-53] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:29:52.735 [http-nio-8080-exec-53] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:29:52.735 [http-nio-8080-exec-53] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:29:52.735 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:52.735 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.735 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:29:52.735 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.735 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:52.735 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.735 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:29:52.735 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.735 [http-nio-8080-exec-53] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:29:52.735 [http-nio-8080-exec-53] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:29:52.741 [http-nio-8080-exec-53] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:29:52.742 [http-nio-8080-exec-53] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:29:52.742 [http-nio-8080-exec-53] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:29:52.742 [http-nio-8080-exec-53] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:29:52.742 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:29:52.742 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.742 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:29:52.742 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@a369c17
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] Loader - Done entity load
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.743 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:29:52.744 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.744 [http-nio-8080-exec-53] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:29:52.744 [http-nio-8080-exec-53] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:29:52.747 [http-nio-8080-exec-53] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:29:52.747 [http-nio-8080-exec-53] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.750 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:29:52.751 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.751 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:29:52.751 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.751 [http-nio-8080-exec-53] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@2665de5
[DEBUG] 2020-02-16 20:29:52.751 [http-nio-8080-exec-53] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:29:52.751 [http-nio-8080-exec-53] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:29:52.751 [http-nio-8080-exec-53] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:52.751 [http-nio-8080-exec-53] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:29:52.751 [http-nio-8080-exec-53] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:29:52.751 [http-nio-8080-exec-53] Loader - Done entity load
[DEBUG] 2020-02-16 20:29:52.751 [http-nio-8080-exec-53] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:29:52.751 [http-nio-8080-exec-53] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:38:14.882 [http-nio-8080-exec-63] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:38:14.890 [http-nio-8080-exec-63] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:38:14.893 [http-nio-8080-exec-63] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:38:14.957 [http-nio-8080-exec-63] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:38:14.959 [http-nio-8080-exec-63] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:38:15.119 [http-nio-8080-exec-63] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:38:15.120 [http-nio-8080-exec-63] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:38:15.125 [http-nio-8080-exec-63] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:38:15.289 [http-nio-8080-exec-63] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:38:15.305 [http-nio-8080-exec-63] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:38:15.305 [http-nio-8080-exec-63] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:38:15.320 [http-nio-8080-exec-63] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:38:15.359 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1766e51f
[DEBUG] 2020-02-16 20:38:15.359 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1766e51f
[DEBUG] 2020-02-16 20:38:15.359 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1766e51f
[DEBUG] 2020-02-16 20:38:15.360 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a0e308e
[DEBUG] 2020-02-16 20:38:15.361 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6dd1a45b
[DEBUG] 2020-02-16 20:38:15.361 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3cf329ad
[DEBUG] 2020-02-16 20:38:15.362 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3f2abc31
[DEBUG] 2020-02-16 20:38:15.362 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3f2abc31
[DEBUG] 2020-02-16 20:38:15.362 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3f2abc31
[DEBUG] 2020-02-16 20:38:15.362 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@65d6d8ac
[DEBUG] 2020-02-16 20:38:15.363 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@65d6d8ac
[DEBUG] 2020-02-16 20:38:15.363 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@65d6d8ac
[DEBUG] 2020-02-16 20:38:15.363 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@603a2fb4
[DEBUG] 2020-02-16 20:38:15.363 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@603a2fb4
[DEBUG] 2020-02-16 20:38:15.363 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@603a2fb4
[DEBUG] 2020-02-16 20:38:15.364 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3c46a517
[DEBUG] 2020-02-16 20:38:15.364 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3c46a517
[DEBUG] 2020-02-16 20:38:15.364 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c46a517
[DEBUG] 2020-02-16 20:38:15.365 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6ac7e9e0
[DEBUG] 2020-02-16 20:38:15.365 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6ac7e9e0
[DEBUG] 2020-02-16 20:38:15.365 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6ac7e9e0
[DEBUG] 2020-02-16 20:38:15.365 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@627996e6
[DEBUG] 2020-02-16 20:38:15.365 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@627996e6
[DEBUG] 2020-02-16 20:38:15.365 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@627996e6
[DEBUG] 2020-02-16 20:38:15.366 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@53e221a3
[DEBUG] 2020-02-16 20:38:15.366 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@53e221a3
[DEBUG] 2020-02-16 20:38:15.366 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@53e221a3
[DEBUG] 2020-02-16 20:38:15.366 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4c5003c2
[DEBUG] 2020-02-16 20:38:15.366 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4c5003c2
[DEBUG] 2020-02-16 20:38:15.367 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@12639f9e
[DEBUG] 2020-02-16 20:38:15.367 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@12639f9e
[DEBUG] 2020-02-16 20:38:15.368 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6deb2dd3
[DEBUG] 2020-02-16 20:38:15.368 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6deb2dd3
[DEBUG] 2020-02-16 20:38:15.368 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4332cf76
[DEBUG] 2020-02-16 20:38:15.368 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ba694f
[DEBUG] 2020-02-16 20:38:15.369 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@37cd0343
[DEBUG] 2020-02-16 20:38:15.369 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@37cd0343
[DEBUG] 2020-02-16 20:38:15.369 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@38a67657
[DEBUG] 2020-02-16 20:38:15.369 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@38a67657
[DEBUG] 2020-02-16 20:38:15.370 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@69c2b0ce
[DEBUG] 2020-02-16 20:38:15.370 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69c2b0ce
[DEBUG] 2020-02-16 20:38:15.371 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@76ede711
[DEBUG] 2020-02-16 20:38:15.371 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@76ede711
[DEBUG] 2020-02-16 20:38:15.371 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7da9aee1
[DEBUG] 2020-02-16 20:38:15.371 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7da9aee1
[DEBUG] 2020-02-16 20:38:15.372 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@77198137
[DEBUG] 2020-02-16 20:38:15.372 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@77198137
[DEBUG] 2020-02-16 20:38:15.373 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a235706
[DEBUG] 2020-02-16 20:38:15.373 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a235706
[DEBUG] 2020-02-16 20:38:15.374 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@77d55d56
[DEBUG] 2020-02-16 20:38:15.374 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@77d55d56
[DEBUG] 2020-02-16 20:38:15.375 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@394c4022
[DEBUG] 2020-02-16 20:38:15.375 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@394c4022
[DEBUG] 2020-02-16 20:38:15.376 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@617167fc
[DEBUG] 2020-02-16 20:38:15.376 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@617167fc
[DEBUG] 2020-02-16 20:38:15.377 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1bb2efe7
[DEBUG] 2020-02-16 20:38:15.377 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1bb2efe7
[DEBUG] 2020-02-16 20:38:15.377 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@622b37c6
[DEBUG] 2020-02-16 20:38:15.377 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@622b37c6
[DEBUG] 2020-02-16 20:38:15.377 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@622b37c6
[DEBUG] 2020-02-16 20:38:15.379 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@729846e
[DEBUG] 2020-02-16 20:38:15.380 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7357c432
[DEBUG] 2020-02-16 20:38:15.380 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7357c432
[DEBUG] 2020-02-16 20:38:15.380 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7357c432
[DEBUG] 2020-02-16 20:38:15.381 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3767d9e1
[DEBUG] 2020-02-16 20:38:15.382 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@70dc36a8
[DEBUG] 2020-02-16 20:38:15.382 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@70dc36a8
[DEBUG] 2020-02-16 20:38:15.382 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@502b558e
[DEBUG] 2020-02-16 20:38:15.383 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@502b558e
[DEBUG] 2020-02-16 20:38:15.383 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4ecf7ded
[DEBUG] 2020-02-16 20:38:15.383 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4ecf7ded
[DEBUG] 2020-02-16 20:38:15.384 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7984ae5f
[DEBUG] 2020-02-16 20:38:15.384 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7984ae5f
[DEBUG] 2020-02-16 20:38:15.384 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f025c6f
[DEBUG] 2020-02-16 20:38:15.384 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f025c6f
[DEBUG] 2020-02-16 20:38:15.384 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@344977a8
[DEBUG] 2020-02-16 20:38:15.385 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1df7d1e7
[DEBUG] 2020-02-16 20:38:15.385 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1df7d1e7
[DEBUG] 2020-02-16 20:38:15.385 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1df7d1e7
[DEBUG] 2020-02-16 20:38:15.386 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@77314779
[DEBUG] 2020-02-16 20:38:15.386 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@77314779
[DEBUG] 2020-02-16 20:38:15.386 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@77314779
[DEBUG] 2020-02-16 20:38:15.386 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1c7c9521
[DEBUG] 2020-02-16 20:38:15.386 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@400173bc
[DEBUG] 2020-02-16 20:38:15.387 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@457a75e1
[DEBUG] 2020-02-16 20:38:15.387 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@457a75e1
[DEBUG] 2020-02-16 20:38:15.387 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@457a75e1
[DEBUG] 2020-02-16 20:38:15.387 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@d8888a5
[DEBUG] 2020-02-16 20:38:15.387 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@d8888a5
[DEBUG] 2020-02-16 20:38:15.387 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@d8888a5
[DEBUG] 2020-02-16 20:38:15.388 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@52a714ed
[DEBUG] 2020-02-16 20:38:15.388 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@57b92522
[DEBUG] 2020-02-16 20:38:15.390 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@a182c3f
[DEBUG] 2020-02-16 20:38:15.390 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a182c3f
[DEBUG] 2020-02-16 20:38:15.394 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@63a3fe6e
[DEBUG] 2020-02-16 20:38:15.397 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@358f98c9
[DEBUG] 2020-02-16 20:38:15.397 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@358f98c9
[DEBUG] 2020-02-16 20:38:15.399 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@72ea6f46
[DEBUG] 2020-02-16 20:38:15.399 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@72ea6f46
[DEBUG] 2020-02-16 20:38:15.399 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1663c63c
[DEBUG] 2020-02-16 20:38:15.399 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6fa1da0a
[DEBUG] 2020-02-16 20:38:15.400 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@341ef2e
[DEBUG] 2020-02-16 20:38:15.402 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5f08cb84
[DEBUG] 2020-02-16 20:38:15.402 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f08cb84
[DEBUG] 2020-02-16 20:38:15.403 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d3313f4
[DEBUG] 2020-02-16 20:38:15.403 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@698eaf1a
[DEBUG] 2020-02-16 20:38:15.403 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1f91247d
[DEBUG] 2020-02-16 20:38:15.403 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4e7e1193
[DEBUG] 2020-02-16 20:38:15.403 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6b77171b
[DEBUG] 2020-02-16 20:38:15.403 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@779d9310
[DEBUG] 2020-02-16 20:38:15.403 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@61b9e352
[DEBUG] 2020-02-16 20:38:15.403 [http-nio-8080-exec-63] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5f75847f
[DEBUG] 2020-02-16 20:38:15.431 [http-nio-8080-exec-63] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:38:15.431 [http-nio-8080-exec-63] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:38:15.432 [http-nio-8080-exec-63] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:38:15.432 [http-nio-8080-exec-63] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:38:15.432 [http-nio-8080-exec-63] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:38:15.433 [http-nio-8080-exec-63] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:38:15.433 [http-nio-8080-exec-63] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:38:15.435 [http-nio-8080-exec-63] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:38:15.436 [http-nio-8080-exec-63] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:38:15.436 [http-nio-8080-exec-63] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:38:15.437 [http-nio-8080-exec-63] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:38:15.437 [http-nio-8080-exec-63] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:38:15.437 [http-nio-8080-exec-63] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:38:15.438 [http-nio-8080-exec-63] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:38:15.442 [http-nio-8080-exec-63] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:38:15.442 [http-nio-8080-exec-63] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:38:15.442 [http-nio-8080-exec-63] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:38:15.538 [http-nio-8080-exec-63] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:38:15.884 [http-nio-8080-exec-63] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:38:15.887 [http-nio-8080-exec-63] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:38:15.887 [http-nio-8080-exec-63] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:38:15.912 [http-nio-8080-exec-63] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:38:15.929 [http-nio-8080-exec-63] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:38:16.259 [http-nio-8080-exec-63] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:38:16.313 [http-nio-8080-exec-63] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:38:16.316 [http-nio-8080-exec-63] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ab80fc9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6917dd8a]
[DEBUG] 2020-02-16 20:38:16.361 [http-nio-8080-exec-63] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:38:16.382 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:38:16.386 [http-nio-8080-exec-63] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:38:16.388 [http-nio-8080-exec-63] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:38:16.411 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.415 [http-nio-8080-exec-63] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:38:16.418 [http-nio-8080-exec-63] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:38:16.420 [http-nio-8080-exec-63] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:38:16.422 [http-nio-8080-exec-63] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:38:16.427 [http-nio-8080-exec-63] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:38:16.429 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.429 [http-nio-8080-exec-63] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:38:16.429 [http-nio-8080-exec-63] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:38:16.429 [http-nio-8080-exec-63] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:38:16.429 [http-nio-8080-exec-63] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:38:16.429 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.429 [http-nio-8080-exec-63] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:38:16.429 [http-nio-8080-exec-63] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:38:16.429 [http-nio-8080-exec-63] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:38:16.429 [http-nio-8080-exec-63] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:38:16.429 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.431 [http-nio-8080-exec-63] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:38:16.431 [http-nio-8080-exec-63] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:38:16.431 [http-nio-8080-exec-63] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:38:16.431 [http-nio-8080-exec-63] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:38:16.431 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.432 [http-nio-8080-exec-63] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:38:16.432 [http-nio-8080-exec-63] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:38:16.432 [http-nio-8080-exec-63] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:38:16.432 [http-nio-8080-exec-63] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:38:16.432 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.432 [http-nio-8080-exec-63] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:38:16.432 [http-nio-8080-exec-63] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:38:16.432 [http-nio-8080-exec-63] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:38:16.432 [http-nio-8080-exec-63] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:38:16.432 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.432 [http-nio-8080-exec-63] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:38:16.432 [http-nio-8080-exec-63] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:38:16.432 [http-nio-8080-exec-63] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:38:16.432 [http-nio-8080-exec-63] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:38:16.432 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.432 [http-nio-8080-exec-63] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:38:16.433 [http-nio-8080-exec-63] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:38:16.433 [http-nio-8080-exec-63] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:38:16.433 [http-nio-8080-exec-63] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:38:16.433 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.433 [http-nio-8080-exec-63] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:38:16.433 [http-nio-8080-exec-63] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:38:16.433 [http-nio-8080-exec-63] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:38:16.434 [http-nio-8080-exec-63] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:38:16.434 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.434 [http-nio-8080-exec-63] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:38:16.434 [http-nio-8080-exec-63] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:38:16.434 [http-nio-8080-exec-63] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:38:16.434 [http-nio-8080-exec-63] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:38:16.436 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:38:16.437 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.439 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.445 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.446 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.446 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:38:16.449 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:38:16.449 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:38:16.449 [http-nio-8080-exec-63] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:38:16.451 [http-nio-8080-exec-63] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:38:16.451 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.452 [http-nio-8080-exec-63] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:38:16.452 [http-nio-8080-exec-63] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:38:16.452 [http-nio-8080-exec-63] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:38:16.452 [http-nio-8080-exec-63] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:38:16.452 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:38:16.452 [http-nio-8080-exec-63] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:38:16.452 [http-nio-8080-exec-63] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:38:16.453 [http-nio-8080-exec-63] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:38:16.453 [http-nio-8080-exec-63] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:38:16.454 [http-nio-8080-exec-63] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:38:16.454 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:38:16.454 [http-nio-8080-exec-63] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:38:16.454 [http-nio-8080-exec-63] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:38:16.458 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.458 [http-nio-8080-exec-63] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:38:16.459 [http-nio-8080-exec-63] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:38:16.459 [http-nio-8080-exec-63] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:38:16.459 [http-nio-8080-exec-63] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:38:16.459 [http-nio-8080-exec-63] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:38:16.459 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.460 [http-nio-8080-exec-63] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:38:16.460 [http-nio-8080-exec-63] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:38:16.460 [http-nio-8080-exec-63] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:38:16.460 [http-nio-8080-exec-63] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:38:16.467 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.467 [http-nio-8080-exec-63] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:38:16.467 [http-nio-8080-exec-63] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:38:16.467 [http-nio-8080-exec-63] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:38:16.467 [http-nio-8080-exec-63] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:38:16.467 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.467 [http-nio-8080-exec-63] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:38:16.467 [http-nio-8080-exec-63] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:38:16.467 [http-nio-8080-exec-63] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:38:16.468 [http-nio-8080-exec-63] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:38:16.468 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:38:16.468 [http-nio-8080-exec-63] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:38:16.470 [http-nio-8080-exec-63] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:38:16.470 [http-nio-8080-exec-63] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:38:16.471 [http-nio-8080-exec-63] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:38:16.471 [http-nio-8080-exec-63] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:38:16.471 [http-nio-8080-exec-63] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:38:16.471 [http-nio-8080-exec-63] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:38:16.471 [http-nio-8080-exec-63] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:38:16.471 [http-nio-8080-exec-63] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:38:16.471 [http-nio-8080-exec-63] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:38:16.472 [http-nio-8080-exec-63] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:38:16.472 [http-nio-8080-exec-63] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:38:16.472 [http-nio-8080-exec-63] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:38:16.472 [http-nio-8080-exec-63] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:38:16.472 [http-nio-8080-exec-63] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:38:16.472 [http-nio-8080-exec-63] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:38:16.472 [http-nio-8080-exec-63] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:38:16.472 [http-nio-8080-exec-63] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:38:16.477 [http-nio-8080-exec-63] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:38:16.477 [http-nio-8080-exec-63] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:38:16.477 [http-nio-8080-exec-63] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:38:16.478 [http-nio-8080-exec-63] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:38:16.478 [http-nio-8080-exec-63] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:38:16.479 [http-nio-8080-exec-63] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:38:16.479 [http-nio-8080-exec-63] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:38:16.479 [http-nio-8080-exec-63] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:38:16.479 [http-nio-8080-exec-63] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:38:16.482 [http-nio-8080-exec-63] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:38:16.482 [http-nio-8080-exec-63] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:38:16.525 [http-nio-8080-exec-63] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:38:16.526 [http-nio-8080-exec-63] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:38:16.527 [http-nio-8080-exec-63] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:38:16.527 [http-nio-8080-exec-63] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:38:16.527 [http-nio-8080-exec-63] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:38:16.527 [http-nio-8080-exec-63] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:38:16.527 [http-nio-8080-exec-63] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:38:16.527 [http-nio-8080-exec-63] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:38:16.527 [http-nio-8080-exec-63] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:38:16.527 [http-nio-8080-exec-63] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:38:16.527 [http-nio-8080-exec-63] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:38:16.527 [http-nio-8080-exec-63] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:38:16.527 [http-nio-8080-exec-63] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:38:16.527 [http-nio-8080-exec-63] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:38:16.589 [http-nio-8080-exec-63] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:38:16.604 [http-nio-8080-exec-63] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:38:16.604 [http-nio-8080-exec-63] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7eb4ba8b, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:38:16.623 [http-nio-8080-exec-63] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:38:16.623 [http-nio-8080-exec-63] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:38:16.624 [http-nio-8080-exec-63] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:38:16.624 [http-nio-8080-exec-63] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:38:16.626 [http-nio-8080-exec-63] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:38:16.627 [http-nio-8080-exec-63] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:38:16.627 [http-nio-8080-exec-63] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ab80fc9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4dece07a]
[DEBUG] 2020-02-16 20:38:16.666 [http-nio-8080-exec-63] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:38:16.667 [http-nio-8080-exec-63] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:38:16.676 [http-nio-8080-exec-63] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:38:16.676 [http-nio-8080-exec-63] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:38:16.846 [http-nio-8080-exec-63] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:38:16.846 [http-nio-8080-exec-63] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:38:16.848 [http-nio-8080-exec-63] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:38:16.848 [http-nio-8080-exec-63] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:38:16.903 [http-nio-8080-exec-63] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:38:16.904 [http-nio-8080-exec-63] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:38:16.904 [http-nio-8080-exec-63] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:38:16.904 [http-nio-8080-exec-63] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:38:16.904 [http-nio-8080-exec-63] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:38:16.912 [http-nio-8080-exec-63] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:38:16.912 [http-nio-8080-exec-63] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:38:16.913 [http-nio-8080-exec-63] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:38:16.913 [http-nio-8080-exec-63] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:38:16.913 [http-nio-8080-exec-63] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:38:16.913 [http-nio-8080-exec-63] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:38:16.913 [http-nio-8080-exec-63] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:38:16.933 [http-nio-8080-exec-63] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2432ec03]
[DEBUG] 2020-02-16 20:38:16.934 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:38:16.934 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:38:16.934 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:38:16.934 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:38:16.937 [http-nio-8080-exec-63] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6585a99c]
[DEBUG] 2020-02-16 20:38:16.938 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:38:16.938 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:38:16.938 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:38:16.938 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:38:16.938 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:38:16.938 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:38:16.938 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:38:16.938 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:38:16.938 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:38:16.938 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:38:16.938 [http-nio-8080-exec-63] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:38:16.938 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:38:16.938 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:38:16.938 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:38:16.940 [http-nio-8080-exec-63] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@138f832a]
[DEBUG] 2020-02-16 20:38:16.942 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:38:16.943 [http-nio-8080-exec-63] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:38:16.954 [http-nio-8080-exec-63] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:38:16.958 [http-nio-8080-exec-63] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:38:16.959 [http-nio-8080-exec-63] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:38:16.959 [http-nio-8080-exec-63] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2831ab3f]
[DEBUG] 2020-02-16 20:38:16.959 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:38:16.959 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:38:16.959 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:38:16.959 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:38:16.959 [http-nio-8080-exec-63] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cdaa000]
[DEBUG] 2020-02-16 20:38:16.959 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:38:16.959 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:38:16.959 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:38:16.959 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:38:16.959 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:38:16.959 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:38:16.960 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:38:16.960 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:38:16.960 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:38:16.960 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:38:16.960 [http-nio-8080-exec-63] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:38:16.960 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:38:16.960 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:38:16.960 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:38:16.960 [http-nio-8080-exec-63] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5483980a]
[DEBUG] 2020-02-16 20:38:16.960 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:38:16.960 [http-nio-8080-exec-63] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:38:16.960 [http-nio-8080-exec-63] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:38:16.961 [http-nio-8080-exec-63] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:38:16.961 [http-nio-8080-exec-63] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:38:16.972 [http-nio-8080-exec-63] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:38:16.972 [http-nio-8080-exec-63] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:38:16.972 [http-nio-8080-exec-63] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:38:16.972 [http-nio-8080-exec-63] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:38:16.972 [http-nio-8080-exec-63] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:38:16.972 [http-nio-8080-exec-63] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:38:16.972 [http-nio-8080-exec-63] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:38:16.972 [http-nio-8080-exec-63] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:38:16.972 [http-nio-8080-exec-63] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:38:16.974 [http-nio-8080-exec-63] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20f65bd9]
[DEBUG] 2020-02-16 20:38:16.974 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:38:16.974 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:38:16.974 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:38:16.974 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:38:16.974 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:38:16.974 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:38:16.974 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:38:16.974 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:38:16.974 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:38:16.974 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:38:16.976 [http-nio-8080-exec-63] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58d076ff]
[DEBUG] 2020-02-16 20:38:16.977 [http-nio-8080-exec-63] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cbf7202]
[DEBUG] 2020-02-16 20:38:16.978 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:38:16.978 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:38:16.978 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:38:16.978 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:38:16.978 [http-nio-8080-exec-63] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:38:16.979 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:38:16.979 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:38:16.979 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:38:16.979 [http-nio-8080-exec-63] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6764bce7]
[DEBUG] 2020-02-16 20:38:16.979 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:38:16.979 [http-nio-8080-exec-63] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:38:16.979 [http-nio-8080-exec-63] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32bf5ed3]
[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53ac3f0e]
[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75eecdd4]
[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:38:16.981 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:38:16.982 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:38:16.982 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:38:16.982 [http-nio-8080-exec-63] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:38:16.982 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:38:16.982 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:38:16.982 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:38:16.982 [http-nio-8080-exec-63] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@17cf7294]
[DEBUG] 2020-02-16 20:38:16.982 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:38:16.982 [http-nio-8080-exec-63] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:38:16.982 [http-nio-8080-exec-63] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:38:16.984 [http-nio-8080-exec-63] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:38:16.984 [http-nio-8080-exec-63] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:38:16.986 [http-nio-8080-exec-63] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:38:16.987 [http-nio-8080-exec-63] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:38:16.989 [http-nio-8080-exec-63] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:38:16.992 [http-nio-8080-exec-63] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61328f32]
[DEBUG] 2020-02-16 20:38:16.992 [http-nio-8080-exec-63] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27a6634d]
[DEBUG] 2020-02-16 20:38:16.992 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:38:16.992 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:38:16.992 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:38:16.992 [http-nio-8080-exec-63] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:38:16.993 [http-nio-8080-exec-63] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:38:16.993 [http-nio-8080-exec-63] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:38:16.994 [http-nio-8080-exec-63] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:38:16.994 [http-nio-8080-exec-63] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:38:16.994 [http-nio-8080-exec-63] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:38:17.025 [http-nio-8080-exec-63] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:38:17.026 [http-nio-8080-exec-63] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:38:17.026 [http-nio-8080-exec-63] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:38:17.033 [http-nio-8080-exec-63] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:38:17.033 [http-nio-8080-exec-63] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:38:17.033 [http-nio-8080-exec-63] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:38:17.033 [http-nio-8080-exec-63] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:38:17.035 [http-nio-8080-exec-63] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5318f3ef
[DEBUG] 2020-02-16 20:38:17.036 [http-nio-8080-exec-63] SessionFactoryRegistry - Registering SessionFactory: 307e9636-8560-4ca2-b6a0-b5486973ede8 (<unnamed>)
[DEBUG] 2020-02-16 20:38:17.036 [http-nio-8080-exec-63] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:38:17.105 [http-nio-8080-exec-63] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:38:17.121 [http-nio-8080-exec-63] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:38:17.134 [http-nio-8080-exec-63] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@230db206
[DEBUG] 2020-02-16 20:38:17.159 [http-nio-8080-exec-63] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:38:17.162 [http-nio-8080-exec-63] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:38:17.165 [http-nio-8080-exec-63] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:38:17.183 [http-nio-8080-exec-63] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:38:17.194 [http-nio-8080-exec-63] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:38:17.195 [http-nio-8080-exec-63] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:38:17.197 [http-nio-8080-exec-63] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:38:17.197 [http-nio-8080-exec-63] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:38:17.203 [http-nio-8080-exec-63] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:38:17.203 [http-nio-8080-exec-63] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:38:17.203 [http-nio-8080-exec-63] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:38:17.203 [http-nio-8080-exec-63] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:38:17.208 [http-nio-8080-exec-63] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:38:17.208 [http-nio-8080-exec-63] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:38:17.208 [http-nio-8080-exec-63] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:38:17.221 [http-nio-8080-exec-63] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:38:17.765 [http-nio-8080-exec-63] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:38:17.768 [http-nio-8080-exec-63] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:38:17.774 [http-nio-8080-exec-63] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:38:17.774 [http-nio-8080-exec-63] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:38:17.775 [http-nio-8080-exec-63] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:38:17.776 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.782 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:38:17.782 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.782 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:38:17.782 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.782 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@34191a07
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:38:17.783 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.784 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6686344b
[DEBUG] 2020-02-16 20:38:17.784 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.784 [http-nio-8080-exec-63] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:38:17.785 [http-nio-8080-exec-63] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:38:17.786 [http-nio-8080-exec-63] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:38:17.792 [http-nio-8080-exec-63] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:38:17.796 [http-nio-8080-exec-63] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:38:17.798 [http-nio-8080-exec-63] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:38:17.800 [http-nio-8080-exec-63] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:38:17.800 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:38:17.800 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.800 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:38:17.800 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.801 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:38:17.801 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.801 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:38:17.801 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.802 [http-nio-8080-exec-63] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:38:17.802 [http-nio-8080-exec-63] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:38:17.803 [http-nio-8080-exec-63] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:38:17.803 [http-nio-8080-exec-63] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:38:17.804 [http-nio-8080-exec-63] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:38:17.804 [http-nio-8080-exec-63] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:38:17.804 [http-nio-8080-exec-63] Loader - Done entity load
[DEBUG] 2020-02-16 20:38:17.804 [http-nio-8080-exec-63] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:38:17.804 [http-nio-8080-exec-63] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:38:17.804 [http-nio-8080-exec-63] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:38:17.804 [http-nio-8080-exec-63] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:38:17.804 [http-nio-8080-exec-63] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:38:17.804 [http-nio-8080-exec-63] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:38:17.804 [http-nio-8080-exec-63] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:38:17.804 [http-nio-8080-exec-63] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:38:17.805 [http-nio-8080-exec-63] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:38:17.805 [http-nio-8080-exec-63] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:38:17.806 [http-nio-8080-exec-63] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:38:17.806 [http-nio-8080-exec-63] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:38:17.806 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:38:17.806 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.806 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:38:17.806 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.806 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:38:17.806 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.806 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:38:17.806 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.806 [http-nio-8080-exec-63] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:38:17.806 [http-nio-8080-exec-63] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:38:17.808 [http-nio-8080-exec-63] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:38:17.808 [http-nio-8080-exec-63] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:38:17.808 [http-nio-8080-exec-63] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:38:17.808 [http-nio-8080-exec-63] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:38:17.809 [http-nio-8080-exec-63] Loader - Done entity load
[DEBUG] 2020-02-16 20:38:17.809 [http-nio-8080-exec-63] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:38:17.809 [http-nio-8080-exec-63] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:38:17.809 [http-nio-8080-exec-63] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:38:17.809 [http-nio-8080-exec-63] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:38:17.809 [http-nio-8080-exec-63] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:38:17.809 [http-nio-8080-exec-63] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:38:17.810 [http-nio-8080-exec-63] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:38:17.825 [http-nio-8080-exec-63] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:38:17.826 [http-nio-8080-exec-63] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:38:17.827 [http-nio-8080-exec-63] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:38:17.827 [http-nio-8080-exec-63] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:38:17.827 [http-nio-8080-exec-63] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:38:17.827 [http-nio-8080-exec-63] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:38:17.827 [http-nio-8080-exec-63] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:38:17.828 [http-nio-8080-exec-63] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:38:17.828 [http-nio-8080-exec-63] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:38:17.828 [http-nio-8080-exec-63] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:38:17.828 [http-nio-8080-exec-63] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:38:17.828 [http-nio-8080-exec-63] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:38:17.828 [http-nio-8080-exec-63] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:38:17.828 [http-nio-8080-exec-63] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:38:17.828 [http-nio-8080-exec-63] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:38:17.828 [http-nio-8080-exec-63] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:38:17.828 [http-nio-8080-exec-63] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:38:17.842 [http-nio-8080-exec-63] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:38:17.843 [http-nio-8080-exec-63] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:38:17.843 [http-nio-8080-exec-63] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:38:17.843 [http-nio-8080-exec-63] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:38:17.843 [http-nio-8080-exec-63] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:38:17.843 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:38:17.843 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.843 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:38:17.843 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.843 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:38:17.843 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.843 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:38:17.843 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.843 [http-nio-8080-exec-63] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:38:17.843 [http-nio-8080-exec-63] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:38:17.844 [http-nio-8080-exec-63] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@e52d152
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:38:17.845 [http-nio-8080-exec-63] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:38:17.846 [http-nio-8080-exec-63] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:38:17.846 [http-nio-8080-exec-63] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:38:17.846 [http-nio-8080-exec-63] Loader - Done entity load
[DEBUG] 2020-02-16 20:38:17.846 [http-nio-8080-exec-63] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:38:17.846 [http-nio-8080-exec-63] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:38:17.846 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:38:17.846 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.846 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:38:17.846 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.846 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:38:17.846 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.846 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:38:17.846 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.846 [http-nio-8080-exec-63] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:38:17.846 [http-nio-8080-exec-63] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:38:17.847 [http-nio-8080-exec-63] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:38:17.847 [http-nio-8080-exec-63] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:38:17.847 [http-nio-8080-exec-63] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@4a267179
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] Loader - Done entity load
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:38:17.848 [http-nio-8080-exec-63] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:43:15.304 [http-nio-8080-exec-67] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:43:15.308 [http-nio-8080-exec-67] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:43:15.313 [http-nio-8080-exec-67] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:43:15.379 [http-nio-8080-exec-67] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:43:15.380 [http-nio-8080-exec-67] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:43:15.478 [http-nio-8080-exec-67] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:43:15.479 [http-nio-8080-exec-67] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:43:15.480 [http-nio-8080-exec-67] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:43:15.641 [http-nio-8080-exec-67] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:43:15.674 [http-nio-8080-exec-67] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:43:15.675 [http-nio-8080-exec-67] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:43:15.701 [http-nio-8080-exec-67] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:43:15.744 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@e7bbe81
[DEBUG] 2020-02-16 20:43:15.744 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@e7bbe81
[DEBUG] 2020-02-16 20:43:15.744 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@e7bbe81
[DEBUG] 2020-02-16 20:43:15.744 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6f40820d
[DEBUG] 2020-02-16 20:43:15.744 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3074089
[DEBUG] 2020-02-16 20:43:15.745 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@77146304
[DEBUG] 2020-02-16 20:43:15.746 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3bc8b20c
[DEBUG] 2020-02-16 20:43:15.746 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3bc8b20c
[DEBUG] 2020-02-16 20:43:15.746 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3bc8b20c
[DEBUG] 2020-02-16 20:43:15.746 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@c1e3c45
[DEBUG] 2020-02-16 20:43:15.747 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@c1e3c45
[DEBUG] 2020-02-16 20:43:15.747 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@c1e3c45
[DEBUG] 2020-02-16 20:43:15.747 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@30a59e2b
[DEBUG] 2020-02-16 20:43:15.747 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@30a59e2b
[DEBUG] 2020-02-16 20:43:15.747 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@30a59e2b
[DEBUG] 2020-02-16 20:43:15.749 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@29ae3d12
[DEBUG] 2020-02-16 20:43:15.749 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@29ae3d12
[DEBUG] 2020-02-16 20:43:15.749 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29ae3d12
[DEBUG] 2020-02-16 20:43:15.749 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4f240250
[DEBUG] 2020-02-16 20:43:15.749 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4f240250
[DEBUG] 2020-02-16 20:43:15.749 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f240250
[DEBUG] 2020-02-16 20:43:15.750 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1ed4478b
[DEBUG] 2020-02-16 20:43:15.750 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1ed4478b
[DEBUG] 2020-02-16 20:43:15.750 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1ed4478b
[DEBUG] 2020-02-16 20:43:15.750 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@dd9e7a8
[DEBUG] 2020-02-16 20:43:15.750 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@dd9e7a8
[DEBUG] 2020-02-16 20:43:15.750 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@dd9e7a8
[DEBUG] 2020-02-16 20:43:15.751 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7e2e39be
[DEBUG] 2020-02-16 20:43:15.751 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7e2e39be
[DEBUG] 2020-02-16 20:43:15.752 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35b45aa4
[DEBUG] 2020-02-16 20:43:15.752 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35b45aa4
[DEBUG] 2020-02-16 20:43:15.752 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4c6dd491
[DEBUG] 2020-02-16 20:43:15.752 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4c6dd491
[DEBUG] 2020-02-16 20:43:15.753 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6f8febbf
[DEBUG] 2020-02-16 20:43:15.753 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3443d204
[DEBUG] 2020-02-16 20:43:15.753 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@61d2287a
[DEBUG] 2020-02-16 20:43:15.753 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@61d2287a
[DEBUG] 2020-02-16 20:43:15.754 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2f31d0f2
[DEBUG] 2020-02-16 20:43:15.754 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2f31d0f2
[DEBUG] 2020-02-16 20:43:15.755 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4204cf1b
[DEBUG] 2020-02-16 20:43:15.755 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4204cf1b
[DEBUG] 2020-02-16 20:43:15.756 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ba18332
[DEBUG] 2020-02-16 20:43:15.756 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4ba18332
[DEBUG] 2020-02-16 20:43:15.756 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@564a10a5
[DEBUG] 2020-02-16 20:43:15.756 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@564a10a5
[DEBUG] 2020-02-16 20:43:15.757 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@74b74208
[DEBUG] 2020-02-16 20:43:15.757 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@74b74208
[DEBUG] 2020-02-16 20:43:15.757 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@31979b70
[DEBUG] 2020-02-16 20:43:15.757 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@31979b70
[DEBUG] 2020-02-16 20:43:15.758 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@370e1334
[DEBUG] 2020-02-16 20:43:15.758 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@370e1334
[DEBUG] 2020-02-16 20:43:15.759 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7d4bbe66
[DEBUG] 2020-02-16 20:43:15.760 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7d4bbe66
[DEBUG] 2020-02-16 20:43:15.761 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3d5ff134
[DEBUG] 2020-02-16 20:43:15.761 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3d5ff134
[DEBUG] 2020-02-16 20:43:15.762 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2e5007ea
[DEBUG] 2020-02-16 20:43:15.762 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2e5007ea
[DEBUG] 2020-02-16 20:43:15.763 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2ad62f95
[DEBUG] 2020-02-16 20:43:15.763 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2ad62f95
[DEBUG] 2020-02-16 20:43:15.763 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2ad62f95
[DEBUG] 2020-02-16 20:43:15.764 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b5d2ed7
[DEBUG] 2020-02-16 20:43:15.764 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6140864e
[DEBUG] 2020-02-16 20:43:15.764 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6140864e
[DEBUG] 2020-02-16 20:43:15.764 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6140864e
[DEBUG] 2020-02-16 20:43:15.766 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@a0a3547
[DEBUG] 2020-02-16 20:43:15.768 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6bd22025
[DEBUG] 2020-02-16 20:43:15.768 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bd22025
[DEBUG] 2020-02-16 20:43:15.769 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@afbd059
[DEBUG] 2020-02-16 20:43:15.770 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@afbd059
[DEBUG] 2020-02-16 20:43:15.771 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3cc9bccf
[DEBUG] 2020-02-16 20:43:15.771 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3cc9bccf
[DEBUG] 2020-02-16 20:43:15.771 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6e36d3ec
[DEBUG] 2020-02-16 20:43:15.771 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e36d3ec
[DEBUG] 2020-02-16 20:43:15.772 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@38c22cb7
[DEBUG] 2020-02-16 20:43:15.772 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@38c22cb7
[DEBUG] 2020-02-16 20:43:15.772 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1caded0b
[DEBUG] 2020-02-16 20:43:15.773 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@655cb8b7
[DEBUG] 2020-02-16 20:43:15.773 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@655cb8b7
[DEBUG] 2020-02-16 20:43:15.773 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@655cb8b7
[DEBUG] 2020-02-16 20:43:15.774 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@753dc5e7
[DEBUG] 2020-02-16 20:43:15.774 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@753dc5e7
[DEBUG] 2020-02-16 20:43:15.774 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@753dc5e7
[DEBUG] 2020-02-16 20:43:15.774 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@360bff9e
[DEBUG] 2020-02-16 20:43:15.775 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6fb52275
[DEBUG] 2020-02-16 20:43:15.775 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@37d733d2
[DEBUG] 2020-02-16 20:43:15.775 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@37d733d2
[DEBUG] 2020-02-16 20:43:15.775 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@37d733d2
[DEBUG] 2020-02-16 20:43:15.776 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@45aa307c
[DEBUG] 2020-02-16 20:43:15.776 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@45aa307c
[DEBUG] 2020-02-16 20:43:15.776 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@45aa307c
[DEBUG] 2020-02-16 20:43:15.776 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6318bac2
[DEBUG] 2020-02-16 20:43:15.776 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5b35d52a
[DEBUG] 2020-02-16 20:43:15.777 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@72b6deb6
[DEBUG] 2020-02-16 20:43:15.777 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@72b6deb6
[DEBUG] 2020-02-16 20:43:15.777 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2cf4c21f
[DEBUG] 2020-02-16 20:43:15.778 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3dc0d7d1
[DEBUG] 2020-02-16 20:43:15.778 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3dc0d7d1
[DEBUG] 2020-02-16 20:43:15.779 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@53b3672a
[DEBUG] 2020-02-16 20:43:15.779 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@53b3672a
[DEBUG] 2020-02-16 20:43:15.779 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@148addf0
[DEBUG] 2020-02-16 20:43:15.779 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f1b5167
[DEBUG] 2020-02-16 20:43:15.780 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6f1ea141
[DEBUG] 2020-02-16 20:43:15.782 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4902ca2d
[DEBUG] 2020-02-16 20:43:15.782 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4902ca2d
[DEBUG] 2020-02-16 20:43:15.782 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43da1d62
[DEBUG] 2020-02-16 20:43:15.782 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@343808c1
[DEBUG] 2020-02-16 20:43:15.782 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@38902c33
[DEBUG] 2020-02-16 20:43:15.782 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@13165181
[DEBUG] 2020-02-16 20:43:15.782 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@b47f8c
[DEBUG] 2020-02-16 20:43:15.782 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74be015b
[DEBUG] 2020-02-16 20:43:15.782 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4d764a4b
[DEBUG] 2020-02-16 20:43:15.782 [http-nio-8080-exec-67] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6ccd803d
[DEBUG] 2020-02-16 20:43:15.809 [http-nio-8080-exec-67] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:43:15.809 [http-nio-8080-exec-67] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:43:15.810 [http-nio-8080-exec-67] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:43:15.810 [http-nio-8080-exec-67] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:43:15.811 [http-nio-8080-exec-67] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:43:15.812 [http-nio-8080-exec-67] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:43:15.812 [http-nio-8080-exec-67] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:43:15.813 [http-nio-8080-exec-67] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:43:15.813 [http-nio-8080-exec-67] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:43:15.814 [http-nio-8080-exec-67] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:43:15.816 [http-nio-8080-exec-67] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:43:15.816 [http-nio-8080-exec-67] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:43:15.816 [http-nio-8080-exec-67] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:43:15.817 [http-nio-8080-exec-67] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:43:15.823 [http-nio-8080-exec-67] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:43:15.823 [http-nio-8080-exec-67] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:43:15.823 [http-nio-8080-exec-67] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:43:15.929 [http-nio-8080-exec-67] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:43:16.116 [http-nio-8080-exec-67] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:43:16.117 [http-nio-8080-exec-67] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:43:16.117 [http-nio-8080-exec-67] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:43:16.149 [http-nio-8080-exec-67] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:43:16.175 [http-nio-8080-exec-67] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:43:16.194 [http-nio-8080-exec-67] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:43:16.224 [http-nio-8080-exec-67] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:43:16.229 [http-nio-8080-exec-67] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@607163bc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4a63926a]
[DEBUG] 2020-02-16 20:43:16.269 [http-nio-8080-exec-67] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:43:16.289 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:43:16.295 [http-nio-8080-exec-67] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:43:16.298 [http-nio-8080-exec-67] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:43:16.320 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.327 [http-nio-8080-exec-67] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:43:16.329 [http-nio-8080-exec-67] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:43:16.331 [http-nio-8080-exec-67] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:43:16.332 [http-nio-8080-exec-67] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:43:16.335 [http-nio-8080-exec-67] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:43:16.336 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.336 [http-nio-8080-exec-67] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:43:16.336 [http-nio-8080-exec-67] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:43:16.336 [http-nio-8080-exec-67] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:43:16.336 [http-nio-8080-exec-67] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:43:16.337 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.337 [http-nio-8080-exec-67] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:43:16.337 [http-nio-8080-exec-67] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:43:16.337 [http-nio-8080-exec-67] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:43:16.337 [http-nio-8080-exec-67] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:43:16.337 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.338 [http-nio-8080-exec-67] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:43:16.339 [http-nio-8080-exec-67] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:43:16.339 [http-nio-8080-exec-67] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:43:16.339 [http-nio-8080-exec-67] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:43:16.339 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.339 [http-nio-8080-exec-67] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:43:16.339 [http-nio-8080-exec-67] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:43:16.339 [http-nio-8080-exec-67] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:43:16.339 [http-nio-8080-exec-67] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:43:16.339 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.339 [http-nio-8080-exec-67] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:43:16.340 [http-nio-8080-exec-67] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:43:16.340 [http-nio-8080-exec-67] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:43:16.340 [http-nio-8080-exec-67] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:43:16.340 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.340 [http-nio-8080-exec-67] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:43:16.340 [http-nio-8080-exec-67] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:43:16.340 [http-nio-8080-exec-67] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:43:16.340 [http-nio-8080-exec-67] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:43:16.340 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.340 [http-nio-8080-exec-67] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:43:16.340 [http-nio-8080-exec-67] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:43:16.340 [http-nio-8080-exec-67] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:43:16.340 [http-nio-8080-exec-67] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:43:16.340 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.340 [http-nio-8080-exec-67] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:43:16.341 [http-nio-8080-exec-67] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:43:16.341 [http-nio-8080-exec-67] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:43:16.341 [http-nio-8080-exec-67] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:43:16.341 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.341 [http-nio-8080-exec-67] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:43:16.341 [http-nio-8080-exec-67] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:43:16.341 [http-nio-8080-exec-67] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:43:16.341 [http-nio-8080-exec-67] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:43:16.343 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:43:16.344 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.345 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.355 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.355 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.356 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:43:16.356 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:43:16.356 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:43:16.357 [http-nio-8080-exec-67] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:43:16.359 [http-nio-8080-exec-67] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:43:16.359 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.360 [http-nio-8080-exec-67] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:43:16.360 [http-nio-8080-exec-67] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:43:16.360 [http-nio-8080-exec-67] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:43:16.360 [http-nio-8080-exec-67] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:43:16.360 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:43:16.360 [http-nio-8080-exec-67] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:43:16.360 [http-nio-8080-exec-67] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:43:16.361 [http-nio-8080-exec-67] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:43:16.361 [http-nio-8080-exec-67] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:43:16.361 [http-nio-8080-exec-67] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:43:16.362 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:43:16.362 [http-nio-8080-exec-67] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:43:16.362 [http-nio-8080-exec-67] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:43:16.369 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.369 [http-nio-8080-exec-67] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:43:16.369 [http-nio-8080-exec-67] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:43:16.369 [http-nio-8080-exec-67] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:43:16.369 [http-nio-8080-exec-67] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:43:16.369 [http-nio-8080-exec-67] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:43:16.370 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.370 [http-nio-8080-exec-67] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:43:16.370 [http-nio-8080-exec-67] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:43:16.370 [http-nio-8080-exec-67] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:43:16.370 [http-nio-8080-exec-67] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:43:16.376 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.377 [http-nio-8080-exec-67] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:43:16.377 [http-nio-8080-exec-67] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:43:16.377 [http-nio-8080-exec-67] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:43:16.377 [http-nio-8080-exec-67] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:43:16.377 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.377 [http-nio-8080-exec-67] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:43:16.378 [http-nio-8080-exec-67] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:43:16.378 [http-nio-8080-exec-67] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:43:16.378 [http-nio-8080-exec-67] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:43:16.379 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:43:16.379 [http-nio-8080-exec-67] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:43:16.380 [http-nio-8080-exec-67] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:43:16.381 [http-nio-8080-exec-67] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:43:16.383 [http-nio-8080-exec-67] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:43:16.385 [http-nio-8080-exec-67] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:43:16.387 [http-nio-8080-exec-67] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:43:16.387 [http-nio-8080-exec-67] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:43:16.387 [http-nio-8080-exec-67] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:43:16.387 [http-nio-8080-exec-67] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:43:16.387 [http-nio-8080-exec-67] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:43:16.387 [http-nio-8080-exec-67] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:43:16.387 [http-nio-8080-exec-67] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:43:16.387 [http-nio-8080-exec-67] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:43:16.387 [http-nio-8080-exec-67] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:43:16.387 [http-nio-8080-exec-67] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:43:16.387 [http-nio-8080-exec-67] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:43:16.387 [http-nio-8080-exec-67] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:43:16.387 [http-nio-8080-exec-67] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:43:16.398 [http-nio-8080-exec-67] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:43:16.398 [http-nio-8080-exec-67] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:43:16.398 [http-nio-8080-exec-67] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:43:16.399 [http-nio-8080-exec-67] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:43:16.400 [http-nio-8080-exec-67] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:43:16.401 [http-nio-8080-exec-67] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:43:16.401 [http-nio-8080-exec-67] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:43:16.401 [http-nio-8080-exec-67] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:43:16.401 [http-nio-8080-exec-67] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:43:16.405 [http-nio-8080-exec-67] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:43:16.405 [http-nio-8080-exec-67] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:43:16.461 [http-nio-8080-exec-67] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:43:16.462 [http-nio-8080-exec-67] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:43:16.462 [http-nio-8080-exec-67] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:43:16.462 [http-nio-8080-exec-67] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:43:16.462 [http-nio-8080-exec-67] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:43:16.462 [http-nio-8080-exec-67] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:43:16.462 [http-nio-8080-exec-67] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:43:16.462 [http-nio-8080-exec-67] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:43:16.462 [http-nio-8080-exec-67] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:43:16.463 [http-nio-8080-exec-67] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:43:16.540 [http-nio-8080-exec-67] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:43:16.559 [http-nio-8080-exec-67] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:43:16.559 [http-nio-8080-exec-67] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@18583d20, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:43:16.572 [http-nio-8080-exec-67] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:43:16.572 [http-nio-8080-exec-67] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:43:16.572 [http-nio-8080-exec-67] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:43:16.572 [http-nio-8080-exec-67] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:43:16.578 [http-nio-8080-exec-67] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:43:16.579 [http-nio-8080-exec-67] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:43:16.579 [http-nio-8080-exec-67] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@607163bc] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@227fc83a]
[DEBUG] 2020-02-16 20:43:16.613 [http-nio-8080-exec-67] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:43:16.613 [http-nio-8080-exec-67] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:43:16.619 [http-nio-8080-exec-67] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:43:16.619 [http-nio-8080-exec-67] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:43:16.786 [http-nio-8080-exec-67] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:43:16.787 [http-nio-8080-exec-67] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:43:16.789 [http-nio-8080-exec-67] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:43:16.789 [http-nio-8080-exec-67] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:43:16.845 [http-nio-8080-exec-67] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:43:16.845 [http-nio-8080-exec-67] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:43:16.845 [http-nio-8080-exec-67] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:43:16.845 [http-nio-8080-exec-67] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:43:16.845 [http-nio-8080-exec-67] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:43:16.849 [http-nio-8080-exec-67] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:43:16.849 [http-nio-8080-exec-67] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:43:16.849 [http-nio-8080-exec-67] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:43:16.849 [http-nio-8080-exec-67] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:43:16.849 [http-nio-8080-exec-67] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:43:16.849 [http-nio-8080-exec-67] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:43:16.849 [http-nio-8080-exec-67] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:43:16.866 [http-nio-8080-exec-67] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60d19b09]
[DEBUG] 2020-02-16 20:43:16.866 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:43:16.866 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:43:16.866 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:43:16.866 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:43:16.869 [http-nio-8080-exec-67] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52e60f6c]
[DEBUG] 2020-02-16 20:43:16.870 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:43:16.870 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:43:16.870 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:43:16.870 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:43:16.870 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:43:16.870 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:43:16.870 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:43:16.870 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:43:16.870 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:43:16.870 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:43:16.870 [http-nio-8080-exec-67] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:43:16.870 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:43:16.870 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:43:16.870 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:43:16.871 [http-nio-8080-exec-67] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4494c37]
[DEBUG] 2020-02-16 20:43:16.872 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:43:16.872 [http-nio-8080-exec-67] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:43:16.882 [http-nio-8080-exec-67] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:43:16.885 [http-nio-8080-exec-67] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:43:16.886 [http-nio-8080-exec-67] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:43:16.886 [http-nio-8080-exec-67] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12bde702]
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53fbd51c]
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5c5bd4b1]
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:43:16.887 [http-nio-8080-exec-67] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:43:16.888 [http-nio-8080-exec-67] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:43:16.888 [http-nio-8080-exec-67] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:43:16.888 [http-nio-8080-exec-67] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:43:16.900 [http-nio-8080-exec-67] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55248e5a]
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:43:16.901 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:43:16.902 [http-nio-8080-exec-67] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10104550]
[DEBUG] 2020-02-16 20:43:16.902 [http-nio-8080-exec-67] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18610763]
[DEBUG] 2020-02-16 20:43:16.903 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:43:16.903 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:43:16.903 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:43:16.903 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:43:16.903 [http-nio-8080-exec-67] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:43:16.904 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:43:16.904 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:43:16.904 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:43:16.904 [http-nio-8080-exec-67] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@26124810]
[DEBUG] 2020-02-16 20:43:16.904 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:43:16.904 [http-nio-8080-exec-67] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:43:16.904 [http-nio-8080-exec-67] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a57d07]
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ca5416e]
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c8fa569]
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:43:16.905 [http-nio-8080-exec-67] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:43:16.906 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:43:16.906 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:43:16.906 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:43:16.906 [http-nio-8080-exec-67] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@322a1f76]
[DEBUG] 2020-02-16 20:43:16.906 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:43:16.906 [http-nio-8080-exec-67] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:43:16.906 [http-nio-8080-exec-67] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:43:16.906 [http-nio-8080-exec-67] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:43:16.906 [http-nio-8080-exec-67] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:43:16.907 [http-nio-8080-exec-67] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:43:16.907 [http-nio-8080-exec-67] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:43:16.911 [http-nio-8080-exec-67] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:43:16.916 [http-nio-8080-exec-67] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f059643]
[DEBUG] 2020-02-16 20:43:16.917 [http-nio-8080-exec-67] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cbc4f65]
[DEBUG] 2020-02-16 20:43:16.917 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:43:16.917 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:43:16.917 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:43:16.917 [http-nio-8080-exec-67] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:43:16.917 [http-nio-8080-exec-67] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:43:16.917 [http-nio-8080-exec-67] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:43:16.919 [http-nio-8080-exec-67] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:43:16.919 [http-nio-8080-exec-67] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:43:16.920 [http-nio-8080-exec-67] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:43:16.959 [http-nio-8080-exec-67] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:43:16.959 [http-nio-8080-exec-67] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:43:16.960 [http-nio-8080-exec-67] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:43:16.969 [http-nio-8080-exec-67] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:43:16.969 [http-nio-8080-exec-67] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:43:16.971 [http-nio-8080-exec-67] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:43:16.971 [http-nio-8080-exec-67] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:43:16.972 [http-nio-8080-exec-67] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2e5e86f5
[DEBUG] 2020-02-16 20:43:16.973 [http-nio-8080-exec-67] SessionFactoryRegistry - Registering SessionFactory: 97e39905-025b-4f6c-a8fb-ee9101bb0292 (<unnamed>)
[DEBUG] 2020-02-16 20:43:16.973 [http-nio-8080-exec-67] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:43:17.089 [http-nio-8080-exec-67] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:43:17.110 [http-nio-8080-exec-67] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:43:17.125 [http-nio-8080-exec-67] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@60f2aeaf
[DEBUG] 2020-02-16 20:43:17.148 [http-nio-8080-exec-67] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:43:17.156 [http-nio-8080-exec-67] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:43:17.161 [http-nio-8080-exec-67] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:43:17.178 [http-nio-8080-exec-67] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:43:17.190 [http-nio-8080-exec-67] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:43:17.190 [http-nio-8080-exec-67] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:43:17.191 [http-nio-8080-exec-67] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:43:17.191 [http-nio-8080-exec-67] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:43:17.197 [http-nio-8080-exec-67] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:43:17.197 [http-nio-8080-exec-67] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:43:17.198 [http-nio-8080-exec-67] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:43:17.198 [http-nio-8080-exec-67] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:43:17.205 [http-nio-8080-exec-67] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:43:17.205 [http-nio-8080-exec-67] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:43:17.205 [http-nio-8080-exec-67] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:43:17.215 [http-nio-8080-exec-67] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:43:17.269 [http-nio-8080-exec-67] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:43:17.271 [http-nio-8080-exec-67] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:43:17.280 [http-nio-8080-exec-67] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:43:17.280 [http-nio-8080-exec-67] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:43:17.282 [http-nio-8080-exec-67] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.283 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:43:17.284 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.284 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:43:17.284 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.292 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:43:17.292 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.292 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:43:17.292 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.292 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@1e165b3e
[DEBUG] 2020-02-16 20:43:17.292 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@2d6c184d
[DEBUG] 2020-02-16 20:43:17.293 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.294 [http-nio-8080-exec-67] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:43:17.296 [http-nio-8080-exec-67] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:43:17.296 [http-nio-8080-exec-67] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:43:17.302 [http-nio-8080-exec-67] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:43:17.305 [http-nio-8080-exec-67] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:43:17.307 [http-nio-8080-exec-67] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:43:17.311 [http-nio-8080-exec-67] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:43:17.312 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:43:17.312 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.313 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:43:17.313 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.313 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:43:17.313 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.313 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:43:17.313 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.314 [http-nio-8080-exec-67] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:43:17.314 [http-nio-8080-exec-67] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:43:17.316 [http-nio-8080-exec-67] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:43:17.316 [http-nio-8080-exec-67] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:43:17.316 [http-nio-8080-exec-67] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:43:17.317 [http-nio-8080-exec-67] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:43:17.317 [http-nio-8080-exec-67] Loader - Done entity load
[DEBUG] 2020-02-16 20:43:17.317 [http-nio-8080-exec-67] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:43:17.317 [http-nio-8080-exec-67] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:43:17.317 [http-nio-8080-exec-67] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:43:17.317 [http-nio-8080-exec-67] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:43:17.317 [http-nio-8080-exec-67] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:43:17.317 [http-nio-8080-exec-67] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:43:17.317 [http-nio-8080-exec-67] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:43:17.317 [http-nio-8080-exec-67] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:43:17.319 [http-nio-8080-exec-67] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:43:17.319 [http-nio-8080-exec-67] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:43:17.319 [http-nio-8080-exec-67] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:43:17.320 [http-nio-8080-exec-67] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:43:17.320 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:43:17.320 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.320 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:43:17.320 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.320 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:43:17.320 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.320 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:43:17.320 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.320 [http-nio-8080-exec-67] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:43:17.320 [http-nio-8080-exec-67] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:43:17.322 [http-nio-8080-exec-67] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:43:17.322 [http-nio-8080-exec-67] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:43:17.322 [http-nio-8080-exec-67] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:43:17.322 [http-nio-8080-exec-67] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:43:17.322 [http-nio-8080-exec-67] Loader - Done entity load
[DEBUG] 2020-02-16 20:43:17.322 [http-nio-8080-exec-67] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:43:17.322 [http-nio-8080-exec-67] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:43:17.322 [http-nio-8080-exec-67] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:43:17.322 [http-nio-8080-exec-67] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:43:17.322 [http-nio-8080-exec-67] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:43:17.322 [http-nio-8080-exec-67] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:43:17.323 [http-nio-8080-exec-67] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:43:17.331 [http-nio-8080-exec-67] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:43:17.332 [http-nio-8080-exec-67] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:43:17.334 [http-nio-8080-exec-67] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:43:17.334 [http-nio-8080-exec-67] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:43:17.334 [http-nio-8080-exec-67] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:43:17.335 [http-nio-8080-exec-67] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:43:17.335 [http-nio-8080-exec-67] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:43:17.335 [http-nio-8080-exec-67] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:43:17.335 [http-nio-8080-exec-67] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:43:17.335 [http-nio-8080-exec-67] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:43:17.335 [http-nio-8080-exec-67] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:43:17.335 [http-nio-8080-exec-67] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:43:17.336 [http-nio-8080-exec-67] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:43:17.336 [http-nio-8080-exec-67] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:43:17.336 [http-nio-8080-exec-67] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:43:17.336 [http-nio-8080-exec-67] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:43:17.336 [http-nio-8080-exec-67] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:43:17.338 [http-nio-8080-exec-67] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:43:17.345 [http-nio-8080-exec-67] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:43:17.346 [http-nio-8080-exec-67] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:43:17.346 [http-nio-8080-exec-67] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:43:17.346 [http-nio-8080-exec-67] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:43:17.346 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:43:17.346 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.346 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:43:17.347 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.347 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:43:17.347 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.347 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:43:17.347 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.347 [http-nio-8080-exec-67] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:43:17.347 [http-nio-8080-exec-67] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:43:17.350 [http-nio-8080-exec-67] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:43:17.350 [http-nio-8080-exec-67] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@245ae615
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:43:17.351 [http-nio-8080-exec-67] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:43:17.352 [http-nio-8080-exec-67] Loader - Done entity load
[DEBUG] 2020-02-16 20:43:17.352 [http-nio-8080-exec-67] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:43:17.352 [http-nio-8080-exec-67] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:43:17.352 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:43:17.352 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.352 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:43:17.352 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.352 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:43:17.352 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.352 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:43:17.352 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.352 [http-nio-8080-exec-67] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:43:17.352 [http-nio-8080-exec-67] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:43:17.353 [http-nio-8080-exec-67] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:43:17.353 [http-nio-8080-exec-67] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:43:17.353 [http-nio-8080-exec-67] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@5deb6879
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] Loader - Done entity load
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:43:17.354 [http-nio-8080-exec-67] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:47:39.813 [http-nio-8080-exec-83] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:47:39.818 [http-nio-8080-exec-83] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:47:39.820 [http-nio-8080-exec-83] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:47:39.896 [http-nio-8080-exec-83] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:47:39.902 [http-nio-8080-exec-83] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:47:40.058 [http-nio-8080-exec-83] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:47:40.058 [http-nio-8080-exec-83] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:47:40.060 [http-nio-8080-exec-83] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:47:40.238 [http-nio-8080-exec-83] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:47:40.256 [http-nio-8080-exec-83] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:47:40.257 [http-nio-8080-exec-83] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:47:40.278 [http-nio-8080-exec-83] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:47:40.301 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@49ba798b
[DEBUG] 2020-02-16 20:47:40.302 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@49ba798b
[DEBUG] 2020-02-16 20:47:40.302 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@49ba798b
[DEBUG] 2020-02-16 20:47:40.302 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5e0eb91c
[DEBUG] 2020-02-16 20:47:40.302 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2c4543ff
[DEBUG] 2020-02-16 20:47:40.302 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@309a5d34
[DEBUG] 2020-02-16 20:47:40.303 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@26ce3254
[DEBUG] 2020-02-16 20:47:40.303 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@26ce3254
[DEBUG] 2020-02-16 20:47:40.303 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@26ce3254
[DEBUG] 2020-02-16 20:47:40.304 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@73c799f
[DEBUG] 2020-02-16 20:47:40.304 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@73c799f
[DEBUG] 2020-02-16 20:47:40.304 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@73c799f
[DEBUG] 2020-02-16 20:47:40.305 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@75fd478e
[DEBUG] 2020-02-16 20:47:40.305 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@75fd478e
[DEBUG] 2020-02-16 20:47:40.305 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@75fd478e
[DEBUG] 2020-02-16 20:47:40.305 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@754b3bc9
[DEBUG] 2020-02-16 20:47:40.305 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@754b3bc9
[DEBUG] 2020-02-16 20:47:40.305 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@754b3bc9
[DEBUG] 2020-02-16 20:47:40.306 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2d709426
[DEBUG] 2020-02-16 20:47:40.306 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2d709426
[DEBUG] 2020-02-16 20:47:40.306 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2d709426
[DEBUG] 2020-02-16 20:47:40.307 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2beb9a2c
[DEBUG] 2020-02-16 20:47:40.307 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2beb9a2c
[DEBUG] 2020-02-16 20:47:40.307 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2beb9a2c
[DEBUG] 2020-02-16 20:47:40.308 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@51630fc4
[DEBUG] 2020-02-16 20:47:40.308 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@51630fc4
[DEBUG] 2020-02-16 20:47:40.308 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51630fc4
[DEBUG] 2020-02-16 20:47:40.310 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7079e53d
[DEBUG] 2020-02-16 20:47:40.310 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7079e53d
[DEBUG] 2020-02-16 20:47:40.311 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@313220fe
[DEBUG] 2020-02-16 20:47:40.311 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@313220fe
[DEBUG] 2020-02-16 20:47:40.312 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@43114496
[DEBUG] 2020-02-16 20:47:40.312 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@43114496
[DEBUG] 2020-02-16 20:47:40.312 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1576bf9d
[DEBUG] 2020-02-16 20:47:40.313 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4f59ece6
[DEBUG] 2020-02-16 20:47:40.313 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@f2df33a
[DEBUG] 2020-02-16 20:47:40.313 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@f2df33a
[DEBUG] 2020-02-16 20:47:40.314 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@513cbe2b
[DEBUG] 2020-02-16 20:47:40.314 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@513cbe2b
[DEBUG] 2020-02-16 20:47:40.315 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6fbf363b
[DEBUG] 2020-02-16 20:47:40.315 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6fbf363b
[DEBUG] 2020-02-16 20:47:40.316 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f5bf2ad
[DEBUG] 2020-02-16 20:47:40.316 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f5bf2ad
[DEBUG] 2020-02-16 20:47:40.316 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b2ca7e4
[DEBUG] 2020-02-16 20:47:40.316 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b2ca7e4
[DEBUG] 2020-02-16 20:47:40.317 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6041e2b1
[DEBUG] 2020-02-16 20:47:40.317 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6041e2b1
[DEBUG] 2020-02-16 20:47:40.317 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@59ff6c29
[DEBUG] 2020-02-16 20:47:40.317 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@59ff6c29
[DEBUG] 2020-02-16 20:47:40.318 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@31e967e3
[DEBUG] 2020-02-16 20:47:40.318 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@31e967e3
[DEBUG] 2020-02-16 20:47:40.319 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1a601dff
[DEBUG] 2020-02-16 20:47:40.319 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1a601dff
[DEBUG] 2020-02-16 20:47:40.319 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@756b9b39
[DEBUG] 2020-02-16 20:47:40.319 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@756b9b39
[DEBUG] 2020-02-16 20:47:40.320 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@18daf518
[DEBUG] 2020-02-16 20:47:40.320 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@18daf518
[DEBUG] 2020-02-16 20:47:40.321 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@66d7c7c3
[DEBUG] 2020-02-16 20:47:40.321 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@66d7c7c3
[DEBUG] 2020-02-16 20:47:40.321 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@66d7c7c3
[DEBUG] 2020-02-16 20:47:40.322 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6337dd84
[DEBUG] 2020-02-16 20:47:40.322 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@16ab77ff
[DEBUG] 2020-02-16 20:47:40.322 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@16ab77ff
[DEBUG] 2020-02-16 20:47:40.322 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@16ab77ff
[DEBUG] 2020-02-16 20:47:40.323 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5cecd25d
[DEBUG] 2020-02-16 20:47:40.324 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@49d90515
[DEBUG] 2020-02-16 20:47:40.324 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@49d90515
[DEBUG] 2020-02-16 20:47:40.326 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6afe8d29
[DEBUG] 2020-02-16 20:47:40.326 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6afe8d29
[DEBUG] 2020-02-16 20:47:40.327 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@b1ba03
[DEBUG] 2020-02-16 20:47:40.328 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@b1ba03
[DEBUG] 2020-02-16 20:47:40.329 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@174a44d6
[DEBUG] 2020-02-16 20:47:40.329 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@174a44d6
[DEBUG] 2020-02-16 20:47:40.330 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7de57f20
[DEBUG] 2020-02-16 20:47:40.330 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7de57f20
[DEBUG] 2020-02-16 20:47:40.330 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6c6e795c
[DEBUG] 2020-02-16 20:47:40.331 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1eb76df9
[DEBUG] 2020-02-16 20:47:40.331 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1eb76df9
[DEBUG] 2020-02-16 20:47:40.332 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1eb76df9
[DEBUG] 2020-02-16 20:47:40.333 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7aea667
[DEBUG] 2020-02-16 20:47:40.333 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7aea667
[DEBUG] 2020-02-16 20:47:40.333 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7aea667
[DEBUG] 2020-02-16 20:47:40.334 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@33ce455f
[DEBUG] 2020-02-16 20:47:40.334 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@183dc0fc
[DEBUG] 2020-02-16 20:47:40.334 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5809bea1
[DEBUG] 2020-02-16 20:47:40.334 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5809bea1
[DEBUG] 2020-02-16 20:47:40.334 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5809bea1
[DEBUG] 2020-02-16 20:47:40.335 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b4c70c
[DEBUG] 2020-02-16 20:47:40.335 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b4c70c
[DEBUG] 2020-02-16 20:47:40.335 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b4c70c
[DEBUG] 2020-02-16 20:47:40.335 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6beeeffb
[DEBUG] 2020-02-16 20:47:40.335 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7c35e8d0
[DEBUG] 2020-02-16 20:47:40.336 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@400b4bee
[DEBUG] 2020-02-16 20:47:40.336 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@400b4bee
[DEBUG] 2020-02-16 20:47:40.336 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f093e8a
[DEBUG] 2020-02-16 20:47:40.337 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3a9d52b2
[DEBUG] 2020-02-16 20:47:40.337 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3a9d52b2
[DEBUG] 2020-02-16 20:47:40.338 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3379ed4b
[DEBUG] 2020-02-16 20:47:40.338 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3379ed4b
[DEBUG] 2020-02-16 20:47:40.340 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@22208750
[DEBUG] 2020-02-16 20:47:40.340 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a40d02a
[DEBUG] 2020-02-16 20:47:40.341 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@f6ee057
[DEBUG] 2020-02-16 20:47:40.343 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2f19ae7
[DEBUG] 2020-02-16 20:47:40.343 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2f19ae7
[DEBUG] 2020-02-16 20:47:40.343 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1e70c5f4
[DEBUG] 2020-02-16 20:47:40.343 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3a6ce160
[DEBUG] 2020-02-16 20:47:40.343 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2234f61a
[DEBUG] 2020-02-16 20:47:40.343 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7023a4f5
[DEBUG] 2020-02-16 20:47:40.343 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@68e48060
[DEBUG] 2020-02-16 20:47:40.343 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@35de0bfd
[DEBUG] 2020-02-16 20:47:40.343 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@305faf7a
[DEBUG] 2020-02-16 20:47:40.343 [http-nio-8080-exec-83] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5db6a188
[DEBUG] 2020-02-16 20:47:40.372 [http-nio-8080-exec-83] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:47:40.372 [http-nio-8080-exec-83] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:47:40.373 [http-nio-8080-exec-83] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:47:40.373 [http-nio-8080-exec-83] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:47:40.373 [http-nio-8080-exec-83] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:47:40.373 [http-nio-8080-exec-83] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:47:40.374 [http-nio-8080-exec-83] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:47:40.374 [http-nio-8080-exec-83] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:47:40.375 [http-nio-8080-exec-83] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:47:40.375 [http-nio-8080-exec-83] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:47:40.375 [http-nio-8080-exec-83] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:47:40.376 [http-nio-8080-exec-83] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:47:40.376 [http-nio-8080-exec-83] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:47:40.376 [http-nio-8080-exec-83] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:47:40.381 [http-nio-8080-exec-83] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:47:40.382 [http-nio-8080-exec-83] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:47:40.382 [http-nio-8080-exec-83] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:47:40.474 [http-nio-8080-exec-83] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:47:40.677 [http-nio-8080-exec-83] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:47:40.679 [http-nio-8080-exec-83] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:47:40.680 [http-nio-8080-exec-83] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:47:40.705 [http-nio-8080-exec-83] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:47:40.740 [http-nio-8080-exec-83] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:47:40.785 [http-nio-8080-exec-83] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:47:40.818 [http-nio-8080-exec-83] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:47:40.820 [http-nio-8080-exec-83] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ee00c0f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@26784cc3]
[DEBUG] 2020-02-16 20:47:40.870 [http-nio-8080-exec-83] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:47:40.892 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:47:40.896 [http-nio-8080-exec-83] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:47:40.898 [http-nio-8080-exec-83] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:47:40.918 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.920 [http-nio-8080-exec-83] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:47:40.922 [http-nio-8080-exec-83] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:47:40.925 [http-nio-8080-exec-83] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:47:40.928 [http-nio-8080-exec-83] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:47:40.933 [http-nio-8080-exec-83] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:47:40.934 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.934 [http-nio-8080-exec-83] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:47:40.934 [http-nio-8080-exec-83] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:47:40.934 [http-nio-8080-exec-83] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:47:40.934 [http-nio-8080-exec-83] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:47:40.934 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.935 [http-nio-8080-exec-83] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:47:40.935 [http-nio-8080-exec-83] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:47:40.935 [http-nio-8080-exec-83] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:47:40.935 [http-nio-8080-exec-83] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:47:40.935 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:47:40.936 [http-nio-8080-exec-83] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:47:40.937 [http-nio-8080-exec-83] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:47:40.939 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:47:40.940 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.944 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.955 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.956 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.956 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:47:40.957 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:47:40.957 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:47:40.962 [http-nio-8080-exec-83] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:47:40.965 [http-nio-8080-exec-83] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:47:40.965 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.966 [http-nio-8080-exec-83] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:47:40.966 [http-nio-8080-exec-83] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:47:40.966 [http-nio-8080-exec-83] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:47:40.966 [http-nio-8080-exec-83] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:47:40.966 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:47:40.966 [http-nio-8080-exec-83] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:47:40.966 [http-nio-8080-exec-83] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:47:40.966 [http-nio-8080-exec-83] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:47:40.966 [http-nio-8080-exec-83] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:47:40.967 [http-nio-8080-exec-83] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:47:40.967 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:47:40.967 [http-nio-8080-exec-83] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:47:40.967 [http-nio-8080-exec-83] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:47:40.969 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.969 [http-nio-8080-exec-83] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:47:40.969 [http-nio-8080-exec-83] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:47:40.969 [http-nio-8080-exec-83] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:47:40.969 [http-nio-8080-exec-83] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:47:40.969 [http-nio-8080-exec-83] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:47:40.969 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.969 [http-nio-8080-exec-83] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:47:40.969 [http-nio-8080-exec-83] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:47:40.969 [http-nio-8080-exec-83] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:47:40.969 [http-nio-8080-exec-83] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:47:40.975 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.975 [http-nio-8080-exec-83] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:47:40.975 [http-nio-8080-exec-83] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:47:40.975 [http-nio-8080-exec-83] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:47:40.976 [http-nio-8080-exec-83] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:47:40.976 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.976 [http-nio-8080-exec-83] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:47:40.976 [http-nio-8080-exec-83] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:47:40.976 [http-nio-8080-exec-83] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:47:40.976 [http-nio-8080-exec-83] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:47:40.977 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:47:40.978 [http-nio-8080-exec-83] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:47:40.980 [http-nio-8080-exec-83] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:47:40.982 [http-nio-8080-exec-83] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:47:40.983 [http-nio-8080-exec-83] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:47:40.983 [http-nio-8080-exec-83] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:47:40.983 [http-nio-8080-exec-83] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:47:40.983 [http-nio-8080-exec-83] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:47:40.983 [http-nio-8080-exec-83] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:47:40.983 [http-nio-8080-exec-83] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:47:40.983 [http-nio-8080-exec-83] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:47:40.983 [http-nio-8080-exec-83] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:47:40.983 [http-nio-8080-exec-83] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:47:40.983 [http-nio-8080-exec-83] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:47:40.983 [http-nio-8080-exec-83] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:47:40.983 [http-nio-8080-exec-83] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:47:40.983 [http-nio-8080-exec-83] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:47:40.983 [http-nio-8080-exec-83] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:47:40.983 [http-nio-8080-exec-83] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:47:40.988 [http-nio-8080-exec-83] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:47:40.988 [http-nio-8080-exec-83] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:47:40.988 [http-nio-8080-exec-83] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:47:40.988 [http-nio-8080-exec-83] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:47:40.988 [http-nio-8080-exec-83] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:47:40.989 [http-nio-8080-exec-83] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:47:40.989 [http-nio-8080-exec-83] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:47:40.989 [http-nio-8080-exec-83] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:47:40.989 [http-nio-8080-exec-83] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:47:40.991 [http-nio-8080-exec-83] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:47:40.991 [http-nio-8080-exec-83] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:47:41.041 [http-nio-8080-exec-83] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:47:41.041 [http-nio-8080-exec-83] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:47:41.041 [http-nio-8080-exec-83] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:47:41.042 [http-nio-8080-exec-83] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:47:41.101 [http-nio-8080-exec-83] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:47:41.118 [http-nio-8080-exec-83] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:47:41.119 [http-nio-8080-exec-83] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@599e796d, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:47:41.139 [http-nio-8080-exec-83] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:47:41.139 [http-nio-8080-exec-83] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:47:41.141 [http-nio-8080-exec-83] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:47:41.141 [http-nio-8080-exec-83] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:47:41.147 [http-nio-8080-exec-83] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:47:41.148 [http-nio-8080-exec-83] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:47:41.148 [http-nio-8080-exec-83] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ee00c0f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e589ccf]
[DEBUG] 2020-02-16 20:47:41.188 [http-nio-8080-exec-83] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:47:41.188 [http-nio-8080-exec-83] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:47:41.200 [http-nio-8080-exec-83] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:47:41.200 [http-nio-8080-exec-83] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:47:41.361 [http-nio-8080-exec-83] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:47:41.362 [http-nio-8080-exec-83] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:47:41.367 [http-nio-8080-exec-83] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:47:41.367 [http-nio-8080-exec-83] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:47:41.440 [http-nio-8080-exec-83] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:47:41.440 [http-nio-8080-exec-83] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:47:41.440 [http-nio-8080-exec-83] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:47:41.440 [http-nio-8080-exec-83] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:47:41.440 [http-nio-8080-exec-83] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:47:41.448 [http-nio-8080-exec-83] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:47:41.448 [http-nio-8080-exec-83] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:47:41.448 [http-nio-8080-exec-83] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:47:41.448 [http-nio-8080-exec-83] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:47:41.448 [http-nio-8080-exec-83] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:47:41.448 [http-nio-8080-exec-83] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:47:41.448 [http-nio-8080-exec-83] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:47:41.475 [http-nio-8080-exec-83] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b4ba36a]
[DEBUG] 2020-02-16 20:47:41.477 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:47:41.477 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:47:41.477 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:47:41.477 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:47:41.482 [http-nio-8080-exec-83] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6de42621]
[DEBUG] 2020-02-16 20:47:41.484 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:47:41.484 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:47:41.484 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:47:41.484 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:47:41.484 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:47:41.484 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:47:41.484 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:47:41.484 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:47:41.485 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:47:41.486 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:47:41.486 [http-nio-8080-exec-83] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:47:41.486 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:47:41.486 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:47:41.486 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:47:41.487 [http-nio-8080-exec-83] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5984de16]
[DEBUG] 2020-02-16 20:47:41.489 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:47:41.489 [http-nio-8080-exec-83] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:47:41.505 [http-nio-8080-exec-83] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:47:41.508 [http-nio-8080-exec-83] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:47:41.511 [http-nio-8080-exec-83] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:47:41.511 [http-nio-8080-exec-83] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64f77d51]
[DEBUG] 2020-02-16 20:47:41.511 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:47:41.511 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:47:41.511 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:47:41.511 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:47:41.511 [http-nio-8080-exec-83] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@462fd223]
[DEBUG] 2020-02-16 20:47:41.511 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:47:41.511 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:47:41.512 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:47:41.512 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:47:41.512 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:47:41.514 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:47:41.514 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:47:41.514 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:47:41.514 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:47:41.514 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:47:41.514 [http-nio-8080-exec-83] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:47:41.514 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:47:41.516 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:47:41.516 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:47:41.516 [http-nio-8080-exec-83] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4c251e86]
[DEBUG] 2020-02-16 20:47:41.516 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:47:41.516 [http-nio-8080-exec-83] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:47:41.517 [http-nio-8080-exec-83] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:47:41.517 [http-nio-8080-exec-83] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:47:41.517 [http-nio-8080-exec-83] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:47:41.527 [http-nio-8080-exec-83] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:47:41.527 [http-nio-8080-exec-83] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e5844e6]
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:47:41.528 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:47:41.529 [http-nio-8080-exec-83] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6151f2a9]
[DEBUG] 2020-02-16 20:47:41.530 [http-nio-8080-exec-83] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c85c6de]
[DEBUG] 2020-02-16 20:47:41.531 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:47:41.531 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:47:41.531 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:47:41.531 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:47:41.531 [http-nio-8080-exec-83] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:47:41.532 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:47:41.532 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:47:41.532 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:47:41.532 [http-nio-8080-exec-83] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3a4f8840]
[DEBUG] 2020-02-16 20:47:41.532 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:47:41.532 [http-nio-8080-exec-83] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:47:41.532 [http-nio-8080-exec-83] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:47:41.536 [http-nio-8080-exec-83] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:47:41.536 [http-nio-8080-exec-83] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:47:41.536 [http-nio-8080-exec-83] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@172b8841]
[DEBUG] 2020-02-16 20:47:41.536 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:47:41.536 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:47:41.536 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:47:41.536 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:47:41.536 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:47:41.536 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:47:41.536 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:47:41.536 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:47:41.537 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:47:41.537 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:47:41.537 [http-nio-8080-exec-83] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@779b2986]
[DEBUG] 2020-02-16 20:47:41.537 [http-nio-8080-exec-83] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bea95fb]
[DEBUG] 2020-02-16 20:47:41.537 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:47:41.537 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:47:41.537 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:47:41.537 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:47:41.537 [http-nio-8080-exec-83] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:47:41.537 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:47:41.537 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:47:41.537 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:47:41.537 [http-nio-8080-exec-83] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7d932a95]
[DEBUG] 2020-02-16 20:47:41.537 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:47:41.537 [http-nio-8080-exec-83] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:47:41.537 [http-nio-8080-exec-83] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:47:41.538 [http-nio-8080-exec-83] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:47:41.538 [http-nio-8080-exec-83] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:47:41.539 [http-nio-8080-exec-83] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:47:41.540 [http-nio-8080-exec-83] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:47:41.542 [http-nio-8080-exec-83] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:47:41.548 [http-nio-8080-exec-83] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@135d197f]
[DEBUG] 2020-02-16 20:47:41.548 [http-nio-8080-exec-83] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3756960b]
[DEBUG] 2020-02-16 20:47:41.548 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:47:41.548 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:47:41.548 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:47:41.548 [http-nio-8080-exec-83] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:47:41.548 [http-nio-8080-exec-83] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:47:41.548 [http-nio-8080-exec-83] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:47:41.550 [http-nio-8080-exec-83] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:47:41.550 [http-nio-8080-exec-83] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:47:41.551 [http-nio-8080-exec-83] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:47:41.581 [http-nio-8080-exec-83] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:47:41.582 [http-nio-8080-exec-83] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:47:41.582 [http-nio-8080-exec-83] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:47:41.587 [http-nio-8080-exec-83] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:47:41.587 [http-nio-8080-exec-83] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:47:41.588 [http-nio-8080-exec-83] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:47:41.588 [http-nio-8080-exec-83] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:47:41.590 [http-nio-8080-exec-83] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6a3908c8
[DEBUG] 2020-02-16 20:47:41.592 [http-nio-8080-exec-83] SessionFactoryRegistry - Registering SessionFactory: 7de1f0ee-cfa2-4c9f-9194-133149716edf (<unnamed>)
[DEBUG] 2020-02-16 20:47:41.592 [http-nio-8080-exec-83] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:47:41.659 [http-nio-8080-exec-83] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:47:41.681 [http-nio-8080-exec-83] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:47:41.697 [http-nio-8080-exec-83] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c2a0b88
[DEBUG] 2020-02-16 20:47:41.718 [http-nio-8080-exec-83] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:47:41.721 [http-nio-8080-exec-83] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:47:41.730 [http-nio-8080-exec-83] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:47:41.747 [http-nio-8080-exec-83] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:47:41.769 [http-nio-8080-exec-83] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:47:41.769 [http-nio-8080-exec-83] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:47:41.770 [http-nio-8080-exec-83] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:47:41.770 [http-nio-8080-exec-83] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:47:41.778 [http-nio-8080-exec-83] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:47:41.778 [http-nio-8080-exec-83] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:47:41.778 [http-nio-8080-exec-83] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:47:41.778 [http-nio-8080-exec-83] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:47:41.784 [http-nio-8080-exec-83] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:47:41.784 [http-nio-8080-exec-83] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:47:41.784 [http-nio-8080-exec-83] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:47:41.796 [http-nio-8080-exec-83] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:47:41.815 [http-nio-8080-exec-83] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:47:41.817 [http-nio-8080-exec-83] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:47:41.823 [http-nio-8080-exec-83] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:47:41.823 [http-nio-8080-exec-83] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:47:41.825 [http-nio-8080-exec-83] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:47:41.828 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.836 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:47:41.836 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.836 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:47:41.836 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.836 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@5fee496
[DEBUG] 2020-02-16 20:47:41.836 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6da7d266
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.837 [http-nio-8080-exec-83] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:47:41.839 [http-nio-8080-exec-83] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:47:41.839 [http-nio-8080-exec-83] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:47:41.875 [http-nio-8080-exec-83] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:47:41.881 [http-nio-8080-exec-83] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:47:41.883 [http-nio-8080-exec-83] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:47:41.890 [http-nio-8080-exec-83] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:47:41.890 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:47:41.890 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.890 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:47:41.890 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.890 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:47:41.890 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.890 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:47:41.890 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.892 [http-nio-8080-exec-83] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:47:41.892 [http-nio-8080-exec-83] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:47:41.894 [http-nio-8080-exec-83] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:47:41.894 [http-nio-8080-exec-83] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:47:41.895 [http-nio-8080-exec-83] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:47:41.895 [http-nio-8080-exec-83] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:47:41.895 [http-nio-8080-exec-83] Loader - Done entity load
[DEBUG] 2020-02-16 20:47:41.895 [http-nio-8080-exec-83] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:47:41.896 [http-nio-8080-exec-83] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:47:41.896 [http-nio-8080-exec-83] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:47:41.896 [http-nio-8080-exec-83] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:47:41.897 [http-nio-8080-exec-83] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:47:41.897 [http-nio-8080-exec-83] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:47:41.897 [http-nio-8080-exec-83] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:47:41.897 [http-nio-8080-exec-83] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:47:41.899 [http-nio-8080-exec-83] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:47:41.899 [http-nio-8080-exec-83] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:47:41.900 [http-nio-8080-exec-83] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:47:41.900 [http-nio-8080-exec-83] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:47:41.900 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:47:41.900 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.900 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:47:41.900 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.900 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:47:41.900 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.900 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:47:41.900 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.900 [http-nio-8080-exec-83] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:47:41.900 [http-nio-8080-exec-83] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:47:41.902 [http-nio-8080-exec-83] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:47:41.902 [http-nio-8080-exec-83] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:47:41.902 [http-nio-8080-exec-83] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:47:41.902 [http-nio-8080-exec-83] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:47:41.902 [http-nio-8080-exec-83] Loader - Done entity load
[DEBUG] 2020-02-16 20:47:41.902 [http-nio-8080-exec-83] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:47:41.902 [http-nio-8080-exec-83] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:47:41.902 [http-nio-8080-exec-83] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:47:41.902 [http-nio-8080-exec-83] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:47:41.903 [http-nio-8080-exec-83] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:47:41.903 [http-nio-8080-exec-83] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:47:41.904 [http-nio-8080-exec-83] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:47:41.908 [http-nio-8080-exec-83] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:47:41.908 [http-nio-8080-exec-83] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:47:41.909 [http-nio-8080-exec-83] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:47:41.910 [http-nio-8080-exec-83] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:47:41.910 [http-nio-8080-exec-83] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:47:41.910 [http-nio-8080-exec-83] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:47:41.910 [http-nio-8080-exec-83] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:47:41.910 [http-nio-8080-exec-83] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:47:41.910 [http-nio-8080-exec-83] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:47:41.910 [http-nio-8080-exec-83] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:47:41.910 [http-nio-8080-exec-83] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:47:41.910 [http-nio-8080-exec-83] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:47:41.910 [http-nio-8080-exec-83] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:47:41.910 [http-nio-8080-exec-83] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:47:41.910 [http-nio-8080-exec-83] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:47:41.910 [http-nio-8080-exec-83] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:47:41.911 [http-nio-8080-exec-83] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:47:41.914 [http-nio-8080-exec-83] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:47:41.915 [http-nio-8080-exec-83] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:47:41.915 [http-nio-8080-exec-83] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:47:41.915 [http-nio-8080-exec-83] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:47:41.915 [http-nio-8080-exec-83] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:47:41.916 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:47:41.916 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.916 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:47:41.916 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.916 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:47:41.916 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.916 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:47:41.916 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.916 [http-nio-8080-exec-83] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:47:41.916 [http-nio-8080-exec-83] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:47:41.917 [http-nio-8080-exec-83] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:47:41.917 [http-nio-8080-exec-83] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@2722fbad
[DEBUG] 2020-02-16 20:47:41.918 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] Loader - Done entity load
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:47:41.919 [http-nio-8080-exec-83] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:47:41.920 [http-nio-8080-exec-83] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:47:41.920 [http-nio-8080-exec-83] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@55648f80
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] Loader - Done entity load
[DEBUG] 2020-02-16 20:47:41.921 [http-nio-8080-exec-83] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:47:41.922 [http-nio-8080-exec-83] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:48:20.522 [http-nio-8080-exec-87] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:48:20.526 [http-nio-8080-exec-87] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:48:20.529 [http-nio-8080-exec-87] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:48:20.596 [http-nio-8080-exec-87] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:48:20.598 [http-nio-8080-exec-87] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:48:20.689 [http-nio-8080-exec-87] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:48:20.690 [http-nio-8080-exec-87] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:48:20.693 [http-nio-8080-exec-87] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:48:20.845 [http-nio-8080-exec-87] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:48:20.861 [http-nio-8080-exec-87] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:48:20.862 [http-nio-8080-exec-87] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:48:20.878 [http-nio-8080-exec-87] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:48:20.903 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@51b4059f
[DEBUG] 2020-02-16 20:48:20.903 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@51b4059f
[DEBUG] 2020-02-16 20:48:20.903 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51b4059f
[DEBUG] 2020-02-16 20:48:20.904 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7a101a9a
[DEBUG] 2020-02-16 20:48:20.904 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@366979fa
[DEBUG] 2020-02-16 20:48:20.904 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@329547e
[DEBUG] 2020-02-16 20:48:20.905 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6a01f95e
[DEBUG] 2020-02-16 20:48:20.905 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6a01f95e
[DEBUG] 2020-02-16 20:48:20.905 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6a01f95e
[DEBUG] 2020-02-16 20:48:20.905 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@66e1485e
[DEBUG] 2020-02-16 20:48:20.906 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@66e1485e
[DEBUG] 2020-02-16 20:48:20.906 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66e1485e
[DEBUG] 2020-02-16 20:48:20.906 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3ab89487
[DEBUG] 2020-02-16 20:48:20.906 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3ab89487
[DEBUG] 2020-02-16 20:48:20.906 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ab89487
[DEBUG] 2020-02-16 20:48:20.907 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@398a11fb
[DEBUG] 2020-02-16 20:48:20.907 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@398a11fb
[DEBUG] 2020-02-16 20:48:20.907 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@398a11fb
[DEBUG] 2020-02-16 20:48:20.908 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17522ca
[DEBUG] 2020-02-16 20:48:20.908 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17522ca
[DEBUG] 2020-02-16 20:48:20.908 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17522ca
[DEBUG] 2020-02-16 20:48:20.909 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5de7f42
[DEBUG] 2020-02-16 20:48:20.909 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5de7f42
[DEBUG] 2020-02-16 20:48:20.909 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5de7f42
[DEBUG] 2020-02-16 20:48:20.909 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6a70f7c8
[DEBUG] 2020-02-16 20:48:20.909 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6a70f7c8
[DEBUG] 2020-02-16 20:48:20.909 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6a70f7c8
[DEBUG] 2020-02-16 20:48:20.910 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@74234c7e
[DEBUG] 2020-02-16 20:48:20.910 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@74234c7e
[DEBUG] 2020-02-16 20:48:20.910 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@17b123e3
[DEBUG] 2020-02-16 20:48:20.910 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@17b123e3
[DEBUG] 2020-02-16 20:48:20.911 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@b6f9082
[DEBUG] 2020-02-16 20:48:20.911 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@b6f9082
[DEBUG] 2020-02-16 20:48:20.911 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5d0786ff
[DEBUG] 2020-02-16 20:48:20.911 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5b25e7d4
[DEBUG] 2020-02-16 20:48:20.912 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@59d2a838
[DEBUG] 2020-02-16 20:48:20.912 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@59d2a838
[DEBUG] 2020-02-16 20:48:20.912 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@260f313a
[DEBUG] 2020-02-16 20:48:20.912 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@260f313a
[DEBUG] 2020-02-16 20:48:20.913 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@441db534
[DEBUG] 2020-02-16 20:48:20.913 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@441db534
[DEBUG] 2020-02-16 20:48:20.915 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3a124299
[DEBUG] 2020-02-16 20:48:20.915 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3a124299
[DEBUG] 2020-02-16 20:48:20.917 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@deff877
[DEBUG] 2020-02-16 20:48:20.917 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@deff877
[DEBUG] 2020-02-16 20:48:20.919 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@56153989
[DEBUG] 2020-02-16 20:48:20.919 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@56153989
[DEBUG] 2020-02-16 20:48:20.921 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@68a00457
[DEBUG] 2020-02-16 20:48:20.921 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@68a00457
[DEBUG] 2020-02-16 20:48:20.922 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2e1d5e5
[DEBUG] 2020-02-16 20:48:20.922 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2e1d5e5
[DEBUG] 2020-02-16 20:48:20.923 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7d4f67de
[DEBUG] 2020-02-16 20:48:20.924 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7d4f67de
[DEBUG] 2020-02-16 20:48:20.925 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@37594834
[DEBUG] 2020-02-16 20:48:20.925 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@37594834
[DEBUG] 2020-02-16 20:48:20.925 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@243c6a07
[DEBUG] 2020-02-16 20:48:20.925 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@243c6a07
[DEBUG] 2020-02-16 20:48:20.926 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a34e7e4
[DEBUG] 2020-02-16 20:48:20.926 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a34e7e4
[DEBUG] 2020-02-16 20:48:20.926 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a34e7e4
[DEBUG] 2020-02-16 20:48:20.931 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@73a5f5e3
[DEBUG] 2020-02-16 20:48:20.932 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@356a16ad
[DEBUG] 2020-02-16 20:48:20.932 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@356a16ad
[DEBUG] 2020-02-16 20:48:20.932 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@356a16ad
[DEBUG] 2020-02-16 20:48:20.932 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19bd9ea8
[DEBUG] 2020-02-16 20:48:20.933 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3a4ee901
[DEBUG] 2020-02-16 20:48:20.933 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3a4ee901
[DEBUG] 2020-02-16 20:48:20.934 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4abd3d1
[DEBUG] 2020-02-16 20:48:20.934 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4abd3d1
[DEBUG] 2020-02-16 20:48:20.934 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b0dc2b6
[DEBUG] 2020-02-16 20:48:20.934 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b0dc2b6
[DEBUG] 2020-02-16 20:48:20.934 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@124ff8e7
[DEBUG] 2020-02-16 20:48:20.935 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@124ff8e7
[DEBUG] 2020-02-16 20:48:20.935 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16365acc
[DEBUG] 2020-02-16 20:48:20.935 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16365acc
[DEBUG] 2020-02-16 20:48:20.935 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7b2cf24b
[DEBUG] 2020-02-16 20:48:20.936 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1e929cc6
[DEBUG] 2020-02-16 20:48:20.936 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1e929cc6
[DEBUG] 2020-02-16 20:48:20.937 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1e929cc6
[DEBUG] 2020-02-16 20:48:20.937 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@517351b5
[DEBUG] 2020-02-16 20:48:20.937 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@517351b5
[DEBUG] 2020-02-16 20:48:20.937 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@517351b5
[DEBUG] 2020-02-16 20:48:20.938 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@19fde519
[DEBUG] 2020-02-16 20:48:20.938 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4a19a2a2
[DEBUG] 2020-02-16 20:48:20.939 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2357d185
[DEBUG] 2020-02-16 20:48:20.939 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2357d185
[DEBUG] 2020-02-16 20:48:20.939 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2357d185
[DEBUG] 2020-02-16 20:48:20.939 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7ddb9b5
[DEBUG] 2020-02-16 20:48:20.939 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7ddb9b5
[DEBUG] 2020-02-16 20:48:20.939 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7ddb9b5
[DEBUG] 2020-02-16 20:48:20.939 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@eea8569
[DEBUG] 2020-02-16 20:48:20.940 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@812d507
[DEBUG] 2020-02-16 20:48:20.940 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3b9a5577
[DEBUG] 2020-02-16 20:48:20.940 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3b9a5577
[DEBUG] 2020-02-16 20:48:20.941 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c77fa45
[DEBUG] 2020-02-16 20:48:20.942 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@79e2e0b5
[DEBUG] 2020-02-16 20:48:20.942 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@79e2e0b5
[DEBUG] 2020-02-16 20:48:20.943 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@32a3e6fa
[DEBUG] 2020-02-16 20:48:20.943 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@32a3e6fa
[DEBUG] 2020-02-16 20:48:20.943 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a1710b8
[DEBUG] 2020-02-16 20:48:20.943 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@561ce988
[DEBUG] 2020-02-16 20:48:20.944 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@57e569ff
[DEBUG] 2020-02-16 20:48:20.947 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@75706fe6
[DEBUG] 2020-02-16 20:48:20.947 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@75706fe6
[DEBUG] 2020-02-16 20:48:20.947 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@65ff4928
[DEBUG] 2020-02-16 20:48:20.947 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a0860d3
[DEBUG] 2020-02-16 20:48:20.948 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@14b16acd
[DEBUG] 2020-02-16 20:48:20.948 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@374b3239
[DEBUG] 2020-02-16 20:48:20.948 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28e29bf1
[DEBUG] 2020-02-16 20:48:20.948 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31f578c6
[DEBUG] 2020-02-16 20:48:20.948 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e0d8b37
[DEBUG] 2020-02-16 20:48:20.948 [http-nio-8080-exec-87] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4039be35
[DEBUG] 2020-02-16 20:48:20.970 [http-nio-8080-exec-87] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:48:20.971 [http-nio-8080-exec-87] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:48:20.971 [http-nio-8080-exec-87] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:48:20.971 [http-nio-8080-exec-87] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:48:20.971 [http-nio-8080-exec-87] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:48:20.972 [http-nio-8080-exec-87] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:48:20.972 [http-nio-8080-exec-87] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:48:20.973 [http-nio-8080-exec-87] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:48:20.973 [http-nio-8080-exec-87] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:48:20.973 [http-nio-8080-exec-87] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:48:20.974 [http-nio-8080-exec-87] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:48:20.974 [http-nio-8080-exec-87] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:48:20.974 [http-nio-8080-exec-87] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:48:20.974 [http-nio-8080-exec-87] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:48:20.979 [http-nio-8080-exec-87] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:48:20.979 [http-nio-8080-exec-87] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:48:20.979 [http-nio-8080-exec-87] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:48:21.069 [http-nio-8080-exec-87] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:48:21.242 [http-nio-8080-exec-87] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:48:21.243 [http-nio-8080-exec-87] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:48:21.243 [http-nio-8080-exec-87] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:48:21.259 [http-nio-8080-exec-87] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:48:21.288 [http-nio-8080-exec-87] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:48:21.318 [http-nio-8080-exec-87] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:48:21.362 [http-nio-8080-exec-87] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:48:21.365 [http-nio-8080-exec-87] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ee58f2a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@656410ba]
[DEBUG] 2020-02-16 20:48:21.425 [http-nio-8080-exec-87] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:48:21.452 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:48:21.457 [http-nio-8080-exec-87] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:48:21.459 [http-nio-8080-exec-87] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:48:21.477 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.481 [http-nio-8080-exec-87] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:48:21.483 [http-nio-8080-exec-87] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:48:21.485 [http-nio-8080-exec-87] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:48:21.488 [http-nio-8080-exec-87] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:48:21.491 [http-nio-8080-exec-87] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:48:21.492 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.492 [http-nio-8080-exec-87] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:48:21.492 [http-nio-8080-exec-87] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:48:21.492 [http-nio-8080-exec-87] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:48:21.492 [http-nio-8080-exec-87] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:48:21.492 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.492 [http-nio-8080-exec-87] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:48:21.492 [http-nio-8080-exec-87] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:48:21.492 [http-nio-8080-exec-87] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:48:21.492 [http-nio-8080-exec-87] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:48:21.492 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.494 [http-nio-8080-exec-87] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:48:21.494 [http-nio-8080-exec-87] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:48:21.494 [http-nio-8080-exec-87] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:48:21.494 [http-nio-8080-exec-87] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:48:21.494 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.494 [http-nio-8080-exec-87] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:48:21.494 [http-nio-8080-exec-87] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:48:21.494 [http-nio-8080-exec-87] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:48:21.494 [http-nio-8080-exec-87] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:48:21.495 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.495 [http-nio-8080-exec-87] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:48:21.495 [http-nio-8080-exec-87] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:48:21.495 [http-nio-8080-exec-87] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:48:21.495 [http-nio-8080-exec-87] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:48:21.495 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.495 [http-nio-8080-exec-87] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:48:21.495 [http-nio-8080-exec-87] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:48:21.495 [http-nio-8080-exec-87] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:48:21.495 [http-nio-8080-exec-87] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:48:21.495 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.495 [http-nio-8080-exec-87] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:48:21.498 [http-nio-8080-exec-87] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:48:21.498 [http-nio-8080-exec-87] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:48:21.498 [http-nio-8080-exec-87] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:48:21.498 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.498 [http-nio-8080-exec-87] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:48:21.499 [http-nio-8080-exec-87] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:48:21.500 [http-nio-8080-exec-87] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:48:21.500 [http-nio-8080-exec-87] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:48:21.500 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.500 [http-nio-8080-exec-87] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:48:21.500 [http-nio-8080-exec-87] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:48:21.500 [http-nio-8080-exec-87] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:48:21.500 [http-nio-8080-exec-87] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:48:21.502 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:48:21.503 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.504 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.513 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.513 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.513 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:48:21.514 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:48:21.514 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:48:21.515 [http-nio-8080-exec-87] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:48:21.516 [http-nio-8080-exec-87] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:48:21.517 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.517 [http-nio-8080-exec-87] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:48:21.517 [http-nio-8080-exec-87] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:48:21.517 [http-nio-8080-exec-87] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:48:21.517 [http-nio-8080-exec-87] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:48:21.517 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:48:21.518 [http-nio-8080-exec-87] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:48:21.519 [http-nio-8080-exec-87] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:48:21.519 [http-nio-8080-exec-87] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:48:21.519 [http-nio-8080-exec-87] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:48:21.521 [http-nio-8080-exec-87] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:48:21.521 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:48:21.521 [http-nio-8080-exec-87] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:48:21.521 [http-nio-8080-exec-87] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:48:21.523 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.523 [http-nio-8080-exec-87] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:48:21.523 [http-nio-8080-exec-87] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:48:21.523 [http-nio-8080-exec-87] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:48:21.523 [http-nio-8080-exec-87] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:48:21.523 [http-nio-8080-exec-87] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:48:21.523 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.523 [http-nio-8080-exec-87] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:48:21.523 [http-nio-8080-exec-87] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:48:21.524 [http-nio-8080-exec-87] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:48:21.524 [http-nio-8080-exec-87] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:48:21.531 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.531 [http-nio-8080-exec-87] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:48:21.531 [http-nio-8080-exec-87] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:48:21.531 [http-nio-8080-exec-87] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:48:21.531 [http-nio-8080-exec-87] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:48:21.532 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.532 [http-nio-8080-exec-87] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:48:21.532 [http-nio-8080-exec-87] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:48:21.532 [http-nio-8080-exec-87] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:48:21.532 [http-nio-8080-exec-87] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:48:21.532 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:48:21.532 [http-nio-8080-exec-87] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:48:21.535 [http-nio-8080-exec-87] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:48:21.537 [http-nio-8080-exec-87] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:48:21.538 [http-nio-8080-exec-87] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:48:21.542 [http-nio-8080-exec-87] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:48:21.544 [http-nio-8080-exec-87] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:48:21.544 [http-nio-8080-exec-87] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:48:21.544 [http-nio-8080-exec-87] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:48:21.544 [http-nio-8080-exec-87] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:48:21.544 [http-nio-8080-exec-87] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:48:21.544 [http-nio-8080-exec-87] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:48:21.544 [http-nio-8080-exec-87] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:48:21.544 [http-nio-8080-exec-87] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:48:21.544 [http-nio-8080-exec-87] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:48:21.544 [http-nio-8080-exec-87] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:48:21.544 [http-nio-8080-exec-87] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:48:21.544 [http-nio-8080-exec-87] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:48:21.544 [http-nio-8080-exec-87] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:48:21.550 [http-nio-8080-exec-87] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:48:21.550 [http-nio-8080-exec-87] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:48:21.550 [http-nio-8080-exec-87] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:48:21.550 [http-nio-8080-exec-87] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:48:21.551 [http-nio-8080-exec-87] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:48:21.552 [http-nio-8080-exec-87] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:48:21.552 [http-nio-8080-exec-87] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:48:21.552 [http-nio-8080-exec-87] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:48:21.552 [http-nio-8080-exec-87] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:48:21.557 [http-nio-8080-exec-87] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:48:21.557 [http-nio-8080-exec-87] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:48:21.608 [http-nio-8080-exec-87] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:48:21.610 [http-nio-8080-exec-87] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:48:21.610 [http-nio-8080-exec-87] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:48:21.610 [http-nio-8080-exec-87] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:48:21.611 [http-nio-8080-exec-87] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:48:21.667 [http-nio-8080-exec-87] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:48:21.689 [http-nio-8080-exec-87] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:48:21.689 [http-nio-8080-exec-87] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@76086b73, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:48:21.706 [http-nio-8080-exec-87] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:48:21.706 [http-nio-8080-exec-87] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:48:21.707 [http-nio-8080-exec-87] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:48:21.707 [http-nio-8080-exec-87] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:48:21.709 [http-nio-8080-exec-87] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:48:21.709 [http-nio-8080-exec-87] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:48:21.709 [http-nio-8080-exec-87] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ee58f2a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1beb2438]
[DEBUG] 2020-02-16 20:48:21.745 [http-nio-8080-exec-87] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:48:21.745 [http-nio-8080-exec-87] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:48:21.753 [http-nio-8080-exec-87] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:48:21.753 [http-nio-8080-exec-87] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:48:21.920 [http-nio-8080-exec-87] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:48:21.920 [http-nio-8080-exec-87] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:48:21.922 [http-nio-8080-exec-87] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:48:21.922 [http-nio-8080-exec-87] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:48:21.974 [http-nio-8080-exec-87] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:48:21.974 [http-nio-8080-exec-87] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:48:21.974 [http-nio-8080-exec-87] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:48:21.974 [http-nio-8080-exec-87] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:48:21.974 [http-nio-8080-exec-87] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:48:21.977 [http-nio-8080-exec-87] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:48:21.977 [http-nio-8080-exec-87] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:48:21.977 [http-nio-8080-exec-87] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:48:21.977 [http-nio-8080-exec-87] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:48:21.977 [http-nio-8080-exec-87] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:48:21.977 [http-nio-8080-exec-87] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:48:21.977 [http-nio-8080-exec-87] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:48:21.995 [http-nio-8080-exec-87] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a712dcf]
[DEBUG] 2020-02-16 20:48:21.997 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:48:21.997 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:48:21.997 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:48:21.997 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:48:22.000 [http-nio-8080-exec-87] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f5c6c2]
[DEBUG] 2020-02-16 20:48:22.002 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:48:22.002 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:48:22.002 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:48:22.002 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:48:22.002 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:48:22.002 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:48:22.002 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:48:22.002 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:48:22.004 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:48:22.004 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:48:22.004 [http-nio-8080-exec-87] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:48:22.005 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:48:22.006 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:48:22.006 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:48:22.007 [http-nio-8080-exec-87] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3d8266db]
[DEBUG] 2020-02-16 20:48:22.008 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:48:22.008 [http-nio-8080-exec-87] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:48:22.017 [http-nio-8080-exec-87] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:48:22.028 [http-nio-8080-exec-87] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:48:22.029 [http-nio-8080-exec-87] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:48:22.029 [http-nio-8080-exec-87] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac2f581]
[DEBUG] 2020-02-16 20:48:22.029 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:48:22.029 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:48:22.031 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:48:22.031 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:48:22.031 [http-nio-8080-exec-87] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298b5b47]
[DEBUG] 2020-02-16 20:48:22.031 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:48:22.031 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:48:22.031 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:48:22.031 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:48:22.031 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:48:22.031 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:48:22.031 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:48:22.031 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:48:22.031 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:48:22.031 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:48:22.031 [http-nio-8080-exec-87] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:48:22.032 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:48:22.032 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:48:22.032 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:48:22.032 [http-nio-8080-exec-87] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4a5ff109]
[DEBUG] 2020-02-16 20:48:22.032 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:48:22.032 [http-nio-8080-exec-87] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:48:22.032 [http-nio-8080-exec-87] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:48:22.032 [http-nio-8080-exec-87] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:48:22.032 [http-nio-8080-exec-87] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:48:22.048 [http-nio-8080-exec-87] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:48:22.048 [http-nio-8080-exec-87] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@571870de]
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:48:22.049 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:48:22.050 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:48:22.050 [http-nio-8080-exec-87] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68ddbd50]
[DEBUG] 2020-02-16 20:48:22.052 [http-nio-8080-exec-87] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@697cc893]
[DEBUG] 2020-02-16 20:48:22.054 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:48:22.054 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:48:22.054 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:48:22.054 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:48:22.054 [http-nio-8080-exec-87] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:48:22.055 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:48:22.055 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:48:22.055 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:48:22.055 [http-nio-8080-exec-87] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1cb761b]
[DEBUG] 2020-02-16 20:48:22.055 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:48:22.055 [http-nio-8080-exec-87] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:48:22.056 [http-nio-8080-exec-87] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:48:22.057 [http-nio-8080-exec-87] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:48:22.057 [http-nio-8080-exec-87] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c0b6d69]
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b72dd40]
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13a1ec4d]
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4bde5469]
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:48:22.058 [http-nio-8080-exec-87] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:48:22.059 [http-nio-8080-exec-87] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:48:22.059 [http-nio-8080-exec-87] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:48:22.059 [http-nio-8080-exec-87] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:48:22.060 [http-nio-8080-exec-87] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:48:22.061 [http-nio-8080-exec-87] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:48:22.064 [http-nio-8080-exec-87] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@414ffd54]
[DEBUG] 2020-02-16 20:48:22.064 [http-nio-8080-exec-87] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68c690b]
[DEBUG] 2020-02-16 20:48:22.064 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:48:22.064 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:48:22.064 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:48:22.064 [http-nio-8080-exec-87] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:48:22.064 [http-nio-8080-exec-87] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:48:22.064 [http-nio-8080-exec-87] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:48:22.066 [http-nio-8080-exec-87] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:48:22.066 [http-nio-8080-exec-87] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:48:22.066 [http-nio-8080-exec-87] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:48:22.095 [http-nio-8080-exec-87] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:48:22.095 [http-nio-8080-exec-87] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:48:22.095 [http-nio-8080-exec-87] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:48:22.100 [http-nio-8080-exec-87] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:48:22.100 [http-nio-8080-exec-87] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:48:22.101 [http-nio-8080-exec-87] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:48:22.101 [http-nio-8080-exec-87] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:48:22.106 [http-nio-8080-exec-87] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@333e6167
[DEBUG] 2020-02-16 20:48:22.108 [http-nio-8080-exec-87] SessionFactoryRegistry - Registering SessionFactory: ebd05bce-e02d-4804-b566-8d7cffac6b15 (<unnamed>)
[DEBUG] 2020-02-16 20:48:22.108 [http-nio-8080-exec-87] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:48:22.228 [http-nio-8080-exec-87] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:48:22.245 [http-nio-8080-exec-87] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:48:22.262 [http-nio-8080-exec-87] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@88ec866
[DEBUG] 2020-02-16 20:48:22.283 [http-nio-8080-exec-87] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:48:22.288 [http-nio-8080-exec-87] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:48:22.291 [http-nio-8080-exec-87] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:48:22.307 [http-nio-8080-exec-87] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:48:22.324 [http-nio-8080-exec-87] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:48:22.325 [http-nio-8080-exec-87] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:48:22.326 [http-nio-8080-exec-87] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:48:22.326 [http-nio-8080-exec-87] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:48:22.331 [http-nio-8080-exec-87] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:48:22.331 [http-nio-8080-exec-87] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:48:22.331 [http-nio-8080-exec-87] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:48:22.331 [http-nio-8080-exec-87] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:48:22.335 [http-nio-8080-exec-87] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:48:22.335 [http-nio-8080-exec-87] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:48:22.335 [http-nio-8080-exec-87] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:48:22.347 [http-nio-8080-exec-87] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:48:22.366 [http-nio-8080-exec-87] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:48:22.370 [http-nio-8080-exec-87] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:48:22.377 [http-nio-8080-exec-87] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:48:22.378 [http-nio-8080-exec-87] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:48:22.379 [http-nio-8080-exec-87] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:48:22.379 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:48:22.379 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.379 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:48:22.379 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.379 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:48:22.379 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.379 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:48:22.380 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.380 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:48:22.380 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.380 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:48:22.380 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.380 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:48:22.380 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.380 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:48:22.380 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.380 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:48:22.380 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.380 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:48:22.380 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.388 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:48:22.388 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.388 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:48:22.388 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.388 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@400e60ca
[DEBUG] 2020-02-16 20:48:22.388 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.389 [http-nio-8080-exec-87] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:48:22.389 [http-nio-8080-exec-87] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:48:22.389 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:48:22.389 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.389 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:48:22.389 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.389 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:48:22.389 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.389 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:48:22.389 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.389 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:48:22.389 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.389 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:48:22.389 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.390 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:48:22.390 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.390 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:48:22.390 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.390 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:48:22.390 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.390 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:48:22.390 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.390 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:48:22.390 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.390 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:48:22.390 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.390 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@67dc30a4
[DEBUG] 2020-02-16 20:48:22.390 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.390 [http-nio-8080-exec-87] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:48:22.393 [http-nio-8080-exec-87] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:48:22.394 [http-nio-8080-exec-87] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:48:22.398 [http-nio-8080-exec-87] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:48:22.402 [http-nio-8080-exec-87] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:48:22.404 [http-nio-8080-exec-87] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:48:22.409 [http-nio-8080-exec-87] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:48:22.409 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:48:22.409 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.409 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:48:22.409 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.409 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:48:22.409 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.409 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:48:22.409 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.409 [http-nio-8080-exec-87] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:48:22.409 [http-nio-8080-exec-87] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:48:22.411 [http-nio-8080-exec-87] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:48:22.411 [http-nio-8080-exec-87] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:48:22.411 [http-nio-8080-exec-87] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:48:22.411 [http-nio-8080-exec-87] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:48:22.412 [http-nio-8080-exec-87] Loader - Done entity load
[DEBUG] 2020-02-16 20:48:22.412 [http-nio-8080-exec-87] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:48:22.412 [http-nio-8080-exec-87] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:48:22.412 [http-nio-8080-exec-87] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:48:22.412 [http-nio-8080-exec-87] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:48:22.412 [http-nio-8080-exec-87] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:48:22.412 [http-nio-8080-exec-87] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:48:22.413 [http-nio-8080-exec-87] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:48:22.413 [http-nio-8080-exec-87] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:48:22.414 [http-nio-8080-exec-87] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:48:22.414 [http-nio-8080-exec-87] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:48:22.415 [http-nio-8080-exec-87] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:48:22.415 [http-nio-8080-exec-87] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:48:22.415 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:48:22.415 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.415 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:48:22.415 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.415 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:48:22.415 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.415 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:48:22.415 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.415 [http-nio-8080-exec-87] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:48:22.415 [http-nio-8080-exec-87] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:48:22.416 [http-nio-8080-exec-87] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:48:22.416 [http-nio-8080-exec-87] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:48:22.416 [http-nio-8080-exec-87] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:48:22.416 [http-nio-8080-exec-87] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:48:22.416 [http-nio-8080-exec-87] Loader - Done entity load
[DEBUG] 2020-02-16 20:48:22.417 [http-nio-8080-exec-87] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:48:22.417 [http-nio-8080-exec-87] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:48:22.417 [http-nio-8080-exec-87] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:48:22.417 [http-nio-8080-exec-87] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:48:22.417 [http-nio-8080-exec-87] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:48:22.417 [http-nio-8080-exec-87] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:48:22.423 [http-nio-8080-exec-87] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:48:22.427 [http-nio-8080-exec-87] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:48:22.427 [http-nio-8080-exec-87] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:48:22.427 [http-nio-8080-exec-87] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:48:22.428 [http-nio-8080-exec-87] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:48:22.428 [http-nio-8080-exec-87] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:48:22.428 [http-nio-8080-exec-87] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:48:22.428 [http-nio-8080-exec-87] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:48:22.428 [http-nio-8080-exec-87] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:48:22.428 [http-nio-8080-exec-87] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:48:22.428 [http-nio-8080-exec-87] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:48:22.428 [http-nio-8080-exec-87] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:48:22.428 [http-nio-8080-exec-87] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:48:22.428 [http-nio-8080-exec-87] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:48:22.428 [http-nio-8080-exec-87] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:48:22.428 [http-nio-8080-exec-87] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:48:22.428 [http-nio-8080-exec-87] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:48:22.429 [http-nio-8080-exec-87] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:48:22.432 [http-nio-8080-exec-87] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:48:22.432 [http-nio-8080-exec-87] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:48:22.433 [http-nio-8080-exec-87] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:48:22.433 [http-nio-8080-exec-87] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:48:22.442 [http-nio-8080-exec-87] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:48:22.442 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:48:22.442 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.442 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:48:22.442 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.442 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:48:22.442 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.442 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:48:22.442 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.442 [http-nio-8080-exec-87] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:48:22.442 [http-nio-8080-exec-87] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:48:22.443 [http-nio-8080-exec-87] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:48:22.443 [http-nio-8080-exec-87] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:48:22.443 [http-nio-8080-exec-87] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:48:22.443 [http-nio-8080-exec-87] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:48:22.443 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:48:22.443 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.443 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:48:22.443 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.443 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@503b686b
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] Loader - Done entity load
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:48:22.444 [http-nio-8080-exec-87] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:48:22.446 [http-nio-8080-exec-87] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:48:22.446 [http-nio-8080-exec-87] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:48:22.446 [http-nio-8080-exec-87] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@c6937cc
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] Loader - Done entity load
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:48:22.447 [http-nio-8080-exec-87] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:49:19.929 [http-nio-8080-exec-92] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:49:19.934 [http-nio-8080-exec-92] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:49:19.937 [http-nio-8080-exec-92] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:49:19.994 [http-nio-8080-exec-92] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:49:19.997 [http-nio-8080-exec-92] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:49:20.088 [http-nio-8080-exec-92] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:49:20.088 [http-nio-8080-exec-92] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:49:20.089 [http-nio-8080-exec-92] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:49:20.230 [http-nio-8080-exec-92] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:49:20.246 [http-nio-8080-exec-92] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:49:20.247 [http-nio-8080-exec-92] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:49:20.261 [http-nio-8080-exec-92] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:49:20.286 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6bb93d57
[DEBUG] 2020-02-16 20:49:20.286 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6bb93d57
[DEBUG] 2020-02-16 20:49:20.286 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6bb93d57
[DEBUG] 2020-02-16 20:49:20.286 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@129ad446
[DEBUG] 2020-02-16 20:49:20.286 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@28d21b8
[DEBUG] 2020-02-16 20:49:20.286 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5ab8591b
[DEBUG] 2020-02-16 20:49:20.287 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@f2edcbf
[DEBUG] 2020-02-16 20:49:20.287 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@f2edcbf
[DEBUG] 2020-02-16 20:49:20.287 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@f2edcbf
[DEBUG] 2020-02-16 20:49:20.288 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@397ed8ac
[DEBUG] 2020-02-16 20:49:20.288 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@397ed8ac
[DEBUG] 2020-02-16 20:49:20.288 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@397ed8ac
[DEBUG] 2020-02-16 20:49:20.288 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3a0d07ec
[DEBUG] 2020-02-16 20:49:20.289 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3a0d07ec
[DEBUG] 2020-02-16 20:49:20.289 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3a0d07ec
[DEBUG] 2020-02-16 20:49:20.289 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@63f35246
[DEBUG] 2020-02-16 20:49:20.289 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@63f35246
[DEBUG] 2020-02-16 20:49:20.289 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@63f35246
[DEBUG] 2020-02-16 20:49:20.290 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@49a6905
[DEBUG] 2020-02-16 20:49:20.290 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@49a6905
[DEBUG] 2020-02-16 20:49:20.290 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@49a6905
[DEBUG] 2020-02-16 20:49:20.291 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3b82b105
[DEBUG] 2020-02-16 20:49:20.291 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3b82b105
[DEBUG] 2020-02-16 20:49:20.291 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3b82b105
[DEBUG] 2020-02-16 20:49:20.291 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3e6d7b72
[DEBUG] 2020-02-16 20:49:20.291 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3e6d7b72
[DEBUG] 2020-02-16 20:49:20.292 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3e6d7b72
[DEBUG] 2020-02-16 20:49:20.292 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b0c4554
[DEBUG] 2020-02-16 20:49:20.292 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b0c4554
[DEBUG] 2020-02-16 20:49:20.292 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@121ad45a
[DEBUG] 2020-02-16 20:49:20.293 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@121ad45a
[DEBUG] 2020-02-16 20:49:20.293 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@dac791
[DEBUG] 2020-02-16 20:49:20.293 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@dac791
[DEBUG] 2020-02-16 20:49:20.293 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@40457007
[DEBUG] 2020-02-16 20:49:20.294 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4f5d626a
[DEBUG] 2020-02-16 20:49:20.294 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@69a41b1f
[DEBUG] 2020-02-16 20:49:20.295 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@69a41b1f
[DEBUG] 2020-02-16 20:49:20.295 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3a4a88ff
[DEBUG] 2020-02-16 20:49:20.296 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3a4a88ff
[DEBUG] 2020-02-16 20:49:20.296 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@b07aedd
[DEBUG] 2020-02-16 20:49:20.296 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@b07aedd
[DEBUG] 2020-02-16 20:49:20.297 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6924d383
[DEBUG] 2020-02-16 20:49:20.297 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6924d383
[DEBUG] 2020-02-16 20:49:20.297 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2ddb2801
[DEBUG] 2020-02-16 20:49:20.297 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2ddb2801
[DEBUG] 2020-02-16 20:49:20.298 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@8147498
[DEBUG] 2020-02-16 20:49:20.298 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@8147498
[DEBUG] 2020-02-16 20:49:20.299 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d54213
[DEBUG] 2020-02-16 20:49:20.299 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18d54213
[DEBUG] 2020-02-16 20:49:20.299 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5fc708db
[DEBUG] 2020-02-16 20:49:20.299 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5fc708db
[DEBUG] 2020-02-16 20:49:20.300 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e912d82
[DEBUG] 2020-02-16 20:49:20.300 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e912d82
[DEBUG] 2020-02-16 20:49:20.301 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4b74e275
[DEBUG] 2020-02-16 20:49:20.301 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b74e275
[DEBUG] 2020-02-16 20:49:20.301 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@126a2916
[DEBUG] 2020-02-16 20:49:20.301 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@126a2916
[DEBUG] 2020-02-16 20:49:20.302 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3c116feb
[DEBUG] 2020-02-16 20:49:20.302 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3c116feb
[DEBUG] 2020-02-16 20:49:20.302 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3c116feb
[DEBUG] 2020-02-16 20:49:20.303 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5c62d0dd
[DEBUG] 2020-02-16 20:49:20.303 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6b864eb5
[DEBUG] 2020-02-16 20:49:20.303 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6b864eb5
[DEBUG] 2020-02-16 20:49:20.303 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6b864eb5
[DEBUG] 2020-02-16 20:49:20.304 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@753def5a
[DEBUG] 2020-02-16 20:49:20.304 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@41557322
[DEBUG] 2020-02-16 20:49:20.304 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@41557322
[DEBUG] 2020-02-16 20:49:20.305 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@237cefab
[DEBUG] 2020-02-16 20:49:20.305 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@237cefab
[DEBUG] 2020-02-16 20:49:20.305 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1e8b96b8
[DEBUG] 2020-02-16 20:49:20.305 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1e8b96b8
[DEBUG] 2020-02-16 20:49:20.306 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@26fb28f4
[DEBUG] 2020-02-16 20:49:20.306 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26fb28f4
[DEBUG] 2020-02-16 20:49:20.306 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@39ba6647
[DEBUG] 2020-02-16 20:49:20.306 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@39ba6647
[DEBUG] 2020-02-16 20:49:20.306 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@47ea6892
[DEBUG] 2020-02-16 20:49:20.307 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@27b4fa94
[DEBUG] 2020-02-16 20:49:20.307 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@27b4fa94
[DEBUG] 2020-02-16 20:49:20.307 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@27b4fa94
[DEBUG] 2020-02-16 20:49:20.308 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29ffdff
[DEBUG] 2020-02-16 20:49:20.308 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29ffdff
[DEBUG] 2020-02-16 20:49:20.308 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29ffdff
[DEBUG] 2020-02-16 20:49:20.308 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@431db47f
[DEBUG] 2020-02-16 20:49:20.308 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@62dd14e9
[DEBUG] 2020-02-16 20:49:20.309 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@594292cb
[DEBUG] 2020-02-16 20:49:20.309 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@594292cb
[DEBUG] 2020-02-16 20:49:20.309 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@594292cb
[DEBUG] 2020-02-16 20:49:20.310 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@632a1138
[DEBUG] 2020-02-16 20:49:20.311 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@632a1138
[DEBUG] 2020-02-16 20:49:20.311 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@632a1138
[DEBUG] 2020-02-16 20:49:20.311 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@b6386ab
[DEBUG] 2020-02-16 20:49:20.311 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@107e4741
[DEBUG] 2020-02-16 20:49:20.312 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@39b5d1b2
[DEBUG] 2020-02-16 20:49:20.312 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@39b5d1b2
[DEBUG] 2020-02-16 20:49:20.313 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7b1cc152
[DEBUG] 2020-02-16 20:49:20.314 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@32ec9447
[DEBUG] 2020-02-16 20:49:20.314 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@32ec9447
[DEBUG] 2020-02-16 20:49:20.315 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2acfc734
[DEBUG] 2020-02-16 20:49:20.315 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2acfc734
[DEBUG] 2020-02-16 20:49:20.316 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4c897cf7
[DEBUG] 2020-02-16 20:49:20.316 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5f9787dc
[DEBUG] 2020-02-16 20:49:20.317 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1870ce1b
[DEBUG] 2020-02-16 20:49:20.318 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7991f783
[DEBUG] 2020-02-16 20:49:20.318 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7991f783
[DEBUG] 2020-02-16 20:49:20.319 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6a660e13
[DEBUG] 2020-02-16 20:49:20.319 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c81d485
[DEBUG] 2020-02-16 20:49:20.319 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7b266cca
[DEBUG] 2020-02-16 20:49:20.319 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@9163ec9
[DEBUG] 2020-02-16 20:49:20.319 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53dabf6e
[DEBUG] 2020-02-16 20:49:20.319 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@41ed7c6c
[DEBUG] 2020-02-16 20:49:20.319 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@96518a7
[DEBUG] 2020-02-16 20:49:20.319 [http-nio-8080-exec-92] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@313d8f34
[DEBUG] 2020-02-16 20:49:20.340 [http-nio-8080-exec-92] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:49:20.340 [http-nio-8080-exec-92] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:49:20.341 [http-nio-8080-exec-92] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:49:20.341 [http-nio-8080-exec-92] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:49:20.341 [http-nio-8080-exec-92] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:49:20.342 [http-nio-8080-exec-92] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:49:20.342 [http-nio-8080-exec-92] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:49:20.343 [http-nio-8080-exec-92] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:49:20.343 [http-nio-8080-exec-92] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:49:20.343 [http-nio-8080-exec-92] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:49:20.344 [http-nio-8080-exec-92] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:49:20.344 [http-nio-8080-exec-92] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:49:20.344 [http-nio-8080-exec-92] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:49:20.345 [http-nio-8080-exec-92] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:49:20.349 [http-nio-8080-exec-92] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:49:20.349 [http-nio-8080-exec-92] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:49:20.349 [http-nio-8080-exec-92] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:49:20.443 [http-nio-8080-exec-92] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:49:20.634 [http-nio-8080-exec-92] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:49:20.637 [http-nio-8080-exec-92] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:49:20.638 [http-nio-8080-exec-92] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:49:20.665 [http-nio-8080-exec-92] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:49:20.685 [http-nio-8080-exec-92] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:49:20.715 [http-nio-8080-exec-92] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:49:20.747 [http-nio-8080-exec-92] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:49:20.752 [http-nio-8080-exec-92] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c668f4c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@12c3a0e2]
[DEBUG] 2020-02-16 20:49:20.799 [http-nio-8080-exec-92] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:49:20.819 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:49:20.826 [http-nio-8080-exec-92] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:49:20.832 [http-nio-8080-exec-92] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:49:20.853 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.856 [http-nio-8080-exec-92] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:49:20.857 [http-nio-8080-exec-92] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:49:20.861 [http-nio-8080-exec-92] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:49:20.864 [http-nio-8080-exec-92] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:49:20.869 [http-nio-8080-exec-92] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:49:20.870 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.870 [http-nio-8080-exec-92] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:49:20.870 [http-nio-8080-exec-92] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:49:20.870 [http-nio-8080-exec-92] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:49:20.870 [http-nio-8080-exec-92] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:49:20.870 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.871 [http-nio-8080-exec-92] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:49:20.871 [http-nio-8080-exec-92] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:49:20.871 [http-nio-8080-exec-92] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:49:20.871 [http-nio-8080-exec-92] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:49:20.871 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.872 [http-nio-8080-exec-92] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:49:20.872 [http-nio-8080-exec-92] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:49:20.872 [http-nio-8080-exec-92] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:49:20.872 [http-nio-8080-exec-92] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:49:20.872 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.873 [http-nio-8080-exec-92] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:49:20.873 [http-nio-8080-exec-92] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:49:20.873 [http-nio-8080-exec-92] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:49:20.873 [http-nio-8080-exec-92] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:49:20.873 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.873 [http-nio-8080-exec-92] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:49:20.873 [http-nio-8080-exec-92] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:49:20.873 [http-nio-8080-exec-92] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:49:20.873 [http-nio-8080-exec-92] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:49:20.873 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.873 [http-nio-8080-exec-92] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:49:20.873 [http-nio-8080-exec-92] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:49:20.873 [http-nio-8080-exec-92] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:49:20.873 [http-nio-8080-exec-92] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:49:20.874 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.874 [http-nio-8080-exec-92] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:49:20.874 [http-nio-8080-exec-92] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:49:20.874 [http-nio-8080-exec-92] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:49:20.874 [http-nio-8080-exec-92] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:49:20.874 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.874 [http-nio-8080-exec-92] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:49:20.874 [http-nio-8080-exec-92] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:49:20.875 [http-nio-8080-exec-92] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:49:20.875 [http-nio-8080-exec-92] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:49:20.875 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.875 [http-nio-8080-exec-92] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:49:20.875 [http-nio-8080-exec-92] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:49:20.875 [http-nio-8080-exec-92] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:49:20.875 [http-nio-8080-exec-92] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:49:20.877 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:49:20.879 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.880 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.887 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.887 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.887 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:49:20.888 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:49:20.888 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:49:20.888 [http-nio-8080-exec-92] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:49:20.890 [http-nio-8080-exec-92] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:49:20.890 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.890 [http-nio-8080-exec-92] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:49:20.890 [http-nio-8080-exec-92] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:49:20.890 [http-nio-8080-exec-92] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:49:20.890 [http-nio-8080-exec-92] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:49:20.890 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:49:20.890 [http-nio-8080-exec-92] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:49:20.891 [http-nio-8080-exec-92] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:49:20.891 [http-nio-8080-exec-92] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:49:20.891 [http-nio-8080-exec-92] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:49:20.892 [http-nio-8080-exec-92] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:49:20.892 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:49:20.892 [http-nio-8080-exec-92] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:49:20.892 [http-nio-8080-exec-92] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:49:20.895 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.895 [http-nio-8080-exec-92] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:49:20.895 [http-nio-8080-exec-92] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:49:20.895 [http-nio-8080-exec-92] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:49:20.895 [http-nio-8080-exec-92] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:49:20.895 [http-nio-8080-exec-92] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:49:20.896 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.896 [http-nio-8080-exec-92] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:49:20.896 [http-nio-8080-exec-92] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:49:20.896 [http-nio-8080-exec-92] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:49:20.896 [http-nio-8080-exec-92] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:49:20.903 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.903 [http-nio-8080-exec-92] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:49:20.903 [http-nio-8080-exec-92] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:49:20.903 [http-nio-8080-exec-92] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:49:20.903 [http-nio-8080-exec-92] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:49:20.903 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.904 [http-nio-8080-exec-92] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:49:20.904 [http-nio-8080-exec-92] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:49:20.904 [http-nio-8080-exec-92] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:49:20.904 [http-nio-8080-exec-92] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:49:20.904 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:49:20.904 [http-nio-8080-exec-92] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:49:20.905 [http-nio-8080-exec-92] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:49:20.907 [http-nio-8080-exec-92] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:49:20.907 [http-nio-8080-exec-92] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:49:20.908 [http-nio-8080-exec-92] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:49:20.908 [http-nio-8080-exec-92] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:49:20.908 [http-nio-8080-exec-92] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:49:20.908 [http-nio-8080-exec-92] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:49:20.908 [http-nio-8080-exec-92] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:49:20.908 [http-nio-8080-exec-92] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:49:20.908 [http-nio-8080-exec-92] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:49:20.909 [http-nio-8080-exec-92] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:49:20.909 [http-nio-8080-exec-92] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:49:20.909 [http-nio-8080-exec-92] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:49:20.909 [http-nio-8080-exec-92] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:49:20.909 [http-nio-8080-exec-92] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:49:20.909 [http-nio-8080-exec-92] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:49:20.909 [http-nio-8080-exec-92] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:49:20.917 [http-nio-8080-exec-92] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:49:20.917 [http-nio-8080-exec-92] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:49:20.917 [http-nio-8080-exec-92] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:49:20.917 [http-nio-8080-exec-92] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:49:20.918 [http-nio-8080-exec-92] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:49:20.918 [http-nio-8080-exec-92] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:49:20.918 [http-nio-8080-exec-92] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:49:20.918 [http-nio-8080-exec-92] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:49:20.918 [http-nio-8080-exec-92] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:49:20.921 [http-nio-8080-exec-92] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:49:20.921 [http-nio-8080-exec-92] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:49:20.954 [http-nio-8080-exec-92] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:49:20.955 [http-nio-8080-exec-92] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:49:20.955 [http-nio-8080-exec-92] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:49:20.955 [http-nio-8080-exec-92] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:49:20.955 [http-nio-8080-exec-92] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:49:20.955 [http-nio-8080-exec-92] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:49:20.955 [http-nio-8080-exec-92] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:49:20.955 [http-nio-8080-exec-92] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:49:20.956 [http-nio-8080-exec-92] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:49:21.002 [http-nio-8080-exec-92] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:49:21.018 [http-nio-8080-exec-92] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:49:21.018 [http-nio-8080-exec-92] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51ae2acf, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:49:21.030 [http-nio-8080-exec-92] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:49:21.030 [http-nio-8080-exec-92] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:49:21.032 [http-nio-8080-exec-92] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:49:21.032 [http-nio-8080-exec-92] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:49:21.040 [http-nio-8080-exec-92] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:49:21.042 [http-nio-8080-exec-92] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:49:21.042 [http-nio-8080-exec-92] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c668f4c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@40a4fef9]
[DEBUG] 2020-02-16 20:49:21.076 [http-nio-8080-exec-92] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:49:21.076 [http-nio-8080-exec-92] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:49:21.085 [http-nio-8080-exec-92] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:49:21.086 [http-nio-8080-exec-92] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:49:21.244 [http-nio-8080-exec-92] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:49:21.244 [http-nio-8080-exec-92] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:49:21.246 [http-nio-8080-exec-92] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:49:21.246 [http-nio-8080-exec-92] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:49:21.303 [http-nio-8080-exec-92] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:49:21.303 [http-nio-8080-exec-92] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:49:21.303 [http-nio-8080-exec-92] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:49:21.303 [http-nio-8080-exec-92] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:49:21.303 [http-nio-8080-exec-92] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:49:21.307 [http-nio-8080-exec-92] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:49:21.307 [http-nio-8080-exec-92] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:49:21.307 [http-nio-8080-exec-92] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:49:21.307 [http-nio-8080-exec-92] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:49:21.307 [http-nio-8080-exec-92] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:49:21.307 [http-nio-8080-exec-92] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:49:21.307 [http-nio-8080-exec-92] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:49:21.324 [http-nio-8080-exec-92] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fe076f3]
[DEBUG] 2020-02-16 20:49:21.325 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:49:21.325 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:49:21.325 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:49:21.325 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:49:21.329 [http-nio-8080-exec-92] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24cda9a7]
[DEBUG] 2020-02-16 20:49:21.330 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:49:21.331 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:49:21.331 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:49:21.331 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:49:21.331 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:49:21.331 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:49:21.331 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:49:21.331 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:49:21.331 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:49:21.331 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:49:21.331 [http-nio-8080-exec-92] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:49:21.331 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:49:21.331 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:49:21.331 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:49:21.333 [http-nio-8080-exec-92] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5b1c300e]
[DEBUG] 2020-02-16 20:49:21.335 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:49:21.335 [http-nio-8080-exec-92] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:49:21.346 [http-nio-8080-exec-92] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:49:21.349 [http-nio-8080-exec-92] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:49:21.352 [http-nio-8080-exec-92] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:49:21.352 [http-nio-8080-exec-92] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12017907]
[DEBUG] 2020-02-16 20:49:21.353 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:49:21.353 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:49:21.353 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:49:21.353 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:49:21.353 [http-nio-8080-exec-92] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f5efeb4]
[DEBUG] 2020-02-16 20:49:21.353 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:49:21.353 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:49:21.353 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:49:21.353 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:49:21.354 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:49:21.354 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:49:21.354 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:49:21.354 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:49:21.354 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:49:21.354 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:49:21.354 [http-nio-8080-exec-92] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:49:21.354 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:49:21.354 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:49:21.354 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:49:21.354 [http-nio-8080-exec-92] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@46faff31]
[DEBUG] 2020-02-16 20:49:21.354 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:49:21.354 [http-nio-8080-exec-92] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:49:21.355 [http-nio-8080-exec-92] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:49:21.355 [http-nio-8080-exec-92] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:49:21.355 [http-nio-8080-exec-92] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:49:21.371 [http-nio-8080-exec-92] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:49:21.371 [http-nio-8080-exec-92] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@149ef093]
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:49:21.372 [http-nio-8080-exec-92] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ccf257c]
[DEBUG] 2020-02-16 20:49:21.377 [http-nio-8080-exec-92] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@786dc15c]
[DEBUG] 2020-02-16 20:49:21.378 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:49:21.378 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:49:21.379 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:49:21.379 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:49:21.379 [http-nio-8080-exec-92] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:49:21.379 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:49:21.379 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:49:21.379 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:49:21.379 [http-nio-8080-exec-92] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@56a95a0e]
[DEBUG] 2020-02-16 20:49:21.379 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:49:21.379 [http-nio-8080-exec-92] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:49:21.379 [http-nio-8080-exec-92] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b3e6f27]
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1af74e7e]
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39b8244c]
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:49:21.381 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:49:21.382 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:49:21.382 [http-nio-8080-exec-92] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@64eabb48]
[DEBUG] 2020-02-16 20:49:21.382 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:49:21.382 [http-nio-8080-exec-92] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:49:21.382 [http-nio-8080-exec-92] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:49:21.382 [http-nio-8080-exec-92] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:49:21.382 [http-nio-8080-exec-92] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:49:21.383 [http-nio-8080-exec-92] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:49:21.383 [http-nio-8080-exec-92] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:49:21.389 [http-nio-8080-exec-92] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:49:21.393 [http-nio-8080-exec-92] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28cf34fc]
[DEBUG] 2020-02-16 20:49:21.393 [http-nio-8080-exec-92] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@371d11d1]
[DEBUG] 2020-02-16 20:49:21.393 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:49:21.393 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:49:21.394 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:49:21.394 [http-nio-8080-exec-92] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:49:21.394 [http-nio-8080-exec-92] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:49:21.394 [http-nio-8080-exec-92] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:49:21.397 [http-nio-8080-exec-92] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:49:21.397 [http-nio-8080-exec-92] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:49:21.398 [http-nio-8080-exec-92] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:49:21.432 [http-nio-8080-exec-92] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:49:21.432 [http-nio-8080-exec-92] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:49:21.433 [http-nio-8080-exec-92] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:49:21.439 [http-nio-8080-exec-92] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:49:21.439 [http-nio-8080-exec-92] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:49:21.439 [http-nio-8080-exec-92] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:49:21.439 [http-nio-8080-exec-92] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:49:21.440 [http-nio-8080-exec-92] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@76105f5
[DEBUG] 2020-02-16 20:49:21.441 [http-nio-8080-exec-92] SessionFactoryRegistry - Registering SessionFactory: dbc55e2f-22f0-47b0-8aed-b77b70197543 (<unnamed>)
[DEBUG] 2020-02-16 20:49:21.442 [http-nio-8080-exec-92] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:49:21.501 [http-nio-8080-exec-92] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:49:21.520 [http-nio-8080-exec-92] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:49:21.588 [http-nio-8080-exec-92] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@755269ca
[DEBUG] 2020-02-16 20:49:21.611 [http-nio-8080-exec-92] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:49:21.616 [http-nio-8080-exec-92] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:49:21.620 [http-nio-8080-exec-92] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:49:21.637 [http-nio-8080-exec-92] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:49:21.662 [http-nio-8080-exec-92] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:49:21.663 [http-nio-8080-exec-92] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:49:21.664 [http-nio-8080-exec-92] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:49:21.665 [http-nio-8080-exec-92] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:49:21.671 [http-nio-8080-exec-92] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:49:21.671 [http-nio-8080-exec-92] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:49:21.671 [http-nio-8080-exec-92] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:49:21.671 [http-nio-8080-exec-92] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:49:21.677 [http-nio-8080-exec-92] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:49:21.677 [http-nio-8080-exec-92] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:49:21.677 [http-nio-8080-exec-92] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:49:21.690 [http-nio-8080-exec-92] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:49:21.711 [http-nio-8080-exec-92] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:49:21.714 [http-nio-8080-exec-92] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:49:21.722 [http-nio-8080-exec-92] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:49:21.723 [http-nio-8080-exec-92] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:49:21.724 [http-nio-8080-exec-92] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:49:21.725 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.727 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:49:21.727 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.735 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:49:21.735 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.735 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:49:21.735 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.735 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@7701a31b
[DEBUG] 2020-02-16 20:49:21.735 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:49:21.736 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.737 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:49:21.737 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.737 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@138fcaff
[DEBUG] 2020-02-16 20:49:21.737 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.737 [http-nio-8080-exec-92] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:49:21.740 [http-nio-8080-exec-92] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:49:21.740 [http-nio-8080-exec-92] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:49:21.743 [http-nio-8080-exec-92] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:49:21.746 [http-nio-8080-exec-92] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:49:21.747 [http-nio-8080-exec-92] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:49:21.751 [http-nio-8080-exec-92] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:49:21.751 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:49:21.751 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.751 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:49:21.751 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.751 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:49:21.751 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.751 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:49:21.752 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.752 [http-nio-8080-exec-92] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:49:21.752 [http-nio-8080-exec-92] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:49:21.754 [http-nio-8080-exec-92] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:49:21.754 [http-nio-8080-exec-92] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:49:21.754 [http-nio-8080-exec-92] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:49:21.754 [http-nio-8080-exec-92] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:49:21.754 [http-nio-8080-exec-92] Loader - Done entity load
[DEBUG] 2020-02-16 20:49:21.754 [http-nio-8080-exec-92] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:49:21.754 [http-nio-8080-exec-92] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:49:21.755 [http-nio-8080-exec-92] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:49:21.755 [http-nio-8080-exec-92] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:49:21.755 [http-nio-8080-exec-92] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:49:21.755 [http-nio-8080-exec-92] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:49:21.755 [http-nio-8080-exec-92] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:49:21.755 [http-nio-8080-exec-92] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:49:21.756 [http-nio-8080-exec-92] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:49:21.756 [http-nio-8080-exec-92] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:49:21.756 [http-nio-8080-exec-92] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:49:21.757 [http-nio-8080-exec-92] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:49:21.757 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:49:21.757 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.757 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:49:21.757 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.757 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:49:21.757 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.757 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:49:21.757 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.757 [http-nio-8080-exec-92] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:49:21.757 [http-nio-8080-exec-92] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:49:21.757 [http-nio-8080-exec-92] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:49:21.758 [http-nio-8080-exec-92] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:49:21.758 [http-nio-8080-exec-92] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:49:21.758 [http-nio-8080-exec-92] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:49:21.758 [http-nio-8080-exec-92] Loader - Done entity load
[DEBUG] 2020-02-16 20:49:21.758 [http-nio-8080-exec-92] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:49:21.758 [http-nio-8080-exec-92] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:49:21.758 [http-nio-8080-exec-92] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:49:21.758 [http-nio-8080-exec-92] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:49:21.758 [http-nio-8080-exec-92] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:49:21.758 [http-nio-8080-exec-92] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:49:21.759 [http-nio-8080-exec-92] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:49:21.765 [http-nio-8080-exec-92] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:49:21.766 [http-nio-8080-exec-92] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:49:21.767 [http-nio-8080-exec-92] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:49:21.767 [http-nio-8080-exec-92] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:49:21.767 [http-nio-8080-exec-92] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:49:21.767 [http-nio-8080-exec-92] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:49:21.768 [http-nio-8080-exec-92] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:49:21.768 [http-nio-8080-exec-92] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:49:21.768 [http-nio-8080-exec-92] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:49:21.768 [http-nio-8080-exec-92] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:49:21.768 [http-nio-8080-exec-92] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:49:21.768 [http-nio-8080-exec-92] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:49:21.768 [http-nio-8080-exec-92] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:49:21.768 [http-nio-8080-exec-92] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:49:21.768 [http-nio-8080-exec-92] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:49:21.768 [http-nio-8080-exec-92] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:49:21.768 [http-nio-8080-exec-92] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:49:21.769 [http-nio-8080-exec-92] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:49:21.770 [http-nio-8080-exec-92] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:49:21.770 [http-nio-8080-exec-92] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:49:21.770 [http-nio-8080-exec-92] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:49:21.770 [http-nio-8080-exec-92] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:49:21.770 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:49:21.770 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.770 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:49:21.770 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.770 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:49:21.770 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.770 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:49:21.770 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.770 [http-nio-8080-exec-92] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:49:21.770 [http-nio-8080-exec-92] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:49:21.771 [http-nio-8080-exec-92] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:49:21.771 [http-nio-8080-exec-92] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@740863b0
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:49:21.772 [http-nio-8080-exec-92] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:49:21.773 [http-nio-8080-exec-92] Loader - Done entity load
[DEBUG] 2020-02-16 20:49:21.773 [http-nio-8080-exec-92] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:49:21.773 [http-nio-8080-exec-92] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:49:21.773 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:49:21.773 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.773 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:49:21.773 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.773 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:49:21.773 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.773 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:49:21.773 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.773 [http-nio-8080-exec-92] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:49:21.773 [http-nio-8080-exec-92] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:49:21.774 [http-nio-8080-exec-92] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:49:21.774 [http-nio-8080-exec-92] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:49:21.774 [http-nio-8080-exec-92] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:49:21.774 [http-nio-8080-exec-92] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:49:21.774 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:49:21.774 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.774 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:49:21.774 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.774 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:49:21.774 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.774 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:49:21.774 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.774 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:49:21.774 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.774 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:49:21.774 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6cd19e81
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] Loader - Done entity load
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:49:21.775 [http-nio-8080-exec-92] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:50:57.711 [http-nio-8080-exec-102] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:50:57.714 [http-nio-8080-exec-102] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:50:57.718 [http-nio-8080-exec-102] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:50:57.779 [http-nio-8080-exec-102] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:50:57.780 [http-nio-8080-exec-102] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:50:57.859 [http-nio-8080-exec-102] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:50:57.859 [http-nio-8080-exec-102] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:50:57.861 [http-nio-8080-exec-102] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:50:57.990 [http-nio-8080-exec-102] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:50:58.013 [http-nio-8080-exec-102] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:50:58.014 [http-nio-8080-exec-102] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:50:58.041 [http-nio-8080-exec-102] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:50:58.071 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4c53ae7f
[DEBUG] 2020-02-16 20:50:58.071 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4c53ae7f
[DEBUG] 2020-02-16 20:50:58.071 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4c53ae7f
[DEBUG] 2020-02-16 20:50:58.072 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@74c7fcb5
[DEBUG] 2020-02-16 20:50:58.072 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@405c654a
[DEBUG] 2020-02-16 20:50:58.072 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@15c49c84
[DEBUG] 2020-02-16 20:50:58.073 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@610137a7
[DEBUG] 2020-02-16 20:50:58.073 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@610137a7
[DEBUG] 2020-02-16 20:50:58.073 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@610137a7
[DEBUG] 2020-02-16 20:50:58.076 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@76130810
[DEBUG] 2020-02-16 20:50:58.077 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@76130810
[DEBUG] 2020-02-16 20:50:58.077 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@76130810
[DEBUG] 2020-02-16 20:50:58.078 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1e9b8daa
[DEBUG] 2020-02-16 20:50:58.078 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1e9b8daa
[DEBUG] 2020-02-16 20:50:58.078 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e9b8daa
[DEBUG] 2020-02-16 20:50:58.079 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@31622783
[DEBUG] 2020-02-16 20:50:58.079 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@31622783
[DEBUG] 2020-02-16 20:50:58.079 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@31622783
[DEBUG] 2020-02-16 20:50:58.079 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@310e01e8
[DEBUG] 2020-02-16 20:50:58.079 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@310e01e8
[DEBUG] 2020-02-16 20:50:58.079 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@310e01e8
[DEBUG] 2020-02-16 20:50:58.080 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3703f534
[DEBUG] 2020-02-16 20:50:58.080 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3703f534
[DEBUG] 2020-02-16 20:50:58.080 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3703f534
[DEBUG] 2020-02-16 20:50:58.080 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@22a23d56
[DEBUG] 2020-02-16 20:50:58.080 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@22a23d56
[DEBUG] 2020-02-16 20:50:58.080 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@22a23d56
[DEBUG] 2020-02-16 20:50:58.081 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4daee750
[DEBUG] 2020-02-16 20:50:58.081 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4daee750
[DEBUG] 2020-02-16 20:50:58.081 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2c661f67
[DEBUG] 2020-02-16 20:50:58.081 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2c661f67
[DEBUG] 2020-02-16 20:50:58.082 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@70b9121e
[DEBUG] 2020-02-16 20:50:58.082 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@70b9121e
[DEBUG] 2020-02-16 20:50:58.082 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3b41571b
[DEBUG] 2020-02-16 20:50:58.083 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6e0d9e83
[DEBUG] 2020-02-16 20:50:58.083 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@c972a61
[DEBUG] 2020-02-16 20:50:58.083 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@c972a61
[DEBUG] 2020-02-16 20:50:58.084 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5ae61651
[DEBUG] 2020-02-16 20:50:58.084 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5ae61651
[DEBUG] 2020-02-16 20:50:58.084 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3690546a
[DEBUG] 2020-02-16 20:50:58.085 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3690546a
[DEBUG] 2020-02-16 20:50:58.085 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7cfef9be
[DEBUG] 2020-02-16 20:50:58.086 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7cfef9be
[DEBUG] 2020-02-16 20:50:58.086 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@295fb1c
[DEBUG] 2020-02-16 20:50:58.086 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@295fb1c
[DEBUG] 2020-02-16 20:50:58.088 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@766c8dc4
[DEBUG] 2020-02-16 20:50:58.088 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@766c8dc4
[DEBUG] 2020-02-16 20:50:58.090 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18f019ae
[DEBUG] 2020-02-16 20:50:58.090 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18f019ae
[DEBUG] 2020-02-16 20:50:58.091 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2b3762ff
[DEBUG] 2020-02-16 20:50:58.091 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2b3762ff
[DEBUG] 2020-02-16 20:50:58.092 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1bee9c2c
[DEBUG] 2020-02-16 20:50:58.092 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1bee9c2c
[DEBUG] 2020-02-16 20:50:58.093 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@dbc7c2f
[DEBUG] 2020-02-16 20:50:58.093 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@dbc7c2f
[DEBUG] 2020-02-16 20:50:58.095 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@37e928a7
[DEBUG] 2020-02-16 20:50:58.095 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@37e928a7
[DEBUG] 2020-02-16 20:50:58.095 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@17d7fa13
[DEBUG] 2020-02-16 20:50:58.095 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@17d7fa13
[DEBUG] 2020-02-16 20:50:58.095 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@17d7fa13
[DEBUG] 2020-02-16 20:50:58.096 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@330ee00c
[DEBUG] 2020-02-16 20:50:58.097 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@562b5fd2
[DEBUG] 2020-02-16 20:50:58.097 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@562b5fd2
[DEBUG] 2020-02-16 20:50:58.097 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@562b5fd2
[DEBUG] 2020-02-16 20:50:58.098 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@76b66d99
[DEBUG] 2020-02-16 20:50:58.098 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@46274cce
[DEBUG] 2020-02-16 20:50:58.098 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@46274cce
[DEBUG] 2020-02-16 20:50:58.099 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5674efc8
[DEBUG] 2020-02-16 20:50:58.099 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5674efc8
[DEBUG] 2020-02-16 20:50:58.100 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5860a3ff
[DEBUG] 2020-02-16 20:50:58.100 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5860a3ff
[DEBUG] 2020-02-16 20:50:58.101 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@542cf836
[DEBUG] 2020-02-16 20:50:58.102 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@542cf836
[DEBUG] 2020-02-16 20:50:58.103 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29331e64
[DEBUG] 2020-02-16 20:50:58.103 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29331e64
[DEBUG] 2020-02-16 20:50:58.103 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@663e4aea
[DEBUG] 2020-02-16 20:50:58.104 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@f167807
[DEBUG] 2020-02-16 20:50:58.104 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@f167807
[DEBUG] 2020-02-16 20:50:58.104 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@f167807
[DEBUG] 2020-02-16 20:50:58.104 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3d1cb478
[DEBUG] 2020-02-16 20:50:58.104 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3d1cb478
[DEBUG] 2020-02-16 20:50:58.105 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3d1cb478
[DEBUG] 2020-02-16 20:50:58.106 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7b2e4cf
[DEBUG] 2020-02-16 20:50:58.106 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@78d25246
[DEBUG] 2020-02-16 20:50:58.107 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3e35c7d3
[DEBUG] 2020-02-16 20:50:58.107 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3e35c7d3
[DEBUG] 2020-02-16 20:50:58.107 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3e35c7d3
[DEBUG] 2020-02-16 20:50:58.107 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4d44f55c
[DEBUG] 2020-02-16 20:50:58.107 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4d44f55c
[DEBUG] 2020-02-16 20:50:58.107 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4d44f55c
[DEBUG] 2020-02-16 20:50:58.107 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6c168c49
[DEBUG] 2020-02-16 20:50:58.108 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1e6fae64
[DEBUG] 2020-02-16 20:50:58.109 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7a347b8f
[DEBUG] 2020-02-16 20:50:58.109 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a347b8f
[DEBUG] 2020-02-16 20:50:58.109 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@141648c3
[DEBUG] 2020-02-16 20:50:58.110 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@34787d92
[DEBUG] 2020-02-16 20:50:58.110 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@34787d92
[DEBUG] 2020-02-16 20:50:58.111 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@67705466
[DEBUG] 2020-02-16 20:50:58.111 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@67705466
[DEBUG] 2020-02-16 20:50:58.111 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@597b34ea
[DEBUG] 2020-02-16 20:50:58.112 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d38977e
[DEBUG] 2020-02-16 20:50:58.112 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6f805de1
[DEBUG] 2020-02-16 20:50:58.114 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@71300b53
[DEBUG] 2020-02-16 20:50:58.115 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@71300b53
[DEBUG] 2020-02-16 20:50:58.115 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7b413478
[DEBUG] 2020-02-16 20:50:58.115 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ad7d521
[DEBUG] 2020-02-16 20:50:58.115 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@632b7e71
[DEBUG] 2020-02-16 20:50:58.115 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3fca1bb3
[DEBUG] 2020-02-16 20:50:58.115 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4d5a1ac6
[DEBUG] 2020-02-16 20:50:58.115 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19f0a091
[DEBUG] 2020-02-16 20:50:58.115 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@21108d28
[DEBUG] 2020-02-16 20:50:58.115 [http-nio-8080-exec-102] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ee81d3a
[DEBUG] 2020-02-16 20:50:58.142 [http-nio-8080-exec-102] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:50:58.142 [http-nio-8080-exec-102] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:50:58.143 [http-nio-8080-exec-102] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:50:58.143 [http-nio-8080-exec-102] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:50:58.143 [http-nio-8080-exec-102] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:50:58.144 [http-nio-8080-exec-102] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:50:58.144 [http-nio-8080-exec-102] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:50:58.145 [http-nio-8080-exec-102] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:50:58.145 [http-nio-8080-exec-102] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:50:58.146 [http-nio-8080-exec-102] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:50:58.146 [http-nio-8080-exec-102] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:50:58.146 [http-nio-8080-exec-102] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:50:58.146 [http-nio-8080-exec-102] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:50:58.147 [http-nio-8080-exec-102] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:50:58.151 [http-nio-8080-exec-102] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:50:58.151 [http-nio-8080-exec-102] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:50:58.151 [http-nio-8080-exec-102] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:50:58.250 [http-nio-8080-exec-102] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:50:58.477 [http-nio-8080-exec-102] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:50:58.477 [http-nio-8080-exec-102] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:50:58.477 [http-nio-8080-exec-102] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:50:58.491 [http-nio-8080-exec-102] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:50:58.504 [http-nio-8080-exec-102] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:50:58.679 [http-nio-8080-exec-102] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:50:58.715 [http-nio-8080-exec-102] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:50:58.718 [http-nio-8080-exec-102] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16bd7935] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1473dd8a]
[DEBUG] 2020-02-16 20:50:58.753 [http-nio-8080-exec-102] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:50:58.769 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:50:58.773 [http-nio-8080-exec-102] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:50:58.776 [http-nio-8080-exec-102] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:50:58.791 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.794 [http-nio-8080-exec-102] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:50:58.796 [http-nio-8080-exec-102] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:50:58.797 [http-nio-8080-exec-102] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:50:58.799 [http-nio-8080-exec-102] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:50:58.802 [http-nio-8080-exec-102] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:50:58.803 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.803 [http-nio-8080-exec-102] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:50:58.803 [http-nio-8080-exec-102] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:50:58.803 [http-nio-8080-exec-102] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:50:58.803 [http-nio-8080-exec-102] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:50:58.803 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.804 [http-nio-8080-exec-102] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:50:58.804 [http-nio-8080-exec-102] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:50:58.804 [http-nio-8080-exec-102] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:50:58.804 [http-nio-8080-exec-102] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:50:58.804 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.805 [http-nio-8080-exec-102] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:50:58.805 [http-nio-8080-exec-102] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:50:58.805 [http-nio-8080-exec-102] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:50:58.805 [http-nio-8080-exec-102] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:50:58.805 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.806 [http-nio-8080-exec-102] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:50:58.806 [http-nio-8080-exec-102] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:50:58.806 [http-nio-8080-exec-102] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:50:58.806 [http-nio-8080-exec-102] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:50:58.806 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.806 [http-nio-8080-exec-102] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:50:58.806 [http-nio-8080-exec-102] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:50:58.806 [http-nio-8080-exec-102] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:50:58.806 [http-nio-8080-exec-102] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:50:58.807 [http-nio-8080-exec-102] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:50:58.808 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:50:58.809 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.810 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.816 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.817 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.817 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:50:58.819 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:50:58.819 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:50:58.820 [http-nio-8080-exec-102] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:50:58.822 [http-nio-8080-exec-102] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:50:58.823 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.824 [http-nio-8080-exec-102] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:50:58.824 [http-nio-8080-exec-102] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:50:58.824 [http-nio-8080-exec-102] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:50:58.824 [http-nio-8080-exec-102] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:50:58.824 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:50:58.824 [http-nio-8080-exec-102] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:50:58.824 [http-nio-8080-exec-102] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:50:58.824 [http-nio-8080-exec-102] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:50:58.824 [http-nio-8080-exec-102] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:50:58.825 [http-nio-8080-exec-102] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:50:58.826 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:50:58.826 [http-nio-8080-exec-102] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:50:58.826 [http-nio-8080-exec-102] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:50:58.828 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.828 [http-nio-8080-exec-102] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:50:58.828 [http-nio-8080-exec-102] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:50:58.828 [http-nio-8080-exec-102] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:50:58.828 [http-nio-8080-exec-102] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:50:58.828 [http-nio-8080-exec-102] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:50:58.828 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.828 [http-nio-8080-exec-102] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:50:58.828 [http-nio-8080-exec-102] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:50:58.828 [http-nio-8080-exec-102] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:50:58.828 [http-nio-8080-exec-102] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:50:58.832 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.833 [http-nio-8080-exec-102] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:50:58.833 [http-nio-8080-exec-102] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:50:58.833 [http-nio-8080-exec-102] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:50:58.833 [http-nio-8080-exec-102] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:50:58.833 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.833 [http-nio-8080-exec-102] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:50:58.833 [http-nio-8080-exec-102] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:50:58.833 [http-nio-8080-exec-102] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:50:58.833 [http-nio-8080-exec-102] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:50:58.834 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:50:58.834 [http-nio-8080-exec-102] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:50:58.835 [http-nio-8080-exec-102] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:50:58.836 [http-nio-8080-exec-102] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:50:58.836 [http-nio-8080-exec-102] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:50:58.836 [http-nio-8080-exec-102] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:50:58.836 [http-nio-8080-exec-102] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:50:58.836 [http-nio-8080-exec-102] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:50:58.836 [http-nio-8080-exec-102] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:50:58.836 [http-nio-8080-exec-102] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:50:58.836 [http-nio-8080-exec-102] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:50:58.836 [http-nio-8080-exec-102] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:50:58.836 [http-nio-8080-exec-102] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:50:58.836 [http-nio-8080-exec-102] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:50:58.836 [http-nio-8080-exec-102] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:50:58.836 [http-nio-8080-exec-102] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:50:58.836 [http-nio-8080-exec-102] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:50:58.836 [http-nio-8080-exec-102] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:50:58.836 [http-nio-8080-exec-102] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:50:58.842 [http-nio-8080-exec-102] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:50:58.842 [http-nio-8080-exec-102] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:50:58.842 [http-nio-8080-exec-102] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:50:58.842 [http-nio-8080-exec-102] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:50:58.842 [http-nio-8080-exec-102] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:50:58.844 [http-nio-8080-exec-102] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:50:58.844 [http-nio-8080-exec-102] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:50:58.844 [http-nio-8080-exec-102] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:50:58.844 [http-nio-8080-exec-102] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:50:58.853 [http-nio-8080-exec-102] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:50:58.853 [http-nio-8080-exec-102] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:50:58.896 [http-nio-8080-exec-102] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:50:58.897 [http-nio-8080-exec-102] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:50:58.897 [http-nio-8080-exec-102] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:50:58.897 [http-nio-8080-exec-102] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:50:58.897 [http-nio-8080-exec-102] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:50:58.897 [http-nio-8080-exec-102] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:50:58.897 [http-nio-8080-exec-102] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:50:58.897 [http-nio-8080-exec-102] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:50:58.897 [http-nio-8080-exec-102] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:50:58.897 [http-nio-8080-exec-102] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:50:58.897 [http-nio-8080-exec-102] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:50:58.897 [http-nio-8080-exec-102] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:50:58.897 [http-nio-8080-exec-102] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:50:58.897 [http-nio-8080-exec-102] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:50:58.897 [http-nio-8080-exec-102] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:50:58.897 [http-nio-8080-exec-102] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:50:58.897 [http-nio-8080-exec-102] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:50:58.898 [http-nio-8080-exec-102] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:50:58.937 [http-nio-8080-exec-102] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:50:58.952 [http-nio-8080-exec-102] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:50:58.952 [http-nio-8080-exec-102] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@a6d1c93, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:50:58.969 [http-nio-8080-exec-102] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:50:58.969 [http-nio-8080-exec-102] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:50:58.969 [http-nio-8080-exec-102] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:50:58.969 [http-nio-8080-exec-102] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:50:58.972 [http-nio-8080-exec-102] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:50:58.973 [http-nio-8080-exec-102] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:50:58.973 [http-nio-8080-exec-102] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16bd7935] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1c613b89]
[DEBUG] 2020-02-16 20:50:59.007 [http-nio-8080-exec-102] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:50:59.007 [http-nio-8080-exec-102] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:50:59.014 [http-nio-8080-exec-102] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:50:59.014 [http-nio-8080-exec-102] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:50:59.170 [http-nio-8080-exec-102] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:50:59.170 [http-nio-8080-exec-102] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:50:59.172 [http-nio-8080-exec-102] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:50:59.172 [http-nio-8080-exec-102] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:50:59.199 [http-nio-8080-exec-102] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:50:59.199 [http-nio-8080-exec-102] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:50:59.199 [http-nio-8080-exec-102] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:50:59.199 [http-nio-8080-exec-102] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:50:59.199 [http-nio-8080-exec-102] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:50:59.202 [http-nio-8080-exec-102] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:50:59.202 [http-nio-8080-exec-102] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:50:59.202 [http-nio-8080-exec-102] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:50:59.202 [http-nio-8080-exec-102] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:50:59.202 [http-nio-8080-exec-102] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:50:59.202 [http-nio-8080-exec-102] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:50:59.202 [http-nio-8080-exec-102] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:50:59.218 [http-nio-8080-exec-102] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48c3ce03]
[DEBUG] 2020-02-16 20:50:59.219 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:50:59.219 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:50:59.219 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:50:59.219 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:50:59.222 [http-nio-8080-exec-102] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12906814]
[DEBUG] 2020-02-16 20:50:59.223 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:50:59.223 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:50:59.223 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:50:59.223 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:50:59.223 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:50:59.223 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:50:59.223 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:50:59.223 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:50:59.223 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:50:59.227 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:50:59.227 [http-nio-8080-exec-102] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:50:59.228 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:50:59.228 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:50:59.228 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:50:59.228 [http-nio-8080-exec-102] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5ffb2d19]
[DEBUG] 2020-02-16 20:50:59.230 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:50:59.230 [http-nio-8080-exec-102] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:50:59.238 [http-nio-8080-exec-102] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:50:59.243 [http-nio-8080-exec-102] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:50:59.244 [http-nio-8080-exec-102] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:50:59.244 [http-nio-8080-exec-102] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42900836]
[DEBUG] 2020-02-16 20:50:59.244 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:50:59.244 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:50:59.244 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:50:59.244 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:50:59.244 [http-nio-8080-exec-102] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47d202dc]
[DEBUG] 2020-02-16 20:50:59.244 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:50:59.244 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:50:59.245 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:50:59.245 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:50:59.245 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:50:59.245 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:50:59.245 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:50:59.245 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:50:59.245 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:50:59.245 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:50:59.245 [http-nio-8080-exec-102] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:50:59.245 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:50:59.245 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:50:59.245 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:50:59.245 [http-nio-8080-exec-102] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@bfd035f]
[DEBUG] 2020-02-16 20:50:59.245 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:50:59.245 [http-nio-8080-exec-102] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:50:59.245 [http-nio-8080-exec-102] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:50:59.246 [http-nio-8080-exec-102] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:50:59.246 [http-nio-8080-exec-102] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:50:59.258 [http-nio-8080-exec-102] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:50:59.259 [http-nio-8080-exec-102] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:50:59.259 [http-nio-8080-exec-102] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:50:59.259 [http-nio-8080-exec-102] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:50:59.259 [http-nio-8080-exec-102] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:50:59.259 [http-nio-8080-exec-102] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:50:59.259 [http-nio-8080-exec-102] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:50:59.259 [http-nio-8080-exec-102] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:50:59.259 [http-nio-8080-exec-102] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:50:59.259 [http-nio-8080-exec-102] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17cebb28]
[DEBUG] 2020-02-16 20:50:59.259 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:50:59.260 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:50:59.260 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:50:59.260 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:50:59.260 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:50:59.260 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:50:59.260 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:50:59.260 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:50:59.260 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:50:59.260 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:50:59.260 [http-nio-8080-exec-102] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cf1789b]
[DEBUG] 2020-02-16 20:50:59.261 [http-nio-8080-exec-102] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@611ff507]
[DEBUG] 2020-02-16 20:50:59.262 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:50:59.262 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:50:59.262 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:50:59.262 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:50:59.262 [http-nio-8080-exec-102] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:50:59.262 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:50:59.262 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:50:59.262 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:50:59.262 [http-nio-8080-exec-102] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@506c51b1]
[DEBUG] 2020-02-16 20:50:59.262 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:50:59.262 [http-nio-8080-exec-102] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:50:59.263 [http-nio-8080-exec-102] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34088b9d]
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d7da651]
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d5a8292]
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:50:59.264 [http-nio-8080-exec-102] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@285687af]
[DEBUG] 2020-02-16 20:50:59.265 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:50:59.265 [http-nio-8080-exec-102] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:50:59.265 [http-nio-8080-exec-102] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:50:59.265 [http-nio-8080-exec-102] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:50:59.265 [http-nio-8080-exec-102] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:50:59.266 [http-nio-8080-exec-102] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:50:59.266 [http-nio-8080-exec-102] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:50:59.267 [http-nio-8080-exec-102] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:50:59.270 [http-nio-8080-exec-102] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4338bb8]
[DEBUG] 2020-02-16 20:50:59.270 [http-nio-8080-exec-102] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36c1b0ee]
[DEBUG] 2020-02-16 20:50:59.270 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:50:59.270 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:50:59.270 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:50:59.271 [http-nio-8080-exec-102] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:50:59.271 [http-nio-8080-exec-102] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:50:59.271 [http-nio-8080-exec-102] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:50:59.273 [http-nio-8080-exec-102] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:50:59.273 [http-nio-8080-exec-102] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:50:59.274 [http-nio-8080-exec-102] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:50:59.300 [http-nio-8080-exec-102] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:50:59.300 [http-nio-8080-exec-102] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:50:59.300 [http-nio-8080-exec-102] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:50:59.305 [http-nio-8080-exec-102] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:50:59.305 [http-nio-8080-exec-102] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:50:59.305 [http-nio-8080-exec-102] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:50:59.305 [http-nio-8080-exec-102] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:50:59.307 [http-nio-8080-exec-102] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@f0ba1a5
[DEBUG] 2020-02-16 20:50:59.309 [http-nio-8080-exec-102] SessionFactoryRegistry - Registering SessionFactory: e184308c-64cd-40f2-a169-15ddb9f29aff (<unnamed>)
[DEBUG] 2020-02-16 20:50:59.309 [http-nio-8080-exec-102] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:50:59.373 [http-nio-8080-exec-102] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:50:59.391 [http-nio-8080-exec-102] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:50:59.405 [http-nio-8080-exec-102] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@ab1d3ef
[DEBUG] 2020-02-16 20:50:59.423 [http-nio-8080-exec-102] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:50:59.425 [http-nio-8080-exec-102] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:50:59.428 [http-nio-8080-exec-102] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:50:59.443 [http-nio-8080-exec-102] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:50:59.453 [http-nio-8080-exec-102] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:50:59.454 [http-nio-8080-exec-102] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:50:59.455 [http-nio-8080-exec-102] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:50:59.455 [http-nio-8080-exec-102] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:50:59.462 [http-nio-8080-exec-102] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:50:59.462 [http-nio-8080-exec-102] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:50:59.462 [http-nio-8080-exec-102] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:50:59.462 [http-nio-8080-exec-102] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:50:59.469 [http-nio-8080-exec-102] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:50:59.469 [http-nio-8080-exec-102] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:50:59.469 [http-nio-8080-exec-102] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:50:59.481 [http-nio-8080-exec-102] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:50:59.500 [http-nio-8080-exec-102] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:50:59.507 [http-nio-8080-exec-102] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:50:59.513 [http-nio-8080-exec-102] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:50:59.513 [http-nio-8080-exec-102] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:50:59.514 [http-nio-8080-exec-102] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:50:59.515 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:50:59.515 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.515 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:50:59.515 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.515 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:50:59.515 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.515 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:50:59.515 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.515 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:50:59.515 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.515 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:50:59.515 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.515 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:50:59.515 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.515 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:50:59.515 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.516 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:50:59.516 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.516 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:50:59.516 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.526 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:50:59.526 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.526 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:50:59.526 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.526 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@66fe3ecd
[DEBUG] 2020-02-16 20:50:59.526 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@47524248
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.527 [http-nio-8080-exec-102] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:50:59.529 [http-nio-8080-exec-102] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:50:59.530 [http-nio-8080-exec-102] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:50:59.532 [http-nio-8080-exec-102] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:50:59.535 [http-nio-8080-exec-102] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:50:59.536 [http-nio-8080-exec-102] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:50:59.539 [http-nio-8080-exec-102] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:50:59.539 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:50:59.539 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.539 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:50:59.539 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.539 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:50:59.539 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.539 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:50:59.539 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.540 [http-nio-8080-exec-102] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:50:59.540 [http-nio-8080-exec-102] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:50:59.541 [http-nio-8080-exec-102] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:50:59.541 [http-nio-8080-exec-102] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:50:59.541 [http-nio-8080-exec-102] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:50:59.542 [http-nio-8080-exec-102] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:50:59.543 [http-nio-8080-exec-102] Loader - Done entity load
[DEBUG] 2020-02-16 20:50:59.543 [http-nio-8080-exec-102] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:50:59.543 [http-nio-8080-exec-102] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:50:59.544 [http-nio-8080-exec-102] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:50:59.544 [http-nio-8080-exec-102] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:50:59.544 [http-nio-8080-exec-102] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:50:59.544 [http-nio-8080-exec-102] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:50:59.544 [http-nio-8080-exec-102] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:50:59.544 [http-nio-8080-exec-102] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:50:59.545 [http-nio-8080-exec-102] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:50:59.545 [http-nio-8080-exec-102] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:50:59.546 [http-nio-8080-exec-102] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:50:59.546 [http-nio-8080-exec-102] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:50:59.546 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:50:59.546 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.546 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:50:59.546 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.546 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:50:59.546 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.546 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:50:59.546 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.546 [http-nio-8080-exec-102] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:50:59.546 [http-nio-8080-exec-102] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:50:59.547 [http-nio-8080-exec-102] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:50:59.548 [http-nio-8080-exec-102] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:50:59.548 [http-nio-8080-exec-102] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:50:59.548 [http-nio-8080-exec-102] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:50:59.548 [http-nio-8080-exec-102] Loader - Done entity load
[DEBUG] 2020-02-16 20:50:59.548 [http-nio-8080-exec-102] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:50:59.548 [http-nio-8080-exec-102] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:50:59.548 [http-nio-8080-exec-102] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:50:59.548 [http-nio-8080-exec-102] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:50:59.548 [http-nio-8080-exec-102] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:50:59.548 [http-nio-8080-exec-102] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:50:59.549 [http-nio-8080-exec-102] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:50:59.554 [http-nio-8080-exec-102] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:50:59.555 [http-nio-8080-exec-102] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:50:59.557 [http-nio-8080-exec-102] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:50:59.557 [http-nio-8080-exec-102] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:50:59.557 [http-nio-8080-exec-102] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:50:59.557 [http-nio-8080-exec-102] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:50:59.557 [http-nio-8080-exec-102] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:50:59.557 [http-nio-8080-exec-102] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:50:59.557 [http-nio-8080-exec-102] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:50:59.557 [http-nio-8080-exec-102] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:50:59.558 [http-nio-8080-exec-102] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:50:59.558 [http-nio-8080-exec-102] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:50:59.558 [http-nio-8080-exec-102] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:50:59.558 [http-nio-8080-exec-102] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:50:59.558 [http-nio-8080-exec-102] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:50:59.558 [http-nio-8080-exec-102] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:50:59.558 [http-nio-8080-exec-102] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:50:59.560 [http-nio-8080-exec-102] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:50:59.562 [http-nio-8080-exec-102] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:50:59.562 [http-nio-8080-exec-102] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:50:59.562 [http-nio-8080-exec-102] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:50:59.562 [http-nio-8080-exec-102] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:50:59.562 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:50:59.562 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.562 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:50:59.562 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.562 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:50:59.562 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.562 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:50:59.562 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.562 [http-nio-8080-exec-102] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:50:59.562 [http-nio-8080-exec-102] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.572 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@65e3c254
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] Loader - Done entity load
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:50:59.573 [http-nio-8080-exec-102] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:50:59.575 [http-nio-8080-exec-102] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:50:59.575 [http-nio-8080-exec-102] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:50:59.575 [http-nio-8080-exec-102] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:50:59.575 [http-nio-8080-exec-102] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@17195db7
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] Loader - Done entity load
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:50:59.576 [http-nio-8080-exec-102] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:52:25.680 [http-nio-8080-exec-110] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:52:25.685 [http-nio-8080-exec-110] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:52:25.691 [http-nio-8080-exec-110] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:52:25.763 [http-nio-8080-exec-110] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:52:25.764 [http-nio-8080-exec-110] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:52:25.878 [http-nio-8080-exec-110] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:52:25.878 [http-nio-8080-exec-110] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:52:25.880 [http-nio-8080-exec-110] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:52:26.045 [http-nio-8080-exec-110] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:52:26.063 [http-nio-8080-exec-110] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:52:26.064 [http-nio-8080-exec-110] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:52:26.080 [http-nio-8080-exec-110] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:52:26.112 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@683b4fc2
[DEBUG] 2020-02-16 20:52:26.112 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@683b4fc2
[DEBUG] 2020-02-16 20:52:26.112 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@683b4fc2
[DEBUG] 2020-02-16 20:52:26.112 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29849345
[DEBUG] 2020-02-16 20:52:26.112 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@59e58e78
[DEBUG] 2020-02-16 20:52:26.113 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4d714d7d
[DEBUG] 2020-02-16 20:52:26.114 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7e32bc9
[DEBUG] 2020-02-16 20:52:26.114 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7e32bc9
[DEBUG] 2020-02-16 20:52:26.114 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7e32bc9
[DEBUG] 2020-02-16 20:52:26.115 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5b60c545
[DEBUG] 2020-02-16 20:52:26.115 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5b60c545
[DEBUG] 2020-02-16 20:52:26.115 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5b60c545
[DEBUG] 2020-02-16 20:52:26.116 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@31ab11d3
[DEBUG] 2020-02-16 20:52:26.116 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@31ab11d3
[DEBUG] 2020-02-16 20:52:26.116 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@31ab11d3
[DEBUG] 2020-02-16 20:52:26.117 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3a923ec2
[DEBUG] 2020-02-16 20:52:26.117 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3a923ec2
[DEBUG] 2020-02-16 20:52:26.117 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3a923ec2
[DEBUG] 2020-02-16 20:52:26.117 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@689828a5
[DEBUG] 2020-02-16 20:52:26.117 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@689828a5
[DEBUG] 2020-02-16 20:52:26.117 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@689828a5
[DEBUG] 2020-02-16 20:52:26.118 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@49b3d9ef
[DEBUG] 2020-02-16 20:52:26.118 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@49b3d9ef
[DEBUG] 2020-02-16 20:52:26.118 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@49b3d9ef
[DEBUG] 2020-02-16 20:52:26.118 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@52aa6883
[DEBUG] 2020-02-16 20:52:26.119 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@52aa6883
[DEBUG] 2020-02-16 20:52:26.119 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@52aa6883
[DEBUG] 2020-02-16 20:52:26.119 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4203d556
[DEBUG] 2020-02-16 20:52:26.119 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4203d556
[DEBUG] 2020-02-16 20:52:26.120 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@61fb443a
[DEBUG] 2020-02-16 20:52:26.120 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@61fb443a
[DEBUG] 2020-02-16 20:52:26.120 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@27fd1540
[DEBUG] 2020-02-16 20:52:26.120 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@27fd1540
[DEBUG] 2020-02-16 20:52:26.120 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@54394fb4
[DEBUG] 2020-02-16 20:52:26.121 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@66caf709
[DEBUG] 2020-02-16 20:52:26.122 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@660d70b1
[DEBUG] 2020-02-16 20:52:26.122 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@660d70b1
[DEBUG] 2020-02-16 20:52:26.124 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2e846750
[DEBUG] 2020-02-16 20:52:26.124 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2e846750
[DEBUG] 2020-02-16 20:52:26.125 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6689917b
[DEBUG] 2020-02-16 20:52:26.125 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6689917b
[DEBUG] 2020-02-16 20:52:26.126 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@52884f10
[DEBUG] 2020-02-16 20:52:26.126 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@52884f10
[DEBUG] 2020-02-16 20:52:26.127 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7ae1680e
[DEBUG] 2020-02-16 20:52:26.127 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7ae1680e
[DEBUG] 2020-02-16 20:52:26.127 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2a1404cb
[DEBUG] 2020-02-16 20:52:26.127 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2a1404cb
[DEBUG] 2020-02-16 20:52:26.128 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@295eead5
[DEBUG] 2020-02-16 20:52:26.128 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@295eead5
[DEBUG] 2020-02-16 20:52:26.129 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@457bf375
[DEBUG] 2020-02-16 20:52:26.129 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@457bf375
[DEBUG] 2020-02-16 20:52:26.130 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4df32f77
[DEBUG] 2020-02-16 20:52:26.130 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4df32f77
[DEBUG] 2020-02-16 20:52:26.131 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6783eb9d
[DEBUG] 2020-02-16 20:52:26.131 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6783eb9d
[DEBUG] 2020-02-16 20:52:26.132 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6aa4cf19
[DEBUG] 2020-02-16 20:52:26.132 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6aa4cf19
[DEBUG] 2020-02-16 20:52:26.133 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@628b1bde
[DEBUG] 2020-02-16 20:52:26.133 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@628b1bde
[DEBUG] 2020-02-16 20:52:26.133 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@628b1bde
[DEBUG] 2020-02-16 20:52:26.135 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@fee3a41
[DEBUG] 2020-02-16 20:52:26.136 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5c6af688
[DEBUG] 2020-02-16 20:52:26.136 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5c6af688
[DEBUG] 2020-02-16 20:52:26.136 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5c6af688
[DEBUG] 2020-02-16 20:52:26.136 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1508395a
[DEBUG] 2020-02-16 20:52:26.137 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@38bd473d
[DEBUG] 2020-02-16 20:52:26.137 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@38bd473d
[DEBUG] 2020-02-16 20:52:26.138 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4cdd7ec8
[DEBUG] 2020-02-16 20:52:26.138 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4cdd7ec8
[DEBUG] 2020-02-16 20:52:26.138 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@34d51f45
[DEBUG] 2020-02-16 20:52:26.138 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@34d51f45
[DEBUG] 2020-02-16 20:52:26.139 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@127d33bb
[DEBUG] 2020-02-16 20:52:26.139 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@127d33bb
[DEBUG] 2020-02-16 20:52:26.139 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73d3d20c
[DEBUG] 2020-02-16 20:52:26.139 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73d3d20c
[DEBUG] 2020-02-16 20:52:26.139 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4552f081
[DEBUG] 2020-02-16 20:52:26.140 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@839e48
[DEBUG] 2020-02-16 20:52:26.140 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@839e48
[DEBUG] 2020-02-16 20:52:26.140 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@839e48
[DEBUG] 2020-02-16 20:52:26.141 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e2ca7db
[DEBUG] 2020-02-16 20:52:26.141 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e2ca7db
[DEBUG] 2020-02-16 20:52:26.141 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e2ca7db
[DEBUG] 2020-02-16 20:52:26.142 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@12a672c8
[DEBUG] 2020-02-16 20:52:26.142 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@35d20b48
[DEBUG] 2020-02-16 20:52:26.142 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@628dc1c8
[DEBUG] 2020-02-16 20:52:26.143 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@628dc1c8
[DEBUG] 2020-02-16 20:52:26.143 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@628dc1c8
[DEBUG] 2020-02-16 20:52:26.143 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6c21139
[DEBUG] 2020-02-16 20:52:26.143 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6c21139
[DEBUG] 2020-02-16 20:52:26.143 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6c21139
[DEBUG] 2020-02-16 20:52:26.143 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@27d9e53f
[DEBUG] 2020-02-16 20:52:26.144 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4973b954
[DEBUG] 2020-02-16 20:52:26.145 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4e695817
[DEBUG] 2020-02-16 20:52:26.145 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4e695817
[DEBUG] 2020-02-16 20:52:26.145 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c244cf8
[DEBUG] 2020-02-16 20:52:26.146 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4918d251
[DEBUG] 2020-02-16 20:52:26.146 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4918d251
[DEBUG] 2020-02-16 20:52:26.146 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@12e21678
[DEBUG] 2020-02-16 20:52:26.146 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@12e21678
[DEBUG] 2020-02-16 20:52:26.147 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27ebf0e5
[DEBUG] 2020-02-16 20:52:26.147 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@56f6aea0
[DEBUG] 2020-02-16 20:52:26.148 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@20fade2c
[DEBUG] 2020-02-16 20:52:26.150 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@a2c1d4a
[DEBUG] 2020-02-16 20:52:26.150 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@a2c1d4a
[DEBUG] 2020-02-16 20:52:26.151 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@649adb54
[DEBUG] 2020-02-16 20:52:26.151 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5ae5d750
[DEBUG] 2020-02-16 20:52:26.151 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48d8dcb8
[DEBUG] 2020-02-16 20:52:26.155 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74de86cf
[DEBUG] 2020-02-16 20:52:26.155 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@462cb37b
[DEBUG] 2020-02-16 20:52:26.155 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3287a3b9
[DEBUG] 2020-02-16 20:52:26.155 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3cb4844d
[DEBUG] 2020-02-16 20:52:26.155 [http-nio-8080-exec-110] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3cdc95ea
[DEBUG] 2020-02-16 20:52:26.187 [http-nio-8080-exec-110] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:52:26.187 [http-nio-8080-exec-110] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:52:26.188 [http-nio-8080-exec-110] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:52:26.188 [http-nio-8080-exec-110] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:52:26.189 [http-nio-8080-exec-110] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:52:26.190 [http-nio-8080-exec-110] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:52:26.191 [http-nio-8080-exec-110] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:52:26.192 [http-nio-8080-exec-110] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:52:26.193 [http-nio-8080-exec-110] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:52:26.194 [http-nio-8080-exec-110] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:52:26.194 [http-nio-8080-exec-110] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:52:26.195 [http-nio-8080-exec-110] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:52:26.195 [http-nio-8080-exec-110] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:52:26.195 [http-nio-8080-exec-110] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:52:26.199 [http-nio-8080-exec-110] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:52:26.199 [http-nio-8080-exec-110] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:52:26.199 [http-nio-8080-exec-110] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:52:26.287 [http-nio-8080-exec-110] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:52:26.561 [http-nio-8080-exec-110] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:52:26.564 [http-nio-8080-exec-110] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:52:26.564 [http-nio-8080-exec-110] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:52:26.589 [http-nio-8080-exec-110] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:52:26.604 [http-nio-8080-exec-110] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:52:26.629 [http-nio-8080-exec-110] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:52:26.656 [http-nio-8080-exec-110] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:52:26.658 [http-nio-8080-exec-110] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@431efa4f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2ae3df4c]
[DEBUG] 2020-02-16 20:52:26.696 [http-nio-8080-exec-110] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:52:26.716 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:52:26.720 [http-nio-8080-exec-110] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:52:26.721 [http-nio-8080-exec-110] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:52:26.744 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.746 [http-nio-8080-exec-110] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:52:26.747 [http-nio-8080-exec-110] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:52:26.748 [http-nio-8080-exec-110] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:52:26.750 [http-nio-8080-exec-110] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:52:26.752 [http-nio-8080-exec-110] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:52:26.752 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:52:26.753 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:52:26.754 [http-nio-8080-exec-110] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:52:26.755 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:52:26.757 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.759 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.765 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.766 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.767 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:52:26.768 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:52:26.768 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:52:26.768 [http-nio-8080-exec-110] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:52:26.770 [http-nio-8080-exec-110] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:52:26.770 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.770 [http-nio-8080-exec-110] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:52:26.770 [http-nio-8080-exec-110] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:52:26.770 [http-nio-8080-exec-110] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:52:26.770 [http-nio-8080-exec-110] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:52:26.770 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:52:26.770 [http-nio-8080-exec-110] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:52:26.770 [http-nio-8080-exec-110] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:52:26.770 [http-nio-8080-exec-110] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:52:26.771 [http-nio-8080-exec-110] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:52:26.771 [http-nio-8080-exec-110] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:52:26.771 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:52:26.771 [http-nio-8080-exec-110] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:52:26.771 [http-nio-8080-exec-110] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:52:26.773 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.773 [http-nio-8080-exec-110] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:52:26.773 [http-nio-8080-exec-110] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:52:26.773 [http-nio-8080-exec-110] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:52:26.773 [http-nio-8080-exec-110] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:52:26.773 [http-nio-8080-exec-110] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:52:26.773 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.773 [http-nio-8080-exec-110] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:52:26.773 [http-nio-8080-exec-110] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:52:26.773 [http-nio-8080-exec-110] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:52:26.773 [http-nio-8080-exec-110] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:52:26.777 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.778 [http-nio-8080-exec-110] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:52:26.778 [http-nio-8080-exec-110] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:52:26.778 [http-nio-8080-exec-110] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:52:26.778 [http-nio-8080-exec-110] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:52:26.778 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.778 [http-nio-8080-exec-110] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:52:26.778 [http-nio-8080-exec-110] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:52:26.778 [http-nio-8080-exec-110] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:52:26.778 [http-nio-8080-exec-110] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:52:26.778 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:52:26.778 [http-nio-8080-exec-110] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:52:26.779 [http-nio-8080-exec-110] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:52:26.780 [http-nio-8080-exec-110] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:52:26.780 [http-nio-8080-exec-110] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:52:26.780 [http-nio-8080-exec-110] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:52:26.780 [http-nio-8080-exec-110] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:52:26.780 [http-nio-8080-exec-110] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:52:26.780 [http-nio-8080-exec-110] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:52:26.780 [http-nio-8080-exec-110] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:52:26.780 [http-nio-8080-exec-110] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:52:26.780 [http-nio-8080-exec-110] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:52:26.780 [http-nio-8080-exec-110] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:52:26.780 [http-nio-8080-exec-110] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:52:26.780 [http-nio-8080-exec-110] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:52:26.780 [http-nio-8080-exec-110] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:52:26.780 [http-nio-8080-exec-110] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:52:26.781 [http-nio-8080-exec-110] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:52:26.781 [http-nio-8080-exec-110] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:52:26.787 [http-nio-8080-exec-110] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:52:26.787 [http-nio-8080-exec-110] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:52:26.787 [http-nio-8080-exec-110] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:52:26.787 [http-nio-8080-exec-110] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:52:26.788 [http-nio-8080-exec-110] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:52:26.788 [http-nio-8080-exec-110] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:52:26.788 [http-nio-8080-exec-110] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:52:26.788 [http-nio-8080-exec-110] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:52:26.789 [http-nio-8080-exec-110] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:52:26.791 [http-nio-8080-exec-110] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:52:26.791 [http-nio-8080-exec-110] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:52:26.832 [http-nio-8080-exec-110] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:52:26.833 [http-nio-8080-exec-110] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:52:26.833 [http-nio-8080-exec-110] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:52:26.833 [http-nio-8080-exec-110] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:52:26.833 [http-nio-8080-exec-110] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:52:26.833 [http-nio-8080-exec-110] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:52:26.833 [http-nio-8080-exec-110] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:52:26.833 [http-nio-8080-exec-110] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:52:26.834 [http-nio-8080-exec-110] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:52:26.870 [http-nio-8080-exec-110] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:52:26.882 [http-nio-8080-exec-110] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:52:26.882 [http-nio-8080-exec-110] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@29e55d78, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:52:26.899 [http-nio-8080-exec-110] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:52:26.899 [http-nio-8080-exec-110] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:52:26.900 [http-nio-8080-exec-110] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:52:26.900 [http-nio-8080-exec-110] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:52:26.902 [http-nio-8080-exec-110] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:52:26.903 [http-nio-8080-exec-110] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:52:26.903 [http-nio-8080-exec-110] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@431efa4f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@374325c0]
[DEBUG] 2020-02-16 20:52:26.932 [http-nio-8080-exec-110] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:52:26.932 [http-nio-8080-exec-110] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:52:26.938 [http-nio-8080-exec-110] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:52:26.938 [http-nio-8080-exec-110] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:52:27.108 [http-nio-8080-exec-110] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:52:27.108 [http-nio-8080-exec-110] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:52:27.109 [http-nio-8080-exec-110] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:52:27.109 [http-nio-8080-exec-110] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:52:27.152 [http-nio-8080-exec-110] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:52:27.152 [http-nio-8080-exec-110] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:52:27.152 [http-nio-8080-exec-110] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:52:27.152 [http-nio-8080-exec-110] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:52:27.152 [http-nio-8080-exec-110] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:52:27.155 [http-nio-8080-exec-110] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:52:27.155 [http-nio-8080-exec-110] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:52:27.155 [http-nio-8080-exec-110] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:52:27.155 [http-nio-8080-exec-110] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:52:27.155 [http-nio-8080-exec-110] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:52:27.155 [http-nio-8080-exec-110] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:52:27.155 [http-nio-8080-exec-110] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:52:27.177 [http-nio-8080-exec-110] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ac489b]
[DEBUG] 2020-02-16 20:52:27.178 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:52:27.178 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:52:27.178 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:52:27.178 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:52:27.183 [http-nio-8080-exec-110] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54dda1b2]
[DEBUG] 2020-02-16 20:52:27.184 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:52:27.185 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:52:27.185 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:52:27.185 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:52:27.185 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:52:27.185 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:52:27.185 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:52:27.185 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:52:27.185 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:52:27.185 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:52:27.185 [http-nio-8080-exec-110] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:52:27.185 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:52:27.185 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:52:27.185 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:52:27.186 [http-nio-8080-exec-110] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2a3d5303]
[DEBUG] 2020-02-16 20:52:27.187 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:52:27.187 [http-nio-8080-exec-110] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:52:27.198 [http-nio-8080-exec-110] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:52:27.204 [http-nio-8080-exec-110] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:52:27.207 [http-nio-8080-exec-110] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4921e7b8]
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6169c5a4]
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:52:27.208 [http-nio-8080-exec-110] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:52:27.209 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:52:27.209 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:52:27.209 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:52:27.209 [http-nio-8080-exec-110] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@35dbcbe]
[DEBUG] 2020-02-16 20:52:27.209 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:52:27.209 [http-nio-8080-exec-110] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:52:27.209 [http-nio-8080-exec-110] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:52:27.209 [http-nio-8080-exec-110] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:52:27.209 [http-nio-8080-exec-110] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:52:27.219 [http-nio-8080-exec-110] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:52:27.220 [http-nio-8080-exec-110] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f9e486]
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:52:27.221 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:52:27.222 [http-nio-8080-exec-110] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ee615de]
[DEBUG] 2020-02-16 20:52:27.224 [http-nio-8080-exec-110] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7858fddc]
[DEBUG] 2020-02-16 20:52:27.226 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:52:27.226 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:52:27.226 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:52:27.226 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:52:27.226 [http-nio-8080-exec-110] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:52:27.226 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:52:27.226 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:52:27.226 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:52:27.226 [http-nio-8080-exec-110] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@612f59cc]
[DEBUG] 2020-02-16 20:52:27.226 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:52:27.226 [http-nio-8080-exec-110] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:52:27.227 [http-nio-8080-exec-110] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8dc6572]
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@176d1b38]
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24286586]
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:52:27.228 [http-nio-8080-exec-110] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2bea0a34]
[DEBUG] 2020-02-16 20:52:27.229 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:52:27.229 [http-nio-8080-exec-110] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:52:27.229 [http-nio-8080-exec-110] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:52:27.229 [http-nio-8080-exec-110] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:52:27.229 [http-nio-8080-exec-110] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:52:27.230 [http-nio-8080-exec-110] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:52:27.230 [http-nio-8080-exec-110] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:52:27.232 [http-nio-8080-exec-110] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:52:27.235 [http-nio-8080-exec-110] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65382644]
[DEBUG] 2020-02-16 20:52:27.235 [http-nio-8080-exec-110] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c6e8c70]
[DEBUG] 2020-02-16 20:52:27.235 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:52:27.235 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:52:27.235 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:52:27.235 [http-nio-8080-exec-110] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:52:27.235 [http-nio-8080-exec-110] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:52:27.235 [http-nio-8080-exec-110] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:52:27.237 [http-nio-8080-exec-110] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:52:27.237 [http-nio-8080-exec-110] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:52:27.237 [http-nio-8080-exec-110] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:52:27.256 [http-nio-8080-exec-110] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:52:27.257 [http-nio-8080-exec-110] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:52:27.257 [http-nio-8080-exec-110] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:52:27.262 [http-nio-8080-exec-110] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:52:27.262 [http-nio-8080-exec-110] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:52:27.263 [http-nio-8080-exec-110] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:52:27.263 [http-nio-8080-exec-110] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:52:27.264 [http-nio-8080-exec-110] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7a12ab5c
[DEBUG] 2020-02-16 20:52:27.265 [http-nio-8080-exec-110] SessionFactoryRegistry - Registering SessionFactory: ab3e3f87-cc6a-49c8-a493-e3d44d54beb5 (<unnamed>)
[DEBUG] 2020-02-16 20:52:27.265 [http-nio-8080-exec-110] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:52:27.328 [http-nio-8080-exec-110] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:52:27.347 [http-nio-8080-exec-110] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:52:27.362 [http-nio-8080-exec-110] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3a20945b
[DEBUG] 2020-02-16 20:52:27.379 [http-nio-8080-exec-110] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:52:27.385 [http-nio-8080-exec-110] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:52:27.389 [http-nio-8080-exec-110] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:52:27.404 [http-nio-8080-exec-110] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:52:27.429 [http-nio-8080-exec-110] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:52:27.429 [http-nio-8080-exec-110] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:52:27.430 [http-nio-8080-exec-110] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:52:27.430 [http-nio-8080-exec-110] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:52:27.439 [http-nio-8080-exec-110] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:52:27.439 [http-nio-8080-exec-110] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:52:27.440 [http-nio-8080-exec-110] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:52:27.440 [http-nio-8080-exec-110] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:52:27.446 [http-nio-8080-exec-110] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:52:27.446 [http-nio-8080-exec-110] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:52:27.446 [http-nio-8080-exec-110] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:52:27.520 [http-nio-8080-exec-110] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:52:27.621 [http-nio-8080-exec-110] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:52:27.625 [http-nio-8080-exec-110] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:52:27.637 [http-nio-8080-exec-110] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:52:27.637 [http-nio-8080-exec-110] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:52:27.639 [http-nio-8080-exec-110] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:52:27.640 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:52:27.641 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.647 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:52:27.647 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.647 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:52:27.647 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.647 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@1a22c6a2
[DEBUG] 2020-02-16 20:52:27.647 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@12c3e3eb
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.648 [http-nio-8080-exec-110] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:52:27.651 [http-nio-8080-exec-110] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:52:27.652 [http-nio-8080-exec-110] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:52:27.657 [http-nio-8080-exec-110] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:52:27.660 [http-nio-8080-exec-110] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:52:27.661 [http-nio-8080-exec-110] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:52:27.664 [http-nio-8080-exec-110] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:52:27.664 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:52:27.664 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.664 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:52:27.664 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.664 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:52:27.664 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.664 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:52:27.664 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.664 [http-nio-8080-exec-110] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:52:27.665 [http-nio-8080-exec-110] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:52:27.666 [http-nio-8080-exec-110] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:52:27.667 [http-nio-8080-exec-110] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:52:27.668 [http-nio-8080-exec-110] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:52:27.668 [http-nio-8080-exec-110] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:52:27.668 [http-nio-8080-exec-110] Loader - Done entity load
[DEBUG] 2020-02-16 20:52:27.668 [http-nio-8080-exec-110] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:52:27.669 [http-nio-8080-exec-110] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:52:27.669 [http-nio-8080-exec-110] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:52:27.669 [http-nio-8080-exec-110] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:52:27.669 [http-nio-8080-exec-110] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:52:27.669 [http-nio-8080-exec-110] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:52:27.670 [http-nio-8080-exec-110] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:52:27.670 [http-nio-8080-exec-110] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:52:27.672 [http-nio-8080-exec-110] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:52:27.672 [http-nio-8080-exec-110] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:52:27.673 [http-nio-8080-exec-110] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:52:27.673 [http-nio-8080-exec-110] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:52:27.673 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:52:27.673 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.673 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:52:27.673 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.673 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:52:27.673 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.673 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:52:27.673 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.673 [http-nio-8080-exec-110] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:52:27.673 [http-nio-8080-exec-110] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:52:27.675 [http-nio-8080-exec-110] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:52:27.675 [http-nio-8080-exec-110] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:52:27.675 [http-nio-8080-exec-110] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:52:27.675 [http-nio-8080-exec-110] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:52:27.675 [http-nio-8080-exec-110] Loader - Done entity load
[DEBUG] 2020-02-16 20:52:27.675 [http-nio-8080-exec-110] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:52:27.675 [http-nio-8080-exec-110] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:52:27.675 [http-nio-8080-exec-110] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:52:27.675 [http-nio-8080-exec-110] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:52:27.675 [http-nio-8080-exec-110] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:52:27.675 [http-nio-8080-exec-110] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:52:27.677 [http-nio-8080-exec-110] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:52:27.679 [http-nio-8080-exec-110] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:52:27.680 [http-nio-8080-exec-110] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:52:27.680 [http-nio-8080-exec-110] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:52:27.681 [http-nio-8080-exec-110] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:52:27.681 [http-nio-8080-exec-110] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:52:27.681 [http-nio-8080-exec-110] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:52:27.681 [http-nio-8080-exec-110] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:52:27.681 [http-nio-8080-exec-110] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:52:27.681 [http-nio-8080-exec-110] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:52:27.681 [http-nio-8080-exec-110] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:52:27.681 [http-nio-8080-exec-110] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:52:27.681 [http-nio-8080-exec-110] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:52:27.682 [http-nio-8080-exec-110] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:52:27.682 [http-nio-8080-exec-110] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:52:27.682 [http-nio-8080-exec-110] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:52:27.682 [http-nio-8080-exec-110] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:52:27.682 [http-nio-8080-exec-110] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:52:27.683 [http-nio-8080-exec-110] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:52:27.683 [http-nio-8080-exec-110] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:52:27.684 [http-nio-8080-exec-110] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:52:27.684 [http-nio-8080-exec-110] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:52:27.685 [http-nio-8080-exec-110] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:52:27.685 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:52:27.685 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.685 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:52:27.685 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.685 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:52:27.685 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.685 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:52:27.685 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.685 [http-nio-8080-exec-110] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:52:27.685 [http-nio-8080-exec-110] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:52:27.687 [http-nio-8080-exec-110] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:52:27.688 [http-nio-8080-exec-110] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:52:27.689 [http-nio-8080-exec-110] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:52:27.689 [http-nio-8080-exec-110] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@218d9cf
[DEBUG] 2020-02-16 20:52:27.690 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.691 [http-nio-8080-exec-110] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:52:27.691 [http-nio-8080-exec-110] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:52:27.691 [http-nio-8080-exec-110] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:52:27.691 [http-nio-8080-exec-110] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:52:27.691 [http-nio-8080-exec-110] Loader - Done entity load
[DEBUG] 2020-02-16 20:52:27.691 [http-nio-8080-exec-110] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:52:27.691 [http-nio-8080-exec-110] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:52:27.691 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:52:27.691 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.691 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:52:27.691 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.691 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:52:27.691 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.691 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:52:27.692 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.692 [http-nio-8080-exec-110] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:52:27.692 [http-nio-8080-exec-110] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:52:27.693 [http-nio-8080-exec-110] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:52:27.693 [http-nio-8080-exec-110] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:52:27.693 [http-nio-8080-exec-110] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@76e5e360
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] Loader - Done entity load
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:52:27.694 [http-nio-8080-exec-110] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:53:30.962 [http-nio-8080-exec-105] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:53:30.967 [http-nio-8080-exec-105] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:53:30.970 [http-nio-8080-exec-105] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:53:31.037 [http-nio-8080-exec-105] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:53:31.038 [http-nio-8080-exec-105] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:53:31.125 [http-nio-8080-exec-105] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:53:31.126 [http-nio-8080-exec-105] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:53:31.127 [http-nio-8080-exec-105] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:53:31.278 [http-nio-8080-exec-105] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:53:31.297 [http-nio-8080-exec-105] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:53:31.300 [http-nio-8080-exec-105] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:53:31.322 [http-nio-8080-exec-105] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:53:31.351 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7aa37fda
[DEBUG] 2020-02-16 20:53:31.352 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7aa37fda
[DEBUG] 2020-02-16 20:53:31.352 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7aa37fda
[DEBUG] 2020-02-16 20:53:31.352 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4f81f405
[DEBUG] 2020-02-16 20:53:31.352 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@65e3d8b9
[DEBUG] 2020-02-16 20:53:31.352 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4133994c
[DEBUG] 2020-02-16 20:53:31.353 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@ea14421
[DEBUG] 2020-02-16 20:53:31.353 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@ea14421
[DEBUG] 2020-02-16 20:53:31.353 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@ea14421
[DEBUG] 2020-02-16 20:53:31.354 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@44ec7f9a
[DEBUG] 2020-02-16 20:53:31.354 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@44ec7f9a
[DEBUG] 2020-02-16 20:53:31.354 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@44ec7f9a
[DEBUG] 2020-02-16 20:53:31.355 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@31b61b3e
[DEBUG] 2020-02-16 20:53:31.355 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@31b61b3e
[DEBUG] 2020-02-16 20:53:31.355 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@31b61b3e
[DEBUG] 2020-02-16 20:53:31.355 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3ee7e64f
[DEBUG] 2020-02-16 20:53:31.355 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3ee7e64f
[DEBUG] 2020-02-16 20:53:31.355 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ee7e64f
[DEBUG] 2020-02-16 20:53:31.356 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@764b9de5
[DEBUG] 2020-02-16 20:53:31.356 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@764b9de5
[DEBUG] 2020-02-16 20:53:31.356 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@764b9de5
[DEBUG] 2020-02-16 20:53:31.357 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4f0caf28
[DEBUG] 2020-02-16 20:53:31.357 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4f0caf28
[DEBUG] 2020-02-16 20:53:31.357 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4f0caf28
[DEBUG] 2020-02-16 20:53:31.357 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2fad2bb9
[DEBUG] 2020-02-16 20:53:31.357 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2fad2bb9
[DEBUG] 2020-02-16 20:53:31.357 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2fad2bb9
[DEBUG] 2020-02-16 20:53:31.358 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5252ad91
[DEBUG] 2020-02-16 20:53:31.358 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5252ad91
[DEBUG] 2020-02-16 20:53:31.360 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4e512d50
[DEBUG] 2020-02-16 20:53:31.360 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4e512d50
[DEBUG] 2020-02-16 20:53:31.361 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6aae337d
[DEBUG] 2020-02-16 20:53:31.362 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6aae337d
[DEBUG] 2020-02-16 20:53:31.362 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28761c3e
[DEBUG] 2020-02-16 20:53:31.362 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6a93a000
[DEBUG] 2020-02-16 20:53:31.363 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@55857b9e
[DEBUG] 2020-02-16 20:53:31.363 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55857b9e
[DEBUG] 2020-02-16 20:53:31.365 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@825c57c
[DEBUG] 2020-02-16 20:53:31.365 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@825c57c
[DEBUG] 2020-02-16 20:53:31.373 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@47d13779
[DEBUG] 2020-02-16 20:53:31.373 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@47d13779
[DEBUG] 2020-02-16 20:53:31.374 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2cf8fce
[DEBUG] 2020-02-16 20:53:31.374 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2cf8fce
[DEBUG] 2020-02-16 20:53:31.375 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2576794e
[DEBUG] 2020-02-16 20:53:31.375 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2576794e
[DEBUG] 2020-02-16 20:53:31.375 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@430b6e04
[DEBUG] 2020-02-16 20:53:31.375 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@430b6e04
[DEBUG] 2020-02-16 20:53:31.376 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5b88aa22
[DEBUG] 2020-02-16 20:53:31.376 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5b88aa22
[DEBUG] 2020-02-16 20:53:31.379 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@50d92232
[DEBUG] 2020-02-16 20:53:31.379 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@50d92232
[DEBUG] 2020-02-16 20:53:31.380 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6d2104b1
[DEBUG] 2020-02-16 20:53:31.385 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6d2104b1
[DEBUG] 2020-02-16 20:53:31.386 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@558e0478
[DEBUG] 2020-02-16 20:53:31.386 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@558e0478
[DEBUG] 2020-02-16 20:53:31.387 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6bd2f6e
[DEBUG] 2020-02-16 20:53:31.387 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6bd2f6e
[DEBUG] 2020-02-16 20:53:31.388 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7143ebd7
[DEBUG] 2020-02-16 20:53:31.388 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7143ebd7
[DEBUG] 2020-02-16 20:53:31.388 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7143ebd7
[DEBUG] 2020-02-16 20:53:31.390 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b91b3c4
[DEBUG] 2020-02-16 20:53:31.390 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6996f4ad
[DEBUG] 2020-02-16 20:53:31.390 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6996f4ad
[DEBUG] 2020-02-16 20:53:31.390 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6996f4ad
[DEBUG] 2020-02-16 20:53:31.391 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4efb82ca
[DEBUG] 2020-02-16 20:53:31.393 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4dd04109
[DEBUG] 2020-02-16 20:53:31.393 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4dd04109
[DEBUG] 2020-02-16 20:53:31.394 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@65aa3af4
[DEBUG] 2020-02-16 20:53:31.395 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@65aa3af4
[DEBUG] 2020-02-16 20:53:31.395 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4c175a3d
[DEBUG] 2020-02-16 20:53:31.395 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4c175a3d
[DEBUG] 2020-02-16 20:53:31.396 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@23760458
[DEBUG] 2020-02-16 20:53:31.396 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@23760458
[DEBUG] 2020-02-16 20:53:31.396 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f6f0269
[DEBUG] 2020-02-16 20:53:31.396 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f6f0269
[DEBUG] 2020-02-16 20:53:31.397 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3404c36
[DEBUG] 2020-02-16 20:53:31.398 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2b459e7f
[DEBUG] 2020-02-16 20:53:31.398 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2b459e7f
[DEBUG] 2020-02-16 20:53:31.398 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2b459e7f
[DEBUG] 2020-02-16 20:53:31.399 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ed5c8fb
[DEBUG] 2020-02-16 20:53:31.399 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ed5c8fb
[DEBUG] 2020-02-16 20:53:31.399 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ed5c8fb
[DEBUG] 2020-02-16 20:53:31.399 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7120ef27
[DEBUG] 2020-02-16 20:53:31.400 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6c886221
[DEBUG] 2020-02-16 20:53:31.400 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3cc10ea1
[DEBUG] 2020-02-16 20:53:31.400 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3cc10ea1
[DEBUG] 2020-02-16 20:53:31.400 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3cc10ea1
[DEBUG] 2020-02-16 20:53:31.401 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3269be15
[DEBUG] 2020-02-16 20:53:31.401 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3269be15
[DEBUG] 2020-02-16 20:53:31.401 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3269be15
[DEBUG] 2020-02-16 20:53:31.401 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@19e550ef
[DEBUG] 2020-02-16 20:53:31.401 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@690aa62d
[DEBUG] 2020-02-16 20:53:31.402 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6beab731
[DEBUG] 2020-02-16 20:53:31.402 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6beab731
[DEBUG] 2020-02-16 20:53:31.402 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@76cd861e
[DEBUG] 2020-02-16 20:53:31.403 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7f779d3a
[DEBUG] 2020-02-16 20:53:31.403 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7f779d3a
[DEBUG] 2020-02-16 20:53:31.404 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4e6aff1e
[DEBUG] 2020-02-16 20:53:31.404 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4e6aff1e
[DEBUG] 2020-02-16 20:53:31.404 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@43a44c33
[DEBUG] 2020-02-16 20:53:31.404 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5372ff41
[DEBUG] 2020-02-16 20:53:31.405 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1f901c17
[DEBUG] 2020-02-16 20:53:31.407 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6b48f49f
[DEBUG] 2020-02-16 20:53:31.407 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6b48f49f
[DEBUG] 2020-02-16 20:53:31.407 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@528cbad5
[DEBUG] 2020-02-16 20:53:31.407 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@32ff535f
[DEBUG] 2020-02-16 20:53:31.407 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5192b48c
[DEBUG] 2020-02-16 20:53:31.407 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4deee39c
[DEBUG] 2020-02-16 20:53:31.407 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7a83b2e6
[DEBUG] 2020-02-16 20:53:31.408 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@322e6342
[DEBUG] 2020-02-16 20:53:31.408 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@76dc875f
[DEBUG] 2020-02-16 20:53:31.408 [http-nio-8080-exec-105] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c94681b
[DEBUG] 2020-02-16 20:53:31.441 [http-nio-8080-exec-105] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:53:31.441 [http-nio-8080-exec-105] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:53:31.442 [http-nio-8080-exec-105] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:53:31.442 [http-nio-8080-exec-105] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:53:31.442 [http-nio-8080-exec-105] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:53:31.442 [http-nio-8080-exec-105] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:53:31.443 [http-nio-8080-exec-105] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:53:31.444 [http-nio-8080-exec-105] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:53:31.445 [http-nio-8080-exec-105] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:53:31.447 [http-nio-8080-exec-105] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:53:31.447 [http-nio-8080-exec-105] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:53:31.448 [http-nio-8080-exec-105] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:53:31.448 [http-nio-8080-exec-105] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:53:31.449 [http-nio-8080-exec-105] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:53:31.453 [http-nio-8080-exec-105] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:53:31.453 [http-nio-8080-exec-105] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:53:31.454 [http-nio-8080-exec-105] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:53:31.541 [http-nio-8080-exec-105] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:53:31.782 [http-nio-8080-exec-105] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:53:31.782 [http-nio-8080-exec-105] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:53:31.782 [http-nio-8080-exec-105] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:53:31.812 [http-nio-8080-exec-105] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:53:31.829 [http-nio-8080-exec-105] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:53:31.896 [http-nio-8080-exec-105] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:53:31.928 [http-nio-8080-exec-105] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:53:31.931 [http-nio-8080-exec-105] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6cc8c91b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@664f4f24]
[DEBUG] 2020-02-16 20:53:31.963 [http-nio-8080-exec-105] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:53:31.981 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:53:31.985 [http-nio-8080-exec-105] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:53:31.987 [http-nio-8080-exec-105] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:53:32.008 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.015 [http-nio-8080-exec-105] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:53:32.016 [http-nio-8080-exec-105] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:53:32.018 [http-nio-8080-exec-105] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:53:32.019 [http-nio-8080-exec-105] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:53:32.024 [http-nio-8080-exec-105] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:53:32.025 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.025 [http-nio-8080-exec-105] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:53:32.025 [http-nio-8080-exec-105] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:53:32.025 [http-nio-8080-exec-105] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:53:32.025 [http-nio-8080-exec-105] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:53:32.025 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.025 [http-nio-8080-exec-105] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:53:32.025 [http-nio-8080-exec-105] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:53:32.025 [http-nio-8080-exec-105] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:53:32.025 [http-nio-8080-exec-105] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:53:32.025 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.025 [http-nio-8080-exec-105] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:53:32.025 [http-nio-8080-exec-105] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:53:32.025 [http-nio-8080-exec-105] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.026 [http-nio-8080-exec-105] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:53:32.027 [http-nio-8080-exec-105] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:53:32.027 [http-nio-8080-exec-105] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:53:32.027 [http-nio-8080-exec-105] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:53:32.027 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.027 [http-nio-8080-exec-105] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:53:32.027 [http-nio-8080-exec-105] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:53:32.027 [http-nio-8080-exec-105] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:53:32.027 [http-nio-8080-exec-105] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:53:32.027 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.027 [http-nio-8080-exec-105] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:53:32.027 [http-nio-8080-exec-105] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:53:32.027 [http-nio-8080-exec-105] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:53:32.027 [http-nio-8080-exec-105] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:53:32.028 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:53:32.029 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.031 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.038 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.038 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.039 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:53:32.040 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:53:32.040 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:53:32.041 [http-nio-8080-exec-105] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:53:32.045 [http-nio-8080-exec-105] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:53:32.045 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.045 [http-nio-8080-exec-105] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:53:32.046 [http-nio-8080-exec-105] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:53:32.046 [http-nio-8080-exec-105] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:53:32.046 [http-nio-8080-exec-105] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:53:32.046 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:53:32.046 [http-nio-8080-exec-105] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:53:32.046 [http-nio-8080-exec-105] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:53:32.046 [http-nio-8080-exec-105] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:53:32.046 [http-nio-8080-exec-105] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:53:32.048 [http-nio-8080-exec-105] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:53:32.048 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:53:32.048 [http-nio-8080-exec-105] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:53:32.049 [http-nio-8080-exec-105] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:53:32.051 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.051 [http-nio-8080-exec-105] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:53:32.051 [http-nio-8080-exec-105] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:53:32.051 [http-nio-8080-exec-105] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:53:32.051 [http-nio-8080-exec-105] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:53:32.051 [http-nio-8080-exec-105] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:53:32.051 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.051 [http-nio-8080-exec-105] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:53:32.051 [http-nio-8080-exec-105] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:53:32.051 [http-nio-8080-exec-105] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:53:32.051 [http-nio-8080-exec-105] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:53:32.056 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.056 [http-nio-8080-exec-105] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:53:32.056 [http-nio-8080-exec-105] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:53:32.056 [http-nio-8080-exec-105] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:53:32.056 [http-nio-8080-exec-105] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:53:32.056 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.056 [http-nio-8080-exec-105] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:53:32.056 [http-nio-8080-exec-105] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:53:32.056 [http-nio-8080-exec-105] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:53:32.056 [http-nio-8080-exec-105] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:53:32.057 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:53:32.057 [http-nio-8080-exec-105] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:53:32.059 [http-nio-8080-exec-105] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:53:32.061 [http-nio-8080-exec-105] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:53:32.061 [http-nio-8080-exec-105] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:53:32.061 [http-nio-8080-exec-105] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:53:32.061 [http-nio-8080-exec-105] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:53:32.061 [http-nio-8080-exec-105] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:53:32.061 [http-nio-8080-exec-105] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:53:32.061 [http-nio-8080-exec-105] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:53:32.061 [http-nio-8080-exec-105] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:53:32.061 [http-nio-8080-exec-105] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:53:32.061 [http-nio-8080-exec-105] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:53:32.061 [http-nio-8080-exec-105] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:53:32.061 [http-nio-8080-exec-105] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:53:32.061 [http-nio-8080-exec-105] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:53:32.061 [http-nio-8080-exec-105] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:53:32.061 [http-nio-8080-exec-105] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:53:32.061 [http-nio-8080-exec-105] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:53:32.068 [http-nio-8080-exec-105] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:53:32.068 [http-nio-8080-exec-105] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:53:32.068 [http-nio-8080-exec-105] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:53:32.068 [http-nio-8080-exec-105] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:53:32.069 [http-nio-8080-exec-105] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:53:32.069 [http-nio-8080-exec-105] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:53:32.069 [http-nio-8080-exec-105] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:53:32.069 [http-nio-8080-exec-105] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:53:32.069 [http-nio-8080-exec-105] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:53:32.071 [http-nio-8080-exec-105] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:53:32.071 [http-nio-8080-exec-105] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:53:32.114 [http-nio-8080-exec-105] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:53:32.115 [http-nio-8080-exec-105] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:53:32.116 [http-nio-8080-exec-105] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:53:32.165 [http-nio-8080-exec-105] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:53:32.181 [http-nio-8080-exec-105] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:53:32.181 [http-nio-8080-exec-105] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@61c43239, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:53:32.207 [http-nio-8080-exec-105] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:53:32.207 [http-nio-8080-exec-105] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:53:32.208 [http-nio-8080-exec-105] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:53:32.208 [http-nio-8080-exec-105] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:53:32.210 [http-nio-8080-exec-105] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:53:32.211 [http-nio-8080-exec-105] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:53:32.211 [http-nio-8080-exec-105] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6cc8c91b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6c5b3fe]
[DEBUG] 2020-02-16 20:53:32.248 [http-nio-8080-exec-105] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:53:32.248 [http-nio-8080-exec-105] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:53:32.255 [http-nio-8080-exec-105] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:53:32.255 [http-nio-8080-exec-105] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:53:32.426 [http-nio-8080-exec-105] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:53:32.427 [http-nio-8080-exec-105] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:53:32.430 [http-nio-8080-exec-105] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:53:32.431 [http-nio-8080-exec-105] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:53:32.478 [http-nio-8080-exec-105] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:53:32.478 [http-nio-8080-exec-105] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:53:32.478 [http-nio-8080-exec-105] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:53:32.478 [http-nio-8080-exec-105] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:53:32.478 [http-nio-8080-exec-105] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:53:32.483 [http-nio-8080-exec-105] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:53:32.483 [http-nio-8080-exec-105] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:53:32.483 [http-nio-8080-exec-105] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:53:32.483 [http-nio-8080-exec-105] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:53:32.483 [http-nio-8080-exec-105] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:53:32.483 [http-nio-8080-exec-105] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:53:32.483 [http-nio-8080-exec-105] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:53:32.511 [http-nio-8080-exec-105] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a7a4df3]
[DEBUG] 2020-02-16 20:53:32.513 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:53:32.513 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:53:32.513 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:53:32.513 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:53:32.518 [http-nio-8080-exec-105] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b138181]
[DEBUG] 2020-02-16 20:53:32.519 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:53:32.519 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:53:32.519 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:53:32.519 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:53:32.519 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:53:32.519 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:53:32.519 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:53:32.519 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:53:32.519 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:53:32.519 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:53:32.519 [http-nio-8080-exec-105] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:53:32.520 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:53:32.520 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:53:32.520 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:53:32.520 [http-nio-8080-exec-105] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@22d96ccc]
[DEBUG] 2020-02-16 20:53:32.521 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:53:32.522 [http-nio-8080-exec-105] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:53:32.533 [http-nio-8080-exec-105] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:53:32.537 [http-nio-8080-exec-105] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:53:32.538 [http-nio-8080-exec-105] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:53:32.538 [http-nio-8080-exec-105] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@379da09f]
[DEBUG] 2020-02-16 20:53:32.538 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:53:32.538 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:53:32.538 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:53:32.538 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:53:32.538 [http-nio-8080-exec-105] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dfcd53a]
[DEBUG] 2020-02-16 20:53:32.538 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:53:32.538 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:53:32.539 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:53:32.539 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:53:32.539 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:53:32.539 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:53:32.542 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:53:32.542 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:53:32.542 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:53:32.542 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:53:32.542 [http-nio-8080-exec-105] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:53:32.542 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:53:32.542 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:53:32.542 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:53:32.542 [http-nio-8080-exec-105] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6c41febb]
[DEBUG] 2020-02-16 20:53:32.542 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:53:32.542 [http-nio-8080-exec-105] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:53:32.542 [http-nio-8080-exec-105] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:53:32.543 [http-nio-8080-exec-105] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:53:32.544 [http-nio-8080-exec-105] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:53:32.553 [http-nio-8080-exec-105] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@420e2c02]
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:53:32.554 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:53:32.555 [http-nio-8080-exec-105] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@264f5f88]
[DEBUG] 2020-02-16 20:53:32.556 [http-nio-8080-exec-105] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a568608]
[DEBUG] 2020-02-16 20:53:32.557 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:53:32.557 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:53:32.557 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:53:32.557 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:53:32.557 [http-nio-8080-exec-105] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:53:32.558 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:53:32.558 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:53:32.558 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:53:32.558 [http-nio-8080-exec-105] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6d07e204]
[DEBUG] 2020-02-16 20:53:32.558 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:53:32.558 [http-nio-8080-exec-105] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:53:32.558 [http-nio-8080-exec-105] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed4d6a2]
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d579b42]
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c1960ce]
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@45f5ec88]
[DEBUG] 2020-02-16 20:53:32.560 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:53:32.561 [http-nio-8080-exec-105] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:53:32.561 [http-nio-8080-exec-105] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:53:32.561 [http-nio-8080-exec-105] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:53:32.561 [http-nio-8080-exec-105] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:53:32.562 [http-nio-8080-exec-105] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:53:32.562 [http-nio-8080-exec-105] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:53:32.563 [http-nio-8080-exec-105] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:53:32.568 [http-nio-8080-exec-105] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ab66075]
[DEBUG] 2020-02-16 20:53:32.568 [http-nio-8080-exec-105] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@786e9b37]
[DEBUG] 2020-02-16 20:53:32.568 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:53:32.568 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:53:32.568 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:53:32.568 [http-nio-8080-exec-105] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:53:32.568 [http-nio-8080-exec-105] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:53:32.568 [http-nio-8080-exec-105] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:53:32.569 [http-nio-8080-exec-105] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:53:32.570 [http-nio-8080-exec-105] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:53:32.570 [http-nio-8080-exec-105] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:53:32.595 [http-nio-8080-exec-105] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:53:32.595 [http-nio-8080-exec-105] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:53:32.595 [http-nio-8080-exec-105] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:53:32.602 [http-nio-8080-exec-105] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:53:32.602 [http-nio-8080-exec-105] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:53:32.602 [http-nio-8080-exec-105] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:53:32.602 [http-nio-8080-exec-105] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:53:32.603 [http-nio-8080-exec-105] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@780157c9
[DEBUG] 2020-02-16 20:53:32.605 [http-nio-8080-exec-105] SessionFactoryRegistry - Registering SessionFactory: 7710f533-da41-4bc9-acf5-dd4ed492026e (<unnamed>)
[DEBUG] 2020-02-16 20:53:32.605 [http-nio-8080-exec-105] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:53:32.662 [http-nio-8080-exec-105] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:53:32.683 [http-nio-8080-exec-105] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:53:32.696 [http-nio-8080-exec-105] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@72c6732d
[DEBUG] 2020-02-16 20:53:32.714 [http-nio-8080-exec-105] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:53:32.716 [http-nio-8080-exec-105] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:53:32.719 [http-nio-8080-exec-105] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:53:32.732 [http-nio-8080-exec-105] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:53:32.751 [http-nio-8080-exec-105] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:53:32.752 [http-nio-8080-exec-105] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:53:32.753 [http-nio-8080-exec-105] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:53:32.753 [http-nio-8080-exec-105] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:53:32.758 [http-nio-8080-exec-105] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:53:32.758 [http-nio-8080-exec-105] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:53:32.758 [http-nio-8080-exec-105] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:53:32.759 [http-nio-8080-exec-105] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:53:32.764 [http-nio-8080-exec-105] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:53:32.764 [http-nio-8080-exec-105] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:53:32.764 [http-nio-8080-exec-105] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:53:32.775 [http-nio-8080-exec-105] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:53:32.797 [http-nio-8080-exec-105] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:53:32.800 [http-nio-8080-exec-105] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:53:32.805 [http-nio-8080-exec-105] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:53:32.805 [http-nio-8080-exec-105] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:53:32.806 [http-nio-8080-exec-105] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:53:32.807 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.813 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:53:32.813 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.813 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:53:32.813 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.813 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6b181d92
[DEBUG] 2020-02-16 20:53:32.813 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:53:32.814 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.815 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:53:32.815 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.815 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:53:32.815 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.815 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@27d810b8
[DEBUG] 2020-02-16 20:53:32.815 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.815 [http-nio-8080-exec-105] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:53:32.818 [http-nio-8080-exec-105] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:53:32.818 [http-nio-8080-exec-105] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:53:32.848 [http-nio-8080-exec-105] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:53:32.854 [http-nio-8080-exec-105] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:53:32.856 [http-nio-8080-exec-105] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:53:32.858 [http-nio-8080-exec-105] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:53:32.858 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:53:32.859 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.859 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:53:32.859 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.859 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:53:32.859 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.859 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:53:32.859 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.859 [http-nio-8080-exec-105] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:53:32.859 [http-nio-8080-exec-105] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:53:32.861 [http-nio-8080-exec-105] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:53:32.861 [http-nio-8080-exec-105] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:53:32.862 [http-nio-8080-exec-105] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:53:32.862 [http-nio-8080-exec-105] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:53:32.862 [http-nio-8080-exec-105] Loader - Done entity load
[DEBUG] 2020-02-16 20:53:32.862 [http-nio-8080-exec-105] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:53:32.863 [http-nio-8080-exec-105] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:53:32.863 [http-nio-8080-exec-105] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:53:32.863 [http-nio-8080-exec-105] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:53:32.863 [http-nio-8080-exec-105] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:53:32.863 [http-nio-8080-exec-105] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:53:32.863 [http-nio-8080-exec-105] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:53:32.864 [http-nio-8080-exec-105] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:53:32.865 [http-nio-8080-exec-105] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:53:32.866 [http-nio-8080-exec-105] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:53:32.866 [http-nio-8080-exec-105] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:53:32.866 [http-nio-8080-exec-105] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:53:32.866 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:53:32.866 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.866 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:53:32.866 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.866 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:53:32.866 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.866 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:53:32.866 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.866 [http-nio-8080-exec-105] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:53:32.867 [http-nio-8080-exec-105] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:53:32.868 [http-nio-8080-exec-105] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:53:32.868 [http-nio-8080-exec-105] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:53:32.868 [http-nio-8080-exec-105] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:53:32.868 [http-nio-8080-exec-105] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:53:32.868 [http-nio-8080-exec-105] Loader - Done entity load
[DEBUG] 2020-02-16 20:53:32.868 [http-nio-8080-exec-105] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:53:32.868 [http-nio-8080-exec-105] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:53:32.868 [http-nio-8080-exec-105] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:53:32.868 [http-nio-8080-exec-105] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:53:32.868 [http-nio-8080-exec-105] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:53:32.868 [http-nio-8080-exec-105] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:53:32.870 [http-nio-8080-exec-105] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:53:32.876 [http-nio-8080-exec-105] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:53:32.876 [http-nio-8080-exec-105] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:53:32.878 [http-nio-8080-exec-105] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:53:32.878 [http-nio-8080-exec-105] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:53:32.879 [http-nio-8080-exec-105] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:53:32.879 [http-nio-8080-exec-105] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:53:32.879 [http-nio-8080-exec-105] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:53:32.879 [http-nio-8080-exec-105] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:53:32.879 [http-nio-8080-exec-105] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:53:32.879 [http-nio-8080-exec-105] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:53:32.879 [http-nio-8080-exec-105] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:53:32.879 [http-nio-8080-exec-105] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:53:32.879 [http-nio-8080-exec-105] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:53:32.880 [http-nio-8080-exec-105] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:53:32.880 [http-nio-8080-exec-105] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:53:32.880 [http-nio-8080-exec-105] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:53:32.881 [http-nio-8080-exec-105] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:53:32.882 [http-nio-8080-exec-105] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:53:32.883 [http-nio-8080-exec-105] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:53:32.883 [http-nio-8080-exec-105] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:53:32.883 [http-nio-8080-exec-105] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:53:32.883 [http-nio-8080-exec-105] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:53:32.883 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:53:32.883 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.883 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:53:32.883 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.883 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:53:32.883 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.883 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:53:32.883 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.883 [http-nio-8080-exec-105] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:53:32.884 [http-nio-8080-exec-105] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:53:32.884 [http-nio-8080-exec-105] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:53:32.884 [http-nio-8080-exec-105] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@41f206c7
[DEBUG] 2020-02-16 20:53:32.885 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] Loader - Done entity load
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:53:32.886 [http-nio-8080-exec-105] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:53:32.887 [http-nio-8080-exec-105] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:53:32.887 [http-nio-8080-exec-105] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6610f902
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] Loader - Done entity load
[DEBUG] 2020-02-16 20:53:32.888 [http-nio-8080-exec-105] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:53:32.889 [http-nio-8080-exec-105] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:57:31.924 [http-nio-8080-exec-131] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:57:31.934 [http-nio-8080-exec-131] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:57:31.940 [http-nio-8080-exec-131] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:57:32.018 [http-nio-8080-exec-131] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:57:32.019 [http-nio-8080-exec-131] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:57:32.129 [http-nio-8080-exec-131] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:57:32.130 [http-nio-8080-exec-131] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:57:32.131 [http-nio-8080-exec-131] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:57:32.291 [http-nio-8080-exec-131] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:57:32.306 [http-nio-8080-exec-131] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:57:32.306 [http-nio-8080-exec-131] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:57:32.322 [http-nio-8080-exec-131] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:57:32.352 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2e3b0c30
[DEBUG] 2020-02-16 20:57:32.352 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2e3b0c30
[DEBUG] 2020-02-16 20:57:32.352 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e3b0c30
[DEBUG] 2020-02-16 20:57:32.352 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@359d6d4b
[DEBUG] 2020-02-16 20:57:32.353 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@26f04795
[DEBUG] 2020-02-16 20:57:32.353 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc95382
[DEBUG] 2020-02-16 20:57:32.354 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@559cb8ac
[DEBUG] 2020-02-16 20:57:32.354 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@559cb8ac
[DEBUG] 2020-02-16 20:57:32.354 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@559cb8ac
[DEBUG] 2020-02-16 20:57:32.355 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1fb8f5b4
[DEBUG] 2020-02-16 20:57:32.355 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1fb8f5b4
[DEBUG] 2020-02-16 20:57:32.355 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1fb8f5b4
[DEBUG] 2020-02-16 20:57:32.356 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7de8b54d
[DEBUG] 2020-02-16 20:57:32.356 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7de8b54d
[DEBUG] 2020-02-16 20:57:32.356 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7de8b54d
[DEBUG] 2020-02-16 20:57:32.356 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@46329432
[DEBUG] 2020-02-16 20:57:32.356 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@46329432
[DEBUG] 2020-02-16 20:57:32.356 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@46329432
[DEBUG] 2020-02-16 20:57:32.357 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@20702443
[DEBUG] 2020-02-16 20:57:32.357 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@20702443
[DEBUG] 2020-02-16 20:57:32.357 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@20702443
[DEBUG] 2020-02-16 20:57:32.357 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4b62727
[DEBUG] 2020-02-16 20:57:32.357 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4b62727
[DEBUG] 2020-02-16 20:57:32.357 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4b62727
[DEBUG] 2020-02-16 20:57:32.358 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@788159c
[DEBUG] 2020-02-16 20:57:32.358 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@788159c
[DEBUG] 2020-02-16 20:57:32.358 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@788159c
[DEBUG] 2020-02-16 20:57:32.358 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@640f97e8
[DEBUG] 2020-02-16 20:57:32.358 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@640f97e8
[DEBUG] 2020-02-16 20:57:32.359 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7d2f75d6
[DEBUG] 2020-02-16 20:57:32.359 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7d2f75d6
[DEBUG] 2020-02-16 20:57:32.359 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@42dd1f85
[DEBUG] 2020-02-16 20:57:32.359 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@42dd1f85
[DEBUG] 2020-02-16 20:57:32.360 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@35da6233
[DEBUG] 2020-02-16 20:57:32.360 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5f9f3e2
[DEBUG] 2020-02-16 20:57:32.360 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4862a923
[DEBUG] 2020-02-16 20:57:32.360 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4862a923
[DEBUG] 2020-02-16 20:57:32.361 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1c12b25e
[DEBUG] 2020-02-16 20:57:32.361 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1c12b25e
[DEBUG] 2020-02-16 20:57:32.362 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4dd4d916
[DEBUG] 2020-02-16 20:57:32.362 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4dd4d916
[DEBUG] 2020-02-16 20:57:32.363 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@491e46cd
[DEBUG] 2020-02-16 20:57:32.363 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@491e46cd
[DEBUG] 2020-02-16 20:57:32.363 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7b84c56
[DEBUG] 2020-02-16 20:57:32.363 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7b84c56
[DEBUG] 2020-02-16 20:57:32.364 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@299d350c
[DEBUG] 2020-02-16 20:57:32.364 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@299d350c
[DEBUG] 2020-02-16 20:57:32.365 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d4ee91
[DEBUG] 2020-02-16 20:57:32.365 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d4ee91
[DEBUG] 2020-02-16 20:57:32.366 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e6170ef
[DEBUG] 2020-02-16 20:57:32.366 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e6170ef
[DEBUG] 2020-02-16 20:57:32.368 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@12234692
[DEBUG] 2020-02-16 20:57:32.368 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@12234692
[DEBUG] 2020-02-16 20:57:32.369 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5a47d62e
[DEBUG] 2020-02-16 20:57:32.369 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5a47d62e
[DEBUG] 2020-02-16 20:57:32.370 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@10fa0ce1
[DEBUG] 2020-02-16 20:57:32.370 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@10fa0ce1
[DEBUG] 2020-02-16 20:57:32.371 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1cfbadc0
[DEBUG] 2020-02-16 20:57:32.371 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cfbadc0
[DEBUG] 2020-02-16 20:57:32.371 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cfbadc0
[DEBUG] 2020-02-16 20:57:32.372 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6a21664
[DEBUG] 2020-02-16 20:57:32.373 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@45790c04
[DEBUG] 2020-02-16 20:57:32.373 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45790c04
[DEBUG] 2020-02-16 20:57:32.373 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45790c04
[DEBUG] 2020-02-16 20:57:32.374 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1fe47501
[DEBUG] 2020-02-16 20:57:32.374 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@77e589fd
[DEBUG] 2020-02-16 20:57:32.374 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@77e589fd
[DEBUG] 2020-02-16 20:57:32.375 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6c1b9c08
[DEBUG] 2020-02-16 20:57:32.375 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6c1b9c08
[DEBUG] 2020-02-16 20:57:32.376 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4748b598
[DEBUG] 2020-02-16 20:57:32.376 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4748b598
[DEBUG] 2020-02-16 20:57:32.376 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@269d15a0
[DEBUG] 2020-02-16 20:57:32.377 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@269d15a0
[DEBUG] 2020-02-16 20:57:32.377 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@175604af
[DEBUG] 2020-02-16 20:57:32.378 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@175604af
[DEBUG] 2020-02-16 20:57:32.378 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@77315a9c
[DEBUG] 2020-02-16 20:57:32.379 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5d6f87e1
[DEBUG] 2020-02-16 20:57:32.379 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5d6f87e1
[DEBUG] 2020-02-16 20:57:32.379 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5d6f87e1
[DEBUG] 2020-02-16 20:57:32.380 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@463ac810
[DEBUG] 2020-02-16 20:57:32.380 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@463ac810
[DEBUG] 2020-02-16 20:57:32.380 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@463ac810
[DEBUG] 2020-02-16 20:57:32.381 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5a1ddae5
[DEBUG] 2020-02-16 20:57:32.381 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3ba85b04
[DEBUG] 2020-02-16 20:57:32.382 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6e592082
[DEBUG] 2020-02-16 20:57:32.382 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6e592082
[DEBUG] 2020-02-16 20:57:32.382 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6e592082
[DEBUG] 2020-02-16 20:57:32.383 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@515d4a93
[DEBUG] 2020-02-16 20:57:32.383 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@515d4a93
[DEBUG] 2020-02-16 20:57:32.383 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@515d4a93
[DEBUG] 2020-02-16 20:57:32.383 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@323c0fbb
[DEBUG] 2020-02-16 20:57:32.383 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@49c25d47
[DEBUG] 2020-02-16 20:57:32.385 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6cf73d04
[DEBUG] 2020-02-16 20:57:32.385 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6cf73d04
[DEBUG] 2020-02-16 20:57:32.385 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2ffbaddd
[DEBUG] 2020-02-16 20:57:32.386 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@19d5c290
[DEBUG] 2020-02-16 20:57:32.386 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@19d5c290
[DEBUG] 2020-02-16 20:57:32.387 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@479b3242
[DEBUG] 2020-02-16 20:57:32.387 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@479b3242
[DEBUG] 2020-02-16 20:57:32.387 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a928e22
[DEBUG] 2020-02-16 20:57:32.387 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26aef061
[DEBUG] 2020-02-16 20:57:32.388 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5e3e7cda
[DEBUG] 2020-02-16 20:57:32.390 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@34acb03f
[DEBUG] 2020-02-16 20:57:32.390 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34acb03f
[DEBUG] 2020-02-16 20:57:32.390 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@13c4ed98
[DEBUG] 2020-02-16 20:57:32.390 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58ea3eb3
[DEBUG] 2020-02-16 20:57:32.390 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5c0cc5f9
[DEBUG] 2020-02-16 20:57:32.390 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5ab7b300
[DEBUG] 2020-02-16 20:57:32.390 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6e2b2de3
[DEBUG] 2020-02-16 20:57:32.390 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@673d8933
[DEBUG] 2020-02-16 20:57:32.390 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5da4bb20
[DEBUG] 2020-02-16 20:57:32.390 [http-nio-8080-exec-131] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3aec2c27
[DEBUG] 2020-02-16 20:57:32.413 [http-nio-8080-exec-131] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:57:32.414 [http-nio-8080-exec-131] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:57:32.414 [http-nio-8080-exec-131] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:57:32.414 [http-nio-8080-exec-131] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:57:32.416 [http-nio-8080-exec-131] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:57:32.416 [http-nio-8080-exec-131] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:57:32.417 [http-nio-8080-exec-131] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:57:32.418 [http-nio-8080-exec-131] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:57:32.418 [http-nio-8080-exec-131] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:57:32.418 [http-nio-8080-exec-131] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:57:32.419 [http-nio-8080-exec-131] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:57:32.419 [http-nio-8080-exec-131] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:57:32.419 [http-nio-8080-exec-131] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:57:32.419 [http-nio-8080-exec-131] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:57:32.426 [http-nio-8080-exec-131] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:57:32.426 [http-nio-8080-exec-131] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:57:32.426 [http-nio-8080-exec-131] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:57:32.509 [http-nio-8080-exec-131] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:57:32.695 [http-nio-8080-exec-131] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:57:32.695 [http-nio-8080-exec-131] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:57:32.695 [http-nio-8080-exec-131] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:57:32.734 [http-nio-8080-exec-131] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:57:32.749 [http-nio-8080-exec-131] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:57:32.769 [http-nio-8080-exec-131] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:57:32.802 [http-nio-8080-exec-131] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:57:32.805 [http-nio-8080-exec-131] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1f7f75ac] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@49c44125]
[DEBUG] 2020-02-16 20:57:32.844 [http-nio-8080-exec-131] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:57:32.860 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:57:32.866 [http-nio-8080-exec-131] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:57:32.868 [http-nio-8080-exec-131] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:57:32.886 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.890 [http-nio-8080-exec-131] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:57:32.892 [http-nio-8080-exec-131] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:57:32.896 [http-nio-8080-exec-131] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:57:32.899 [http-nio-8080-exec-131] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:57:32.902 [http-nio-8080-exec-131] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:57:32.904 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.904 [http-nio-8080-exec-131] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:57:32.905 [http-nio-8080-exec-131] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:57:32.905 [http-nio-8080-exec-131] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:57:32.905 [http-nio-8080-exec-131] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:57:32.905 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.905 [http-nio-8080-exec-131] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:57:32.905 [http-nio-8080-exec-131] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:57:32.905 [http-nio-8080-exec-131] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:57:32.905 [http-nio-8080-exec-131] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:57:32.906 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.906 [http-nio-8080-exec-131] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:57:32.906 [http-nio-8080-exec-131] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:57:32.906 [http-nio-8080-exec-131] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:57:32.906 [http-nio-8080-exec-131] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:57:32.906 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.906 [http-nio-8080-exec-131] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:57:32.906 [http-nio-8080-exec-131] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:57:32.906 [http-nio-8080-exec-131] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:57:32.906 [http-nio-8080-exec-131] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:57:32.906 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:57:32.907 [http-nio-8080-exec-131] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:57:32.908 [http-nio-8080-exec-131] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:57:32.908 [http-nio-8080-exec-131] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:57:32.909 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:57:32.910 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.913 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.919 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.920 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.920 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:57:32.921 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:57:32.921 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:57:32.922 [http-nio-8080-exec-131] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:57:32.924 [http-nio-8080-exec-131] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:57:32.924 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.924 [http-nio-8080-exec-131] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:57:32.924 [http-nio-8080-exec-131] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:57:32.924 [http-nio-8080-exec-131] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:57:32.924 [http-nio-8080-exec-131] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:57:32.924 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:57:32.924 [http-nio-8080-exec-131] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:57:32.924 [http-nio-8080-exec-131] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:57:32.924 [http-nio-8080-exec-131] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:57:32.924 [http-nio-8080-exec-131] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:57:32.926 [http-nio-8080-exec-131] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:57:32.926 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:57:32.926 [http-nio-8080-exec-131] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:57:32.926 [http-nio-8080-exec-131] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:57:32.930 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.930 [http-nio-8080-exec-131] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:57:32.930 [http-nio-8080-exec-131] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:57:32.930 [http-nio-8080-exec-131] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:57:32.931 [http-nio-8080-exec-131] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:57:32.931 [http-nio-8080-exec-131] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:57:32.931 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.931 [http-nio-8080-exec-131] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:57:32.931 [http-nio-8080-exec-131] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:57:32.931 [http-nio-8080-exec-131] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:57:32.931 [http-nio-8080-exec-131] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:57:32.936 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.936 [http-nio-8080-exec-131] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:57:32.936 [http-nio-8080-exec-131] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:57:32.936 [http-nio-8080-exec-131] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:57:32.936 [http-nio-8080-exec-131] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:57:32.936 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.936 [http-nio-8080-exec-131] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:57:32.936 [http-nio-8080-exec-131] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:57:32.936 [http-nio-8080-exec-131] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:57:32.936 [http-nio-8080-exec-131] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:57:32.937 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:57:32.937 [http-nio-8080-exec-131] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:57:32.938 [http-nio-8080-exec-131] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:57:32.939 [http-nio-8080-exec-131] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:57:32.939 [http-nio-8080-exec-131] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:57:32.939 [http-nio-8080-exec-131] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:57:32.939 [http-nio-8080-exec-131] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:57:32.939 [http-nio-8080-exec-131] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:57:32.939 [http-nio-8080-exec-131] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:57:32.939 [http-nio-8080-exec-131] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:57:32.939 [http-nio-8080-exec-131] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:57:32.939 [http-nio-8080-exec-131] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:57:32.939 [http-nio-8080-exec-131] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:57:32.939 [http-nio-8080-exec-131] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:57:32.939 [http-nio-8080-exec-131] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:57:32.939 [http-nio-8080-exec-131] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:57:32.939 [http-nio-8080-exec-131] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:57:32.939 [http-nio-8080-exec-131] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:57:32.939 [http-nio-8080-exec-131] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:57:32.944 [http-nio-8080-exec-131] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:57:32.944 [http-nio-8080-exec-131] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:57:32.944 [http-nio-8080-exec-131] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:57:32.944 [http-nio-8080-exec-131] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:57:32.944 [http-nio-8080-exec-131] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:57:32.945 [http-nio-8080-exec-131] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:57:32.945 [http-nio-8080-exec-131] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:57:32.945 [http-nio-8080-exec-131] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:57:32.945 [http-nio-8080-exec-131] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:57:32.951 [http-nio-8080-exec-131] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:57:32.951 [http-nio-8080-exec-131] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:57:32.997 [http-nio-8080-exec-131] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:57:32.998 [http-nio-8080-exec-131] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:57:32.999 [http-nio-8080-exec-131] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:57:32.999 [http-nio-8080-exec-131] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:57:32.999 [http-nio-8080-exec-131] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:57:32.999 [http-nio-8080-exec-131] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:57:32.999 [http-nio-8080-exec-131] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:57:32.999 [http-nio-8080-exec-131] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:57:32.999 [http-nio-8080-exec-131] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:57:32.999 [http-nio-8080-exec-131] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:57:32.999 [http-nio-8080-exec-131] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:57:32.999 [http-nio-8080-exec-131] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:57:32.999 [http-nio-8080-exec-131] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:57:32.999 [http-nio-8080-exec-131] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:57:32.999 [http-nio-8080-exec-131] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:57:32.999 [http-nio-8080-exec-131] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:57:32.999 [http-nio-8080-exec-131] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:57:32.999 [http-nio-8080-exec-131] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:57:33.052 [http-nio-8080-exec-131] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:57:33.069 [http-nio-8080-exec-131] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:57:33.070 [http-nio-8080-exec-131] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@77568295, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:57:33.086 [http-nio-8080-exec-131] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:57:33.086 [http-nio-8080-exec-131] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:57:33.087 [http-nio-8080-exec-131] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:57:33.087 [http-nio-8080-exec-131] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:57:33.089 [http-nio-8080-exec-131] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:57:33.090 [http-nio-8080-exec-131] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:57:33.090 [http-nio-8080-exec-131] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1f7f75ac] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6fc521b1]
[DEBUG] 2020-02-16 20:57:33.127 [http-nio-8080-exec-131] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:57:33.127 [http-nio-8080-exec-131] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:57:33.134 [http-nio-8080-exec-131] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:57:33.134 [http-nio-8080-exec-131] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:57:33.296 [http-nio-8080-exec-131] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:57:33.296 [http-nio-8080-exec-131] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:57:33.299 [http-nio-8080-exec-131] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:57:33.299 [http-nio-8080-exec-131] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:57:33.348 [http-nio-8080-exec-131] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:57:33.349 [http-nio-8080-exec-131] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:57:33.349 [http-nio-8080-exec-131] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:57:33.349 [http-nio-8080-exec-131] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:57:33.349 [http-nio-8080-exec-131] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:57:33.351 [http-nio-8080-exec-131] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:57:33.351 [http-nio-8080-exec-131] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:57:33.351 [http-nio-8080-exec-131] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:57:33.351 [http-nio-8080-exec-131] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:57:33.351 [http-nio-8080-exec-131] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:57:33.351 [http-nio-8080-exec-131] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:57:33.351 [http-nio-8080-exec-131] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:57:33.372 [http-nio-8080-exec-131] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@331b9ba7]
[DEBUG] 2020-02-16 20:57:33.373 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:57:33.373 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:57:33.373 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:57:33.373 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:57:33.379 [http-nio-8080-exec-131] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10d9265c]
[DEBUG] 2020-02-16 20:57:33.380 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:57:33.381 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:57:33.381 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:57:33.381 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:57:33.381 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:57:33.381 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:57:33.381 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:57:33.381 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:57:33.381 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:57:33.381 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:57:33.381 [http-nio-8080-exec-131] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:57:33.382 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:57:33.382 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:57:33.382 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:57:33.384 [http-nio-8080-exec-131] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@762e20af]
[DEBUG] 2020-02-16 20:57:33.386 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:57:33.386 [http-nio-8080-exec-131] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:57:33.397 [http-nio-8080-exec-131] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:57:33.401 [http-nio-8080-exec-131] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:57:33.402 [http-nio-8080-exec-131] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:57:33.402 [http-nio-8080-exec-131] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f53fab4]
[DEBUG] 2020-02-16 20:57:33.402 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:57:33.402 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:57:33.402 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:57:33.402 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:57:33.402 [http-nio-8080-exec-131] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15052a87]
[DEBUG] 2020-02-16 20:57:33.402 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:57:33.403 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:57:33.403 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:57:33.403 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:57:33.403 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:57:33.403 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:57:33.403 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:57:33.403 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:57:33.404 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:57:33.404 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:57:33.404 [http-nio-8080-exec-131] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:57:33.404 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:57:33.404 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:57:33.404 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:57:33.404 [http-nio-8080-exec-131] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3f3377c9]
[DEBUG] 2020-02-16 20:57:33.404 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:57:33.404 [http-nio-8080-exec-131] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:57:33.404 [http-nio-8080-exec-131] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:57:33.404 [http-nio-8080-exec-131] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:57:33.404 [http-nio-8080-exec-131] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:57:33.417 [http-nio-8080-exec-131] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@223c8109]
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:57:33.418 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:57:33.419 [http-nio-8080-exec-131] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@254c6c24]
[DEBUG] 2020-02-16 20:57:33.420 [http-nio-8080-exec-131] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40330ea9]
[DEBUG] 2020-02-16 20:57:33.423 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:57:33.423 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:57:33.423 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:57:33.423 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:57:33.423 [http-nio-8080-exec-131] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:57:33.424 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:57:33.424 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:57:33.424 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:57:33.424 [http-nio-8080-exec-131] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@f3e5d26]
[DEBUG] 2020-02-16 20:57:33.424 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:57:33.424 [http-nio-8080-exec-131] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:57:33.424 [http-nio-8080-exec-131] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:57:33.428 [http-nio-8080-exec-131] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:57:33.428 [http-nio-8080-exec-131] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:57:33.428 [http-nio-8080-exec-131] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45bf6318]
[DEBUG] 2020-02-16 20:57:33.428 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:57:33.428 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:57:33.428 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:57:33.428 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:57:33.428 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:57:33.428 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:57:33.428 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:57:33.428 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:57:33.428 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:57:33.428 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:57:33.428 [http-nio-8080-exec-131] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f9e2589]
[DEBUG] 2020-02-16 20:57:33.428 [http-nio-8080-exec-131] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@297903e0]
[DEBUG] 2020-02-16 20:57:33.429 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:57:33.429 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:57:33.429 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:57:33.429 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:57:33.429 [http-nio-8080-exec-131] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:57:33.429 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:57:33.429 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:57:33.429 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:57:33.429 [http-nio-8080-exec-131] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5a7f446]
[DEBUG] 2020-02-16 20:57:33.429 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:57:33.429 [http-nio-8080-exec-131] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:57:33.429 [http-nio-8080-exec-131] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:57:33.430 [http-nio-8080-exec-131] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:57:33.430 [http-nio-8080-exec-131] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:57:33.431 [http-nio-8080-exec-131] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:57:33.432 [http-nio-8080-exec-131] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:57:33.434 [http-nio-8080-exec-131] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:57:33.439 [http-nio-8080-exec-131] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59492442]
[DEBUG] 2020-02-16 20:57:33.439 [http-nio-8080-exec-131] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@732374e9]
[DEBUG] 2020-02-16 20:57:33.439 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:57:33.440 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:57:33.440 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:57:33.440 [http-nio-8080-exec-131] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:57:33.440 [http-nio-8080-exec-131] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:57:33.440 [http-nio-8080-exec-131] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:57:33.441 [http-nio-8080-exec-131] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:57:33.441 [http-nio-8080-exec-131] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:57:33.442 [http-nio-8080-exec-131] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:57:33.474 [http-nio-8080-exec-131] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:57:33.474 [http-nio-8080-exec-131] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:57:33.474 [http-nio-8080-exec-131] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:57:33.481 [http-nio-8080-exec-131] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:57:33.481 [http-nio-8080-exec-131] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:57:33.481 [http-nio-8080-exec-131] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:57:33.481 [http-nio-8080-exec-131] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:57:33.482 [http-nio-8080-exec-131] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@73271fb6
[DEBUG] 2020-02-16 20:57:33.483 [http-nio-8080-exec-131] SessionFactoryRegistry - Registering SessionFactory: 948ababf-83a7-4acf-a7a8-e7926a751a18 (<unnamed>)
[DEBUG] 2020-02-16 20:57:33.483 [http-nio-8080-exec-131] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:57:33.544 [http-nio-8080-exec-131] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:57:33.565 [http-nio-8080-exec-131] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:57:33.576 [http-nio-8080-exec-131] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@dfa72cd
[DEBUG] 2020-02-16 20:57:33.596 [http-nio-8080-exec-131] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:57:33.599 [http-nio-8080-exec-131] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:57:33.603 [http-nio-8080-exec-131] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:57:33.616 [http-nio-8080-exec-131] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:57:33.627 [http-nio-8080-exec-131] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:57:33.628 [http-nio-8080-exec-131] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:57:33.629 [http-nio-8080-exec-131] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:57:33.630 [http-nio-8080-exec-131] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:57:33.636 [http-nio-8080-exec-131] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:57:33.637 [http-nio-8080-exec-131] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:57:33.637 [http-nio-8080-exec-131] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:57:33.637 [http-nio-8080-exec-131] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:57:33.640 [http-nio-8080-exec-131] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:57:33.640 [http-nio-8080-exec-131] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:57:33.640 [http-nio-8080-exec-131] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:57:33.655 [http-nio-8080-exec-131] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:57:33.672 [http-nio-8080-exec-131] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:57:33.675 [http-nio-8080-exec-131] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:57:33.683 [http-nio-8080-exec-131] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:57:33.683 [http-nio-8080-exec-131] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:57:33.685 [http-nio-8080-exec-131] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:57:33.692 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:57:33.693 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.701 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:57:33.701 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.701 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:57:33.701 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.701 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@42457a46
[DEBUG] 2020-02-16 20:57:33.701 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@5336a0b6
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.702 [http-nio-8080-exec-131] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:57:33.705 [http-nio-8080-exec-131] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:57:33.706 [http-nio-8080-exec-131] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:57:33.708 [http-nio-8080-exec-131] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:57:33.714 [http-nio-8080-exec-131] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:57:33.715 [http-nio-8080-exec-131] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:57:33.718 [http-nio-8080-exec-131] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:57:33.718 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:57:33.718 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.718 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:57:33.718 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.718 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:57:33.718 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.718 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:57:33.718 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.719 [http-nio-8080-exec-131] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:57:33.719 [http-nio-8080-exec-131] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:57:33.720 [http-nio-8080-exec-131] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:57:33.720 [http-nio-8080-exec-131] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:57:33.721 [http-nio-8080-exec-131] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:57:33.721 [http-nio-8080-exec-131] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:57:33.721 [http-nio-8080-exec-131] Loader - Done entity load
[DEBUG] 2020-02-16 20:57:33.721 [http-nio-8080-exec-131] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:57:33.721 [http-nio-8080-exec-131] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:57:33.721 [http-nio-8080-exec-131] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:57:33.721 [http-nio-8080-exec-131] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:57:33.721 [http-nio-8080-exec-131] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:57:33.721 [http-nio-8080-exec-131] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:57:33.722 [http-nio-8080-exec-131] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:57:33.722 [http-nio-8080-exec-131] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:57:33.722 [http-nio-8080-exec-131] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:57:33.722 [http-nio-8080-exec-131] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:57:33.723 [http-nio-8080-exec-131] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:57:33.723 [http-nio-8080-exec-131] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:57:33.723 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:57:33.723 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.723 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:57:33.723 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.723 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:57:33.723 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.723 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:57:33.723 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.723 [http-nio-8080-exec-131] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:57:33.724 [http-nio-8080-exec-131] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:57:33.725 [http-nio-8080-exec-131] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:57:33.725 [http-nio-8080-exec-131] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:57:33.725 [http-nio-8080-exec-131] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:57:33.725 [http-nio-8080-exec-131] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:57:33.725 [http-nio-8080-exec-131] Loader - Done entity load
[DEBUG] 2020-02-16 20:57:33.725 [http-nio-8080-exec-131] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:57:33.725 [http-nio-8080-exec-131] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:57:33.725 [http-nio-8080-exec-131] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:57:33.726 [http-nio-8080-exec-131] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:57:33.726 [http-nio-8080-exec-131] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:57:33.726 [http-nio-8080-exec-131] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:57:33.727 [http-nio-8080-exec-131] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:57:33.731 [http-nio-8080-exec-131] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:57:33.731 [http-nio-8080-exec-131] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:57:33.733 [http-nio-8080-exec-131] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:57:33.733 [http-nio-8080-exec-131] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:57:33.733 [http-nio-8080-exec-131] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:57:33.733 [http-nio-8080-exec-131] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:57:33.733 [http-nio-8080-exec-131] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:57:33.733 [http-nio-8080-exec-131] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:57:33.734 [http-nio-8080-exec-131] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:57:33.734 [http-nio-8080-exec-131] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:57:33.734 [http-nio-8080-exec-131] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:57:33.734 [http-nio-8080-exec-131] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:57:33.734 [http-nio-8080-exec-131] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:57:33.734 [http-nio-8080-exec-131] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:57:33.734 [http-nio-8080-exec-131] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:57:33.734 [http-nio-8080-exec-131] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:57:33.734 [http-nio-8080-exec-131] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:57:33.736 [http-nio-8080-exec-131] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:57:33.736 [http-nio-8080-exec-131] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:57:33.737 [http-nio-8080-exec-131] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:57:33.737 [http-nio-8080-exec-131] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:57:33.737 [http-nio-8080-exec-131] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:57:33.737 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:57:33.737 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.737 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:57:33.737 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.737 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:57:33.737 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.737 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:57:33.737 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.737 [http-nio-8080-exec-131] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:57:33.737 [http-nio-8080-exec-131] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:57:33.738 [http-nio-8080-exec-131] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:57:33.738 [http-nio-8080-exec-131] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:57:33.738 [http-nio-8080-exec-131] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@d36cb64
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:57:33.739 [http-nio-8080-exec-131] Loader - Done entity load
[DEBUG] 2020-02-16 20:57:33.740 [http-nio-8080-exec-131] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:57:33.740 [http-nio-8080-exec-131] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:57:33.740 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:57:33.740 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.740 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:57:33.740 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.740 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:57:33.740 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.740 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:57:33.740 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.740 [http-nio-8080-exec-131] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:57:33.740 [http-nio-8080-exec-131] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:57:33.741 [http-nio-8080-exec-131] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:57:33.741 [http-nio-8080-exec-131] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:57:33.741 [http-nio-8080-exec-131] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:57:33.741 [http-nio-8080-exec-131] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:57:33.741 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:57:33.741 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.741 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:57:33.741 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.741 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:57:33.741 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.741 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:57:33.741 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.741 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:57:33.741 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.741 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:57:33.741 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@559d921a
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] Loader - Done entity load
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:57:33.742 [http-nio-8080-exec-131] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:58:39.021 [http-nio-8080-exec-134] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:58:39.026 [http-nio-8080-exec-134] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:58:39.031 [http-nio-8080-exec-134] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:58:39.098 [http-nio-8080-exec-134] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:58:39.099 [http-nio-8080-exec-134] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:58:39.186 [http-nio-8080-exec-134] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:58:39.186 [http-nio-8080-exec-134] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:58:39.187 [http-nio-8080-exec-134] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:58:39.351 [http-nio-8080-exec-134] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:58:39.369 [http-nio-8080-exec-134] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:58:39.370 [http-nio-8080-exec-134] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:58:39.396 [http-nio-8080-exec-134] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:58:39.435 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@63971fda
[DEBUG] 2020-02-16 20:58:39.435 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@63971fda
[DEBUG] 2020-02-16 20:58:39.435 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63971fda
[DEBUG] 2020-02-16 20:58:39.435 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@252f2e52
[DEBUG] 2020-02-16 20:58:39.436 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2c2f322e
[DEBUG] 2020-02-16 20:58:39.436 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7471d099
[DEBUG] 2020-02-16 20:58:39.437 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6984ca60
[DEBUG] 2020-02-16 20:58:39.438 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6984ca60
[DEBUG] 2020-02-16 20:58:39.438 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6984ca60
[DEBUG] 2020-02-16 20:58:39.438 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6ef0092d
[DEBUG] 2020-02-16 20:58:39.438 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6ef0092d
[DEBUG] 2020-02-16 20:58:39.438 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6ef0092d
[DEBUG] 2020-02-16 20:58:39.439 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@20f8f41d
[DEBUG] 2020-02-16 20:58:39.439 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@20f8f41d
[DEBUG] 2020-02-16 20:58:39.439 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@20f8f41d
[DEBUG] 2020-02-16 20:58:39.440 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1f2d8683
[DEBUG] 2020-02-16 20:58:39.440 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1f2d8683
[DEBUG] 2020-02-16 20:58:39.440 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f2d8683
[DEBUG] 2020-02-16 20:58:39.440 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@23f81e07
[DEBUG] 2020-02-16 20:58:39.440 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@23f81e07
[DEBUG] 2020-02-16 20:58:39.440 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@23f81e07
[DEBUG] 2020-02-16 20:58:39.441 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2db83dcf
[DEBUG] 2020-02-16 20:58:39.441 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2db83dcf
[DEBUG] 2020-02-16 20:58:39.441 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2db83dcf
[DEBUG] 2020-02-16 20:58:39.442 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2bc4fcc7
[DEBUG] 2020-02-16 20:58:39.442 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2bc4fcc7
[DEBUG] 2020-02-16 20:58:39.442 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2bc4fcc7
[DEBUG] 2020-02-16 20:58:39.442 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@54ab8c22
[DEBUG] 2020-02-16 20:58:39.442 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@54ab8c22
[DEBUG] 2020-02-16 20:58:39.443 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7c8e1f6b
[DEBUG] 2020-02-16 20:58:39.443 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7c8e1f6b
[DEBUG] 2020-02-16 20:58:39.443 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@c7ed168
[DEBUG] 2020-02-16 20:58:39.443 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@c7ed168
[DEBUG] 2020-02-16 20:58:39.443 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3ac8f85d
[DEBUG] 2020-02-16 20:58:39.444 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@356d3bd3
[DEBUG] 2020-02-16 20:58:39.445 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@40dc8778
[DEBUG] 2020-02-16 20:58:39.445 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@40dc8778
[DEBUG] 2020-02-16 20:58:39.445 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@28eb4574
[DEBUG] 2020-02-16 20:58:39.446 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@28eb4574
[DEBUG] 2020-02-16 20:58:39.446 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@dafbf6e
[DEBUG] 2020-02-16 20:58:39.447 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@dafbf6e
[DEBUG] 2020-02-16 20:58:39.447 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a4c308a
[DEBUG] 2020-02-16 20:58:39.447 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a4c308a
[DEBUG] 2020-02-16 20:58:39.448 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@45086eb3
[DEBUG] 2020-02-16 20:58:39.448 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@45086eb3
[DEBUG] 2020-02-16 20:58:39.449 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66270c7f
[DEBUG] 2020-02-16 20:58:39.449 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66270c7f
[DEBUG] 2020-02-16 20:58:39.450 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@62160f57
[DEBUG] 2020-02-16 20:58:39.450 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@62160f57
[DEBUG] 2020-02-16 20:58:39.451 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5ef4fd43
[DEBUG] 2020-02-16 20:58:39.451 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5ef4fd43
[DEBUG] 2020-02-16 20:58:39.452 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d18758f
[DEBUG] 2020-02-16 20:58:39.452 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d18758f
[DEBUG] 2020-02-16 20:58:39.454 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@29f9a6f6
[DEBUG] 2020-02-16 20:58:39.454 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@29f9a6f6
[DEBUG] 2020-02-16 20:58:39.455 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1c854196
[DEBUG] 2020-02-16 20:58:39.455 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1c854196
[DEBUG] 2020-02-16 20:58:39.457 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@72923c56
[DEBUG] 2020-02-16 20:58:39.457 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@72923c56
[DEBUG] 2020-02-16 20:58:39.457 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@72923c56
[DEBUG] 2020-02-16 20:58:39.458 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6427a1f0
[DEBUG] 2020-02-16 20:58:39.460 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2b9ef101
[DEBUG] 2020-02-16 20:58:39.460 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2b9ef101
[DEBUG] 2020-02-16 20:58:39.460 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2b9ef101
[DEBUG] 2020-02-16 20:58:39.460 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@61727ed2
[DEBUG] 2020-02-16 20:58:39.461 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@64dd3882
[DEBUG] 2020-02-16 20:58:39.461 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@64dd3882
[DEBUG] 2020-02-16 20:58:39.462 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@b295cfb
[DEBUG] 2020-02-16 20:58:39.462 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b295cfb
[DEBUG] 2020-02-16 20:58:39.462 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@591a8c41
[DEBUG] 2020-02-16 20:58:39.462 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@591a8c41
[DEBUG] 2020-02-16 20:58:39.463 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@21e27f18
[DEBUG] 2020-02-16 20:58:39.463 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@21e27f18
[DEBUG] 2020-02-16 20:58:39.464 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d5d2280
[DEBUG] 2020-02-16 20:58:39.464 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d5d2280
[DEBUG] 2020-02-16 20:58:39.465 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@716814f2
[DEBUG] 2020-02-16 20:58:39.466 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@18a93102
[DEBUG] 2020-02-16 20:58:39.466 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@18a93102
[DEBUG] 2020-02-16 20:58:39.466 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@18a93102
[DEBUG] 2020-02-16 20:58:39.467 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@98767b1
[DEBUG] 2020-02-16 20:58:39.467 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@98767b1
[DEBUG] 2020-02-16 20:58:39.467 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@98767b1
[DEBUG] 2020-02-16 20:58:39.468 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6fef9181
[DEBUG] 2020-02-16 20:58:39.468 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3ac250b2
[DEBUG] 2020-02-16 20:58:39.469 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3d72700
[DEBUG] 2020-02-16 20:58:39.469 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3d72700
[DEBUG] 2020-02-16 20:58:39.469 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3d72700
[DEBUG] 2020-02-16 20:58:39.469 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4ec3c229
[DEBUG] 2020-02-16 20:58:39.470 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4ec3c229
[DEBUG] 2020-02-16 20:58:39.470 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4ec3c229
[DEBUG] 2020-02-16 20:58:39.470 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@622b9226
[DEBUG] 2020-02-16 20:58:39.470 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1c5e3af9
[DEBUG] 2020-02-16 20:58:39.471 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4d2aaec
[DEBUG] 2020-02-16 20:58:39.471 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d2aaec
[DEBUG] 2020-02-16 20:58:39.472 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5cf58c98
[DEBUG] 2020-02-16 20:58:39.473 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2ed4cc56
[DEBUG] 2020-02-16 20:58:39.473 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2ed4cc56
[DEBUG] 2020-02-16 20:58:39.473 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@39df9b85
[DEBUG] 2020-02-16 20:58:39.473 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@39df9b85
[DEBUG] 2020-02-16 20:58:39.474 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2856364f
[DEBUG] 2020-02-16 20:58:39.474 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c17d983
[DEBUG] 2020-02-16 20:58:39.475 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@403c9a41
[DEBUG] 2020-02-16 20:58:39.477 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@40fbe5fb
[DEBUG] 2020-02-16 20:58:39.477 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@40fbe5fb
[DEBUG] 2020-02-16 20:58:39.478 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3a727473
[DEBUG] 2020-02-16 20:58:39.478 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2d4d8abf
[DEBUG] 2020-02-16 20:58:39.478 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@264b687c
[DEBUG] 2020-02-16 20:58:39.478 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4f5304be
[DEBUG] 2020-02-16 20:58:39.478 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@662b30cb
[DEBUG] 2020-02-16 20:58:39.478 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@277246c3
[DEBUG] 2020-02-16 20:58:39.478 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a07d2d9
[DEBUG] 2020-02-16 20:58:39.478 [http-nio-8080-exec-134] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@da64bd3
[DEBUG] 2020-02-16 20:58:39.504 [http-nio-8080-exec-134] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:58:39.505 [http-nio-8080-exec-134] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:58:39.506 [http-nio-8080-exec-134] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:58:39.506 [http-nio-8080-exec-134] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:58:39.506 [http-nio-8080-exec-134] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:58:39.507 [http-nio-8080-exec-134] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:58:39.507 [http-nio-8080-exec-134] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:58:39.508 [http-nio-8080-exec-134] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:58:39.509 [http-nio-8080-exec-134] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:58:39.509 [http-nio-8080-exec-134] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:58:39.509 [http-nio-8080-exec-134] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:58:39.510 [http-nio-8080-exec-134] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:58:39.510 [http-nio-8080-exec-134] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:58:39.510 [http-nio-8080-exec-134] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:58:39.515 [http-nio-8080-exec-134] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:58:39.515 [http-nio-8080-exec-134] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:58:39.515 [http-nio-8080-exec-134] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:58:39.628 [http-nio-8080-exec-134] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:58:40.029 [http-nio-8080-exec-134] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:58:40.029 [http-nio-8080-exec-134] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:58:40.029 [http-nio-8080-exec-134] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:58:40.045 [http-nio-8080-exec-134] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:58:40.065 [http-nio-8080-exec-134] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:58:40.216 [http-nio-8080-exec-134] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:58:40.267 [http-nio-8080-exec-134] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:58:40.270 [http-nio-8080-exec-134] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@659ea7fe] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5949c1b9]
[DEBUG] 2020-02-16 20:58:40.311 [http-nio-8080-exec-134] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:58:40.330 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:58:40.335 [http-nio-8080-exec-134] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:58:40.337 [http-nio-8080-exec-134] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:58:40.353 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.356 [http-nio-8080-exec-134] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:58:40.358 [http-nio-8080-exec-134] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:58:40.360 [http-nio-8080-exec-134] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:58:40.361 [http-nio-8080-exec-134] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:58:40.364 [http-nio-8080-exec-134] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:58:40.365 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.365 [http-nio-8080-exec-134] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:58:40.365 [http-nio-8080-exec-134] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:58:40.365 [http-nio-8080-exec-134] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:58:40.365 [http-nio-8080-exec-134] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:58:40.365 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.365 [http-nio-8080-exec-134] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:58:40.365 [http-nio-8080-exec-134] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:58:40.365 [http-nio-8080-exec-134] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:58:40.366 [http-nio-8080-exec-134] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:58:40.367 [http-nio-8080-exec-134] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:58:40.367 [http-nio-8080-exec-134] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:58:40.367 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.367 [http-nio-8080-exec-134] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:58:40.367 [http-nio-8080-exec-134] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:58:40.367 [http-nio-8080-exec-134] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:58:40.367 [http-nio-8080-exec-134] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:58:40.367 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.367 [http-nio-8080-exec-134] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:58:40.367 [http-nio-8080-exec-134] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:58:40.367 [http-nio-8080-exec-134] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:58:40.367 [http-nio-8080-exec-134] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:58:40.368 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:58:40.369 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.370 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.376 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.377 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.378 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:58:40.379 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:58:40.379 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:58:40.380 [http-nio-8080-exec-134] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:58:40.383 [http-nio-8080-exec-134] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:58:40.383 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.383 [http-nio-8080-exec-134] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:58:40.383 [http-nio-8080-exec-134] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:58:40.383 [http-nio-8080-exec-134] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:58:40.383 [http-nio-8080-exec-134] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:58:40.383 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:58:40.383 [http-nio-8080-exec-134] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:58:40.384 [http-nio-8080-exec-134] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:58:40.384 [http-nio-8080-exec-134] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:58:40.384 [http-nio-8080-exec-134] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:58:40.384 [http-nio-8080-exec-134] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:58:40.384 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:58:40.384 [http-nio-8080-exec-134] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:58:40.385 [http-nio-8080-exec-134] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:58:40.386 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.386 [http-nio-8080-exec-134] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:58:40.386 [http-nio-8080-exec-134] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:58:40.386 [http-nio-8080-exec-134] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:58:40.386 [http-nio-8080-exec-134] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:58:40.387 [http-nio-8080-exec-134] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:58:40.387 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.387 [http-nio-8080-exec-134] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:58:40.387 [http-nio-8080-exec-134] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:58:40.387 [http-nio-8080-exec-134] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:58:40.387 [http-nio-8080-exec-134] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:58:40.391 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.391 [http-nio-8080-exec-134] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:58:40.391 [http-nio-8080-exec-134] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:58:40.391 [http-nio-8080-exec-134] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:58:40.391 [http-nio-8080-exec-134] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:58:40.391 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.391 [http-nio-8080-exec-134] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:58:40.392 [http-nio-8080-exec-134] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:58:40.392 [http-nio-8080-exec-134] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:58:40.392 [http-nio-8080-exec-134] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:58:40.392 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:58:40.392 [http-nio-8080-exec-134] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:58:40.394 [http-nio-8080-exec-134] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:58:40.395 [http-nio-8080-exec-134] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:58:40.396 [http-nio-8080-exec-134] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:58:40.396 [http-nio-8080-exec-134] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:58:40.396 [http-nio-8080-exec-134] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:58:40.396 [http-nio-8080-exec-134] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:58:40.396 [http-nio-8080-exec-134] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:58:40.396 [http-nio-8080-exec-134] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:58:40.396 [http-nio-8080-exec-134] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:58:40.396 [http-nio-8080-exec-134] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:58:40.396 [http-nio-8080-exec-134] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:58:40.396 [http-nio-8080-exec-134] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:58:40.396 [http-nio-8080-exec-134] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:58:40.396 [http-nio-8080-exec-134] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:58:40.396 [http-nio-8080-exec-134] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:58:40.396 [http-nio-8080-exec-134] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:58:40.396 [http-nio-8080-exec-134] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:58:40.405 [http-nio-8080-exec-134] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:58:40.405 [http-nio-8080-exec-134] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:58:40.405 [http-nio-8080-exec-134] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:58:40.405 [http-nio-8080-exec-134] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:58:40.405 [http-nio-8080-exec-134] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:58:40.406 [http-nio-8080-exec-134] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:58:40.406 [http-nio-8080-exec-134] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:58:40.406 [http-nio-8080-exec-134] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:58:40.406 [http-nio-8080-exec-134] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:58:40.410 [http-nio-8080-exec-134] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:58:40.410 [http-nio-8080-exec-134] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:58:40.454 [http-nio-8080-exec-134] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:58:40.456 [http-nio-8080-exec-134] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:58:40.457 [http-nio-8080-exec-134] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:58:40.498 [http-nio-8080-exec-134] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:58:40.513 [http-nio-8080-exec-134] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:58:40.513 [http-nio-8080-exec-134] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7ee18b11, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:58:40.536 [http-nio-8080-exec-134] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:58:40.536 [http-nio-8080-exec-134] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:58:40.536 [http-nio-8080-exec-134] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:58:40.536 [http-nio-8080-exec-134] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:58:40.539 [http-nio-8080-exec-134] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:58:40.539 [http-nio-8080-exec-134] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:58:40.539 [http-nio-8080-exec-134] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@659ea7fe] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4304e9cd]
[DEBUG] 2020-02-16 20:58:40.575 [http-nio-8080-exec-134] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:58:40.575 [http-nio-8080-exec-134] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:58:40.585 [http-nio-8080-exec-134] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:58:40.585 [http-nio-8080-exec-134] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:58:40.756 [http-nio-8080-exec-134] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:58:40.756 [http-nio-8080-exec-134] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:58:40.757 [http-nio-8080-exec-134] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:58:40.758 [http-nio-8080-exec-134] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:58:40.819 [http-nio-8080-exec-134] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:58:40.819 [http-nio-8080-exec-134] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:58:40.819 [http-nio-8080-exec-134] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:58:40.819 [http-nio-8080-exec-134] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:58:40.819 [http-nio-8080-exec-134] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:58:40.821 [http-nio-8080-exec-134] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:58:40.822 [http-nio-8080-exec-134] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:58:40.822 [http-nio-8080-exec-134] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:58:40.822 [http-nio-8080-exec-134] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:58:40.822 [http-nio-8080-exec-134] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:58:40.822 [http-nio-8080-exec-134] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:58:40.822 [http-nio-8080-exec-134] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:58:40.840 [http-nio-8080-exec-134] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68549985]
[DEBUG] 2020-02-16 20:58:40.841 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:58:40.841 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:58:40.841 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:58:40.841 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:58:40.843 [http-nio-8080-exec-134] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@727c105c]
[DEBUG] 2020-02-16 20:58:40.845 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:58:40.846 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:58:40.846 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:58:40.846 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:58:40.846 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:58:40.846 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:58:40.846 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:58:40.846 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:58:40.847 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:58:40.848 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:58:40.848 [http-nio-8080-exec-134] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:58:40.848 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:58:40.848 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:58:40.848 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:58:40.849 [http-nio-8080-exec-134] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@133c8dd]
[DEBUG] 2020-02-16 20:58:40.853 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:58:40.853 [http-nio-8080-exec-134] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:58:40.862 [http-nio-8080-exec-134] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:58:40.867 [http-nio-8080-exec-134] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:58:40.869 [http-nio-8080-exec-134] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:58:40.869 [http-nio-8080-exec-134] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@447efe56]
[DEBUG] 2020-02-16 20:58:40.869 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:58:40.869 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:58:40.869 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:58:40.869 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:58:40.869 [http-nio-8080-exec-134] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ea8d47]
[DEBUG] 2020-02-16 20:58:40.869 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:58:40.869 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:58:40.871 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:58:40.877 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:58:40.877 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:58:40.877 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:58:40.877 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:58:40.877 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:58:40.877 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:58:40.878 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:58:40.878 [http-nio-8080-exec-134] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:58:40.878 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:58:40.878 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:58:40.878 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:58:40.878 [http-nio-8080-exec-134] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@71f71fd6]
[DEBUG] 2020-02-16 20:58:40.878 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:58:40.879 [http-nio-8080-exec-134] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:58:40.879 [http-nio-8080-exec-134] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:58:40.879 [http-nio-8080-exec-134] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:58:40.879 [http-nio-8080-exec-134] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:58:40.891 [http-nio-8080-exec-134] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64796f83]
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:58:40.892 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:58:40.893 [http-nio-8080-exec-134] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34be9234]
[DEBUG] 2020-02-16 20:58:40.894 [http-nio-8080-exec-134] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48bb72f7]
[DEBUG] 2020-02-16 20:58:40.895 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:58:40.895 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:58:40.895 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:58:40.895 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:58:40.895 [http-nio-8080-exec-134] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:58:40.895 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:58:40.895 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:58:40.895 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:58:40.895 [http-nio-8080-exec-134] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2cd8d991]
[DEBUG] 2020-02-16 20:58:40.895 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:58:40.895 [http-nio-8080-exec-134] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:58:40.895 [http-nio-8080-exec-134] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8817a93]
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@261ae33]
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ca71c49]
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4d96f9ce]
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:58:40.897 [http-nio-8080-exec-134] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:58:40.898 [http-nio-8080-exec-134] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:58:40.898 [http-nio-8080-exec-134] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:58:40.898 [http-nio-8080-exec-134] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:58:40.899 [http-nio-8080-exec-134] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:58:40.900 [http-nio-8080-exec-134] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:58:40.902 [http-nio-8080-exec-134] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:58:40.905 [http-nio-8080-exec-134] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69f5950a]
[DEBUG] 2020-02-16 20:58:40.905 [http-nio-8080-exec-134] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aa44db1]
[DEBUG] 2020-02-16 20:58:40.905 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:58:40.905 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:58:40.905 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:58:40.905 [http-nio-8080-exec-134] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:58:40.905 [http-nio-8080-exec-134] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:58:40.905 [http-nio-8080-exec-134] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:58:40.906 [http-nio-8080-exec-134] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:58:40.907 [http-nio-8080-exec-134] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:58:40.907 [http-nio-8080-exec-134] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:58:40.932 [http-nio-8080-exec-134] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:58:40.932 [http-nio-8080-exec-134] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:58:40.933 [http-nio-8080-exec-134] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:58:40.939 [http-nio-8080-exec-134] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:58:40.939 [http-nio-8080-exec-134] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:58:40.939 [http-nio-8080-exec-134] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:58:40.939 [http-nio-8080-exec-134] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:58:40.941 [http-nio-8080-exec-134] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7b755485
[DEBUG] 2020-02-16 20:58:40.942 [http-nio-8080-exec-134] SessionFactoryRegistry - Registering SessionFactory: 478a3ea9-f263-40aa-8fd9-fbca8144d9fd (<unnamed>)
[DEBUG] 2020-02-16 20:58:40.942 [http-nio-8080-exec-134] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:58:41.005 [http-nio-8080-exec-134] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:58:41.024 [http-nio-8080-exec-134] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:58:41.039 [http-nio-8080-exec-134] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3e4a6485
[DEBUG] 2020-02-16 20:58:41.058 [http-nio-8080-exec-134] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:58:41.062 [http-nio-8080-exec-134] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:58:41.068 [http-nio-8080-exec-134] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:58:41.080 [http-nio-8080-exec-134] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:58:41.098 [http-nio-8080-exec-134] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:58:41.099 [http-nio-8080-exec-134] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:58:41.100 [http-nio-8080-exec-134] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:58:41.100 [http-nio-8080-exec-134] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:58:41.109 [http-nio-8080-exec-134] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:58:41.109 [http-nio-8080-exec-134] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:58:41.110 [http-nio-8080-exec-134] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:58:41.110 [http-nio-8080-exec-134] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:58:41.114 [http-nio-8080-exec-134] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:58:41.114 [http-nio-8080-exec-134] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:58:41.114 [http-nio-8080-exec-134] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:58:41.126 [http-nio-8080-exec-134] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:58:41.147 [http-nio-8080-exec-134] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:58:41.149 [http-nio-8080-exec-134] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:58:41.156 [http-nio-8080-exec-134] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:58:41.156 [http-nio-8080-exec-134] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:58:41.157 [http-nio-8080-exec-134] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:58:41.158 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.168 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:58:41.168 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.168 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:58:41.168 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.168 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@3fedd971
[DEBUG] 2020-02-16 20:58:41.168 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@93ffb1a
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.169 [http-nio-8080-exec-134] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:58:41.171 [http-nio-8080-exec-134] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:58:41.171 [http-nio-8080-exec-134] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:58:41.173 [http-nio-8080-exec-134] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:58:41.179 [http-nio-8080-exec-134] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:58:41.181 [http-nio-8080-exec-134] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:58:41.184 [http-nio-8080-exec-134] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:58:41.184 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:58:41.184 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.184 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:58:41.184 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.184 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:58:41.184 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.184 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:58:41.185 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.185 [http-nio-8080-exec-134] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:58:41.185 [http-nio-8080-exec-134] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:58:41.187 [http-nio-8080-exec-134] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:58:41.187 [http-nio-8080-exec-134] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:58:41.187 [http-nio-8080-exec-134] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:58:41.187 [http-nio-8080-exec-134] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:58:41.187 [http-nio-8080-exec-134] Loader - Done entity load
[DEBUG] 2020-02-16 20:58:41.187 [http-nio-8080-exec-134] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:58:41.187 [http-nio-8080-exec-134] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:58:41.188 [http-nio-8080-exec-134] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:58:41.188 [http-nio-8080-exec-134] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:58:41.188 [http-nio-8080-exec-134] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:58:41.188 [http-nio-8080-exec-134] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:58:41.188 [http-nio-8080-exec-134] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:58:41.188 [http-nio-8080-exec-134] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:58:41.189 [http-nio-8080-exec-134] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:58:41.189 [http-nio-8080-exec-134] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:58:41.189 [http-nio-8080-exec-134] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:58:41.189 [http-nio-8080-exec-134] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:58:41.189 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:58:41.189 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.189 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:58:41.189 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.189 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:58:41.189 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.189 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:58:41.189 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.190 [http-nio-8080-exec-134] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:58:41.190 [http-nio-8080-exec-134] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:58:41.190 [http-nio-8080-exec-134] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:58:41.191 [http-nio-8080-exec-134] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:58:41.191 [http-nio-8080-exec-134] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:58:41.191 [http-nio-8080-exec-134] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:58:41.191 [http-nio-8080-exec-134] Loader - Done entity load
[DEBUG] 2020-02-16 20:58:41.191 [http-nio-8080-exec-134] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:58:41.191 [http-nio-8080-exec-134] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:58:41.191 [http-nio-8080-exec-134] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:58:41.191 [http-nio-8080-exec-134] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:58:41.191 [http-nio-8080-exec-134] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:58:41.191 [http-nio-8080-exec-134] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:58:41.192 [http-nio-8080-exec-134] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:58:41.211 [http-nio-8080-exec-134] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:58:41.212 [http-nio-8080-exec-134] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:58:41.213 [http-nio-8080-exec-134] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:58:41.213 [http-nio-8080-exec-134] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:58:41.213 [http-nio-8080-exec-134] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:58:41.213 [http-nio-8080-exec-134] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:58:41.214 [http-nio-8080-exec-134] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:58:41.214 [http-nio-8080-exec-134] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:58:41.214 [http-nio-8080-exec-134] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:58:41.214 [http-nio-8080-exec-134] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:58:41.214 [http-nio-8080-exec-134] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:58:41.214 [http-nio-8080-exec-134] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:58:41.214 [http-nio-8080-exec-134] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:58:41.214 [http-nio-8080-exec-134] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:58:41.214 [http-nio-8080-exec-134] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:58:41.214 [http-nio-8080-exec-134] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:58:41.214 [http-nio-8080-exec-134] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:58:41.216 [http-nio-8080-exec-134] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:58:41.216 [http-nio-8080-exec-134] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:58:41.216 [http-nio-8080-exec-134] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:58:41.216 [http-nio-8080-exec-134] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:58:41.216 [http-nio-8080-exec-134] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:58:41.216 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:58:41.216 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.217 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:58:41.217 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.217 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:58:41.217 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.217 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:58:41.217 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.217 [http-nio-8080-exec-134] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:58:41.217 [http-nio-8080-exec-134] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:58:41.217 [http-nio-8080-exec-134] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:58:41.217 [http-nio-8080-exec-134] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@2d1b86b4
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:58:41.218 [http-nio-8080-exec-134] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:58:41.219 [http-nio-8080-exec-134] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:58:41.219 [http-nio-8080-exec-134] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:58:41.219 [http-nio-8080-exec-134] Loader - Done entity load
[DEBUG] 2020-02-16 20:58:41.219 [http-nio-8080-exec-134] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:58:41.219 [http-nio-8080-exec-134] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:58:41.219 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:58:41.219 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.219 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:58:41.219 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.219 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:58:41.219 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.219 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:58:41.219 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.219 [http-nio-8080-exec-134] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:58:41.219 [http-nio-8080-exec-134] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:58:41.220 [http-nio-8080-exec-134] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:58:41.220 [http-nio-8080-exec-134] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:58:41.220 [http-nio-8080-exec-134] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:58:41.220 [http-nio-8080-exec-134] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:58:41.220 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:58:41.220 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@2622bf83
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] Loader - Done entity load
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:58:41.221 [http-nio-8080-exec-134] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:59:40.577 [http-nio-8080-exec-146] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 20:59:40.583 [http-nio-8080-exec-146] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 20:59:40.588 [http-nio-8080-exec-146] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 20:59:40.648 [http-nio-8080-exec-146] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 20:59:40.649 [http-nio-8080-exec-146] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 20:59:40.742 [http-nio-8080-exec-146] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 20:59:40.743 [http-nio-8080-exec-146] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 20:59:40.744 [http-nio-8080-exec-146] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 20:59:40.852 [http-nio-8080-exec-146] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 20:59:40.863 [http-nio-8080-exec-146] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 20:59:40.864 [http-nio-8080-exec-146] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 20:59:40.876 [http-nio-8080-exec-146] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 20:59:40.898 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5d0168e0
[DEBUG] 2020-02-16 20:59:40.899 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5d0168e0
[DEBUG] 2020-02-16 20:59:40.899 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5d0168e0
[DEBUG] 2020-02-16 20:59:40.899 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e5da808
[DEBUG] 2020-02-16 20:59:40.899 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@65e6b05
[DEBUG] 2020-02-16 20:59:40.899 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d4731d
[DEBUG] 2020-02-16 20:59:40.904 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@19ff2c94
[DEBUG] 2020-02-16 20:59:40.904 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@19ff2c94
[DEBUG] 2020-02-16 20:59:40.904 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@19ff2c94
[DEBUG] 2020-02-16 20:59:40.905 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2efb796c
[DEBUG] 2020-02-16 20:59:40.906 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2efb796c
[DEBUG] 2020-02-16 20:59:40.906 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2efb796c
[DEBUG] 2020-02-16 20:59:40.907 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7dd2e580
[DEBUG] 2020-02-16 20:59:40.907 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7dd2e580
[DEBUG] 2020-02-16 20:59:40.907 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7dd2e580
[DEBUG] 2020-02-16 20:59:40.908 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7cdffdd4
[DEBUG] 2020-02-16 20:59:40.908 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7cdffdd4
[DEBUG] 2020-02-16 20:59:40.908 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7cdffdd4
[DEBUG] 2020-02-16 20:59:40.908 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@19974496
[DEBUG] 2020-02-16 20:59:40.908 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@19974496
[DEBUG] 2020-02-16 20:59:40.908 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@19974496
[DEBUG] 2020-02-16 20:59:40.909 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4e150b6b
[DEBUG] 2020-02-16 20:59:40.909 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4e150b6b
[DEBUG] 2020-02-16 20:59:40.909 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4e150b6b
[DEBUG] 2020-02-16 20:59:40.910 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@44a85795
[DEBUG] 2020-02-16 20:59:40.910 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@44a85795
[DEBUG] 2020-02-16 20:59:40.910 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@44a85795
[DEBUG] 2020-02-16 20:59:40.911 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@69bae2f2
[DEBUG] 2020-02-16 20:59:40.911 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@69bae2f2
[DEBUG] 2020-02-16 20:59:40.912 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c91ba2d
[DEBUG] 2020-02-16 20:59:40.912 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c91ba2d
[DEBUG] 2020-02-16 20:59:40.912 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@31feccd2
[DEBUG] 2020-02-16 20:59:40.912 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@31feccd2
[DEBUG] 2020-02-16 20:59:40.913 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4fd4f55a
[DEBUG] 2020-02-16 20:59:40.913 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c2883dd
[DEBUG] 2020-02-16 20:59:40.914 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7b796203
[DEBUG] 2020-02-16 20:59:40.914 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7b796203
[DEBUG] 2020-02-16 20:59:40.914 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6aab05b8
[DEBUG] 2020-02-16 20:59:40.914 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6aab05b8
[DEBUG] 2020-02-16 20:59:40.915 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@31e73c2
[DEBUG] 2020-02-16 20:59:40.915 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@31e73c2
[DEBUG] 2020-02-16 20:59:40.916 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1863e429
[DEBUG] 2020-02-16 20:59:40.916 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1863e429
[DEBUG] 2020-02-16 20:59:40.917 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@687d982
[DEBUG] 2020-02-16 20:59:40.917 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@687d982
[DEBUG] 2020-02-16 20:59:40.918 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@39d220d8
[DEBUG] 2020-02-16 20:59:40.918 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@39d220d8
[DEBUG] 2020-02-16 20:59:40.918 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2a23c50
[DEBUG] 2020-02-16 20:59:40.918 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2a23c50
[DEBUG] 2020-02-16 20:59:40.921 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2cf8d6c3
[DEBUG] 2020-02-16 20:59:40.922 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2cf8d6c3
[DEBUG] 2020-02-16 20:59:40.923 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64060247
[DEBUG] 2020-02-16 20:59:40.924 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64060247
[DEBUG] 2020-02-16 20:59:40.926 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@51118544
[DEBUG] 2020-02-16 20:59:40.927 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@51118544
[DEBUG] 2020-02-16 20:59:40.927 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5ea5733c
[DEBUG] 2020-02-16 20:59:40.927 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5ea5733c
[DEBUG] 2020-02-16 20:59:40.928 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f6b812e
[DEBUG] 2020-02-16 20:59:40.928 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f6b812e
[DEBUG] 2020-02-16 20:59:40.928 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f6b812e
[DEBUG] 2020-02-16 20:59:40.929 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45787388
[DEBUG] 2020-02-16 20:59:40.929 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4e4803ea
[DEBUG] 2020-02-16 20:59:40.929 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4e4803ea
[DEBUG] 2020-02-16 20:59:40.929 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4e4803ea
[DEBUG] 2020-02-16 20:59:40.931 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3bbf36ba
[DEBUG] 2020-02-16 20:59:40.931 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@301cae55
[DEBUG] 2020-02-16 20:59:40.931 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@301cae55
[DEBUG] 2020-02-16 20:59:40.932 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3c5c17aa
[DEBUG] 2020-02-16 20:59:40.932 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3c5c17aa
[DEBUG] 2020-02-16 20:59:40.932 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@132a58d5
[DEBUG] 2020-02-16 20:59:40.932 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@132a58d5
[DEBUG] 2020-02-16 20:59:40.933 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@52013de4
[DEBUG] 2020-02-16 20:59:40.933 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52013de4
[DEBUG] 2020-02-16 20:59:40.933 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e57c765
[DEBUG] 2020-02-16 20:59:40.933 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e57c765
[DEBUG] 2020-02-16 20:59:40.933 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@65c5ac07
[DEBUG] 2020-02-16 20:59:40.934 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4464f55e
[DEBUG] 2020-02-16 20:59:40.934 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4464f55e
[DEBUG] 2020-02-16 20:59:40.934 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4464f55e
[DEBUG] 2020-02-16 20:59:40.935 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@44122d07
[DEBUG] 2020-02-16 20:59:40.935 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@44122d07
[DEBUG] 2020-02-16 20:59:40.935 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@44122d07
[DEBUG] 2020-02-16 20:59:40.936 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@37b0608e
[DEBUG] 2020-02-16 20:59:40.937 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4d0b1fb7
[DEBUG] 2020-02-16 20:59:40.937 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3697d586
[DEBUG] 2020-02-16 20:59:40.937 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3697d586
[DEBUG] 2020-02-16 20:59:40.937 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3697d586
[DEBUG] 2020-02-16 20:59:40.938 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4274df92
[DEBUG] 2020-02-16 20:59:40.939 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4274df92
[DEBUG] 2020-02-16 20:59:40.939 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4274df92
[DEBUG] 2020-02-16 20:59:40.939 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2abc00c
[DEBUG] 2020-02-16 20:59:40.939 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4bd367b4
[DEBUG] 2020-02-16 20:59:40.941 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6c46fd66
[DEBUG] 2020-02-16 20:59:40.941 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6c46fd66
[DEBUG] 2020-02-16 20:59:40.941 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49941b53
[DEBUG] 2020-02-16 20:59:40.942 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@78f24bea
[DEBUG] 2020-02-16 20:59:40.942 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78f24bea
[DEBUG] 2020-02-16 20:59:40.944 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@506934f2
[DEBUG] 2020-02-16 20:59:40.944 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@506934f2
[DEBUG] 2020-02-16 20:59:40.944 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1aa44d71
[DEBUG] 2020-02-16 20:59:40.944 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@59341a6b
[DEBUG] 2020-02-16 20:59:40.945 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3f174594
[DEBUG] 2020-02-16 20:59:40.947 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4351b215
[DEBUG] 2020-02-16 20:59:40.947 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4351b215
[DEBUG] 2020-02-16 20:59:40.947 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2c611ccf
[DEBUG] 2020-02-16 20:59:40.947 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@41bfb32b
[DEBUG] 2020-02-16 20:59:40.947 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@791846f1
[DEBUG] 2020-02-16 20:59:40.947 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6d3e48ec
[DEBUG] 2020-02-16 20:59:40.947 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@499db6e0
[DEBUG] 2020-02-16 20:59:40.947 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@75876213
[DEBUG] 2020-02-16 20:59:40.947 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4e139d9c
[DEBUG] 2020-02-16 20:59:40.947 [http-nio-8080-exec-146] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5175c59a
[DEBUG] 2020-02-16 20:59:40.968 [http-nio-8080-exec-146] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 20:59:40.969 [http-nio-8080-exec-146] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 20:59:40.969 [http-nio-8080-exec-146] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:59:40.969 [http-nio-8080-exec-146] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 20:59:40.972 [http-nio-8080-exec-146] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 20:59:40.972 [http-nio-8080-exec-146] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 20:59:40.972 [http-nio-8080-exec-146] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 20:59:40.973 [http-nio-8080-exec-146] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:59:40.974 [http-nio-8080-exec-146] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 20:59:40.974 [http-nio-8080-exec-146] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 20:59:40.974 [http-nio-8080-exec-146] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 20:59:40.975 [http-nio-8080-exec-146] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 20:59:40.975 [http-nio-8080-exec-146] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 20:59:40.975 [http-nio-8080-exec-146] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 20:59:40.979 [http-nio-8080-exec-146] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 20:59:40.979 [http-nio-8080-exec-146] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 20:59:40.979 [http-nio-8080-exec-146] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 20:59:41.060 [http-nio-8080-exec-146] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 20:59:41.272 [http-nio-8080-exec-146] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:59:41.272 [http-nio-8080-exec-146] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 20:59:41.272 [http-nio-8080-exec-146] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 20:59:41.288 [http-nio-8080-exec-146] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 20:59:41.305 [http-nio-8080-exec-146] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 20:59:41.638 [http-nio-8080-exec-146] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 20:59:41.671 [http-nio-8080-exec-146] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 20:59:41.675 [http-nio-8080-exec-146] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@35de98c1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3c0a42f2]
[DEBUG] 2020-02-16 20:59:41.712 [http-nio-8080-exec-146] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:59:41.734 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:59:41.738 [http-nio-8080-exec-146] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 20:59:41.739 [http-nio-8080-exec-146] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 20:59:41.761 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.764 [http-nio-8080-exec-146] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 20:59:41.765 [http-nio-8080-exec-146] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 20:59:41.767 [http-nio-8080-exec-146] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 20:59:41.768 [http-nio-8080-exec-146] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 20:59:41.770 [http-nio-8080-exec-146] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:59:41.771 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.771 [http-nio-8080-exec-146] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 20:59:41.771 [http-nio-8080-exec-146] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 20:59:41.771 [http-nio-8080-exec-146] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 20:59:41.771 [http-nio-8080-exec-146] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 20:59:41.772 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.772 [http-nio-8080-exec-146] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 20:59:41.772 [http-nio-8080-exec-146] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 20:59:41.772 [http-nio-8080-exec-146] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 20:59:41.772 [http-nio-8080-exec-146] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 20:59:41.772 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.772 [http-nio-8080-exec-146] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:59:41.772 [http-nio-8080-exec-146] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 20:59:41.772 [http-nio-8080-exec-146] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:59:41.772 [http-nio-8080-exec-146] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:59:41.772 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.773 [http-nio-8080-exec-146] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 20:59:41.774 [http-nio-8080-exec-146] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 20:59:41.774 [http-nio-8080-exec-146] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 20:59:41.774 [http-nio-8080-exec-146] PropertyBinder - Building property email
[DEBUG] 2020-02-16 20:59:41.774 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 20:59:41.775 [http-nio-8080-exec-146] PropertyBinder - Building property password
[DEBUG] 2020-02-16 20:59:41.776 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.776 [http-nio-8080-exec-146] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 20:59:41.776 [http-nio-8080-exec-146] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 20:59:41.776 [http-nio-8080-exec-146] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 20:59:41.776 [http-nio-8080-exec-146] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 20:59:41.777 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:59:41.778 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.779 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.789 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.789 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.790 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 20:59:41.791 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:59:41.791 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 20:59:41.791 [http-nio-8080-exec-146] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:59:41.793 [http-nio-8080-exec-146] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 20:59:41.793 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.793 [http-nio-8080-exec-146] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 20:59:41.793 [http-nio-8080-exec-146] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 20:59:41.793 [http-nio-8080-exec-146] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 20:59:41.793 [http-nio-8080-exec-146] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 20:59:41.793 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 20:59:41.794 [http-nio-8080-exec-146] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 20:59:41.794 [http-nio-8080-exec-146] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 20:59:41.794 [http-nio-8080-exec-146] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 20:59:41.794 [http-nio-8080-exec-146] PropertyBinder - Building property username
[DEBUG] 2020-02-16 20:59:41.794 [http-nio-8080-exec-146] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:59:41.794 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 20:59:41.795 [http-nio-8080-exec-146] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 20:59:41.795 [http-nio-8080-exec-146] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 20:59:41.800 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.800 [http-nio-8080-exec-146] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 20:59:41.800 [http-nio-8080-exec-146] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 20:59:41.800 [http-nio-8080-exec-146] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 20:59:41.800 [http-nio-8080-exec-146] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 20:59:41.800 [http-nio-8080-exec-146] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 20:59:41.800 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.800 [http-nio-8080-exec-146] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 20:59:41.800 [http-nio-8080-exec-146] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 20:59:41.800 [http-nio-8080-exec-146] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 20:59:41.800 [http-nio-8080-exec-146] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 20:59:41.804 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.805 [http-nio-8080-exec-146] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 20:59:41.805 [http-nio-8080-exec-146] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 20:59:41.805 [http-nio-8080-exec-146] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 20:59:41.805 [http-nio-8080-exec-146] PropertyBinder - Building property name
[DEBUG] 2020-02-16 20:59:41.805 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.805 [http-nio-8080-exec-146] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 20:59:41.805 [http-nio-8080-exec-146] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 20:59:41.805 [http-nio-8080-exec-146] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 20:59:41.805 [http-nio-8080-exec-146] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 20:59:41.806 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 20:59:41.806 [http-nio-8080-exec-146] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 20:59:41.808 [http-nio-8080-exec-146] PropertyBinder - Building property user
[DEBUG] 2020-02-16 20:59:41.815 [http-nio-8080-exec-146] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 20:59:41.815 [http-nio-8080-exec-146] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 20:59:41.815 [http-nio-8080-exec-146] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 20:59:41.815 [http-nio-8080-exec-146] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:59:41.815 [http-nio-8080-exec-146] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 20:59:41.815 [http-nio-8080-exec-146] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 20:59:41.816 [http-nio-8080-exec-146] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 20:59:41.816 [http-nio-8080-exec-146] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 20:59:41.816 [http-nio-8080-exec-146] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 20:59:41.816 [http-nio-8080-exec-146] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 20:59:41.816 [http-nio-8080-exec-146] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 20:59:41.816 [http-nio-8080-exec-146] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 20:59:41.816 [http-nio-8080-exec-146] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 20:59:41.816 [http-nio-8080-exec-146] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 20:59:41.816 [http-nio-8080-exec-146] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 20:59:41.816 [http-nio-8080-exec-146] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 20:59:41.825 [http-nio-8080-exec-146] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 20:59:41.826 [http-nio-8080-exec-146] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 20:59:41.826 [http-nio-8080-exec-146] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:59:41.826 [http-nio-8080-exec-146] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 20:59:41.826 [http-nio-8080-exec-146] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 20:59:41.827 [http-nio-8080-exec-146] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 20:59:41.827 [http-nio-8080-exec-146] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:59:41.827 [http-nio-8080-exec-146] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:59:41.827 [http-nio-8080-exec-146] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:59:41.829 [http-nio-8080-exec-146] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 20:59:41.829 [http-nio-8080-exec-146] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:59:41.869 [http-nio-8080-exec-146] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Statistics: disabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 20:59:41.870 [http-nio-8080-exec-146] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 20:59:41.913 [http-nio-8080-exec-146] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 20:59:41.929 [http-nio-8080-exec-146] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 20:59:41.929 [http-nio-8080-exec-146] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@20a86ef7, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 20:59:41.946 [http-nio-8080-exec-146] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:59:41.946 [http-nio-8080-exec-146] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:59:41.947 [http-nio-8080-exec-146] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:59:41.947 [http-nio-8080-exec-146] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:59:41.949 [http-nio-8080-exec-146] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 20:59:41.949 [http-nio-8080-exec-146] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 20:59:41.950 [http-nio-8080-exec-146] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@35de98c1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2a8d62d1]
[DEBUG] 2020-02-16 20:59:41.986 [http-nio-8080-exec-146] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:59:41.986 [http-nio-8080-exec-146] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:59:41.994 [http-nio-8080-exec-146] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 20:59:41.995 [http-nio-8080-exec-146] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:59:42.158 [http-nio-8080-exec-146] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:59:42.158 [http-nio-8080-exec-146] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:59:42.160 [http-nio-8080-exec-146] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 20:59:42.160 [http-nio-8080-exec-146] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 20:59:42.211 [http-nio-8080-exec-146] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:59:42.211 [http-nio-8080-exec-146] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 20:59:42.211 [http-nio-8080-exec-146] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 20:59:42.211 [http-nio-8080-exec-146] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 20:59:42.211 [http-nio-8080-exec-146] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 20:59:42.214 [http-nio-8080-exec-146] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 20:59:42.214 [http-nio-8080-exec-146] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 20:59:42.214 [http-nio-8080-exec-146] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 20:59:42.214 [http-nio-8080-exec-146] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:59:42.214 [http-nio-8080-exec-146] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 20:59:42.214 [http-nio-8080-exec-146] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 20:59:42.214 [http-nio-8080-exec-146] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 20:59:42.249 [http-nio-8080-exec-146] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7db80702]
[DEBUG] 2020-02-16 20:59:42.249 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:59:42.250 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:59:42.250 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:59:42.250 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:59:42.252 [http-nio-8080-exec-146] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@737696b8]
[DEBUG] 2020-02-16 20:59:42.253 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:59:42.253 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:59:42.253 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:59:42.253 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:59:42.253 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:59:42.253 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:59:42.253 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:59:42.253 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:59:42.253 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:59:42.254 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:59:42.254 [http-nio-8080-exec-146] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:59:42.254 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:59:42.255 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:59:42.255 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:59:42.255 [http-nio-8080-exec-146] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3589db32]
[DEBUG] 2020-02-16 20:59:42.257 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:59:42.257 [http-nio-8080-exec-146] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:59:42.267 [http-nio-8080-exec-146] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:59:42.270 [http-nio-8080-exec-146] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:59:42.272 [http-nio-8080-exec-146] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:59:42.272 [http-nio-8080-exec-146] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34a8dc3e]
[DEBUG] 2020-02-16 20:59:42.272 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:59:42.272 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:59:42.272 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:59:42.272 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:59:42.272 [http-nio-8080-exec-146] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@666e4951]
[DEBUG] 2020-02-16 20:59:42.272 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 20:59:42.272 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 20:59:42.272 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 20:59:42.272 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 20:59:42.274 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 20:59:42.274 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 20:59:42.274 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 20:59:42.274 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 20:59:42.274 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 20:59:42.274 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 20:59:42.274 [http-nio-8080-exec-146] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 20:59:42.274 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 20:59:42.274 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 20:59:42.274 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:59:42.274 [http-nio-8080-exec-146] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@379b81e9]
[DEBUG] 2020-02-16 20:59:42.274 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:59:42.275 [http-nio-8080-exec-146] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:59:42.275 [http-nio-8080-exec-146] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:59:42.275 [http-nio-8080-exec-146] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 20:59:42.275 [http-nio-8080-exec-146] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 20:59:42.284 [http-nio-8080-exec-146] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:59:42.285 [http-nio-8080-exec-146] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 20:59:42.287 [http-nio-8080-exec-146] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 20:59:42.287 [http-nio-8080-exec-146] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 20:59:42.287 [http-nio-8080-exec-146] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 20:59:42.288 [http-nio-8080-exec-146] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:59:42.288 [http-nio-8080-exec-146] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 20:59:42.288 [http-nio-8080-exec-146] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 20:59:42.288 [http-nio-8080-exec-146] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 20:59:42.288 [http-nio-8080-exec-146] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c016f8d]
[DEBUG] 2020-02-16 20:59:42.288 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:59:42.288 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:59:42.288 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:59:42.288 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:59:42.288 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:59:42.288 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:59:42.288 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:59:42.288 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:59:42.288 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:59:42.288 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:59:42.289 [http-nio-8080-exec-146] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17ec058]
[DEBUG] 2020-02-16 20:59:42.291 [http-nio-8080-exec-146] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@700d92da]
[DEBUG] 2020-02-16 20:59:42.292 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:59:42.292 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:59:42.292 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:59:42.292 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:59:42.292 [http-nio-8080-exec-146] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:59:42.292 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:59:42.292 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:59:42.292 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:59:42.292 [http-nio-8080-exec-146] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@12c073bc]
[DEBUG] 2020-02-16 20:59:42.292 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:59:42.292 [http-nio-8080-exec-146] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:59:42.293 [http-nio-8080-exec-146] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:59:42.294 [http-nio-8080-exec-146] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:59:42.294 [http-nio-8080-exec-146] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:59:42.294 [http-nio-8080-exec-146] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61617fc2]
[DEBUG] 2020-02-16 20:59:42.294 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 20:59:42.294 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 20:59:42.294 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:59:42.294 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 20:59:42.294 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8129e20]
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@183d13b1]
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4ae1ca9a]
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:59:42.295 [http-nio-8080-exec-146] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 20:59:42.296 [http-nio-8080-exec-146] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:59:42.296 [http-nio-8080-exec-146] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:59:42.297 [http-nio-8080-exec-146] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 20:59:42.298 [http-nio-8080-exec-146] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:59:42.301 [http-nio-8080-exec-146] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2887880]
[DEBUG] 2020-02-16 20:59:42.301 [http-nio-8080-exec-146] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c111e0d]
[DEBUG] 2020-02-16 20:59:42.301 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 20:59:42.302 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 20:59:42.302 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 20:59:42.302 [http-nio-8080-exec-146] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 20:59:42.302 [http-nio-8080-exec-146] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 20:59:42.302 [http-nio-8080-exec-146] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 20:59:42.303 [http-nio-8080-exec-146] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 20:59:42.304 [http-nio-8080-exec-146] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 20:59:42.304 [http-nio-8080-exec-146] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:59:42.330 [http-nio-8080-exec-146] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 20:59:42.330 [http-nio-8080-exec-146] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 20:59:42.331 [http-nio-8080-exec-146] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 20:59:42.335 [http-nio-8080-exec-146] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 20:59:42.335 [http-nio-8080-exec-146] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 20:59:42.336 [http-nio-8080-exec-146] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 20:59:42.336 [http-nio-8080-exec-146] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 20:59:42.338 [http-nio-8080-exec-146] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1ef8a0ec
[DEBUG] 2020-02-16 20:59:42.340 [http-nio-8080-exec-146] SessionFactoryRegistry - Registering SessionFactory: 19a9204c-177a-4f89-8e24-856481314da8 (<unnamed>)
[DEBUG] 2020-02-16 20:59:42.340 [http-nio-8080-exec-146] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 20:59:42.397 [http-nio-8080-exec-146] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 20:59:42.419 [http-nio-8080-exec-146] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 20:59:42.432 [http-nio-8080-exec-146] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2db0a50a
[DEBUG] 2020-02-16 20:59:42.449 [http-nio-8080-exec-146] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:59:42.451 [http-nio-8080-exec-146] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:59:42.454 [http-nio-8080-exec-146] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:59:42.473 [http-nio-8080-exec-146] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:59:42.484 [http-nio-8080-exec-146] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 20:59:42.485 [http-nio-8080-exec-146] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 20:59:42.487 [http-nio-8080-exec-146] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:59:42.487 [http-nio-8080-exec-146] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 20:59:42.495 [http-nio-8080-exec-146] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 20:59:42.495 [http-nio-8080-exec-146] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:59:42.495 [http-nio-8080-exec-146] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 20:59:42.496 [http-nio-8080-exec-146] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:59:42.499 [http-nio-8080-exec-146] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 20:59:42.499 [http-nio-8080-exec-146] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:59:42.499 [http-nio-8080-exec-146] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:59:42.511 [http-nio-8080-exec-146] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 20:59:42.968 [http-nio-8080-exec-146] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:59:42.972 [http-nio-8080-exec-146] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:59:42.978 [http-nio-8080-exec-146] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:59:42.979 [http-nio-8080-exec-146] Loader - Result row: EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:59:42.979 [http-nio-8080-exec-146] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:59:42.980 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:59:42.980 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.980 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:59:42.980 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.980 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:59:42.980 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.980 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:59:42.980 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.980 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:59:42.980 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.980 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:59:42.980 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.980 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:59:42.980 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.980 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:59:42.980 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.981 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:59:42.981 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.981 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:59:42.981 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.993 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:59:42.993 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.993 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:59:42.993 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.993 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@7ec6ca00
[DEBUG] 2020-02-16 20:59:42.993 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.994 [http-nio-8080-exec-146] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:59:42.994 [http-nio-8080-exec-146] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:59:42.994 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:59:42.994 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@49231bfe
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:42.995 [http-nio-8080-exec-146] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:59:42.997 [http-nio-8080-exec-146] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:59:42.997 [http-nio-8080-exec-146] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:59:43.000 [http-nio-8080-exec-146] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=4, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:59:43.005 [http-nio-8080-exec-146] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:59:43.007 [http-nio-8080-exec-146] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:59:43.012 [http-nio-8080-exec-146] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:59:43.012 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:59:43.012 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.012 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:59:43.012 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.012 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:59:43.012 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.012 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:59:43.012 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.013 [http-nio-8080-exec-146] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:59:43.013 [http-nio-8080-exec-146] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:59:43.015 [http-nio-8080-exec-146] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:59:43.015 [http-nio-8080-exec-146] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:59:43.016 [http-nio-8080-exec-146] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:59:43.016 [http-nio-8080-exec-146] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:59:43.016 [http-nio-8080-exec-146] Loader - Done entity load
[DEBUG] 2020-02-16 20:59:43.016 [http-nio-8080-exec-146] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:59:43.016 [http-nio-8080-exec-146] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:59:43.017 [http-nio-8080-exec-146] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:59:43.017 [http-nio-8080-exec-146] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:59:43.017 [http-nio-8080-exec-146] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:59:43.017 [http-nio-8080-exec-146] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:59:43.017 [http-nio-8080-exec-146] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:59:43.017 [http-nio-8080-exec-146] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 20:59:43.018 [http-nio-8080-exec-146] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 20:59:43.019 [http-nio-8080-exec-146] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 20:59:43.019 [http-nio-8080-exec-146] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:59:43.019 [http-nio-8080-exec-146] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:59:43.019 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:59:43.019 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.019 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:59:43.019 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.019 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:59:43.019 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.019 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:59:43.019 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.019 [http-nio-8080-exec-146] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:59:43.020 [http-nio-8080-exec-146] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:59:43.022 [http-nio-8080-exec-146] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:59:43.022 [http-nio-8080-exec-146] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:59:43.023 [http-nio-8080-exec-146] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:59:43.023 [http-nio-8080-exec-146] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:59:43.023 [http-nio-8080-exec-146] Loader - Done entity load
[DEBUG] 2020-02-16 20:59:43.023 [http-nio-8080-exec-146] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:59:43.023 [http-nio-8080-exec-146] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:59:43.023 [http-nio-8080-exec-146] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:59:43.023 [http-nio-8080-exec-146] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:59:43.023 [http-nio-8080-exec-146] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 20:59:43.023 [http-nio-8080-exec-146] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 20:59:43.024 [http-nio-8080-exec-146] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 20:59:43.028 [http-nio-8080-exec-146] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2020-02-16 20:59:43.028 [http-nio-8080-exec-146] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:59:43.029 [http-nio-8080-exec-146] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:59:43.030 [http-nio-8080-exec-146] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 20:59:43.030 [http-nio-8080-exec-146] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 20:59:43.030 [http-nio-8080-exec-146] FromElement - FromClause{level=1} : com.streammedia.entity.Role (generatedAlias0) -> role0_
[DEBUG] 2020-02-16 20:59:43.030 [http-nio-8080-exec-146] FromReferenceNode - Resolved : generatedAlias0 -> role0_.role_id
[DEBUG] 2020-02-16 20:59:43.030 [http-nio-8080-exec-146] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 20:59:43.030 [http-nio-8080-exec-146] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.role_id ) ( FromClause{level=1} Role role0_ ) )
[DEBUG] 2020-02-16 20:59:43.030 [http-nio-8080-exec-146] JoinProcessor - Using FROM fragment [Role role0_]
[DEBUG] 2020-02-16 20:59:43.030 [http-nio-8080-exec-146] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 20:59:43.030 [http-nio-8080-exec-146] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.role_id as role_id1_0_' {alias=generatedAlias0, className=com.streammedia.entity.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Role role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Role,tableAlias=role0_,origin=null,columns={,className=com.streammedia.entity.Role}}

[DEBUG] 2020-02-16 20:59:43.031 [http-nio-8080-exec-146] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:59:43.031 [http-nio-8080-exec-146] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Role as generatedAlias0
[DEBUG] 2020-02-16 20:59:43.031 [http-nio-8080-exec-146] QueryTranslatorImpl - SQL: select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:59:43.031 [http-nio-8080-exec-146] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 20:59:43.031 [http-nio-8080-exec-146] SQL - select role0_.role_id as role_id1_0_, role0_.created_at as created_2_0_, role0_.name as name3_0_, role0_.updated_at as updated_4_0_, role0_.username as username5_0_ from Role role0_
[DEBUG] 2020-02-16 20:59:43.036 [http-nio-8080-exec-146] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:59:43.037 [http-nio-8080-exec-146] Loader - Result row: EntityKey[com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:59:43.037 [http-nio-8080-exec-146] Loader - Result set row: 1
[DEBUG] 2020-02-16 20:59:43.038 [http-nio-8080-exec-146] Loader - Result row: EntityKey[com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:59:43.038 [http-nio-8080-exec-146] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:59:43.038 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:59:43.038 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.038 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 20:59:43.038 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.038 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:59:43.038 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.038 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:59:43.038 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.038 [http-nio-8080-exec-146] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 20:59:43.038 [http-nio-8080-exec-146] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:59:43.039 [http-nio-8080-exec-146] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:59:43.040 [http-nio-8080-exec-146] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:59:43.043 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.044 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:59:43.044 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.044 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 20:59:43.044 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.044 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@70643b41
[DEBUG] 2020-02-16 20:59:43.044 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.044 [http-nio-8080-exec-146] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 20:59:43.044 [http-nio-8080-exec-146] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:59:43.044 [http-nio-8080-exec-146] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 20:59:43.044 [http-nio-8080-exec-146] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:59:43.044 [http-nio-8080-exec-146] Loader - Done entity load
[DEBUG] 2020-02-16 20:59:43.045 [http-nio-8080-exec-146] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 20:59:43.045 [http-nio-8080-exec-146] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:59:43.045 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:59:43.045 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.045 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 20:59:43.045 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.045 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:59:43.045 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.045 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 20:59:43.045 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.045 [http-nio-8080-exec-146] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 20:59:43.045 [http-nio-8080-exec-146] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] Loader - Result set row: 0
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.046 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 20:59:43.047 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.047 [http-nio-8080-exec-146] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@7eff2537
[DEBUG] 2020-02-16 20:59:43.047 [http-nio-8080-exec-146] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 20:59:43.047 [http-nio-8080-exec-146] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#4]
[DEBUG] 2020-02-16 20:59:43.047 [http-nio-8080-exec-146] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:59:43.047 [http-nio-8080-exec-146] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#4]
[DEBUG] 2020-02-16 20:59:43.047 [http-nio-8080-exec-146] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 20:59:43.047 [http-nio-8080-exec-146] Loader - Done entity load
[DEBUG] 2020-02-16 20:59:43.047 [http-nio-8080-exec-146] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 20:59:43.047 [http-nio-8080-exec-146] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
