[DEBUG] 2020-03-04 17:11:13.203 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-03-04 17:11:13.214 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-03-04 17:11:13.232 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-03-04 17:11:13.459 [http-nio-8080-exec-10] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-03-04 17:11:13.471 [http-nio-8080-exec-10] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-03-04 17:11:14.017 [http-nio-8080-exec-10] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-03-04 17:11:14.020 [http-nio-8080-exec-10] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-03-04 17:11:14.183 [http-nio-8080-exec-10] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-03-04 17:11:15.101 [http-nio-8080-exec-10] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-03-04 17:11:15.139 [http-nio-8080-exec-10] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-03-04 17:11:15.141 [http-nio-8080-exec-10] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-03-04 17:11:15.171 [http-nio-8080-exec-10] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-03-04 17:11:15.264 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@132b6e63
[DEBUG] 2020-03-04 17:11:15.264 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@132b6e63
[DEBUG] 2020-03-04 17:11:15.265 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@132b6e63
[DEBUG] 2020-03-04 17:11:15.265 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5c306ac
[DEBUG] 2020-03-04 17:11:15.265 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b47d07a
[DEBUG] 2020-03-04 17:11:15.266 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@11824325
[DEBUG] 2020-03-04 17:11:15.266 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3576dedd
[DEBUG] 2020-03-04 17:11:15.267 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3576dedd
[DEBUG] 2020-03-04 17:11:15.267 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3576dedd
[DEBUG] 2020-03-04 17:11:15.268 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4a4c09c3
[DEBUG] 2020-03-04 17:11:15.268 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4a4c09c3
[DEBUG] 2020-03-04 17:11:15.268 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4a4c09c3
[DEBUG] 2020-03-04 17:11:15.270 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7f7cc948
[DEBUG] 2020-03-04 17:11:15.271 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7f7cc948
[DEBUG] 2020-03-04 17:11:15.271 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7f7cc948
[DEBUG] 2020-03-04 17:11:15.273 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@11c31d21
[DEBUG] 2020-03-04 17:11:15.273 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@11c31d21
[DEBUG] 2020-03-04 17:11:15.273 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@11c31d21
[DEBUG] 2020-03-04 17:11:15.274 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@a173e69
[DEBUG] 2020-03-04 17:11:15.274 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@a173e69
[DEBUG] 2020-03-04 17:11:15.274 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@a173e69
[DEBUG] 2020-03-04 17:11:15.275 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2a989036
[DEBUG] 2020-03-04 17:11:15.275 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2a989036
[DEBUG] 2020-03-04 17:11:15.275 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2a989036
[DEBUG] 2020-03-04 17:11:15.275 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@229588dd
[DEBUG] 2020-03-04 17:11:15.276 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@229588dd
[DEBUG] 2020-03-04 17:11:15.276 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@229588dd
[DEBUG] 2020-03-04 17:11:15.277 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@421d71d4
[DEBUG] 2020-03-04 17:11:15.277 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@421d71d4
[DEBUG] 2020-03-04 17:11:15.277 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@644d3bfe
[DEBUG] 2020-03-04 17:11:15.277 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@644d3bfe
[DEBUG] 2020-03-04 17:11:15.278 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@63d74e9c
[DEBUG] 2020-03-04 17:11:15.278 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@63d74e9c
[DEBUG] 2020-03-04 17:11:15.278 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@bd2e80d
[DEBUG] 2020-03-04 17:11:15.279 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7e59f622
[DEBUG] 2020-03-04 17:11:15.279 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7886583d
[DEBUG] 2020-03-04 17:11:15.280 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7886583d
[DEBUG] 2020-03-04 17:11:15.282 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@742c103b
[DEBUG] 2020-03-04 17:11:15.282 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@742c103b
[DEBUG] 2020-03-04 17:11:15.287 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5f434159
[DEBUG] 2020-03-04 17:11:15.288 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5f434159
[DEBUG] 2020-03-04 17:11:15.289 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d85b9
[DEBUG] 2020-03-04 17:11:15.289 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@559d85b9
[DEBUG] 2020-03-04 17:11:15.290 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1c1245eb
[DEBUG] 2020-03-04 17:11:15.290 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1c1245eb
[DEBUG] 2020-03-04 17:11:15.291 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@e515fa3
[DEBUG] 2020-03-04 17:11:15.291 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@e515fa3
[DEBUG] 2020-03-04 17:11:15.292 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53adf82c
[DEBUG] 2020-03-04 17:11:15.292 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53adf82c
[DEBUG] 2020-03-04 17:11:15.293 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6101dc2f
[DEBUG] 2020-03-04 17:11:15.293 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6101dc2f
[DEBUG] 2020-03-04 17:11:15.294 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f994252
[DEBUG] 2020-03-04 17:11:15.294 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f994252
[DEBUG] 2020-03-04 17:11:15.295 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7799e2a0
[DEBUG] 2020-03-04 17:11:15.295 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7799e2a0
[DEBUG] 2020-03-04 17:11:15.296 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6c958b10
[DEBUG] 2020-03-04 17:11:15.296 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6c958b10
[DEBUG] 2020-03-04 17:11:15.297 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3dc33df0
[DEBUG] 2020-03-04 17:11:15.297 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3dc33df0
[DEBUG] 2020-03-04 17:11:15.297 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3dc33df0
[DEBUG] 2020-03-04 17:11:15.298 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d83fcb2
[DEBUG] 2020-03-04 17:11:15.299 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6bce174f
[DEBUG] 2020-03-04 17:11:15.299 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6bce174f
[DEBUG] 2020-03-04 17:11:15.460 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6bce174f
[DEBUG] 2020-03-04 17:11:15.462 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@10cdb59e
[DEBUG] 2020-03-04 17:11:15.463 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5e9dd7d0
[DEBUG] 2020-03-04 17:11:15.463 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5e9dd7d0
[DEBUG] 2020-03-04 17:11:15.467 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@616ab761
[DEBUG] 2020-03-04 17:11:15.467 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@616ab761
[DEBUG] 2020-03-04 17:11:15.468 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5dfc1308
[DEBUG] 2020-03-04 17:11:15.468 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5dfc1308
[DEBUG] 2020-03-04 17:11:15.469 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@21ebce06
[DEBUG] 2020-03-04 17:11:15.469 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@21ebce06
[DEBUG] 2020-03-04 17:11:15.469 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2b4bbe63
[DEBUG] 2020-03-04 17:11:15.470 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2b4bbe63
[DEBUG] 2020-03-04 17:11:15.470 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@33eb2f4f
[DEBUG] 2020-03-04 17:11:15.471 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@304e4a
[DEBUG] 2020-03-04 17:11:15.471 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@304e4a
[DEBUG] 2020-03-04 17:11:15.471 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@304e4a
[DEBUG] 2020-03-04 17:11:15.472 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1fa1a608
[DEBUG] 2020-03-04 17:11:15.472 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1fa1a608
[DEBUG] 2020-03-04 17:11:15.472 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1fa1a608
[DEBUG] 2020-03-04 17:11:15.473 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5ed2a509
[DEBUG] 2020-03-04 17:11:15.473 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7625845d
[DEBUG] 2020-03-04 17:11:15.474 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4372160d
[DEBUG] 2020-03-04 17:11:15.474 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4372160d
[DEBUG] 2020-03-04 17:11:15.474 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4372160d
[DEBUG] 2020-03-04 17:11:15.475 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a5223da
[DEBUG] 2020-03-04 17:11:15.475 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a5223da
[DEBUG] 2020-03-04 17:11:15.475 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a5223da
[DEBUG] 2020-03-04 17:11:15.475 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@242a56c1
[DEBUG] 2020-03-04 17:11:15.475 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@69a7ad25
[DEBUG] 2020-03-04 17:11:15.479 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5d932bfa
[DEBUG] 2020-03-04 17:11:15.480 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d932bfa
[DEBUG] 2020-03-04 17:11:15.481 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@9407256
[DEBUG] 2020-03-04 17:11:15.482 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1f9929ad
[DEBUG] 2020-03-04 17:11:15.482 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f9929ad
[DEBUG] 2020-03-04 17:11:15.483 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4452625
[DEBUG] 2020-03-04 17:11:15.483 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4452625
[DEBUG] 2020-03-04 17:11:15.484 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@75c24688
[DEBUG] 2020-03-04 17:11:15.484 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@12860ae6
[DEBUG] 2020-03-04 17:11:15.490 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@d4140e
[DEBUG] 2020-03-04 17:11:15.493 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@22fab529
[DEBUG] 2020-03-04 17:11:15.493 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@22fab529
[DEBUG] 2020-03-04 17:11:15.494 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@404268e2
[DEBUG] 2020-03-04 17:11:15.494 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16cb3643
[DEBUG] 2020-03-04 17:11:15.494 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48cdc806
[DEBUG] 2020-03-04 17:11:15.494 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@49acb1d5
[DEBUG] 2020-03-04 17:11:15.494 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1afac57a
[DEBUG] 2020-03-04 17:11:15.498 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@55cc9148
[DEBUG] 2020-03-04 17:11:15.498 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7367ee0f
[DEBUG] 2020-03-04 17:11:15.499 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5f69dbaf
[DEBUG] 2020-03-04 17:11:15.535 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-03-04 17:11:15.536 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-03-04 17:11:15.536 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-04 17:11:15.536 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-04 17:11:15.537 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-03-04 17:11:15.537 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-03-04 17:11:15.538 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-03-04 17:11:15.539 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-04 17:11:15.539 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-03-04 17:11:15.540 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-03-04 17:11:15.540 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-03-04 17:11:15.540 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-03-04 17:11:15.540 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-04 17:11:15.541 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-03-04 17:11:15.550 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-03-04 17:11:15.550 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-03-04 17:11:15.550 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-03-04 17:11:15.773 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-03-04 17:11:16.188 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-03-04 17:11:16.188 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-03-04 17:11:16.193 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-03-04 17:11:16.276 [http-nio-8080-exec-10] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-03-04 17:11:16.304 [http-nio-8080-exec-10] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-03-04 17:11:16.408 [http-nio-8080-exec-10] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-03-04 17:11:16.502 [http-nio-8080-exec-10] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-03-04 17:11:16.534 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1d7eb29f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@618aac17]
[DEBUG] 2020-03-04 17:11:16.650 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:11:16.784 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:11:16.808 [http-nio-8080-exec-10] EntityBinder - Import with entity name User
[DEBUG] 2020-03-04 17:11:16.825 [http-nio-8080-exec-10] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-03-04 17:11:16.988 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:16.992 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-03-04 17:11:16.995 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-03-04 17:11:16.997 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-03-04 17:11:16.999 [http-nio-8080-exec-10] PropertyBinder - Building property userId
[DEBUG] 2020-03-04 17:11:17.008 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:11:17.009 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.009 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-04 17:11:17.010 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-03-04 17:11:17.010 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-04 17:11:17.010 [http-nio-8080-exec-10] PropertyBinder - Building property biography
[DEBUG] 2020-03-04 17:11:17.010 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.012 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-03-04 17:11:17.012 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-03-04 17:11:17.012 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-03-04 17:11:17.012 [http-nio-8080-exec-10] PropertyBinder - Building property birthdate
[DEBUG] 2020-03-04 17:11:17.014 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.015 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:11:17.015 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-03-04 17:11:17.015 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:11:17.015 [http-nio-8080-exec-10] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:11:17.029 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.043 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-04 17:11:17.043 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-03-04 17:11:17.043 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-04 17:11:17.043 [http-nio-8080-exec-10] PropertyBinder - Building property email
[DEBUG] 2020-03-04 17:11:17.055 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:11:17.056 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.070 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.098 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.099 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.113 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:11:17.115 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:11:17.116 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:11:17.116 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-04 17:11:17.133 [http-nio-8080-exec-10] PropertyBinder - Building property faqs
[DEBUG] 2020-03-04 17:11:17.133 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] PropertyBinder - Building property films
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] PropertyBinder - Building property firstName
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-03-04 17:11:17.134 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] PropertyBinder - Building property gender
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] PropertyBinder - Building property lastName
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] PropertyBinder - Building property password
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] PropertyBinder - Building property picture
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.135 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.136 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.136 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:11:17.136 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:11:17.136 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:11:17.136 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-04 17:11:17.136 [http-nio-8080-exec-10] PropertyBinder - Building property roles
[DEBUG] 2020-03-04 17:11:17.136 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:11:17.136 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.136 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.137 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.137 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.137 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:11:17.137 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:11:17.137 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:11:17.137 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-04 17:11:17.137 [http-nio-8080-exec-10] PropertyBinder - Building property trailers
[DEBUG] 2020-03-04 17:11:17.137 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.137 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-04 17:11:17.137 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-03-04 17:11:17.137 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-04 17:11:17.137 [http-nio-8080-exec-10] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-04 17:11:17.137 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-03-04 17:11:17.138 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-03-04 17:11:17.138 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-03-04 17:11:17.138 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-03-04 17:11:17.138 [http-nio-8080-exec-10] PropertyBinder - Building property username
[DEBUG] 2020-03-04 17:11:17.139 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:11:17.139 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:11:17.139 [http-nio-8080-exec-10] EntityBinder - Import with entity name Role
[DEBUG] 2020-03-04 17:11:17.139 [http-nio-8080-exec-10] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-03-04 17:11:17.157 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.157 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-03-04 17:11:17.157 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-03-04 17:11:17.157 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-03-04 17:11:17.157 [http-nio-8080-exec-10] PropertyBinder - Building property roleId
[DEBUG] 2020-03-04 17:11:17.157 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:11:17.157 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.157 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:11:17.157 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-03-04 17:11:17.157 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:11:17.157 [http-nio-8080-exec-10] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:11:17.158 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.158 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-04 17:11:17.158 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-03-04 17:11:17.158 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-04 17:11:17.158 [http-nio-8080-exec-10] PropertyBinder - Building property name
[DEBUG] 2020-03-04 17:11:17.158 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.158 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-04 17:11:17.158 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-03-04 17:11:17.158 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-04 17:11:17.158 [http-nio-8080-exec-10] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-04 17:11:17.158 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-03-04 17:11:17.158 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.160 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2020-03-04 17:11:17.160 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:11:17.161 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:11:17.161 [http-nio-8080-exec-10] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-03-04 17:11:17.169 [http-nio-8080-exec-10] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-03-04 17:11:17.170 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.170 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-03-04 17:11:17.170 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-03-04 17:11:17.170 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-03-04 17:11:17.170 [http-nio-8080-exec-10] PropertyBinder - Building property trailerId
[DEBUG] 2020-03-04 17:11:17.173 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:11:17.173 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.173 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-03-04 17:11:17.173 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-03-04 17:11:17.173 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-03-04 17:11:17.173 [http-nio-8080-exec-10] PropertyBinder - Building property author
[DEBUG] 2020-03-04 17:11:17.174 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.174 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-04 17:11:17.174 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-03-04 17:11:17.174 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-04 17:11:17.174 [http-nio-8080-exec-10] PropertyBinder - Building property cover
[DEBUG] 2020-03-04 17:11:17.174 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.174 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:11:17.174 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-03-04 17:11:17.174 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:11:17.174 [http-nio-8080-exec-10] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:11:17.174 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.174 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-04 17:11:17.174 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-03-04 17:11:17.174 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] PropertyBinder - Building property duration
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] PropertyBinder - Building property link
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] PropertyBinder - Building property summary
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] PropertyBinder - Building property title
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-04 17:11:17.175 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-03-04 17:11:17.176 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-04 17:11:17.176 [http-nio-8080-exec-10] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-04 17:11:17.176 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:11:17.176 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.176 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2020-03-04 17:11:17.176 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.176 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-04 17:11:17.176 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-03-04 17:11:17.176 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-04 17:11:17.176 [http-nio-8080-exec-10] PropertyBinder - Building property video
[DEBUG] 2020-03-04 17:11:17.176 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:11:17.176 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:11:17.184 [http-nio-8080-exec-10] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-03-04 17:11:17.184 [http-nio-8080-exec-10] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-03-04 17:11:17.190 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.190 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-03-04 17:11:17.190 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-03-04 17:11:17.190 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-03-04 17:11:17.190 [http-nio-8080-exec-10] PropertyBinder - Building property faqId
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] PropertyBinder - Building property category
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] PropertyBinder - Building property description
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.191 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-04 17:11:17.192 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-03-04 17:11:17.192 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-04 17:11:17.192 [http-nio-8080-exec-10] PropertyBinder - Building property title
[DEBUG] 2020-03-04 17:11:17.192 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.192 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-04 17:11:17.192 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-03-04 17:11:17.192 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-04 17:11:17.192 [http-nio-8080-exec-10] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-04 17:11:17.192 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:11:17.192 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.192 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2020-03-04 17:11:17.192 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:11:17.192 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:11:17.192 [http-nio-8080-exec-10] EntityBinder - Import with entity name Genre
[DEBUG] 2020-03-04 17:11:17.192 [http-nio-8080-exec-10] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-03-04 17:11:17.194 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.194 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-03-04 17:11:17.194 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-03-04 17:11:17.194 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-03-04 17:11:17.194 [http-nio-8080-exec-10] PropertyBinder - Building property genreId
[DEBUG] 2020-03-04 17:11:17.194 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:11:17.194 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.194 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:11:17.194 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-03-04 17:11:17.194 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:11:17.194 [http-nio-8080-exec-10] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:11:17.198 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.199 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-04 17:11:17.199 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-03-04 17:11:17.199 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-04 17:11:17.199 [http-nio-8080-exec-10] PropertyBinder - Building property description
[DEBUG] 2020-03-04 17:11:17.200 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.200 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.200 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.201 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:11:17.201 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-04 17:11:17.201 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-04 17:11:17.201 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-04 17:11:17.202 [http-nio-8080-exec-10] PropertyBinder - Building property films
[DEBUG] 2020-03-04 17:11:17.202 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.202 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-04 17:11:17.202 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-03-04 17:11:17.202 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-04 17:11:17.202 [http-nio-8080-exec-10] PropertyBinder - Building property title
[DEBUG] 2020-03-04 17:11:17.202 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.202 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-04 17:11:17.202 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-03-04 17:11:17.202 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-04 17:11:17.202 [http-nio-8080-exec-10] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-04 17:11:17.202 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:11:17.202 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:11:17.203 [http-nio-8080-exec-10] EntityBinder - Import with entity name Film
[DEBUG] 2020-03-04 17:11:17.203 [http-nio-8080-exec-10] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-03-04 17:11:17.206 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.206 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-03-04 17:11:17.206 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-03-04 17:11:17.206 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-03-04 17:11:17.206 [http-nio-8080-exec-10] PropertyBinder - Building property filmId
[DEBUG] 2020-03-04 17:11:17.206 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:11:17.206 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.206 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-04 17:11:17.206 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-03-04 17:11:17.206 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-04 17:11:17.206 [http-nio-8080-exec-10] PropertyBinder - Building property cover
[DEBUG] 2020-03-04 17:11:17.206 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.206 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:11:17.206 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-03-04 17:11:17.206 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:11:17.206 [http-nio-8080-exec-10] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:11:17.207 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.207 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.207 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.207 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:11:17.207 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:11:17.209 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:11:17.209 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-04 17:11:17.209 [http-nio-8080-exec-10] PropertyBinder - Building property crews
[DEBUG] 2020-03-04 17:11:17.209 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.210 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-03-04 17:11:17.210 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-03-04 17:11:17.210 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-03-04 17:11:17.210 [http-nio-8080-exec-10] PropertyBinder - Building property director
[DEBUG] 2020-03-04 17:11:17.210 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.210 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-04 17:11:17.210 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-03-04 17:11:17.210 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-04 17:11:17.210 [http-nio-8080-exec-10] PropertyBinder - Building property duration
[DEBUG] 2020-03-04 17:11:17.210 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.210 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-03-04 17:11:17.210 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-03-04 17:11:17.210 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-03-04 17:11:17.210 [http-nio-8080-exec-10] PropertyBinder - Building property episode
[DEBUG] 2020-03-04 17:11:17.211 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.211 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.215 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.215 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:11:17.215 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:11:17.215 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:11:17.215 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-04 17:11:17.215 [http-nio-8080-exec-10] PropertyBinder - Building property genres
[DEBUG] 2020-03-04 17:11:17.215 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.216 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-04 17:11:17.216 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-03-04 17:11:17.216 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-04 17:11:17.216 [http-nio-8080-exec-10] PropertyBinder - Building property link
[DEBUG] 2020-03-04 17:11:17.216 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.216 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-04 17:11:17.216 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-03-04 17:11:17.216 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-04 17:11:17.216 [http-nio-8080-exec-10] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-04 17:11:17.217 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.217 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-04 17:11:17.217 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-03-04 17:11:17.217 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-04 17:11:17.217 [http-nio-8080-exec-10] PropertyBinder - Building property summary
[DEBUG] 2020-03-04 17:11:17.217 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.217 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-04 17:11:17.217 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-03-04 17:11:17.217 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-04 17:11:17.217 [http-nio-8080-exec-10] PropertyBinder - Building property title
[DEBUG] 2020-03-04 17:11:17.217 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.218 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-04 17:11:17.218 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-03-04 17:11:17.218 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-04 17:11:17.218 [http-nio-8080-exec-10] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-04 17:11:17.218 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:11:17.218 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.218 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2020-03-04 17:11:17.218 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.218 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-04 17:11:17.218 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-03-04 17:11:17.218 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-04 17:11:17.218 [http-nio-8080-exec-10] PropertyBinder - Building property video
[DEBUG] 2020-03-04 17:11:17.218 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:11:17.219 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:11:17.220 [http-nio-8080-exec-10] EntityBinder - Import with entity name Crew
[DEBUG] 2020-03-04 17:11:17.221 [http-nio-8080-exec-10] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-03-04 17:11:17.224 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.225 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-03-04 17:11:17.225 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-03-04 17:11:17.225 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-03-04 17:11:17.225 [http-nio-8080-exec-10] PropertyBinder - Building property crewId
[DEBUG] 2020-03-04 17:11:17.225 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:11:17.225 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.225 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-04 17:11:17.225 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-03-04 17:11:17.225 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-04 17:11:17.225 [http-nio-8080-exec-10] PropertyBinder - Building property biography
[DEBUG] 2020-03-04 17:11:17.225 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-03-04 17:11:17.225 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:11:17.225 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-03-04 17:11:17.225 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:11:17.225 [http-nio-8080-exec-10] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:11:17.225 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] PropertyBinder - Building property email
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] PropertyBinder - Building property films
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] PropertyBinder - Building property firstName
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] PropertyBinder - Building property lastName
[DEBUG] 2020-03-04 17:11:17.226 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.227 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-03-04 17:11:17.227 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-03-04 17:11:17.227 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-03-04 17:11:17.227 [http-nio-8080-exec-10] PropertyBinder - Building property profession
[DEBUG] 2020-03-04 17:11:17.227 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:11:17.227 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-04 17:11:17.227 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-03-04 17:11:17.227 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-04 17:11:17.227 [http-nio-8080-exec-10] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-04 17:11:17.229 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-03-04 17:11:17.230 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-04 17:11:17.239 [http-nio-8080-exec-10] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-03-04 17:11:17.239 [http-nio-8080-exec-10] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-03-04 17:11:17.239 [http-nio-8080-exec-10] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-03-04 17:11:17.239 [http-nio-8080-exec-10] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-03-04 17:11:17.239 [http-nio-8080-exec-10] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-03-04 17:11:17.239 [http-nio-8080-exec-10] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-03-04 17:11:17.239 [http-nio-8080-exec-10] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-03-04 17:11:17.239 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-04 17:11:17.239 [http-nio-8080-exec-10] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-04 17:11:17.242 [http-nio-8080-exec-10] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-04 17:11:17.242 [http-nio-8080-exec-10] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-04 17:11:17.242 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-03-04 17:11:17.242 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-04 17:11:17.242 [http-nio-8080-exec-10] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-04 17:11:17.242 [http-nio-8080-exec-10] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-04 17:11:17.242 [http-nio-8080-exec-10] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-04 17:11:17.242 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-03-04 17:11:17.242 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-04 17:11:17.243 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-03-04 17:11:17.244 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-03-04 17:11:17.247 [http-nio-8080-exec-10] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-03-04 17:11:17.249 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:11:17.249 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-04 17:11:17.249 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-03-04 17:11:17.249 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-03-04 17:11:17.249 [http-nio-8080-exec-10] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-03-04 17:11:17.249 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:11:17.249 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-04 17:11:17.249 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-03-04 17:11:17.249 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-03-04 17:11:17.250 [http-nio-8080-exec-10] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-03-04 17:11:17.250 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:11:17.250 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-04 17:11:17.250 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-03-04 17:11:17.250 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-03-04 17:11:17.250 [http-nio-8080-exec-10] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-03-04 17:11:17.250 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:11:17.250 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-04 17:11:17.250 [http-nio-8080-exec-10] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-04 17:11:17.250 [http-nio-8080-exec-10] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-03-04 17:11:17.250 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-03-04 17:11:17.250 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-04 17:11:17.250 [http-nio-8080-exec-10] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-04 17:11:17.250 [http-nio-8080-exec-10] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-03-04 17:11:17.254 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-03-04 17:11:17.254 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-04 17:11:17.254 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:11:17.256 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:11:17.256 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:11:17.256 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:11:17.256 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:11:17.256 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:11:17.256 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:11:17.256 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:11:17.258 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-04 17:11:17.259 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:11:17.259 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:11:17.259 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:11:17.259 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:11:17.259 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:11:17.259 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:11:17.259 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:11:17.259 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:11:17.321 [http-nio-8080-exec-10] SessionFactoryImpl - Building session factory
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - SessionFactory name : null
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Statistics: disabled
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Default entity-mode: pojo
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Default batch fetch size: -1
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Default null ordering: NONE
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Query language substitutions: {}
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Named query checking : enabled
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Second-level cache: disabled
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Second-level query cache: disabled
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Second-level query cache factory: null
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Second-level cache region prefix: null
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-03-04 17:11:17.322 [http-nio-8080-exec-10] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-03-04 17:11:17.323 [http-nio-8080-exec-10] Settings - JDBC batch size: 15
[DEBUG] 2020-03-04 17:11:17.323 [http-nio-8080-exec-10] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-03-04 17:11:17.323 [http-nio-8080-exec-10] Settings - Scrollable result sets: enabled
[DEBUG] 2020-03-04 17:11:17.323 [http-nio-8080-exec-10] Settings - Wrap result sets: disabled
[DEBUG] 2020-03-04 17:11:17.323 [http-nio-8080-exec-10] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-03-04 17:11:17.323 [http-nio-8080-exec-10] Settings - JDBC result set fetch size: null
[DEBUG] 2020-03-04 17:11:17.323 [http-nio-8080-exec-10] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-03-04 17:11:17.323 [http-nio-8080-exec-10] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-03-04 17:11:17.323 [http-nio-8080-exec-10] Settings - JPA compliance - query : 
[DEBUG] 2020-03-04 17:11:17.323 [http-nio-8080-exec-10] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-03-04 17:11:17.323 [http-nio-8080-exec-10] Settings - JPA compliance - lists : 
[DEBUG] 2020-03-04 17:11:17.323 [http-nio-8080-exec-10] Settings - JPA compliance - transactions : 
[INFO ] 2020-03-04 17:11:17.383 [http-nio-8080-exec-10] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-03-04 17:11:17.416 [http-nio-8080-exec-10] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-03-04 17:11:17.416 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@70ab6143, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-03-04 17:11:17.439 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-04 17:11:17.439 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:11:17.452 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-04 17:11:17.452 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:11:17.455 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-04 17:11:17.455 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:11:17.456 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-04 17:11:17.456 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:11:17.458 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-04 17:11:17.458 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:11:17.467 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-04 17:11:17.467 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-04 17:11:17.476 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-04 17:11:17.481 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:11:17.497 [http-nio-8080-exec-10] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-03-04 17:11:17.498 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-03-04 17:11:17.498 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1d7eb29f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7ca222ae]
[DEBUG] 2020-03-04 17:11:17.624 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-04 17:11:17.628 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:11:17.656 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-04 17:11:17.657 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:11:18.136 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-04 17:11:18.136 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:11:18.136 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-04 17:11:18.136 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:11:18.208 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-04 17:11:18.208 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:11:18.208 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-04 17:11:18.208 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:11:18.253 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-04 17:11:18.253 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:11:18.254 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-04 17:11:18.254 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:11:18.294 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-04 17:11:18.294 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:11:18.298 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-04 17:11:18.298 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:11:18.343 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-04 17:11:18.343 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-04 17:11:18.356 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-04 17:11:18.356 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-04 17:11:18.418 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-04 17:11:18.419 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:11:18.419 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-04 17:11:18.419 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:11:18.459 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-04 17:11:18.460 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-03-04 17:11:18.460 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-03-04 17:11:18.460 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-03-04 17:11:18.460 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-03-04 17:11:18.460 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-04 17:11:18.460 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-03-04 17:11:18.460 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-03-04 17:11:18.460 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-03-04 17:11:18.460 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-03-04 17:11:18.460 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-04 17:11:18.461 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-03-04 17:11:18.461 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-03-04 17:11:18.461 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-03-04 17:11:18.461 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-03-04 17:11:18.465 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-04 17:11:18.465 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-03-04 17:11:18.466 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-03-04 17:11:18.466 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-03-04 17:11:18.467 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-03-04 17:11:18.467 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-04 17:11:18.467 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-03-04 17:11:18.468 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-03-04 17:11:18.468 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-03-04 17:11:18.468 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-03-04 17:11:18.468 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-04 17:11:18.468 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-03-04 17:11:18.468 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-03-04 17:11:18.469 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-03-04 17:11:18.469 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-03-04 17:11:18.469 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-04 17:11:18.469 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-03-04 17:11:18.469 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-03-04 17:11:18.469 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-03-04 17:11:18.469 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-03-04 17:11:18.469 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-04 17:11:18.469 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-03-04 17:11:18.469 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-03-04 17:11:18.469 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-03-04 17:11:18.469 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-03-04 17:11:18.475 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:11:18.475 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-03-04 17:11:18.475 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-03-04 17:11:18.475 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:11:18.475 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-03-04 17:11:18.475 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-03-04 17:11:18.475 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:11:18.545 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67596e40]
[DEBUG] 2020-03-04 17:11:18.549 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:11:18.549 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.549 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-04 17:11:18.557 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c614f9e]
[DEBUG] 2020-03-04 17:11:18.563 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c55e467]
[DEBUG] 2020-03-04 17:11:18.563 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-04 17:11:18.563 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:11:18.563 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-04 17:11:18.563 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-04 17:11:18.563 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38e1ebde]
[DEBUG] 2020-03-04 17:11:18.566 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64bc6e0]
[DEBUG] 2020-03-04 17:11:18.566 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:11:18.566 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:11:18.566 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:11:18.566 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:11:18.566 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.566 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:11:18.566 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bebb730]
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b8aa5e]
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17ac36fe]
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14f84f39]
[DEBUG] 2020-03-04 17:11:18.570 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6295809e]
[DEBUG] 2020-03-04 17:11:18.571 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:11:18.571 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:11:18.571 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:11:18.571 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:11:18.571 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:11:18.572 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:11:18.572 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31516135]
[DEBUG] 2020-03-04 17:11:18.572 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@731b993e]
[DEBUG] 2020-03-04 17:11:18.572 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:11:18.572 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:11:18.572 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:11:18.572 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@78f4b08]
[DEBUG] 2020-03-04 17:11:18.582 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:11:18.585 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:11:18.585 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.602 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.614 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24a454cd]
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23b6f51d]
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49bba77c]
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4fbf90ba]
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@685ccb3d]
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c56c536]
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bcb6a75]
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55404712]
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ff557f9]
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67234fb5]
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5eb69b0]
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7848c05f]
[DEBUG] 2020-03-04 17:11:18.616 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:11:18.617 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:11:18.617 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:11:18.617 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@47830289]
[DEBUG] 2020-03-04 17:11:18.617 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:11:18.617 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:11:18.617 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.617 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.617 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:11:18.617 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-04 17:11:18.639 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-04 17:11:18.640 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-04 17:11:18.640 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:11:18.640 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-03-04 17:11:18.640 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-03-04 17:11:18.640 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:11:18.640 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-03-04 17:11:18.640 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-03-04 17:11:18.640 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:11:18.640 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c227d48]
[DEBUG] 2020-03-04 17:11:18.640 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-04 17:11:18.640 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.640 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:11:18.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:11:18.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:11:18.641 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bd7e35d]
[DEBUG] 2020-03-04 17:11:18.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:11:18.641 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:11:18.642 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:11:18.642 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:11:18.642 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:11:18.642 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-04 17:11:18.642 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:11:18.642 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2703cf9c]
[DEBUG] 2020-03-04 17:11:18.642 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aef039c]
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ea6cc97]
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37642775]
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44d9d1ee]
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5290198f]
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4f2689d6]
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.643 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62ba7518]
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b271358]
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@26c474e1]
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34c72dc4]
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:11:18.644 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:11:18.647 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:11:18.647 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:11:18.647 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:11:18.647 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@470955d7]
[DEBUG] 2020-03-04 17:11:18.647 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e4ae6c7]
[DEBUG] 2020-03-04 17:11:18.649 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:11:18.649 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:11:18.649 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:11:18.649 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:11:18.649 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:11:18.649 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:11:18.649 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ba20bc4]
[DEBUG] 2020-03-04 17:11:18.649 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52e7b4a9]
[DEBUG] 2020-03-04 17:11:18.649 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:11:18.649 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:11:18.649 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:11:18.649 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5e63ca0a]
[DEBUG] 2020-03-04 17:11:18.649 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:11:18.649 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.649 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.651 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:11:18.651 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-04 17:11:18.652 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-04 17:11:18.652 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-04 17:11:18.652 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:11:18.652 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-03-04 17:11:18.652 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-03-04 17:11:18.652 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:11:18.652 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-03-04 17:11:18.652 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-03-04 17:11:18.652 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-03-04 17:11:18.656 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a1cd67]
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e7fc757]
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b780ca4]
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6661569e]
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36f4707a]
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bb901a2]
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@108f275d]
[DEBUG] 2020-03-04 17:11:18.657 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cb64674]
[DEBUG] 2020-03-04 17:11:18.658 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:11:18.658 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:11:18.658 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:11:18.658 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@69549e38]
[DEBUG] 2020-03-04 17:11:18.658 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:11:18.658 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.658 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.662 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:11:18.662 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-04 17:11:18.662 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73cf4f61]
[DEBUG] 2020-03-04 17:11:18.662 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.662 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-04 17:11:18.662 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.662 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:11:18.662 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@706cce5c]
[DEBUG] 2020-03-04 17:11:18.664 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:11:18.664 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:11:18.664 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:11:18.664 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:11:18.664 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:11:18.664 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a74b581]
[DEBUG] 2020-03-04 17:11:18.664 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66784837]
[DEBUG] 2020-03-04 17:11:18.664 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:11:18.664 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70f0748a]
[DEBUG] 2020-03-04 17:11:18.664 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4946cde2]
[DEBUG] 2020-03-04 17:11:18.665 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:11:18.665 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:11:18.665 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:11:18.665 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:11:18.665 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:11:18.665 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:11:18.665 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-04 17:11:18.665 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:11:18.665 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16c1a1f6]
[DEBUG] 2020-03-04 17:11:18.665 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@325c6ae9]
[DEBUG] 2020-03-04 17:11:18.665 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:11:18.665 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:11:18.665 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:11:18.665 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@417b0c0c]
[DEBUG] 2020-03-04 17:11:18.666 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:11:18.666 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.666 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.667 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:11:18.667 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-04 17:11:18.674 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-04 17:11:18.674 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-04 17:11:18.675 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:11:18.675 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-03-04 17:11:18.675 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-03-04 17:11:18.675 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:11:18.675 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-03-04 17:11:18.675 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-03-04 17:11:18.675 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-03-04 17:11:18.675 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25f8283e]
[DEBUG] 2020-03-04 17:11:18.675 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.675 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:11:18.675 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:11:18.675 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6da07cbe]
[DEBUG] 2020-03-04 17:11:18.676 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c5c4c16]
[DEBUG] 2020-03-04 17:11:18.676 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:11:18.676 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.676 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.676 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.676 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-04 17:11:18.676 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58812a7b]
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52c6b2db]
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c247869]
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5da74964]
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d492b06]
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:11:18.677 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@250a6cbb]
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f094132]
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b3c50ce]
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@367f801e]
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40665dde]
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55f38431]
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@741f372a]
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.678 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.679 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:11:18.679 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-04 17:11:18.679 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71bb9f49]
[DEBUG] 2020-03-04 17:11:18.679 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-04 17:11:18.679 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:11:18.679 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.679 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:11:18.679 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:11:18.679 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:11:18.679 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:11:18.679 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:11:18.679 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.679 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52cf1070]
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65817a69]
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cca96ca]
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@362c49b3]
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1149b8a9]
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f75dadb]
[DEBUG] 2020-03-04 17:11:18.680 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37416f39]
[DEBUG] 2020-03-04 17:11:18.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:11:18.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:11:18.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:11:18.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:11:18.684 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:11:18.685 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:11:18.685 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-04 17:11:18.685 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:11:18.685 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:11:18.685 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:11:18.685 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6e560fa9]
[DEBUG] 2020-03-04 17:11:18.685 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:11:18.685 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:11:18.685 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.688 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.690 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:11:18.691 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-04 17:11:18.692 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-04 17:11:18.692 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.created_at as created_4_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@172eef45]
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53a96168]
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15d2a395]
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75e622ad]
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1836f548]
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8c6507]
[DEBUG] 2020-03-04 17:11:18.695 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42b088]
[DEBUG] 2020-03-04 17:11:18.696 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-04 17:11:18.696 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-04 17:11:18.696 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-04 17:11:18.698 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-04 17:11:18.698 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@881cc36]
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dd2eb5e]
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@718077a2]
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dba7e2f]
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5577a6ef]
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@195fcf58]
[DEBUG] 2020-03-04 17:11:18.699 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67ea815a]
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@774637a]
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fdceda5]
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@81eca09]
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@173fc621]
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@690f184d]
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@39427a0f]
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-04 17:11:18.700 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-04 17:11:18.701 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-04 17:11:18.701 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-04 17:11:18.703 [http-nio-8080-exec-10] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-04 17:11:18.703 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66b9cacc]
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c7448e4]
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6425b72e]
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ce2fecc]
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.704 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-04 17:11:18.705 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:11:18.705 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@387cff04]
[DEBUG] 2020-03-04 17:11:18.705 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71a9a3e2]
[DEBUG] 2020-03-04 17:11:18.705 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-04 17:11:18.705 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-04 17:11:18.705 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-04 17:11:18.705 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-04 17:11:18.705 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.705 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.705 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-03-04 17:11:18.713 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-04 17:11:18.713 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-04 17:11:18.713 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-04 17:11:18.725 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10a93d33]
[DEBUG] 2020-03-04 17:11:18.725 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19e66183]
[DEBUG] 2020-03-04 17:11:18.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-04 17:11:18.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:11:18.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:11:18.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:11:18.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:11:18.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:11:18.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:11:18.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:11:18.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-04 17:11:18.726 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:11:18.726 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.728 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.728 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-03-04 17:11:18.728 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-03-04 17:11:18.728 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a94c93]
[DEBUG] 2020-03-04 17:11:18.728 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2791997e]
[DEBUG] 2020-03-04 17:11:18.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-04 17:11:18.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:11:18.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-04 17:11:18.729 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.729 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.729 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-03-04 17:11:18.729 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-04 17:11:18.729 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f114d32]
[DEBUG] 2020-03-04 17:11:18.729 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@646077c7]
[DEBUG] 2020-03-04 17:11:18.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-04 17:11:18.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:11:18.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:11:18.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:11:18.729 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-04 17:11:18.730 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.730 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@333f2505]
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5486a2ea]
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15758537]
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7405e481]
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b8c57e]
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:11:18.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22c86d98]
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7932b4ac]
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f671dc1]
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c46ef6d]
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d03ffd0]
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4178b908]
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:11:18.732 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@46763df3]
[DEBUG] 2020-03-04 17:11:18.734 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:11:18.734 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:11:18.734 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.735 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.736 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-04 17:11:18.736 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4552998b]
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@328c5285]
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65425315]
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@350a3d42]
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:11:18.737 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54359e5e]
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f9f9504]
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b1b5798]
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63a4fdcb]
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ea4b986]
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d1024e3]
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c761b4e]
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7878e3ae]
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:11:18.738 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:11:18.739 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.742 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.742 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-04 17:11:18.742 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-03-04 17:11:18.742 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f001208]
[DEBUG] 2020-03-04 17:11:18.742 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53a0cecd]
[DEBUG] 2020-03-04 17:11:18.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-04 17:11:18.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-04 17:11:18.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:11:18.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-04 17:11:18.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-04 17:11:18.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-04 17:11:18.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-04 17:11:18.742 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-04 17:11:18.743 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.744 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.747 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-03-04 17:11:18.747 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-03-04 17:11:18.747 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48e8a476]
[DEBUG] 2020-03-04 17:11:18.747 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1debdd00]
[DEBUG] 2020-03-04 17:11:18.747 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.747 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:11:18.747 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:11:18.747 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-04 17:11:18.747 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:11:18.750 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.751 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.751 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.751 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-03-04 17:11:18.751 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-03-04 17:11:18.751 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1535da0]
[DEBUG] 2020-03-04 17:11:18.751 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42938357]
[DEBUG] 2020-03-04 17:11:18.751 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:11:18.751 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:11:18.751 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-04 17:11:18.751 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18d1336f]
[DEBUG] 2020-03-04 17:11:18.751 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46069219]
[DEBUG] 2020-03-04 17:11:18.752 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-04 17:11:18.752 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:11:18.752 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-04 17:11:18.752 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-04 17:11:18.752 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3fe27f75]
[DEBUG] 2020-03-04 17:11:18.752 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a34abd5]
[DEBUG] 2020-03-04 17:11:18.752 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:11:18.752 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:11:18.757 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:11:18.757 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:11:18.757 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:11:18.758 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:11:18.759 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-04 17:11:18.759 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:11:18.759 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:11:18.759 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:11:18.759 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-03-04 17:11:18.759 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-03-04 17:11:18.843 [http-nio-8080-exec-10] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-03-04 17:11:18.843 [http-nio-8080-exec-10] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-03-04 17:11:18.844 [http-nio-8080-exec-10] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-03-04 17:11:18.854 [http-nio-8080-exec-10] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-03-04 17:11:18.855 [http-nio-8080-exec-10] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-03-04 17:11:18.855 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-03-04 17:11:18.855 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-03-04 17:11:18.857 [http-nio-8080-exec-10] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@47ede63d
[DEBUG] 2020-03-04 17:11:18.859 [http-nio-8080-exec-10] SessionFactoryRegistry - Registering SessionFactory: 1a88ac2e-7c19-4e8a-8eb8-d77a8c02df38 (<unnamed>)
[DEBUG] 2020-03-04 17:11:18.859 [http-nio-8080-exec-10] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-03-04 17:11:19.000 [http-nio-8080-exec-10] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-03-04 17:11:19.071 [http-nio-8080-exec-10] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Genre as generatedAlias0
[DEBUG] 2020-03-04 17:11:19.105 [http-nio-8080-exec-10] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@786e4d94
[DEBUG] 2020-03-04 17:11:19.130 [http-nio-8080-exec-10] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Genre as generatedAlias0
[DEBUG] 2020-03-04 17:11:19.133 [http-nio-8080-exec-10] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-04 17:11:19.142 [http-nio-8080-exec-10] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Genre'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-03-04 17:11:19.190 [http-nio-8080-exec-10] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-03-04 17:11:19.214 [http-nio-8080-exec-10] FromElement - FromClause{level=1} : com.streammedia.entity.Genre (generatedAlias0) -> genre0_
[DEBUG] 2020-03-04 17:11:19.215 [http-nio-8080-exec-10] FromReferenceNode - Resolved : generatedAlias0 -> genre0_.genre_id
[DEBUG] 2020-03-04 17:11:19.217 [http-nio-8080-exec-10] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-03-04 17:11:19.217 [http-nio-8080-exec-10] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} genre0_.genre_id ) ( FromClause{level=1} Genre genre0_ ) )
[DEBUG] 2020-03-04 17:11:19.233 [http-nio-8080-exec-10] JoinProcessor - Using FROM fragment [Genre genre0_]
[DEBUG] 2020-03-04 17:11:19.234 [http-nio-8080-exec-10] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-03-04 17:11:19.235 [http-nio-8080-exec-10] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Genre)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'genre0_.genre_id as genre_id1_5_' {alias=generatedAlias0, className=com.streammedia.entity.Genre, tableAlias=genre0_}
    |  \-[SQL_TOKEN] SqlFragment: 'genre0_.created_at as created_2_5_, genre0_.description as descript3_5_, genre0_.title as title4_5_, genre0_.updated_at as updated_5_5_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[genre0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Genre genre0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Genre,tableAlias=genre0_,origin=null,columns={,className=com.streammedia.entity.Genre}}

[DEBUG] 2020-03-04 17:11:19.235 [http-nio-8080-exec-10] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-04 17:11:19.246 [http-nio-8080-exec-10] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Genre as generatedAlias0
[DEBUG] 2020-03-04 17:11:19.246 [http-nio-8080-exec-10] QueryTranslatorImpl - SQL: select genre0_.genre_id as genre_id1_5_, genre0_.created_at as created_2_5_, genre0_.description as descript3_5_, genre0_.title as title4_5_, genre0_.updated_at as updated_5_5_ from Genre genre0_
[DEBUG] 2020-03-04 17:11:19.246 [http-nio-8080-exec-10] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-04 17:11:19.285 [http-nio-8080-exec-10] SQL - select genre0_.genre_id as genre_id1_5_, genre0_.created_at as created_2_5_, genre0_.description as descript3_5_, genre0_.title as title4_5_, genre0_.updated_at as updated_5_5_ from Genre genre0_
[DEBUG] 2020-03-04 17:11:19.326 [http-nio-8080-exec-10] Loader - Result set row: 0
[DEBUG] 2020-03-04 17:11:19.336 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:11:19.363 [http-nio-8080-exec-10] Loader - Result set row: 1
[DEBUG] 2020-03-04 17:11:19.363 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:11:19.363 [http-nio-8080-exec-10] Loader - Result set row: 2
[DEBUG] 2020-03-04 17:11:19.363 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.Genre#3]
[DEBUG] 2020-03-04 17:11:19.364 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:11:19.367 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:19.367 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:19.367 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = This is Love related films
[DEBUG] 2020-03-04 17:11:19.367 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:19.367 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:11:19.367 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:19.375 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `title` : value = Romantic
[DEBUG] 2020-03-04 17:11:19.375 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:19.375 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:19.375 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = These are scary movies. Children should not watch them.More Data.
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `title` : value = Horror
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#3]
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = Funny movies that are good for both young and adults.
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `title` : value = Comedy
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:19.376 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#3]
[DEBUG] 2020-03-04 17:11:19.379 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-04 17:11:21.401 [http-nio-8080-exec-5] SQL - select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:11:21.423 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-04 17:11:21.423 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-04 17:11:21.424 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:11:21.424 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:21.424 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:21.424 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = This is Love related films
[DEBUG] 2020-03-04 17:11:21.424 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:21.424 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:11:21.424 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:21.424 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `title` : value = Romantic
[DEBUG] 2020-03-04 17:11:21.424 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:21.424 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:21.424 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:21.424 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:11:21.425 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-04 17:11:21.425 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.Genre#1
[DEBUG] 2020-03-04 17:11:21.425 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-04 17:11:27.804 [http-nio-8080-exec-7] SQL - select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:11:27.806 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-04 17:11:27.806 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-04 17:11:27.807 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:11:27.807 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:27.807 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:27.807 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = These are scary movies. Children should not watch them.More Data.
[DEBUG] 2020-03-04 17:11:27.807 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:27.807 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:11:27.807 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:27.807 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = Horror
[DEBUG] 2020-03-04 17:11:27.807 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:27.807 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:27.807 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:27.807 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:11:27.807 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-04 17:11:27.807 [http-nio-8080-exec-7] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.Genre#2
[DEBUG] 2020-03-04 17:11:27.807 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-04 17:11:30.826 [http-nio-8080-exec-6] SQL - select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:11:30.827 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-04 17:11:30.827 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-04 17:11:30.828 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:11:30.828 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:30.828 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:30.828 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = These are scary movies. Children should not watch them.More Data.
[DEBUG] 2020-03-04 17:11:30.828 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:30.828 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:11:30.828 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:30.828 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `title` : value = Horror
[DEBUG] 2020-03-04 17:11:30.828 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:30.828 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:30.828 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:30.828 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:11:30.828 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-04 17:11:30.828 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.Genre#2
[DEBUG] 2020-03-04 17:11:30.828 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-04 17:11:41.842 [http-nio-8080-exec-10] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Genre as generatedAlias0
[DEBUG] 2020-03-04 17:11:41.842 [http-nio-8080-exec-10] SQL - select genre0_.genre_id as genre_id1_5_, genre0_.created_at as created_2_5_, genre0_.description as descript3_5_, genre0_.title as title4_5_, genre0_.updated_at as updated_5_5_ from Genre genre0_
[DEBUG] 2020-03-04 17:11:41.845 [http-nio-8080-exec-10] Loader - Result set row: 0
[DEBUG] 2020-03-04 17:11:41.845 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:11:41.845 [http-nio-8080-exec-10] Loader - Result set row: 1
[DEBUG] 2020-03-04 17:11:41.845 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:11:41.845 [http-nio-8080-exec-10] Loader - Result set row: 2
[DEBUG] 2020-03-04 17:11:41.845 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.Genre#3]
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = This is Love related films
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `title` : value = Romantic
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = These are scary movies. Children should not watch them.More Data.
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `title` : value = Horror
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#3]
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = Funny movies that are good for both young and adults.
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `title` : value = Comedy
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#3]
[DEBUG] 2020-03-04 17:11:41.846 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-04 17:11:43.642 [http-nio-8080-exec-3] SQL - select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:11:43.643 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-04 17:11:43.643 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-04 17:11:43.644 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:11:43.644 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:43.644 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:43.644 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `description` : value = These are scary movies. Children should not watch them.More Data.
[DEBUG] 2020-03-04 17:11:43.644 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:43.644 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:11:43.644 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:43.644 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `title` : value = Horror
[DEBUG] 2020-03-04 17:11:43.644 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:43.644 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:11:43.644 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:11:43.644 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:11:43.644 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-04 17:11:43.644 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.Genre#2
[DEBUG] 2020-03-04 17:11:43.644 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-04 17:15:32.994 [http-nio-8080-exec-9] SQL - select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:15:32.998 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-04 17:15:32.998 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-04 17:15:32.999 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:15:32.999 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:15:32.999 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:15:32.999 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `description` : value = These are scary movies. Children should not watch them.More Data.
[DEBUG] 2020-03-04 17:15:32.999 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:15:32.999 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:15:32.999 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:15:32.999 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Horror
[DEBUG] 2020-03-04 17:15:32.999 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:15:32.999 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:15:32.999 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:15:33.000 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:15:33.002 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-04 17:15:33.002 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.Genre#2
[DEBUG] 2020-03-04 17:15:33.008 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-04 17:15:58.457 [http-nio-8080-exec-4] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-03-04 17:15:58.460 [http-nio-8080-exec-4] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-03-04 17:15:58.464 [http-nio-8080-exec-4] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-03-04 17:15:58.566 [http-nio-8080-exec-4] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-03-04 17:15:58.568 [http-nio-8080-exec-4] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-03-04 17:15:58.708 [http-nio-8080-exec-4] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-03-04 17:15:58.708 [http-nio-8080-exec-4] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-03-04 17:15:58.714 [http-nio-8080-exec-4] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-03-04 17:15:59.062 [http-nio-8080-exec-4] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-03-04 17:15:59.088 [http-nio-8080-exec-4] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-03-04 17:15:59.089 [http-nio-8080-exec-4] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-03-04 17:15:59.133 [http-nio-8080-exec-4] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-03-04 17:15:59.173 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5ad7b99f
[DEBUG] 2020-03-04 17:15:59.173 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5ad7b99f
[DEBUG] 2020-03-04 17:15:59.173 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5ad7b99f
[DEBUG] 2020-03-04 17:15:59.173 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@375a5813
[DEBUG] 2020-03-04 17:15:59.173 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@823ab0c
[DEBUG] 2020-03-04 17:15:59.174 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@252b76ef
[DEBUG] 2020-03-04 17:15:59.175 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5bf3c0d4
[DEBUG] 2020-03-04 17:15:59.175 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5bf3c0d4
[DEBUG] 2020-03-04 17:15:59.175 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5bf3c0d4
[DEBUG] 2020-03-04 17:15:59.178 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@709b7222
[DEBUG] 2020-03-04 17:15:59.178 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@709b7222
[DEBUG] 2020-03-04 17:15:59.178 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@709b7222
[DEBUG] 2020-03-04 17:15:59.179 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d4b47fb
[DEBUG] 2020-03-04 17:15:59.179 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d4b47fb
[DEBUG] 2020-03-04 17:15:59.179 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d4b47fb
[DEBUG] 2020-03-04 17:15:59.180 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@58e373f2
[DEBUG] 2020-03-04 17:15:59.180 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@58e373f2
[DEBUG] 2020-03-04 17:15:59.180 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@58e373f2
[DEBUG] 2020-03-04 17:15:59.182 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@654183c8
[DEBUG] 2020-03-04 17:15:59.182 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@654183c8
[DEBUG] 2020-03-04 17:15:59.182 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@654183c8
[DEBUG] 2020-03-04 17:15:59.185 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@66c59563
[DEBUG] 2020-03-04 17:15:59.186 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@66c59563
[DEBUG] 2020-03-04 17:15:59.186 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@66c59563
[DEBUG] 2020-03-04 17:15:59.187 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2ca2fbd5
[DEBUG] 2020-03-04 17:15:59.187 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2ca2fbd5
[DEBUG] 2020-03-04 17:15:59.187 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2ca2fbd5
[DEBUG] 2020-03-04 17:15:59.188 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5898d018
[DEBUG] 2020-03-04 17:15:59.188 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5898d018
[DEBUG] 2020-03-04 17:15:59.189 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4077da9e
[DEBUG] 2020-03-04 17:15:59.189 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4077da9e
[DEBUG] 2020-03-04 17:15:59.190 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3f8aba6f
[DEBUG] 2020-03-04 17:15:59.192 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3f8aba6f
[DEBUG] 2020-03-04 17:15:59.193 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@78ece415
[DEBUG] 2020-03-04 17:15:59.194 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6715a925
[DEBUG] 2020-03-04 17:15:59.195 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dfbc629
[DEBUG] 2020-03-04 17:15:59.196 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dfbc629
[DEBUG] 2020-03-04 17:15:59.197 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@274e89ad
[DEBUG] 2020-03-04 17:15:59.197 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@274e89ad
[DEBUG] 2020-03-04 17:15:59.198 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@36fc006
[DEBUG] 2020-03-04 17:15:59.198 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@36fc006
[DEBUG] 2020-03-04 17:15:59.199 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@172bbfc
[DEBUG] 2020-03-04 17:15:59.199 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@172bbfc
[DEBUG] 2020-03-04 17:15:59.199 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4d20a3c
[DEBUG] 2020-03-04 17:15:59.199 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4d20a3c
[DEBUG] 2020-03-04 17:15:59.200 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@16263e13
[DEBUG] 2020-03-04 17:15:59.200 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@16263e13
[DEBUG] 2020-03-04 17:15:59.201 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d37de4c
[DEBUG] 2020-03-04 17:15:59.201 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d37de4c
[DEBUG] 2020-03-04 17:15:59.203 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3a23f91d
[DEBUG] 2020-03-04 17:15:59.203 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3a23f91d
[DEBUG] 2020-03-04 17:15:59.204 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@28f90cec
[DEBUG] 2020-03-04 17:15:59.204 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@28f90cec
[DEBUG] 2020-03-04 17:15:59.205 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2aff9339
[DEBUG] 2020-03-04 17:15:59.205 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2aff9339
[DEBUG] 2020-03-04 17:15:59.206 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@30ebdf77
[DEBUG] 2020-03-04 17:15:59.206 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30ebdf77
[DEBUG] 2020-03-04 17:15:59.207 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@598b2ece
[DEBUG] 2020-03-04 17:15:59.207 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@598b2ece
[DEBUG] 2020-03-04 17:15:59.207 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@598b2ece
[DEBUG] 2020-03-04 17:15:59.208 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7c4cdca2
[DEBUG] 2020-03-04 17:15:59.209 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@35fe3f03
[DEBUG] 2020-03-04 17:15:59.209 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@35fe3f03
[DEBUG] 2020-03-04 17:15:59.209 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@35fe3f03
[DEBUG] 2020-03-04 17:15:59.211 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@559194db
[DEBUG] 2020-03-04 17:15:59.212 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1d9e3dab
[DEBUG] 2020-03-04 17:15:59.212 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d9e3dab
[DEBUG] 2020-03-04 17:15:59.214 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3caca6fd
[DEBUG] 2020-03-04 17:15:59.214 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3caca6fd
[DEBUG] 2020-03-04 17:15:59.216 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4a88570a
[DEBUG] 2020-03-04 17:15:59.216 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4a88570a
[DEBUG] 2020-03-04 17:15:59.217 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3356a77a
[DEBUG] 2020-03-04 17:15:59.217 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3356a77a
[DEBUG] 2020-03-04 17:15:59.220 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7aa62421
[DEBUG] 2020-03-04 17:15:59.220 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7aa62421
[DEBUG] 2020-03-04 17:15:59.221 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@691b5bef
[DEBUG] 2020-03-04 17:15:59.224 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1d7791cd
[DEBUG] 2020-03-04 17:15:59.225 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7791cd
[DEBUG] 2020-03-04 17:15:59.225 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1d7791cd
[DEBUG] 2020-03-04 17:15:59.226 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3fe3686f
[DEBUG] 2020-03-04 17:15:59.227 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3fe3686f
[DEBUG] 2020-03-04 17:15:59.227 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3fe3686f
[DEBUG] 2020-03-04 17:15:59.228 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4e2fb525
[DEBUG] 2020-03-04 17:15:59.228 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@72013ac7
[DEBUG] 2020-03-04 17:15:59.228 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5c8c10ab
[DEBUG] 2020-03-04 17:15:59.228 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5c8c10ab
[DEBUG] 2020-03-04 17:15:59.229 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5c8c10ab
[DEBUG] 2020-03-04 17:15:59.229 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4870caac
[DEBUG] 2020-03-04 17:15:59.229 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4870caac
[DEBUG] 2020-03-04 17:15:59.229 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4870caac
[DEBUG] 2020-03-04 17:15:59.230 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@160f4a0c
[DEBUG] 2020-03-04 17:15:59.230 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3db284ad
[DEBUG] 2020-03-04 17:15:59.232 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4fefd363
[DEBUG] 2020-03-04 17:15:59.232 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4fefd363
[DEBUG] 2020-03-04 17:15:59.232 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d6fc598
[DEBUG] 2020-03-04 17:15:59.235 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3dcd158
[DEBUG] 2020-03-04 17:15:59.236 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3dcd158
[DEBUG] 2020-03-04 17:15:59.238 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@666bba40
[DEBUG] 2020-03-04 17:15:59.238 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@666bba40
[DEBUG] 2020-03-04 17:15:59.238 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5836622c
[DEBUG] 2020-03-04 17:15:59.239 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@25cae1d6
[DEBUG] 2020-03-04 17:15:59.241 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4babf848
[DEBUG] 2020-03-04 17:15:59.248 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7768c027
[DEBUG] 2020-03-04 17:15:59.248 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7768c027
[DEBUG] 2020-03-04 17:15:59.249 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@39a8d897
[DEBUG] 2020-03-04 17:15:59.249 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@19e8d8dd
[DEBUG] 2020-03-04 17:15:59.249 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e491427
[DEBUG] 2020-03-04 17:15:59.249 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@34f159d0
[DEBUG] 2020-03-04 17:15:59.249 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b6243b9
[DEBUG] 2020-03-04 17:15:59.249 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@14935438
[DEBUG] 2020-03-04 17:15:59.249 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@620d82a1
[DEBUG] 2020-03-04 17:15:59.249 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c0c78e9
[DEBUG] 2020-03-04 17:15:59.281 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-03-04 17:15:59.281 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-03-04 17:15:59.282 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-04 17:15:59.282 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-04 17:15:59.282 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-03-04 17:15:59.283 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-03-04 17:15:59.283 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-03-04 17:15:59.287 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-04 17:15:59.289 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-03-04 17:15:59.291 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-03-04 17:15:59.292 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-03-04 17:15:59.292 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-03-04 17:15:59.292 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-04 17:15:59.294 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-03-04 17:15:59.302 [http-nio-8080-exec-4] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-03-04 17:15:59.302 [http-nio-8080-exec-4] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-03-04 17:15:59.302 [http-nio-8080-exec-4] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-03-04 17:15:59.483 [http-nio-8080-exec-4] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-03-04 17:15:59.942 [http-nio-8080-exec-4] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-03-04 17:15:59.947 [http-nio-8080-exec-4] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-03-04 17:15:59.947 [http-nio-8080-exec-4] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-03-04 17:15:59.997 [http-nio-8080-exec-4] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-03-04 17:16:00.041 [http-nio-8080-exec-4] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-03-04 17:16:00.107 [http-nio-8080-exec-4] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-03-04 17:16:00.188 [http-nio-8080-exec-4] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-03-04 17:16:00.194 [http-nio-8080-exec-4] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d336ce2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2fbd6652]
[DEBUG] 2020-03-04 17:16:00.270 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:00.304 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:16:00.308 [http-nio-8080-exec-4] EntityBinder - Import with entity name User
[DEBUG] 2020-03-04 17:16:00.312 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-03-04 17:16:00.339 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.344 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-03-04 17:16:00.346 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-03-04 17:16:00.350 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-03-04 17:16:00.355 [http-nio-8080-exec-4] PropertyBinder - Building property userId
[DEBUG] 2020-03-04 17:16:00.360 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:16:00.363 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.364 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-04 17:16:00.365 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-03-04 17:16:00.365 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-04 17:16:00.368 [http-nio-8080-exec-4] PropertyBinder - Building property biography
[DEBUG] 2020-03-04 17:16:00.368 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.370 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-03-04 17:16:00.370 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-03-04 17:16:00.370 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-03-04 17:16:00.372 [http-nio-8080-exec-4] PropertyBinder - Building property birthdate
[DEBUG] 2020-03-04 17:16:00.372 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.372 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.372 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-03-04 17:16:00.372 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.372 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:16:00.384 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.384 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-04 17:16:00.384 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-03-04 17:16:00.384 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-04 17:16:00.384 [http-nio-8080-exec-4] PropertyBinder - Building property email
[DEBUG] 2020-03-04 17:16:00.385 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.386 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.387 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.395 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.395 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.396 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:16:00.397 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.397 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.397 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-04 17:16:00.401 [http-nio-8080-exec-4] PropertyBinder - Building property faqs
[DEBUG] 2020-03-04 17:16:00.401 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.402 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.402 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.402 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.402 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.402 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:16:00.402 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.402 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.402 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-03-04 17:16:00.402 [http-nio-8080-exec-4] PropertyBinder - Building property films
[DEBUG] 2020-03-04 17:16:00.403 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.403 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-04 17:16:00.403 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-03-04 17:16:00.403 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-04 17:16:00.403 [http-nio-8080-exec-4] PropertyBinder - Building property firstName
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] PropertyBinder - Building property gender
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] PropertyBinder - Building property lastName
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] PropertyBinder - Building property password
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-03-04 17:16:00.404 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-03-04 17:16:00.405 [http-nio-8080-exec-4] PropertyBinder - Building property picture
[DEBUG] 2020-03-04 17:16:00.405 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.405 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.405 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.405 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.405 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.405 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:16:00.406 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.406 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.406 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-04 17:16:00.406 [http-nio-8080-exec-4] PropertyBinder - Building property roles
[DEBUG] 2020-03-04 17:16:00.406 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.407 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.407 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.407 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.407 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.407 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:16:00.407 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.407 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.407 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-04 17:16:00.407 [http-nio-8080-exec-4] PropertyBinder - Building property trailers
[DEBUG] 2020-03-04 17:16:00.407 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.407 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.407 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-03-04 17:16:00.407 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-04 17:16:00.408 [http-nio-8080-exec-4] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-04 17:16:00.408 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-03-04 17:16:00.409 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-03-04 17:16:00.409 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-03-04 17:16:00.409 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-03-04 17:16:00.409 [http-nio-8080-exec-4] PropertyBinder - Building property username
[DEBUG] 2020-03-04 17:16:00.410 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:16:00.410 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:16:00.410 [http-nio-8080-exec-4] EntityBinder - Import with entity name Role
[DEBUG] 2020-03-04 17:16:00.410 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-03-04 17:16:00.411 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.411 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-03-04 17:16:00.411 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-03-04 17:16:00.411 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-03-04 17:16:00.411 [http-nio-8080-exec-4] PropertyBinder - Building property roleId
[DEBUG] 2020-03-04 17:16:00.411 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:16:00.411 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.411 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.411 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-03-04 17:16:00.411 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.411 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:16:00.411 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.412 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-04 17:16:00.412 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-03-04 17:16:00.412 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-04 17:16:00.412 [http-nio-8080-exec-4] PropertyBinder - Building property name
[DEBUG] 2020-03-04 17:16:00.412 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.412 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.412 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-03-04 17:16:00.412 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.412 [http-nio-8080-exec-4] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-04 17:16:00.412 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-03-04 17:16:00.412 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.414 [http-nio-8080-exec-4] PropertyBinder - Building property user
[DEBUG] 2020-03-04 17:16:00.414 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:16:00.414 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:16:00.415 [http-nio-8080-exec-4] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-03-04 17:16:00.415 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-03-04 17:16:00.417 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.417 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-03-04 17:16:00.417 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-03-04 17:16:00.417 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-03-04 17:16:00.417 [http-nio-8080-exec-4] PropertyBinder - Building property trailerId
[DEBUG] 2020-03-04 17:16:00.417 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:16:00.417 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.417 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-03-04 17:16:00.417 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] PropertyBinder - Building property author
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] PropertyBinder - Building property cover
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] PropertyBinder - Building property duration
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-03-04 17:16:00.418 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] PropertyBinder - Building property link
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] PropertyBinder - Building property summary
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] PropertyBinder - Building property title
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.419 [http-nio-8080-exec-4] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-04 17:16:00.420 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:16:00.420 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.420 [http-nio-8080-exec-4] PropertyBinder - Building property user
[DEBUG] 2020-03-04 17:16:00.420 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.420 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-04 17:16:00.420 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-03-04 17:16:00.420 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-04 17:16:00.420 [http-nio-8080-exec-4] PropertyBinder - Building property video
[DEBUG] 2020-03-04 17:16:00.420 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:16:00.420 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:16:00.420 [http-nio-8080-exec-4] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-03-04 17:16:00.420 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-03-04 17:16:00.421 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.421 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-03-04 17:16:00.421 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-03-04 17:16:00.421 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-03-04 17:16:00.421 [http-nio-8080-exec-4] PropertyBinder - Building property faqId
[DEBUG] 2020-03-04 17:16:00.421 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:16:00.421 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.421 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-03-04 17:16:00.421 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-03-04 17:16:00.421 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-03-04 17:16:00.421 [http-nio-8080-exec-4] PropertyBinder - Building property category
[DEBUG] 2020-03-04 17:16:00.421 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.421 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.421 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] PropertyBinder - Building property description
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] PropertyBinder - Building property title
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] PropertyBinder - Building property user
[DEBUG] 2020-03-04 17:16:00.422 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:16:00.423 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:16:00.423 [http-nio-8080-exec-4] EntityBinder - Import with entity name Genre
[DEBUG] 2020-03-04 17:16:00.423 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-03-04 17:16:00.423 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.423 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-03-04 17:16:00.423 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-03-04 17:16:00.423 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-03-04 17:16:00.423 [http-nio-8080-exec-4] PropertyBinder - Building property genreId
[DEBUG] 2020-03-04 17:16:00.424 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:16:00.424 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.424 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.424 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-03-04 17:16:00.424 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.424 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:16:00.424 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.424 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-04 17:16:00.424 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-03-04 17:16:00.424 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-04 17:16:00.424 [http-nio-8080-exec-4] PropertyBinder - Building property description
[DEBUG] 2020-03-04 17:16:00.424 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.425 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.425 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.425 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:16:00.425 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-04 17:16:00.425 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-04 17:16:00.425 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-04 17:16:00.425 [http-nio-8080-exec-4] PropertyBinder - Building property films
[DEBUG] 2020-03-04 17:16:00.425 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.425 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-04 17:16:00.425 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-03-04 17:16:00.425 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-04 17:16:00.425 [http-nio-8080-exec-4] PropertyBinder - Building property title
[DEBUG] 2020-03-04 17:16:00.425 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.426 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.426 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-03-04 17:16:00.426 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.426 [http-nio-8080-exec-4] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-04 17:16:00.426 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:00.426 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:16:00.426 [http-nio-8080-exec-4] EntityBinder - Import with entity name Film
[DEBUG] 2020-03-04 17:16:00.427 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-03-04 17:16:00.428 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.428 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-03-04 17:16:00.428 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-03-04 17:16:00.429 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-03-04 17:16:00.429 [http-nio-8080-exec-4] PropertyBinder - Building property filmId
[DEBUG] 2020-03-04 17:16:00.429 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:16:00.429 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.429 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-04 17:16:00.429 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-03-04 17:16:00.429 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-04 17:16:00.429 [http-nio-8080-exec-4] PropertyBinder - Building property cover
[DEBUG] 2020-03-04 17:16:00.429 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.429 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.429 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-03-04 17:16:00.429 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.429 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:16:00.429 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.429 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.429 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.430 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:16:00.430 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:16:00.430 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:16:00.430 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-04 17:16:00.430 [http-nio-8080-exec-4] PropertyBinder - Building property crews
[DEBUG] 2020-03-04 17:16:00.430 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.430 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-03-04 17:16:00.430 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-03-04 17:16:00.430 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-03-04 17:16:00.430 [http-nio-8080-exec-4] PropertyBinder - Building property director
[DEBUG] 2020-03-04 17:16:00.430 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.430 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-04 17:16:00.430 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-03-04 17:16:00.430 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-04 17:16:00.430 [http-nio-8080-exec-4] PropertyBinder - Building property duration
[DEBUG] 2020-03-04 17:16:00.431 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.431 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-03-04 17:16:00.431 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-03-04 17:16:00.431 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-03-04 17:16:00.431 [http-nio-8080-exec-4] PropertyBinder - Building property episode
[DEBUG] 2020-03-04 17:16:00.431 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.431 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.431 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.431 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:16:00.431 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:16:00.431 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:16:00.431 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-04 17:16:00.431 [http-nio-8080-exec-4] PropertyBinder - Building property genres
[DEBUG] 2020-03-04 17:16:00.431 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.431 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-04 17:16:00.431 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-03-04 17:16:00.432 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-04 17:16:00.432 [http-nio-8080-exec-4] PropertyBinder - Building property link
[DEBUG] 2020-03-04 17:16:00.432 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.432 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-04 17:16:00.432 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-03-04 17:16:00.432 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-04 17:16:00.432 [http-nio-8080-exec-4] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-04 17:16:00.432 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.432 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] PropertyBinder - Building property summary
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] PropertyBinder - Building property title
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] PropertyBinder - Building property user
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-03-04 17:16:00.433 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-04 17:16:00.434 [http-nio-8080-exec-4] PropertyBinder - Building property video
[DEBUG] 2020-03-04 17:16:00.434 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:16:00.434 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:16:00.434 [http-nio-8080-exec-4] EntityBinder - Import with entity name Crew
[DEBUG] 2020-03-04 17:16:00.434 [http-nio-8080-exec-4] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-03-04 17:16:00.436 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.437 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-03-04 17:16:00.437 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-03-04 17:16:00.437 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-03-04 17:16:00.437 [http-nio-8080-exec-4] PropertyBinder - Building property crewId
[DEBUG] 2020-03-04 17:16:00.437 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:16:00.437 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.438 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-04 17:16:00.438 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-03-04 17:16:00.438 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-04 17:16:00.438 [http-nio-8080-exec-4] PropertyBinder - Building property biography
[DEBUG] 2020-03-04 17:16:00.438 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-03-04 17:16:00.438 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.438 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-03-04 17:16:00.438 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.439 [http-nio-8080-exec-4] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:16:00.439 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.439 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-04 17:16:00.440 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-03-04 17:16:00.440 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-04 17:16:00.440 [http-nio-8080-exec-4] PropertyBinder - Building property email
[DEBUG] 2020-03-04 17:16:00.440 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] PropertyBinder - Building property films
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] PropertyBinder - Building property firstName
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-04 17:16:00.441 [http-nio-8080-exec-4] PropertyBinder - Building property lastName
[DEBUG] 2020-03-04 17:16:00.442 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.442 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-03-04 17:16:00.442 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-03-04 17:16:00.442 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-03-04 17:16:00.442 [http-nio-8080-exec-4] PropertyBinder - Building property profession
[DEBUG] 2020-03-04 17:16:00.442 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.442 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.442 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-03-04 17:16:00.442 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-04 17:16:00.442 [http-nio-8080-exec-4] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-04 17:16:00.443 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-03-04 17:16:00.443 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-04 17:16:00.444 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.447 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-03-04 17:16:00.448 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-04 17:16:00.448 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.448 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-03-04 17:16:00.448 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-04 17:16:00.449 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-03-04 17:16:00.449 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-04 17:16:00.449 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-04 17:16:00.449 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-04 17:16:00.449 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-04 17:16:00.449 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.449 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-04 17:16:00.449 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-03-04 17:16:00.449 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-04 17:16:00.449 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.450 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-04 17:16:00.450 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-04 17:16:00.450 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-04 17:16:00.450 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-03-04 17:16:00.450 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-04 17:16:00.458 [http-nio-8080-exec-4] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-03-04 17:16:00.458 [http-nio-8080-exec-4] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-03-04 17:16:00.458 [http-nio-8080-exec-4] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-03-04 17:16:00.458 [http-nio-8080-exec-4] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-03-04 17:16:00.458 [http-nio-8080-exec-4] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-03-04 17:16:00.458 [http-nio-8080-exec-4] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-03-04 17:16:00.458 [http-nio-8080-exec-4] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-03-04 17:16:00.458 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-04 17:16:00.459 [http-nio-8080-exec-4] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-04 17:16:00.462 [http-nio-8080-exec-4] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-04 17:16:00.464 [http-nio-8080-exec-4] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-04 17:16:00.464 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-03-04 17:16:00.464 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-04 17:16:00.464 [http-nio-8080-exec-4] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-04 17:16:00.464 [http-nio-8080-exec-4] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-04 17:16:00.465 [http-nio-8080-exec-4] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-04 17:16:00.465 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-03-04 17:16:00.465 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-04 17:16:00.465 [http-nio-8080-exec-4] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-03-04 17:16:00.466 [http-nio-8080-exec-4] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-03-04 17:16:00.466 [http-nio-8080-exec-4] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-03-04 17:16:00.466 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:16:00.466 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-04 17:16:00.466 [http-nio-8080-exec-4] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-03-04 17:16:00.466 [http-nio-8080-exec-4] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-03-04 17:16:00.466 [http-nio-8080-exec-4] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-03-04 17:16:00.466 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:00.466 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-04 17:16:00.466 [http-nio-8080-exec-4] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-03-04 17:16:00.466 [http-nio-8080-exec-4] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-03-04 17:16:00.466 [http-nio-8080-exec-4] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-03-04 17:16:00.467 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:16:00.467 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-04 17:16:00.467 [http-nio-8080-exec-4] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-03-04 17:16:00.467 [http-nio-8080-exec-4] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-03-04 17:16:00.467 [http-nio-8080-exec-4] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-03-04 17:16:00.467 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:16:00.467 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-04 17:16:00.467 [http-nio-8080-exec-4] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-04 17:16:00.467 [http-nio-8080-exec-4] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-03-04 17:16:00.467 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-03-04 17:16:00.467 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-04 17:16:00.467 [http-nio-8080-exec-4] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-04 17:16:00.467 [http-nio-8080-exec-4] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-03-04 17:16:00.467 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-03-04 17:16:00.467 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-04 17:16:00.467 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:00.469 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:00.469 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:16:00.469 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:00.470 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:16:00.470 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:00.470 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:00.470 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:00.472 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-04 17:16:00.472 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:00.472 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:00.472 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:16:00.472 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:00.472 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:16:00.472 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:00.472 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:00.472 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:00.521 [http-nio-8080-exec-4] SessionFactoryImpl - Building session factory
[DEBUG] 2020-03-04 17:16:00.522 [http-nio-8080-exec-4] Settings - SessionFactory name : null
[DEBUG] 2020-03-04 17:16:00.522 [http-nio-8080-exec-4] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-03-04 17:16:00.522 [http-nio-8080-exec-4] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Statistics: disabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Default entity-mode: pojo
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Default batch fetch size: -1
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Default null ordering: NONE
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Query language substitutions: {}
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Named query checking : enabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Second-level cache: disabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Second-level query cache: disabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Second-level query cache factory: null
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Second-level cache region prefix: null
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - JDBC batch size: 15
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Scrollable result sets: enabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Wrap result sets: disabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - JDBC result set fetch size: null
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - JPA compliance - query : 
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - JPA compliance - lists : 
[DEBUG] 2020-03-04 17:16:00.523 [http-nio-8080-exec-4] Settings - JPA compliance - transactions : 
[INFO ] 2020-03-04 17:16:00.582 [http-nio-8080-exec-4] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-03-04 17:16:00.608 [http-nio-8080-exec-4] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-03-04 17:16:00.609 [http-nio-8080-exec-4] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6ff0755c, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-03-04 17:16:00.609 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-03-04 17:16:00.610 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-03-04 17:16:00.610 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2020-03-04 17:16:00.614 [http-nio-8080-exec-1] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-03-04 17:16:00.614 [http-nio-8080-exec-1] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-03-04 17:16:00.615 [http-nio-8080-exec-1] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-03-04 17:16:00.635 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-04 17:16:00.635 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:00.637 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-04 17:16:00.637 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:16:00.638 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-04 17:16:00.638 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:16:00.639 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-04 17:16:00.639 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:16:00.640 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-04 17:16:00.641 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:16:00.642 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-04 17:16:00.642 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:00.644 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-04 17:16:00.644 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:16:00.647 [http-nio-8080-exec-4] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-03-04 17:16:00.648 [http-nio-8080-exec-4] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-03-04 17:16:00.649 [http-nio-8080-exec-4] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d336ce2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1334781e]
[DEBUG] 2020-03-04 17:16:00.694 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-03-04 17:16:00.697 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-03-04 17:16:00.697 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-03-04 17:16:00.697 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5ad7b99f
[DEBUG] 2020-03-04 17:16:00.697 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5ad7b99f
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5ad7b99f
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@375a5813
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@823ab0c
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@252b76ef
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5bf3c0d4
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5bf3c0d4
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5bf3c0d4
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@709b7222
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@709b7222
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@709b7222
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d4b47fb
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d4b47fb
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d4b47fb
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@58e373f2
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@58e373f2
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@58e373f2
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@654183c8
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@654183c8
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@654183c8
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@66c59563
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@66c59563
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@66c59563
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2ca2fbd5
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2ca2fbd5
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2ca2fbd5
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5898d018
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5898d018
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4077da9e
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4077da9e
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3f8aba6f
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3f8aba6f
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@78ece415
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6715a925
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dfbc629
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dfbc629
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@274e89ad
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@274e89ad
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@36fc006
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@36fc006
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@172bbfc
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@172bbfc
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4d20a3c
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4d20a3c
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@16263e13
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@16263e13
[DEBUG] 2020-03-04 17:16:00.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d37de4c
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d37de4c
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3a23f91d
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3a23f91d
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@28f90cec
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@28f90cec
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2aff9339
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2aff9339
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@30ebdf77
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30ebdf77
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@598b2ece
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@598b2ece
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@598b2ece
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7c4cdca2
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@35fe3f03
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@35fe3f03
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@35fe3f03
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@559194db
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1d9e3dab
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d9e3dab
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3caca6fd
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3caca6fd
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4a88570a
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4a88570a
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3356a77a
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3356a77a
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7aa62421
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7aa62421
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@691b5bef
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1d7791cd
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7791cd
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1d7791cd
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3fe3686f
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3fe3686f
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3fe3686f
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4e2fb525
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@72013ac7
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5c8c10ab
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5c8c10ab
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5c8c10ab
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4870caac
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4870caac
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4870caac
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@160f4a0c
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3db284ad
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4fefd363
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4fefd363
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d6fc598
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3dcd158
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3dcd158
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@666bba40
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@666bba40
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5836622c
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@25cae1d6
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4babf848
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7768c027
[DEBUG] 2020-03-04 17:16:00.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7768c027
[DEBUG] 2020-03-04 17:16:00.700 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4ea08380
[DEBUG] 2020-03-04 17:16:00.700 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c3a2484
[DEBUG] 2020-03-04 17:16:00.700 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@752da481
[DEBUG] 2020-03-04 17:16:00.700 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ff274c7
[DEBUG] 2020-03-04 17:16:00.700 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45844a3a
[DEBUG] 2020-03-04 17:16:00.700 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@857480a
[DEBUG] 2020-03-04 17:16:00.700 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1046ec2d
[DEBUG] 2020-03-04 17:16:00.700 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c8ef6ae
[DEBUG] 2020-03-04 17:16:00.703 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-04 17:16:00.703 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:00.706 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-03-04 17:16:00.706 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-03-04 17:16:00.706 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-04 17:16:00.706 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-04 17:16:00.706 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-03-04 17:16:00.706 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-03-04 17:16:00.706 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-03-04 17:16:00.706 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-04 17:16:00.707 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-03-04 17:16:00.707 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-03-04 17:16:00.707 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-03-04 17:16:00.707 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-03-04 17:16:00.707 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-04 17:16:00.707 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-03-04 17:16:00.707 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-03-04 17:16:00.707 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-03-04 17:16:00.707 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[DEBUG] 2020-03-04 17:16:00.757 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-04 17:16:00.757 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[INFO ] 2020-03-04 17:16:00.789 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-03-04 17:16:00.849 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-03-04 17:16:00.849 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-03-04 17:16:00.849 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-03-04 17:16:00.849 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-03-04 17:16:00.850 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-03-04 17:16:00.853 [http-nio-8080-exec-1] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-03-04 17:16:00.857 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-03-04 17:16:00.860 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@48529bc5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7f9a5984]
[DEBUG] 2020-03-04 17:16:00.863 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:00.868 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:16:00.868 [http-nio-8080-exec-1] EntityBinder - Import with entity name User
[DEBUG] 2020-03-04 17:16:00.868 [http-nio-8080-exec-1] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-03-04 17:16:00.869 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.875 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-03-04 17:16:00.881 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-03-04 17:16:00.881 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-03-04 17:16:00.881 [http-nio-8080-exec-1] PropertyBinder - Building property userId
[DEBUG] 2020-03-04 17:16:00.881 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:16:00.885 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.886 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-04 17:16:00.886 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-03-04 17:16:00.886 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-04 17:16:00.886 [http-nio-8080-exec-1] PropertyBinder - Building property biography
[DEBUG] 2020-03-04 17:16:00.893 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.895 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-03-04 17:16:00.895 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-03-04 17:16:00.896 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-03-04 17:16:00.896 [http-nio-8080-exec-1] PropertyBinder - Building property birthdate
[DEBUG] 2020-03-04 17:16:00.896 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.896 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.896 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-03-04 17:16:00.896 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.896 [http-nio-8080-exec-1] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:16:00.896 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.896 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-04 17:16:00.896 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-03-04 17:16:00.896 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-04 17:16:00.896 [http-nio-8080-exec-1] PropertyBinder - Building property email
[DEBUG] 2020-03-04 17:16:00.896 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.896 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.896 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.897 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.897 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.897 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:16:00.897 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.897 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.897 [http-nio-8080-exec-1] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-04 17:16:00.903 [http-nio-8080-exec-1] PropertyBinder - Building property faqs
[DEBUG] 2020-03-04 17:16:00.903 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.910 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] PropertyBinder - Building property films
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] PropertyBinder - Building property firstName
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] PropertyBinder - Building property gender
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.911 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-04 17:16:00.920 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-03-04 17:16:00.920 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-04 17:16:00.920 [http-nio-8080-exec-1] PropertyBinder - Building property lastName
[DEBUG] 2020-03-04 17:16:00.922 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.922 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-03-04 17:16:00.922 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-03-04 17:16:00.924 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-03-04 17:16:00.924 [http-nio-8080-exec-1] PropertyBinder - Building property password
[DEBUG] 2020-03-04 17:16:00.924 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.925 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-03-04 17:16:00.925 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-03-04 17:16:00.925 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-03-04 17:16:00.925 [http-nio-8080-exec-1] PropertyBinder - Building property picture
[DEBUG] 2020-03-04 17:16:00.925 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.925 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.928 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.928 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.928 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.928 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:16:00.928 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.928 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.928 [http-nio-8080-exec-1] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-04 17:16:00.928 [http-nio-8080-exec-1] PropertyBinder - Building property roles
[DEBUG] 2020-03-04 17:16:00.928 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] PropertyBinder - Building property trailers
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] PropertyBinder - Building property username
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] EntityBinder - Import with entity name Role
[DEBUG] 2020-03-04 17:16:00.929 [http-nio-8080-exec-1] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-03-04 17:16:00.930 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.930 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-03-04 17:16:00.930 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-03-04 17:16:00.930 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-03-04 17:16:00.930 [http-nio-8080-exec-1] PropertyBinder - Building property roleId
[DEBUG] 2020-03-04 17:16:00.936 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:16:00.936 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.936 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.936 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-03-04 17:16:00.936 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.936 [http-nio-8080-exec-1] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] PropertyBinder - Building property name
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] PropertyBinder - Building property user
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-03-04 17:16:00.937 [http-nio-8080-exec-1] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-03-04 17:16:00.946 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.949 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-03-04 17:16:00.949 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-03-04 17:16:00.949 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-03-04 17:16:00.949 [http-nio-8080-exec-1] PropertyBinder - Building property trailerId
[DEBUG] 2020-03-04 17:16:00.949 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:16:00.950 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.950 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-03-04 17:16:00.950 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-03-04 17:16:00.950 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-03-04 17:16:00.950 [http-nio-8080-exec-1] PropertyBinder - Building property author
[DEBUG] 2020-03-04 17:16:00.950 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.950 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-04 17:16:00.950 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-03-04 17:16:00.950 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-04 17:16:00.950 [http-nio-8080-exec-1] PropertyBinder - Building property cover
[DEBUG] 2020-03-04 17:16:00.950 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.950 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.950 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-03-04 17:16:00.950 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.951 [http-nio-8080-exec-1] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:16:00.951 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.951 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-04 17:16:00.951 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-03-04 17:16:00.951 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-04 17:16:00.951 [http-nio-8080-exec-1] PropertyBinder - Building property duration
[DEBUG] 2020-03-04 17:16:00.952 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.952 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-04 17:16:00.952 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] PropertyBinder - Building property link
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] PropertyBinder - Building property summary
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] PropertyBinder - Building property title
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.953 [http-nio-8080-exec-1] PropertyBinder - Building property user
[DEBUG] 2020-03-04 17:16:00.954 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.954 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-04 17:16:00.954 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-03-04 17:16:00.954 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-04 17:16:00.954 [http-nio-8080-exec-1] PropertyBinder - Building property video
[DEBUG] 2020-03-04 17:16:00.954 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:16:00.954 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:16:00.954 [http-nio-8080-exec-1] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-03-04 17:16:00.954 [http-nio-8080-exec-1] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-03-04 17:16:00.954 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.955 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-03-04 17:16:00.955 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-03-04 17:16:00.955 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-03-04 17:16:00.955 [http-nio-8080-exec-1] PropertyBinder - Building property faqId
[DEBUG] 2020-03-04 17:16:00.955 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:16:00.955 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] PropertyBinder - Building property category
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] PropertyBinder - Building property description
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] PropertyBinder - Building property title
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:16:00.956 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.960 [http-nio-8080-exec-1] PropertyBinder - Building property user
[DEBUG] 2020-03-04 17:16:00.960 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:16:00.960 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:16:00.960 [http-nio-8080-exec-1] EntityBinder - Import with entity name Genre
[DEBUG] 2020-03-04 17:16:00.960 [http-nio-8080-exec-1] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] PropertyBinder - Building property genreId
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] PropertyBinder - Building property description
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-04 17:16:00.961 [http-nio-8080-exec-1] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-04 17:16:00.962 [http-nio-8080-exec-1] PropertyBinder - Building property films
[DEBUG] 2020-03-04 17:16:00.962 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.962 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-04 17:16:00.962 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-03-04 17:16:00.962 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-04 17:16:00.962 [http-nio-8080-exec-1] PropertyBinder - Building property title
[DEBUG] 2020-03-04 17:16:00.962 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.962 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.962 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-03-04 17:16:00.962 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.962 [http-nio-8080-exec-1] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-04 17:16:00.964 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:00.964 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:16:00.964 [http-nio-8080-exec-1] EntityBinder - Import with entity name Film
[DEBUG] 2020-03-04 17:16:00.964 [http-nio-8080-exec-1] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-03-04 17:16:00.973 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.973 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-03-04 17:16:00.973 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-03-04 17:16:00.973 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-03-04 17:16:00.973 [http-nio-8080-exec-1] PropertyBinder - Building property filmId
[DEBUG] 2020-03-04 17:16:00.973 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:16:00.973 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.973 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-04 17:16:00.973 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-03-04 17:16:00.973 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-04 17:16:00.973 [http-nio-8080-exec-1] PropertyBinder - Building property cover
[DEBUG] 2020-03-04 17:16:00.973 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.973 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.973 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-03-04 17:16:00.973 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.973 [http-nio-8080-exec-1] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] PropertyBinder - Building property crews
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] PropertyBinder - Building property director
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] PropertyBinder - Building property duration
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] PropertyBinder - Building property episode
[DEBUG] 2020-03-04 17:16:00.974 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.975 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.978 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] PropertyBinder - Building property genres
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] PropertyBinder - Building property link
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] PropertyBinder - Building property summary
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] PropertyBinder - Building property title
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-04 17:16:00.979 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-04 17:16:00.980 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.980 [http-nio-8080-exec-1] PropertyBinder - Building property user
[DEBUG] 2020-03-04 17:16:00.980 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.980 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-04 17:16:00.980 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-03-04 17:16:00.980 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-04 17:16:00.980 [http-nio-8080-exec-1] PropertyBinder - Building property video
[DEBUG] 2020-03-04 17:16:00.980 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:16:00.980 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-04 17:16:00.980 [http-nio-8080-exec-1] EntityBinder - Import with entity name Crew
[DEBUG] 2020-03-04 17:16:00.980 [http-nio-8080-exec-1] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-03-04 17:16:00.980 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.985 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-03-04 17:16:00.985 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-03-04 17:16:00.987 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] PropertyBinder - Building property crewId
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] PropertyBinder - Building property biography
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] PropertyBinder - Building property email
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-04 17:16:00.988 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] PropertyBinder - Building property films
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] PropertyBinder - Building property firstName
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] PropertyBinder - Building property lastName
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] PropertyBinder - Building property profession
[DEBUG] 2020-03-04 17:16:00.989 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-04 17:16:00.991 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-04 17:16:00.992 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-03-04 17:16:00.992 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-04 17:16:00.992 [http-nio-8080-exec-1] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.996 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-04 17:16:00.997 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-04 17:16:00.997 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.997 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-03-04 17:16:00.997 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-04 17:16:00.997 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.997 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-03-04 17:16:00.997 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-04 17:16:00.997 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-03-04 17:16:00.997 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-04 17:16:00.998 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-04 17:16:00.998 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-04 17:16:00.998 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-04 17:16:00.998 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-04 17:16:00.998 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-04 17:16:00.998 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-03-04 17:16:00.998 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-04 17:16:00.998 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-04 17:16:00.998 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-04 17:16:00.998 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-04 17:16:00.998 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-04 17:16:00.998 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-03-04 17:16:00.998 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-04 17:16:01.001 [http-nio-8080-exec-1] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-03-04 17:16:01.001 [http-nio-8080-exec-1] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-03-04 17:16:01.001 [http-nio-8080-exec-1] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-03-04 17:16:01.001 [http-nio-8080-exec-1] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-03-04 17:16:01.001 [http-nio-8080-exec-1] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-03-04 17:16:01.001 [http-nio-8080-exec-1] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-03-04 17:16:01.002 [http-nio-8080-exec-1] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-03-04 17:16:01.002 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-04 17:16:01.002 [http-nio-8080-exec-1] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-04 17:16:01.002 [http-nio-8080-exec-1] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-04 17:16:01.002 [http-nio-8080-exec-1] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-04 17:16:01.002 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-03-04 17:16:01.003 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:01.004 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:16:01.006 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:01.006 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:16:01.006 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:01.006 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:01.006 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:01.008 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-04 17:16:01.009 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:01.009 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:01.009 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:16:01.009 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:01.009 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:16:01.009 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:01.009 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:01.010 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:01.011 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2020-03-04 17:16:01.011 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2020-03-04 17:16:01.011 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-03-04 17:16:01.011 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-03-04 17:16:01.011 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2020-03-04 17:16:01.011 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - JPA compliance - query : 
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - JPA compliance - lists : 
[DEBUG] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : 
[INFO ] 2020-03-04 17:16:01.012 [http-nio-8080-exec-1] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-03-04 17:16:01.026 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-03-04 17:16:01.026 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@517a1254, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-03-04 17:16:01.031 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-04 17:16:01.031 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:01.033 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-04 17:16:01.033 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:16:01.033 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-04 17:16:01.033 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:16:01.033 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-04 17:16:01.033 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:16:01.034 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-04 17:16:01.034 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:16:01.044 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-04 17:16:01.044 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:01.063 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-04 17:16:01.064 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:16:01.069 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-03-04 17:16:01.069 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-03-04 17:16:01.069 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@48529bc5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@69204f53]
[DEBUG] 2020-03-04 17:16:01.069 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-04 17:16:01.069 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:01.072 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-04 17:16:01.072 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:01.314 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-04 17:16:01.314 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:16:01.314 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-04 17:16:01.314 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:16:01.323 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-04 17:16:01.323 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:16:01.323 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-04 17:16:01.323 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:16:01.345 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-04 17:16:01.345 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:16:01.345 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-04 17:16:01.345 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:16:01.360 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-04 17:16:01.360 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:16:01.363 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-04 17:16:01.364 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:16:01.364 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-04 17:16:01.364 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:16:01.365 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-04 17:16:01.366 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:16:01.366 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-04 17:16:01.366 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:16:01.367 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-04 17:16:01.367 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:16:01.397 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-04 17:16:01.397 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:16:01.397 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-04 17:16:01.397 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:16:01.408 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-04 17:16:01.409 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:16:01.409 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-04 17:16:01.409 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:16:01.446 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-04 17:16:01.446 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:01.450 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-04 17:16:01.450 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:01.458 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-04 17:16:01.458 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:01.459 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-04 17:16:01.459 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:01.491 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-04 17:16:01.491 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:16:01.492 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-04 17:16:01.492 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:16:01.500 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-04 17:16:01.500 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:16:01.501 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-04 17:16:01.501 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:16:01.527 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-04 17:16:01.527 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-03-04 17:16:01.527 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-03-04 17:16:01.527 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-03-04 17:16:01.527 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-03-04 17:16:01.527 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-04 17:16:01.527 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-03-04 17:16:01.527 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-03-04 17:16:01.527 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-03-04 17:16:01.527 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-03-04 17:16:01.528 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-04 17:16:01.528 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-03-04 17:16:01.528 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-03-04 17:16:01.528 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-03-04 17:16:01.528 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-03-04 17:16:01.528 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-04 17:16:01.528 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-03-04 17:16:01.528 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-03-04 17:16:01.528 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-03-04 17:16:01.528 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-03-04 17:16:01.529 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-04 17:16:01.529 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-03-04 17:16:01.529 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-03-04 17:16:01.529 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-03-04 17:16:01.529 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-03-04 17:16:01.529 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-04 17:16:01.529 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-03-04 17:16:01.529 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-03-04 17:16:01.529 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-03-04 17:16:01.530 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-03-04 17:16:01.532 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-04 17:16:01.532 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-04 17:16:01.532 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-03-04 17:16:01.532 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-03-04 17:16:01.532 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-03-04 17:16:01.532 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-03-04 17:16:01.532 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-03-04 17:16:01.532 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-03-04 17:16:01.532 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-03-04 17:16:01.532 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-03-04 17:16:01.532 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-04 17:16:01.532 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-03-04 17:16:01.532 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-03-04 17:16:01.532 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-03-04 17:16:01.532 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-03-04 17:16:01.533 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-03-04 17:16:01.537 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-04 17:16:01.537 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-03-04 17:16:01.537 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-03-04 17:16:01.537 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-03-04 17:16:01.537 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-03-04 17:16:01.541 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:01.541 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-03-04 17:16:01.541 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-03-04 17:16:01.541 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.541 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-03-04 17:16:01.541 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-03-04 17:16:01.541 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.543 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-03-04 17:16:01.543 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-03-04 17:16:01.543 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-03-04 17:16:01.543 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.543 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-03-04 17:16:01.543 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-03-04 17:16:01.543 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.577 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75ad3395]
[DEBUG] 2020-03-04 17:16:01.577 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3764bf9a]
[DEBUG] 2020-03-04 17:16:01.578 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:16:01.578 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:16:01.578 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.578 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.578 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-04 17:16:01.578 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-04 17:16:01.582 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12a27951]
[DEBUG] 2020-03-04 17:16:01.582 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@29ba86b8]
[DEBUG] 2020-03-04 17:16:01.585 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67c88de8]
[DEBUG] 2020-03-04 17:16:01.586 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-04 17:16:01.586 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:16:01.586 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-04 17:16:01.586 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-04 17:16:01.586 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35128222]
[DEBUG] 2020-03-04 17:16:01.586 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d3dd7e]
[DEBUG] 2020-03-04 17:16:01.586 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:16:01.586 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:16:01.586 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:16:01.586 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.586 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.586 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.586 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66fd1576]
[DEBUG] 2020-03-04 17:16:01.588 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.588 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.588 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.588 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.588 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.588 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7181b2c6]
[DEBUG] 2020-03-04 17:16:01.589 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50902b6d]
[DEBUG] 2020-03-04 17:16:01.589 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.589 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-04 17:16:01.589 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.589 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.589 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.589 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.589 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.589 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.590 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9a23be2]
[DEBUG] 2020-03-04 17:16:01.590 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58b8a2f8]
[DEBUG] 2020-03-04 17:16:01.589 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@791d5fa6]
[DEBUG] 2020-03-04 17:16:01.591 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-04 17:16:01.591 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:16:01.591 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-04 17:16:01.591 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-04 17:16:01.592 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@449d77d1]
[DEBUG] 2020-03-04 17:16:01.592 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bedd7e2]
[DEBUG] 2020-03-04 17:16:01.592 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:16:01.592 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:16:01.592 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:16:01.592 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.592 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.593 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.593 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@369f0761]
[DEBUG] 2020-03-04 17:16:01.593 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.593 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.593 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.593 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.593 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.593 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:16:01.593 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:16:01.593 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ae056f8]
[DEBUG] 2020-03-04 17:16:01.593 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:16:01.594 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f17d281]
[DEBUG] 2020-03-04 17:16:01.594 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.594 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-04 17:16:01.594 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.594 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.594 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.594 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.594 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.594 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.594 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@617d7c0d]
[DEBUG] 2020-03-04 17:16:01.594 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2023290f]
[DEBUG] 2020-03-04 17:16:01.595 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:16:01.595 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:16:01.595 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:16:01.595 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:16:01.595 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:16:01.595 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.596 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73ab19ce]
[DEBUG] 2020-03-04 17:16:01.596 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21c39f3d]
[DEBUG] 2020-03-04 17:16:01.596 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.596 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.596 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.596 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3ec95d7d]
[DEBUG] 2020-03-04 17:16:01.599 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.599 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:16:01.600 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.594 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:16:01.602 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:16:01.602 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.602 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6597490b]
[DEBUG] 2020-03-04 17:16:01.602 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b744911]
[DEBUG] 2020-03-04 17:16:01.602 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.602 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.602 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.602 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7e77244a]
[DEBUG] 2020-03-04 17:16:01.602 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.602 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:16:01.602 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.617 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.628 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.637 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:16:01.639 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:16:01.639 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-04 17:16:01.639 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3be03e4f]
[DEBUG] 2020-03-04 17:16:01.639 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:16:01.639 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.639 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-04 17:16:01.639 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71ce604a]
[DEBUG] 2020-03-04 17:16:01.639 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5435228e]
[DEBUG] 2020-03-04 17:16:01.639 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-04 17:16:01.639 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:16:01.639 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-04 17:16:01.639 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-04 17:16:01.639 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e1d7c01]
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56ccae81]
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1fca323e]
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2788869a]
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14839c4c]
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29be77f9]
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@672bfb32]
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c1d8035]
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56462ff0]
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.640 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-04 17:16:01.639 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36e117f4]
[DEBUG] 2020-03-04 17:16:01.641 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:16:01.641 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:16:01.641 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:16:01.641 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.641 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.641 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.641 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@342ffd52]
[DEBUG] 2020-03-04 17:16:01.641 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.641 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e8cac61]
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a34686e]
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c8b1840]
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@726be892]
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.642 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39654ee0]
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c83aa07]
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46f29454]
[DEBUG] 2020-03-04 17:16:01.643 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f6cf3fc]
[DEBUG] 2020-03-04 17:16:01.644 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.644 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.644 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.644 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@47e5fad9]
[DEBUG] 2020-03-04 17:16:01.644 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.644 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:16:01.644 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.644 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.644 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46ddf82b]
[DEBUG] 2020-03-04 17:16:01.644 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@377fb165]
[DEBUG] 2020-03-04 17:16:01.644 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.644 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.644 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.644 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3898d1cb]
[DEBUG] 2020-03-04 17:16:01.644 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.644 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.645 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:16:01.645 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-04 17:16:01.646 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:16:01.646 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.649 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.653 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:16:01.656 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-04 17:16:01.668 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-04 17:16:01.669 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-04 17:16:01.669 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:16:01.669 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-03-04 17:16:01.670 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-03-04 17:16:01.670 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.670 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-03-04 17:16:01.670 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-03-04 17:16:01.670 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.670 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a50a9fe]
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c6386f8]
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6feb5c2e]
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@342e0201]
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@743a163a]
[DEBUG] 2020-03-04 17:16:01.671 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c7dc7bd]
[DEBUG] 2020-03-04 17:16:01.670 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-04 17:16:01.676 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-04 17:16:01.676 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:16:01.676 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:16:01.676 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:16:01.676 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:16:01.676 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:16:01.677 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-03-04 17:16:01.677 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-03-04 17:16:01.677 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-03-04 17:16:01.677 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.677 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-03-04 17:16:01.677 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-03-04 17:16:01.677 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.677 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f3be880]
[DEBUG] 2020-03-04 17:16:01.678 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.678 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@29179f48]
[DEBUG] 2020-03-04 17:16:01.678 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bc5e5f8]
[DEBUG] 2020-03-04 17:16:01.678 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.678 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.678 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-04 17:16:01.679 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.679 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:16:01.679 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.679 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.679 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.679 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b2f6e6e]
[DEBUG] 2020-03-04 17:16:01.679 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.679 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.679 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.679 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.679 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.679 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-04 17:16:01.679 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.683 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.683 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@65a8bfde]
[DEBUG] 2020-03-04 17:16:01.683 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.683 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.684 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@600294c]
[DEBUG] 2020-03-04 17:16:01.684 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@754fdc28]
[DEBUG] 2020-03-04 17:16:01.684 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.684 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.684 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.684 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.684 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.684 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.684 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e380f1]
[DEBUG] 2020-03-04 17:16:01.684 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e907e50]
[DEBUG] 2020-03-04 17:16:01.684 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:16:01.684 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:16:01.684 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:16:01.684 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:16:01.684 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:16:01.684 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.685 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b85bdae]
[DEBUG] 2020-03-04 17:16:01.685 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b3b7f7c]
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fb3abaf]
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ba52029]
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59dc470c]
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b20614b]
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bf090ad]
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:16:01.687 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a1b90b0]
[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53116a6]
[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1eb0db45]
[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-03-04 17:16:01.688 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@468352c4]
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f87853]
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1117d83a]
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dc5dcd4]
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1def07df]
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25b8f5db]
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a412f5e]
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@294171be]
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4cf55ab6]
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-04 17:16:01.689 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d39999f]
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69111aa1]
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d6745a5]
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c8976f7]
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7dacb3d5]
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f4be945]
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3896cb64]
[DEBUG] 2020-03-04 17:16:01.690 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7f2c4f]
[DEBUG] 2020-03-04 17:16:01.691 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@161a2c70]
[DEBUG] 2020-03-04 17:16:01.691 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.691 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.691 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.691 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4c1bd7e]
[DEBUG] 2020-03-04 17:16:01.691 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.691 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.691 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72df119c]
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c42ab94]
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f40c619]
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34ca74f8]
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d7d77fe]
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@530c97ca]
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b4b7378]
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c4e0f1c]
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.692 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@9d36b3a]
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d252388]
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-04 17:16:01.693 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4387da6d]
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50079731]
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e3885e7]
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3116cff]
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71633d9f]
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1db1929d]
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@271c3b71]
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2fe2cdf9]
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.694 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.695 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.695 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.695 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.695 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7755086e]
[DEBUG] 2020-03-04 17:16:01.695 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.696 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:16:01.696 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-04 17:16:01.696 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56b1d558]
[DEBUG] 2020-03-04 17:16:01.696 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.696 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-04 17:16:01.696 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.697 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.697 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.697 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.697 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:16:01.697 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9e7e06b]
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40a5d5b7]
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61900f65]
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57425f84]
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43f0c380]
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22fa17bc]
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.698 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6701d218]
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ab90442]
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21f42955]
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f3d36b4]
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d54b205]
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f72b2]
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d14d6b]
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36ef5353]
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4f92a34f]
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:16:01.699 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25766cc2]
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2af71f55]
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6720de98]
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dc91b53]
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f56b608]
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b5449cc]
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ae19e20]
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f071fac]
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2abeb4c3]
[DEBUG] 2020-03-04 17:16:01.700 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.701 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298421b6]
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1abb4fb1]
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f446d71]
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74564be]
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77010b4]
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47f6112c]
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b75d346]
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.702 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@47393a02]
[DEBUG] 2020-03-04 17:16:01.703 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.703 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.703 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.705 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:16:01.705 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37c361b5]
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c8ea68d]
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67e1a292]
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.706 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.707 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-04 17:16:01.708 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:16:01.708 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b83b912]
[DEBUG] 2020-03-04 17:16:01.708 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.708 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:16:01.708 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:16:01.708 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bbf57a3]
[DEBUG] 2020-03-04 17:16:01.708 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11a09f74]
[DEBUG] 2020-03-04 17:16:01.708 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.708 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.708 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.708 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.708 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-04 17:16:01.708 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:16:01.708 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:16:01.711 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.712 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.712 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:16:01.712 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47bdef7b]
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.713 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55cc64ed]
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68ece353]
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4592dea5]
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73cf31f6]
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@234d1f72]
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.created_at as created_4_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5040d7c5]
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-04 17:16:01.714 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@623dc60a]
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16e86706]
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@404064e1]
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2efa0d86]
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@227b93c5]
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77fe00db]
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3429ffa1]
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33d6d927]
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@57c5f5a9]
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.715 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.716 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2cb48633]
[DEBUG] 2020-03-04 17:16:01.716 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f0002f6]
[DEBUG] 2020-03-04 17:16:01.716 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:16:01.716 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:16:01.716 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:16:01.716 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:16:01.716 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:16:01.716 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.716 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7343db73]
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ec9e012]
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61836dda]
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cf6aada]
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@334e7f4a]
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-04 17:16:01.717 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72c6d041]
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8d19e7e]
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@353c5a36]
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@319a0081]
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@428f8513]
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.718 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@363a77de]
[DEBUG] 2020-03-04 17:16:01.719 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a58b0d2]
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e568e40]
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e88a736]
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@296be4e0]
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13755b03]
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@808a48d]
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.720 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@338203ad]
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4538add9]
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@12714615]
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-04 17:16:01.721 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.created_at as created_4_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cccab36]
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48a30155]
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61125ff9]
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8eeddf6]
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@db4bf66]
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5dcdbe2c]
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ed3dffb]
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48c781bd]
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@785ba359]
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4d77c38e]
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.722 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ac39131]
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4cbf6792]
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bbc8540]
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4df0cf1f]
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f97d39a]
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78a3be0d]
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@571aa2dc]
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@895947a]
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a1bdbf6]
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5eae040d]
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-04 17:16:01.723 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-04 17:16:01.724 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-04 17:16:01.724 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-04 17:16:01.726 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-04 17:16:01.727 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-04 17:16:01.727 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-04 17:16:01.727 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-04 17:16:01.732 [http-nio-8080-exec-1] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-04 17:16:01.732 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:16:01.732 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-03-04 17:16:01.732 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-03-04 17:16:01.732 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.732 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-03-04 17:16:01.732 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-03-04 17:16:01.732 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.732 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b94eb7]
[DEBUG] 2020-03-04 17:16:01.732 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-04 17:16:01.732 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.732 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-04 17:16:01.733 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:16:01.733 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18227c85]
[DEBUG] 2020-03-04 17:16:01.735 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b3fdaa1]
[DEBUG] 2020-03-04 17:16:01.735 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-04 17:16:01.735 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-04 17:16:01.735 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-04 17:16:01.736 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-04 17:16:01.734 [http-nio-8080-exec-4] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-04 17:16:01.736 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.736 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.737 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@753ac85a]
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4225e29e]
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@483f9be3]
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62baf587]
[DEBUG] 2020-03-04 17:16:01.738 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23e98d28]
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7656b126]
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b64e2a6]
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-04 17:16:01.739 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:16:01.740 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.741 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72acb201]
[DEBUG] 2020-03-04 17:16:01.741 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4678df34]
[DEBUG] 2020-03-04 17:16:01.741 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-04 17:16:01.741 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-04 17:16:01.741 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-04 17:16:01.741 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-04 17:16:01.741 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.741 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.742 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-03-04 17:16:01.742 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-04 17:16:01.742 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-04 17:16:01.743 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-03-04 17:16:01.743 [http-nio-8080-exec-4] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-04 17:16:01.744 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-04 17:16:01.744 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-04 17:16:01.745 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-04 17:16:01.751 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32cb4aee]
[DEBUG] 2020-03-04 17:16:01.751 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fd7be0b]
[DEBUG] 2020-03-04 17:16:01.751 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-04 17:16:01.751 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:16:01.751 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.751 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:16:01.751 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:16:01.751 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:16:01.751 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:16:01.751 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.751 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.751 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.751 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-04 17:16:01.751 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:16:01.751 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.753 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.753 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-03-04 17:16:01.753 [http-nio-8080-exec-1] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-03-04 17:16:01.753 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3709a019]
[DEBUG] 2020-03-04 17:16:01.753 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50ec198e]
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11e22001]
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21726bda]
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-04 17:16:01.754 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13fa559]
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3321321f]
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f36c658]
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15bdb86b]
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d1d497e]
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.755 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a51adf1]
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72d73230]
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25d6c3ad]
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5302f8cc]
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54bbe978]
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cedc3a7]
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@397b990b]
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fb6076d]
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@c6e749d]
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.756 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f2f21db]
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5af944f4]
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4702e628]
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57ccc4d8]
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.757 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a1f77d2]
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46ae0620]
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4262c29c]
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@744b43f6]
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51b694a0]
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@237aa6f]
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c4d1d2c]
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.758 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49bb8f91]
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30775f49]
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f2cfffa]
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b4c374e]
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5e1efeb1]
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ca2996a]
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@167e2ff7]
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.759 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8826c80]
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f64fbf0]
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10c48abb]
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58b74828]
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36d0dc7e]
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54442484]
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20846c22]
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa5243c]
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.760 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.761 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-04 17:16:01.761 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:16:01.761 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.761 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.761 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-03-04 17:16:01.761 [http-nio-8080-exec-1] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-03-04 17:16:01.763 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.763 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.763 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-03-04 17:16:01.763 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40865b10]
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71ddaddc]
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f6cf55d]
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53430221]
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29926104]
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f3b43b5]
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74a21c79]
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e02d9a8]
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75bc2785]
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@107fe46c]
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74da63ce]
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2ccd3b64]
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:16:01.764 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.765 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57ea7e84]
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7089a3a4]
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@446725da]
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@794e2a71]
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19721972]
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f783020]
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@476d861c]
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4eddbe0a]
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@181583ad]
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@166259bf]
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d146009]
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1e9aa44f]
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:16:01.766 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.767 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.767 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-04 17:16:01.767 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-03-04 17:16:01.767 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e0d4f90]
[DEBUG] 2020-03-04 17:16:01.767 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30876670]
[DEBUG] 2020-03-04 17:16:01.767 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-04 17:16:01.767 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.767 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-04 17:16:01.767 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:16:01.767 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-04 17:16:01.767 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-04 17:16:01.767 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-04 17:16:01.767 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-04 17:16:01.767 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-04 17:16:01.767 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.777 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.777 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-03-04 17:16:01.777 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-03-04 17:16:01.777 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27592de1]
[DEBUG] 2020-03-04 17:16:01.777 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ce67b9c]
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ea3b71d]
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18605ce]
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2df95f66]
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ce08762]
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16c1465f]
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30710c21]
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-04 17:16:01.778 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-04 17:16:01.780 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-04 17:16:01.780 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-04 17:16:01.780 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-04 17:16:01.781 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-04 17:16:01.781 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-03-04 17:16:01.781 [http-nio-8080-exec-4] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-03-04 17:16:01.816 [http-nio-8080-exec-4] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-03-04 17:16:01.816 [http-nio-8080-exec-4] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-03-04 17:16:01.817 [http-nio-8080-exec-1] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-03-04 17:16:01.817 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-03-04 17:16:01.818 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-03-04 17:16:01.818 [http-nio-8080-exec-4] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-03-04 17:16:01.827 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-03-04 17:16:01.827 [http-nio-8080-exec-4] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-03-04 17:16:01.827 [http-nio-8080-exec-4] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-03-04 17:16:01.827 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-03-04 17:16:01.828 [http-nio-8080-exec-4] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-03-04 17:16:01.828 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-03-04 17:16:01.828 [http-nio-8080-exec-4] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-03-04 17:16:01.828 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-03-04 17:16:01.829 [http-nio-8080-exec-4] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5a34131
[DEBUG] 2020-03-04 17:16:01.830 [http-nio-8080-exec-4] SessionFactoryRegistry - Registering SessionFactory: bc0d6d5a-6452-497e-a31b-7609cfa544ef (<unnamed>)
[DEBUG] 2020-03-04 17:16:01.830 [http-nio-8080-exec-4] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-03-04 17:16:01.835 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: a34b8e60-d1af-4e2b-a218-bf8b244fe892 (<unnamed>)
[DEBUG] 2020-03-04 17:16:01.835 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-03-04 17:16:01.903 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-03-04 17:16:01.903 [http-nio-8080-exec-4] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-03-04 17:16:01.928 [http-nio-8080-exec-4] SQL - select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:16:01.950 [http-nio-8080-exec-1] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Genre as generatedAlias0
[DEBUG] 2020-03-04 17:16:01.968 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-04 17:16:01.969 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-04 17:16:01.975 [http-nio-8080-exec-1] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@637e0f12
[DEBUG] 2020-03-04 17:16:01.990 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:16:01.991 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:01.996 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:01.996 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = These are scary movies. Children should not watch them.More Data.
[DEBUG] 2020-03-04 17:16:01.996 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:01.996 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:16:01.996 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.006 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Horror
[DEBUG] 2020-03-04 17:16:02.006 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.006 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:02.006 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.007 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:16:02.007 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-04 17:16:02.007 [http-nio-8080-exec-4] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.Genre#2
[DEBUG] 2020-03-04 17:16:02.008 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-04 17:16:02.011 [http-nio-8080-exec-1] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Genre as generatedAlias0
[DEBUG] 2020-03-04 17:16:02.022 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-04 17:16:02.038 [http-nio-8080-exec-1] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Genre'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-03-04 17:16:02.060 [http-nio-8080-exec-1] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-03-04 17:16:02.099 [http-nio-8080-exec-1] FromElement - FromClause{level=1} : com.streammedia.entity.Genre (generatedAlias0) -> genre0_
[DEBUG] 2020-03-04 17:16:02.099 [http-nio-8080-exec-1] FromReferenceNode - Resolved : generatedAlias0 -> genre0_.genre_id
[DEBUG] 2020-03-04 17:16:02.100 [http-nio-8080-exec-1] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-03-04 17:16:02.100 [http-nio-8080-exec-1] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} genre0_.genre_id ) ( FromClause{level=1} Genre genre0_ ) )
[DEBUG] 2020-03-04 17:16:02.131 [http-nio-8080-exec-1] JoinProcessor - Using FROM fragment [Genre genre0_]
[DEBUG] 2020-03-04 17:16:02.132 [http-nio-8080-exec-1] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-03-04 17:16:02.137 [http-nio-8080-exec-1] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Genre)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'genre0_.genre_id as genre_id1_5_' {alias=generatedAlias0, className=com.streammedia.entity.Genre, tableAlias=genre0_}
    |  \-[SQL_TOKEN] SqlFragment: 'genre0_.created_at as created_2_5_, genre0_.description as descript3_5_, genre0_.title as title4_5_, genre0_.updated_at as updated_5_5_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[genre0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Genre genre0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Genre,tableAlias=genre0_,origin=null,columns={,className=com.streammedia.entity.Genre}}

[DEBUG] 2020-03-04 17:16:02.137 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-04 17:16:02.156 [http-nio-8080-exec-1] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Genre as generatedAlias0
[DEBUG] 2020-03-04 17:16:02.156 [http-nio-8080-exec-1] QueryTranslatorImpl - SQL: select genre0_.genre_id as genre_id1_5_, genre0_.created_at as created_2_5_, genre0_.description as descript3_5_, genre0_.title as title4_5_, genre0_.updated_at as updated_5_5_ from Genre genre0_
[DEBUG] 2020-03-04 17:16:02.156 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-04 17:16:02.187 [http-nio-8080-exec-1] SQL - select genre0_.genre_id as genre_id1_5_, genre0_.created_at as created_2_5_, genre0_.description as descript3_5_, genre0_.title as title4_5_, genre0_.updated_at as updated_5_5_ from Genre genre0_
[DEBUG] 2020-03-04 17:16:02.226 [http-nio-8080-exec-1] Loader - Result set row: 0
[DEBUG] 2020-03-04 17:16:02.227 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:16:02.229 [http-nio-8080-exec-1] Loader - Result set row: 1
[DEBUG] 2020-03-04 17:16:02.229 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] Loader - Result set row: 2
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.streammedia.entity.Genre#3]
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `description` : value = This is Love related films
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = Romantic
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `description` : value = These are scary movies. Children should not watch them.More Data.
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = Horror
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#3]
[DEBUG] 2020-03-04 17:16:02.230 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:02.231 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.231 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `description` : value = Funny movies that are good for both young and adults.
[DEBUG] 2020-03-04 17:16:02.231 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.231 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:16:02.231 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.231 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = Comedy
[DEBUG] 2020-03-04 17:16:02.231 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.231 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:02.231 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:02.231 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#3]
[DEBUG] 2020-03-04 17:16:02.236 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-04 17:16:05.490 [http-nio-8080-exec-11] SQL - select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:16:05.492 [http-nio-8080-exec-11] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-04 17:16:05.492 [http-nio-8080-exec-11] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-04 17:16:05.493 [http-nio-8080-exec-11] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#3]
[DEBUG] 2020-03-04 17:16:05.493 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:05.493 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:05.493 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `description` : value = Funny movies that are good for both young and adults.
[DEBUG] 2020-03-04 17:16:05.493 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:05.493 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:16:05.493 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:05.494 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `title` : value = Comedy
[DEBUG] 2020-03-04 17:16:05.494 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:05.494 [http-nio-8080-exec-11] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:05.494 [http-nio-8080-exec-11] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:05.494 [http-nio-8080-exec-11] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#3]
[DEBUG] 2020-03-04 17:16:05.494 [http-nio-8080-exec-11] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-04 17:16:05.494 [http-nio-8080-exec-11] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.Genre#3
[DEBUG] 2020-03-04 17:16:05.494 [http-nio-8080-exec-11] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-04 17:16:06.522 [http-nio-8080-exec-9] SQL - select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-04 17:16:06.527 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-04 17:16:06.527 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-04 17:16:06.527 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#3]
[DEBUG] 2020-03-04 17:16:06.527 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:06.527 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:06.527 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `description` : value = Funny movies that are good for both young and adults.
[DEBUG] 2020-03-04 17:16:06.528 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:06.528 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:16:06.528 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:06.528 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `title` : value = Comedy
[DEBUG] 2020-03-04 17:16:06.528 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:06.528 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:06.528 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:06.528 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#3]
[DEBUG] 2020-03-04 17:16:06.528 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-04 17:16:06.528 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.Genre#3
[DEBUG] 2020-03-04 17:16:06.528 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-04 17:16:06.533 [http-nio-8080-exec-9] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-03-04 17:16:06.533 [http-nio-8080-exec-9] TransactionImpl - begin
[DEBUG] 2020-03-04 17:16:06.551 [http-nio-8080-exec-9] TransactionImpl - committing
[DEBUG] 2020-03-04 17:16:06.552 [http-nio-8080-exec-9] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-03-04 17:16:06.552 [http-nio-8080-exec-9] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-03-04 17:16:06.559 [http-nio-8080-exec-9] Collections - Collection dereferenced: [com.streammedia.entity.Genre.films#3]
[DEBUG] 2020-03-04 17:16:06.559 [http-nio-8080-exec-9] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-03-04 17:16:06.559 [http-nio-8080-exec-9] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2020-03-04 17:16:06.561 [http-nio-8080-exec-9] EntityPrinter - Listing entities:
[DEBUG] 2020-03-04 17:16:06.561 [http-nio-8080-exec-9] EntityPrinter - com.streammedia.entity.Genre{genreId=3, createdAt=2020-03-04, films=<uninitialized>, description=Funny movies that are good for both young and adults., title=Comedy, updatedAt=2020-03-04}
[DEBUG] 2020-03-04 17:16:06.579 [http-nio-8080-exec-9] SQL - delete from Genre where genre_id=?
[DEBUG] 2020-03-04 17:16:06.587 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-04 17:16:06.588 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-04 17:16:06.588 [http-nio-8080-exec-9] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-03-04 17:16:06.596 [http-nio-8080-exec-10] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Genre as generatedAlias0
[DEBUG] 2020-03-04 17:16:06.596 [http-nio-8080-exec-10] SQL - select genre0_.genre_id as genre_id1_5_, genre0_.created_at as created_2_5_, genre0_.description as descript3_5_, genre0_.title as title4_5_, genre0_.updated_at as updated_5_5_ from Genre genre0_
[DEBUG] 2020-03-04 17:16:06.599 [http-nio-8080-exec-10] Loader - Result set row: 0
[DEBUG] 2020-03-04 17:16:06.599 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] Loader - Result set row: 1
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = This is Love related films
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `title` : value = Romantic
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = These are scary movies. Children should not watch them.More Data.
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `title` : value = Horror
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:16:06.600 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-04 17:16:08.403 [http-nio-8080-exec-8] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Genre as generatedAlias0
[DEBUG] 2020-03-04 17:16:08.403 [http-nio-8080-exec-8] SQL - select genre0_.genre_id as genre_id1_5_, genre0_.created_at as created_2_5_, genre0_.description as descript3_5_, genre0_.title as title4_5_, genre0_.updated_at as updated_5_5_ from Genre genre0_
[DEBUG] 2020-03-04 17:16:08.405 [http-nio-8080-exec-8] Loader - Result set row: 0
[DEBUG] 2020-03-04 17:16:08.405 [http-nio-8080-exec-8] Loader - Result row: EntityKey[com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] Loader - Result set row: 1
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] Loader - Result row: EntityKey[com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = This is Love related films
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = Romantic
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#1]
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = These are scary movies. Children should not watch them.More Data.
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = Horror
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-04
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Genre#2]
[DEBUG] 2020-03-04 17:16:08.406 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
