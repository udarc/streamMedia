[DEBUG] 2020-02-26 16:21:12.020 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-26 16:21:12.022 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-26 16:21:12.024 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-26 16:21:12.077 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-26 16:21:12.081 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-26 16:21:12.235 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-26 16:21:12.235 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-26 16:21:12.241 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-26 16:21:12.489 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-26 16:21:12.508 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-26 16:21:12.509 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-26 16:21:12.525 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-26 16:21:12.555 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@396e6d9
[DEBUG] 2020-02-26 16:21:12.556 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@396e6d9
[DEBUG] 2020-02-26 16:21:12.556 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@396e6d9
[DEBUG] 2020-02-26 16:21:12.557 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@e48bf9a
[DEBUG] 2020-02-26 16:21:12.557 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5176d279
[DEBUG] 2020-02-26 16:21:12.557 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@387bf2d9
[DEBUG] 2020-02-26 16:21:12.559 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@64fc097e
[DEBUG] 2020-02-26 16:21:12.561 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@64fc097e
[DEBUG] 2020-02-26 16:21:12.561 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@64fc097e
[DEBUG] 2020-02-26 16:21:12.562 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@aaee2a2
[DEBUG] 2020-02-26 16:21:12.562 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@aaee2a2
[DEBUG] 2020-02-26 16:21:12.563 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@aaee2a2
[DEBUG] 2020-02-26 16:21:12.564 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6ab4ba9f
[DEBUG] 2020-02-26 16:21:12.564 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6ab4ba9f
[DEBUG] 2020-02-26 16:21:12.564 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6ab4ba9f
[DEBUG] 2020-02-26 16:21:12.565 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@63bde6c2
[DEBUG] 2020-02-26 16:21:12.565 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@63bde6c2
[DEBUG] 2020-02-26 16:21:12.565 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@63bde6c2
[DEBUG] 2020-02-26 16:21:12.566 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7026b7ee
[DEBUG] 2020-02-26 16:21:12.567 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7026b7ee
[DEBUG] 2020-02-26 16:21:12.567 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7026b7ee
[DEBUG] 2020-02-26 16:21:12.567 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1bf39d06
[DEBUG] 2020-02-26 16:21:12.568 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1bf39d06
[DEBUG] 2020-02-26 16:21:12.568 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1bf39d06
[DEBUG] 2020-02-26 16:21:12.568 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@367b22e5
[DEBUG] 2020-02-26 16:21:12.569 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@367b22e5
[DEBUG] 2020-02-26 16:21:12.570 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@367b22e5
[DEBUG] 2020-02-26 16:21:12.571 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@732c9b5c
[DEBUG] 2020-02-26 16:21:12.571 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@732c9b5c
[DEBUG] 2020-02-26 16:21:12.572 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3cff0139
[DEBUG] 2020-02-26 16:21:12.572 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3cff0139
[DEBUG] 2020-02-26 16:21:12.573 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@15f8701f
[DEBUG] 2020-02-26 16:21:12.573 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@15f8701f
[DEBUG] 2020-02-26 16:21:12.574 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@39e43310
[DEBUG] 2020-02-26 16:21:12.574 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@186cb891
[DEBUG] 2020-02-26 16:21:12.575 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6b00ad9
[DEBUG] 2020-02-26 16:21:12.575 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6b00ad9
[DEBUG] 2020-02-26 16:21:12.577 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6b0615ae
[DEBUG] 2020-02-26 16:21:12.578 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6b0615ae
[DEBUG] 2020-02-26 16:21:12.582 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@64693226
[DEBUG] 2020-02-26 16:21:12.582 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@64693226
[DEBUG] 2020-02-26 16:21:12.583 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5ec46cdd
[DEBUG] 2020-02-26 16:21:12.583 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5ec46cdd
[DEBUG] 2020-02-26 16:21:12.584 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4da9f723
[DEBUG] 2020-02-26 16:21:12.584 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4da9f723
[DEBUG] 2020-02-26 16:21:12.585 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6fca5907
[DEBUG] 2020-02-26 16:21:12.585 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6fca5907
[DEBUG] 2020-02-26 16:21:12.586 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67d86804
[DEBUG] 2020-02-26 16:21:12.586 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67d86804
[DEBUG] 2020-02-26 16:21:12.588 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@74db12c2
[DEBUG] 2020-02-26 16:21:12.588 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@74db12c2
[DEBUG] 2020-02-26 16:21:12.590 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@38b5f25
[DEBUG] 2020-02-26 16:21:12.590 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@38b5f25
[DEBUG] 2020-02-26 16:21:12.591 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@21c7208d
[DEBUG] 2020-02-26 16:21:12.591 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@21c7208d
[DEBUG] 2020-02-26 16:21:12.592 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@25e49cb2
[DEBUG] 2020-02-26 16:21:12.592 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@25e49cb2
[DEBUG] 2020-02-26 16:21:12.593 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@367d2816
[DEBUG] 2020-02-26 16:21:12.593 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@367d2816
[DEBUG] 2020-02-26 16:21:12.594 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@367d2816
[DEBUG] 2020-02-26 16:21:12.595 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@379ce046
[DEBUG] 2020-02-26 16:21:12.596 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1f44ddab
[DEBUG] 2020-02-26 16:21:12.596 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1f44ddab
[DEBUG] 2020-02-26 16:21:12.597 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1f44ddab
[DEBUG] 2020-02-26 16:21:12.598 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7ed9499e
[DEBUG] 2020-02-26 16:21:12.599 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@b25b095
[DEBUG] 2020-02-26 16:21:12.599 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@b25b095
[DEBUG] 2020-02-26 16:21:12.599 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6c575325
[DEBUG] 2020-02-26 16:21:12.599 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6c575325
[DEBUG] 2020-02-26 16:21:12.600 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3fc05ea2
[DEBUG] 2020-02-26 16:21:12.600 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3fc05ea2
[DEBUG] 2020-02-26 16:21:12.601 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@51a8313b
[DEBUG] 2020-02-26 16:21:12.601 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@51a8313b
[DEBUG] 2020-02-26 16:21:12.602 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@39ad12b6
[DEBUG] 2020-02-26 16:21:12.602 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@39ad12b6
[DEBUG] 2020-02-26 16:21:12.602 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6aba5d30
[DEBUG] 2020-02-26 16:21:12.603 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@e322ec9
[DEBUG] 2020-02-26 16:21:12.604 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@e322ec9
[DEBUG] 2020-02-26 16:21:12.604 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@e322ec9
[DEBUG] 2020-02-26 16:21:12.604 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@719bb3b4
[DEBUG] 2020-02-26 16:21:12.604 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@719bb3b4
[DEBUG] 2020-02-26 16:21:12.604 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@719bb3b4
[DEBUG] 2020-02-26 16:21:12.605 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3c782d8e
[DEBUG] 2020-02-26 16:21:12.605 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@255e5e2e
[DEBUG] 2020-02-26 16:21:12.606 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@8a98f38
[DEBUG] 2020-02-26 16:21:12.606 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@8a98f38
[DEBUG] 2020-02-26 16:21:12.606 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@8a98f38
[DEBUG] 2020-02-26 16:21:12.607 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@38a1a26
[DEBUG] 2020-02-26 16:21:12.607 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@38a1a26
[DEBUG] 2020-02-26 16:21:12.607 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@38a1a26
[DEBUG] 2020-02-26 16:21:12.607 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@444cc791
[DEBUG] 2020-02-26 16:21:12.607 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@c6b2dd9
[DEBUG] 2020-02-26 16:21:12.609 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6c806c8b
[DEBUG] 2020-02-26 16:21:12.609 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6c806c8b
[DEBUG] 2020-02-26 16:21:12.609 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e530163
[DEBUG] 2020-02-26 16:21:12.611 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@23592946
[DEBUG] 2020-02-26 16:21:12.612 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@23592946
[DEBUG] 2020-02-26 16:21:12.614 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@23f3dbf0
[DEBUG] 2020-02-26 16:21:12.614 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@23f3dbf0
[DEBUG] 2020-02-26 16:21:12.614 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@37303f12
[DEBUG] 2020-02-26 16:21:12.615 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@165e389b
[DEBUG] 2020-02-26 16:21:12.616 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3ed03652
[DEBUG] 2020-02-26 16:21:12.621 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@73fc518f
[DEBUG] 2020-02-26 16:21:12.621 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@73fc518f
[DEBUG] 2020-02-26 16:21:12.621 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@151ef57f
[DEBUG] 2020-02-26 16:21:12.621 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@10895b16
[DEBUG] 2020-02-26 16:21:12.621 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5524b72f
[DEBUG] 2020-02-26 16:21:12.621 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2cc03cd1
[DEBUG] 2020-02-26 16:21:12.621 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4e17913b
[DEBUG] 2020-02-26 16:21:12.622 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@149c3204
[DEBUG] 2020-02-26 16:21:12.622 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@64f16277
[DEBUG] 2020-02-26 16:21:12.622 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@497aec8c
[DEBUG] 2020-02-26 16:21:12.654 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-26 16:21:12.654 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-26 16:21:12.654 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-26 16:21:12.655 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-26 16:21:12.655 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-26 16:21:12.658 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-26 16:21:12.659 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-26 16:21:12.660 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-26 16:21:12.661 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-26 16:21:12.661 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-26 16:21:12.661 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-26 16:21:12.662 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-26 16:21:12.662 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-26 16:21:12.662 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-26 16:21:12.669 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_streamMedia
[INFO ] 2020-02-26 16:21:12.669 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-26 16:21:12.669 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-26 16:21:12.774 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-26 16:21:13.400 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-26 16:21:13.400 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-26 16:21:13.400 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-26 16:21:13.406 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-26 16:21:13.440 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-26 16:21:13.476 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-26 16:21:13.682 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-26 16:21:13.693 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57435801] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2da66a44]
[DEBUG] 2020-02-26 16:21:13.762 [main] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-26 16:21:13.784 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-26 16:21:13.787 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-02-26 16:21:13.789 [main] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-26 16:21:13.813 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.815 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-26 16:21:13.816 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-26 16:21:13.818 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-26 16:21:13.819 [main] PropertyBinder - Building property userId
[DEBUG] 2020-02-26 16:21:13.822 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-26 16:21:13.823 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.823 [main] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-26 16:21:13.823 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-26 16:21:13.823 [main] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-26 16:21:13.823 [main] PropertyBinder - Building property biography
[DEBUG] 2020-02-26 16:21:13.827 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.828 [main] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-26 16:21:13.828 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-26 16:21:13.828 [main] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-26 16:21:13.828 [main] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-26 16:21:13.828 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-26 16:21:13.828 [main] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-26 16:21:13.829 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-26 16:21:13.829 [main] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-26 16:21:13.830 [main] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-26 16:21:13.830 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.831 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-26 16:21:13.831 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-26 16:21:13.832 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-26 16:21:13.832 [main] PropertyBinder - Building property email
[DEBUG] 2020-02-26 16:21:13.833 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-26 16:21:13.834 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.835 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.839 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.840 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.840 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-26 16:21:13.841 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-26 16:21:13.841 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-26 16:21:13.841 [main] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-26 16:21:13.843 [main] PropertyBinder - Building property faqs
[DEBUG] 2020-02-26 16:21:13.843 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-26 16:21:13.844 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.844 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.844 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.844 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.844 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-26 16:21:13.844 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-26 16:21:13.844 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-26 16:21:13.844 [main] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-26 16:21:13.845 [main] PropertyBinder - Building property films
[DEBUG] 2020-02-26 16:21:13.845 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.845 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-26 16:21:13.845 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-26 16:21:13.845 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-26 16:21:13.847 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-02-26 16:21:13.847 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.847 [main] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-26 16:21:13.847 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-26 16:21:13.847 [main] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-26 16:21:13.847 [main] PropertyBinder - Building property gender
[DEBUG] 2020-02-26 16:21:13.847 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.847 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-26 16:21:13.848 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-26 16:21:13.848 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-26 16:21:13.848 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-02-26 16:21:13.848 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.848 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-26 16:21:13.848 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-26 16:21:13.848 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-26 16:21:13.848 [main] PropertyBinder - Building property password
[DEBUG] 2020-02-26 16:21:13.849 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.849 [main] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-26 16:21:13.849 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-26 16:21:13.849 [main] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-26 16:21:13.849 [main] PropertyBinder - Building property picture
[DEBUG] 2020-02-26 16:21:13.849 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-26 16:21:13.849 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.849 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.850 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.850 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.851 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-26 16:21:13.851 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-26 16:21:13.851 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-26 16:21:13.851 [main] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-26 16:21:13.851 [main] PropertyBinder - Building property roles
[DEBUG] 2020-02-26 16:21:13.851 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-26 16:21:13.851 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.851 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.852 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.852 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.852 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-26 16:21:13.852 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-26 16:21:13.852 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-26 16:21:13.852 [main] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-26 16:21:13.852 [main] PropertyBinder - Building property trailers
[DEBUG] 2020-02-26 16:21:13.852 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.852 [main] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-26 16:21:13.852 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-26 16:21:13.852 [main] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-26 16:21:13.852 [main] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-26 16:21:13.852 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-26 16:21:13.852 [main] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-26 16:21:13.852 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-26 16:21:13.852 [main] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-26 16:21:13.853 [main] PropertyBinder - Building property username
[DEBUG] 2020-02-26 16:21:13.854 [main] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-26 16:21:13.855 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-26 16:21:13.857 [main] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-26 16:21:13.857 [main] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-26 16:21:13.865 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.865 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-26 16:21:13.865 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-26 16:21:13.865 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-26 16:21:13.865 [main] PropertyBinder - Building property roleId
[DEBUG] 2020-02-26 16:21:13.866 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-26 16:21:13.866 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.866 [main] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-26 16:21:13.866 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-26 16:21:13.866 [main] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-26 16:21:13.866 [main] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-26 16:21:13.871 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.871 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-26 16:21:13.871 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-26 16:21:13.871 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-26 16:21:13.872 [main] PropertyBinder - Building property name
[DEBUG] 2020-02-26 16:21:13.872 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.872 [main] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-26 16:21:13.872 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-26 16:21:13.872 [main] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-26 16:21:13.872 [main] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-26 16:21:13.873 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-26 16:21:13.875 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.877 [main] PropertyBinder - Building property user
[DEBUG] 2020-02-26 16:21:13.877 [main] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-26 16:21:13.877 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-26 16:21:13.877 [main] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-26 16:21:13.878 [main] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-26 16:21:13.882 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.882 [main] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-26 16:21:13.882 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-26 16:21:13.882 [main] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-26 16:21:13.882 [main] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-26 16:21:13.882 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-26 16:21:13.883 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.883 [main] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-26 16:21:13.883 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-26 16:21:13.883 [main] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-26 16:21:13.883 [main] PropertyBinder - Building property author
[DEBUG] 2020-02-26 16:21:13.883 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.883 [main] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-26 16:21:13.883 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-26 16:21:13.883 [main] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-26 16:21:13.883 [main] PropertyBinder - Building property cover
[DEBUG] 2020-02-26 16:21:13.883 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.883 [main] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-26 16:21:13.883 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-26 16:21:13.883 [main] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-26 16:21:13.883 [main] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-26 16:21:13.883 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.883 [main] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-26 16:21:13.883 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-26 16:21:13.883 [main] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-26 16:21:13.883 [main] PropertyBinder - Building property duration
[DEBUG] 2020-02-26 16:21:13.884 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.884 [main] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-26 16:21:13.884 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-26 16:21:13.884 [main] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-26 16:21:13.884 [main] PropertyBinder - Building property link
[DEBUG] 2020-02-26 16:21:13.884 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.884 [main] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-26 16:21:13.884 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-26 16:21:13.884 [main] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-26 16:21:13.884 [main] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-26 16:21:13.884 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.884 [main] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-26 16:21:13.884 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-26 16:21:13.884 [main] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-26 16:21:13.884 [main] PropertyBinder - Building property summary
[DEBUG] 2020-02-26 16:21:13.884 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.884 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-26 16:21:13.884 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-26 16:21:13.884 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-26 16:21:13.884 [main] PropertyBinder - Building property title
[DEBUG] 2020-02-26 16:21:13.885 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.885 [main] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-26 16:21:13.885 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-26 16:21:13.885 [main] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-26 16:21:13.885 [main] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-26 16:21:13.885 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-26 16:21:13.886 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.886 [main] PropertyBinder - Building property user
[DEBUG] 2020-02-26 16:21:13.886 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.886 [main] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-26 16:21:13.886 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-26 16:21:13.886 [main] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-26 16:21:13.886 [main] PropertyBinder - Building property video
[DEBUG] 2020-02-26 16:21:13.886 [main] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-26 16:21:13.886 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-26 16:21:13.887 [main] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-26 16:21:13.887 [main] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-26 16:21:13.888 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.888 [main] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-26 16:21:13.888 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-26 16:21:13.889 [main] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-26 16:21:13.889 [main] PropertyBinder - Building property genreId
[DEBUG] 2020-02-26 16:21:13.889 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-26 16:21:13.889 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.889 [main] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-26 16:21:13.889 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-26 16:21:13.889 [main] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-26 16:21:13.889 [main] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-26 16:21:13.889 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.889 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-26 16:21:13.889 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-26 16:21:13.889 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-26 16:21:13.889 [main] PropertyBinder - Building property description
[DEBUG] 2020-02-26 16:21:13.889 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.889 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.890 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.890 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-26 16:21:13.890 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-26 16:21:13.891 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-26 16:21:13.891 [main] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-26 16:21:13.891 [main] PropertyBinder - Building property films
[DEBUG] 2020-02-26 16:21:13.891 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.891 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-26 16:21:13.892 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-26 16:21:13.892 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-26 16:21:13.892 [main] PropertyBinder - Building property title
[DEBUG] 2020-02-26 16:21:13.892 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.892 [main] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-26 16:21:13.892 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-26 16:21:13.892 [main] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-26 16:21:13.893 [main] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-26 16:21:13.893 [main] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-26 16:21:13.893 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-26 16:21:13.893 [main] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-26 16:21:13.893 [main] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-26 16:21:13.895 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.895 [main] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-26 16:21:13.895 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-26 16:21:13.895 [main] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-26 16:21:13.895 [main] PropertyBinder - Building property filmId
[DEBUG] 2020-02-26 16:21:13.895 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-26 16:21:13.895 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.895 [main] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-26 16:21:13.895 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-26 16:21:13.895 [main] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-26 16:21:13.895 [main] PropertyBinder - Building property cover
[DEBUG] 2020-02-26 16:21:13.895 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.896 [main] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-26 16:21:13.896 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-26 16:21:13.896 [main] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-26 16:21:13.896 [main] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-26 16:21:13.896 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.896 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.896 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.896 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-26 16:21:13.896 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-26 16:21:13.896 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-26 16:21:13.896 [main] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-26 16:21:13.896 [main] PropertyBinder - Building property crews
[DEBUG] 2020-02-26 16:21:13.896 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.896 [main] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-26 16:21:13.896 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-26 16:21:13.896 [main] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-26 16:21:13.896 [main] PropertyBinder - Building property director
[DEBUG] 2020-02-26 16:21:13.897 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.897 [main] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-26 16:21:13.897 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-26 16:21:13.897 [main] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-26 16:21:13.897 [main] PropertyBinder - Building property duration
[DEBUG] 2020-02-26 16:21:13.897 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.897 [main] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-26 16:21:13.897 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-26 16:21:13.897 [main] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-26 16:21:13.897 [main] PropertyBinder - Building property episode
[DEBUG] 2020-02-26 16:21:13.901 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.902 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.902 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.902 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-26 16:21:13.902 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-26 16:21:13.902 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-26 16:21:13.902 [main] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-26 16:21:13.903 [main] PropertyBinder - Building property genres
[DEBUG] 2020-02-26 16:21:13.903 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.903 [main] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-26 16:21:13.903 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-26 16:21:13.903 [main] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-26 16:21:13.903 [main] PropertyBinder - Building property link
[DEBUG] 2020-02-26 16:21:13.903 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.903 [main] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-26 16:21:13.903 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-26 16:21:13.903 [main] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-26 16:21:13.903 [main] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-26 16:21:13.904 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.904 [main] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-26 16:21:13.904 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-26 16:21:13.904 [main] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-26 16:21:13.904 [main] PropertyBinder - Building property summary
[DEBUG] 2020-02-26 16:21:13.904 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.904 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-26 16:21:13.904 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-26 16:21:13.904 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-26 16:21:13.904 [main] PropertyBinder - Building property title
[DEBUG] 2020-02-26 16:21:13.904 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.904 [main] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-26 16:21:13.904 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-26 16:21:13.904 [main] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-26 16:21:13.905 [main] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-26 16:21:13.905 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-26 16:21:13.905 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.908 [main] PropertyBinder - Building property user
[DEBUG] 2020-02-26 16:21:13.908 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.908 [main] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-26 16:21:13.908 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-26 16:21:13.908 [main] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-26 16:21:13.908 [main] PropertyBinder - Building property video
[DEBUG] 2020-02-26 16:21:13.908 [main] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-26 16:21:13.908 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-26 16:21:13.909 [main] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-26 16:21:13.909 [main] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-26 16:21:13.909 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.909 [main] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-26 16:21:13.909 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-26 16:21:13.909 [main] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-26 16:21:13.909 [main] PropertyBinder - Building property faqId
[DEBUG] 2020-02-26 16:21:13.911 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-26 16:21:13.911 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.911 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-26 16:21:13.911 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-26 16:21:13.911 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-26 16:21:13.911 [main] PropertyBinder - Building property category
[DEBUG] 2020-02-26 16:21:13.911 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.911 [main] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-26 16:21:13.911 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-26 16:21:13.911 [main] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-26 16:21:13.911 [main] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-26 16:21:13.911 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.911 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-26 16:21:13.911 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-26 16:21:13.911 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-26 16:21:13.911 [main] PropertyBinder - Building property description
[DEBUG] 2020-02-26 16:21:13.911 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.911 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-26 16:21:13.911 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-26 16:21:13.912 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-26 16:21:13.912 [main] PropertyBinder - Building property title
[DEBUG] 2020-02-26 16:21:13.912 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.912 [main] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-26 16:21:13.912 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-26 16:21:13.912 [main] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-26 16:21:13.912 [main] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-26 16:21:13.912 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-26 16:21:13.912 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.912 [main] PropertyBinder - Building property user
[DEBUG] 2020-02-26 16:21:13.912 [main] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-26 16:21:13.912 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-26 16:21:13.912 [main] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-26 16:21:13.912 [main] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-26 16:21:13.913 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.913 [main] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-26 16:21:13.913 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-26 16:21:13.913 [main] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-26 16:21:13.913 [main] PropertyBinder - Building property crewId
[DEBUG] 2020-02-26 16:21:13.913 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-26 16:21:13.913 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.913 [main] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-26 16:21:13.913 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-26 16:21:13.913 [main] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-26 16:21:13.913 [main] PropertyBinder - Building property biography
[DEBUG] 2020-02-26 16:21:13.913 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-26 16:21:13.913 [main] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-26 16:21:13.913 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-26 16:21:13.913 [main] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-26 16:21:13.913 [main] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-26 16:21:13.913 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.913 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-26 16:21:13.913 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-26 16:21:13.913 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-26 16:21:13.913 [main] PropertyBinder - Building property email
[DEBUG] 2020-02-26 16:21:13.914 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.914 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.914 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.914 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-26 16:21:13.914 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-26 16:21:13.914 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-26 16:21:13.914 [main] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-26 16:21:13.914 [main] PropertyBinder - Building property films
[DEBUG] 2020-02-26 16:21:13.914 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.914 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-26 16:21:13.914 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-26 16:21:13.914 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-26 16:21:13.914 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-02-26 16:21:13.914 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.914 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-26 16:21:13.914 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-26 16:21:13.914 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-26 16:21:13.914 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-02-26 16:21:13.914 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.914 [main] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-26 16:21:13.915 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-26 16:21:13.915 [main] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-26 16:21:13.915 [main] PropertyBinder - Building property profession
[DEBUG] 2020-02-26 16:21:13.916 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-26 16:21:13.916 [main] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-26 16:21:13.916 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-26 16:21:13.916 [main] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-26 16:21:13.916 [main] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-26 16:21:13.917 [main] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-26 16:21:13.918 [main] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-26 16:21:13.922 [main] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-26 16:21:13.929 [main] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-26 16:21:13.929 [main] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-26 16:21:13.929 [main] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-26 16:21:13.929 [main] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-26 16:21:13.929 [main] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-26 16:21:13.929 [main] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-26 16:21:13.929 [main] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-26 16:21:13.930 [main] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-26 16:21:13.930 [main] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-26 16:21:13.938 [main] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-26 16:21:13.938 [main] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-26 16:21:13.939 [main] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-26 16:21:13.939 [main] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-26 16:21:13.939 [main] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-26 16:21:13.939 [main] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-26 16:21:13.939 [main] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-26 16:21:13.939 [main] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-26 16:21:13.939 [main] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-26 16:21:13.939 [main] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-26 16:21:13.940 [main] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-26 16:21:13.940 [main] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-26 16:21:13.940 [main] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-26 16:21:13.940 [main] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-26 16:21:13.940 [main] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-26 16:21:13.940 [main] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-26 16:21:13.940 [main] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-26 16:21:13.940 [main] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-26 16:21:13.940 [main] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-26 16:21:13.940 [main] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-26 16:21:13.940 [main] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-26 16:21:13.940 [main] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-26 16:21:13.940 [main] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-26 16:21:13.940 [main] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-26 16:21:13.941 [main] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-26 16:21:13.941 [main] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-26 16:21:13.941 [main] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-26 16:21:13.941 [main] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-26 16:21:13.941 [main] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-26 16:21:13.941 [main] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-26 16:21:13.941 [main] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-26 16:21:13.941 [main] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-26 16:21:13.941 [main] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-26 16:21:13.941 [main] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-26 16:21:13.941 [main] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-26 16:21:13.942 [main] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-26 16:21:13.942 [main] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-26 16:21:13.942 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-26 16:21:13.944 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-26 16:21:13.944 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-26 16:21:13.944 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-26 16:21:13.945 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-26 16:21:13.945 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-26 16:21:13.945 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-26 16:21:13.945 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-26 16:21:13.947 [main] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-26 16:21:13.947 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-26 16:21:13.947 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-26 16:21:13.947 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-26 16:21:13.947 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-26 16:21:13.947 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-26 16:21:13.947 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-26 16:21:13.947 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-26 16:21:13.947 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-26 16:21:14.002 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - SessionFactory name : null
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - Statistics: disabled
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - Named query checking : enabled
[DEBUG] 2020-02-26 16:21:14.003 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-26 16:21:14.004 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-26 16:21:14.034 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-26 16:21:14.048 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-26 16:21:14.048 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/streamMedia/target/test-classes:/home/student/IdeaProjects/streamMedia/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-surefire-provider/1.0.0/junit-platform-surefire-provider-1.0.0.jar:/home/student/.m2/repository/org/apache/maven/surefire/surefire-api/2.19.1/surefire-api-2.19.1.jar:/home/student/.m2/repository/org/apache/maven/surefire/common-java5/2.19.1/common-java5-2.19.1.jar:/home/student/.m2/repository/org/projectlombok/lombok/1.18.10/lombok-1.18.10.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar:/home/student/.m2/repository/org/mindrot/jbcrypt/0.3m/jbcrypt-0.3m.jar:/home/student/.m2/repository/com/sun/mail/javax.mail/1.6.2/javax.mail-1.6.2.jar:/home/student/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.streammedia.perisistence.TrailerDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-40-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_streamMedia, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.6, user.dir=/home/student/IdeaProjects/streamMedia, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@429aeac1, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_streamMedia, java.class.version=55.0}
[DEBUG] 2020-02-26 16:21:14.060 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-02-26 16:21:14.060 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-26 16:21:14.061 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-26 16:21:14.061 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57435801] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@461c3709]
[DEBUG] 2020-02-26 16:21:14.099 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-26 16:21:14.099 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-26 16:21:14.109 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-26 16:21:14.109 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-26 16:21:14.254 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-26 16:21:14.254 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-26 16:21:14.254 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-26 16:21:14.254 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-26 16:21:14.267 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-26 16:21:14.267 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-26 16:21:14.267 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-26 16:21:14.267 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-26 16:21:14.277 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-26 16:21:14.277 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-26 16:21:14.277 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-26 16:21:14.277 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-26 16:21:14.289 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-26 16:21:14.289 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-26 16:21:14.289 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-26 16:21:14.289 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-26 16:21:14.305 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-26 16:21:14.305 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-26 16:21:14.306 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-26 16:21:14.306 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-26 16:21:14.326 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-26 16:21:14.326 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-26 16:21:14.327 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-26 16:21:14.327 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-26 16:21:14.340 [main] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-26 16:21:14.340 [main] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-26 16:21:14.340 [main] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-26 16:21:14.340 [main] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-26 16:21:14.340 [main] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-26 16:21:14.341 [main] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-26 16:21:14.341 [main] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-26 16:21:14.341 [main] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-26 16:21:14.341 [main] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-26 16:21:14.341 [main] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-26 16:21:14.341 [main] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-26 16:21:14.341 [main] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-26 16:21:14.341 [main] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-26 16:21:14.341 [main] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-26 16:21:14.341 [main] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-26 16:21:14.343 [main] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-26 16:21:14.343 [main] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-26 16:21:14.343 [main] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-26 16:21:14.343 [main] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-26 16:21:14.343 [main] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-26 16:21:14.343 [main] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-26 16:21:14.343 [main] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-26 16:21:14.343 [main] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-26 16:21:14.343 [main] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-26 16:21:14.343 [main] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-26 16:21:14.343 [main] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-26 16:21:14.343 [main] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-26 16:21:14.343 [main] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-26 16:21:14.343 [main] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-26 16:21:14.343 [main] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-26 16:21:14.344 [main] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-26 16:21:14.344 [main] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-26 16:21:14.344 [main] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-26 16:21:14.344 [main] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-26 16:21:14.344 [main] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-26 16:21:14.344 [main] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-26 16:21:14.344 [main] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-26 16:21:14.344 [main] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-26 16:21:14.344 [main] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-26 16:21:14.344 [main] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-26 16:21:14.346 [main] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-26 16:21:14.346 [main] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-26 16:21:14.346 [main] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-26 16:21:14.346 [main] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-26 16:21:14.346 [main] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-26 16:21:14.346 [main] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-26 16:21:14.346 [main] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-26 16:21:14.360 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c71c889]
[DEBUG] 2020-02-26 16:21:14.361 [main] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-26 16:21:14.361 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.361 [main] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-26 16:21:14.363 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bf4764d]
[DEBUG] 2020-02-26 16:21:14.364 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c1b89ac]
[DEBUG] 2020-02-26 16:21:14.364 [main] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-26 16:21:14.364 [main] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-26 16:21:14.364 [main] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-26 16:21:14.364 [main] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-26 16:21:14.364 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66756662]
[DEBUG] 2020-02-26 16:21:14.364 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d14e99e]
[DEBUG] 2020-02-26 16:21:14.364 [main] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-26 16:21:14.364 [main] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-26 16:21:14.364 [main] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-26 16:21:14.365 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-26 16:21:14.365 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.365 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-26 16:21:14.365 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38cfecf3]
[DEBUG] 2020-02-26 16:21:14.365 [main] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-26 16:21:14.365 [main] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-26 16:21:14.365 [main] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-26 16:21:14.365 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-26 16:21:14.365 [main] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-26 16:21:14.366 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69f080ad]
[DEBUG] 2020-02-26 16:21:14.366 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6568f998]
[DEBUG] 2020-02-26 16:21:14.366 [main] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-26 16:21:14.366 [main] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-26 16:21:14.366 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-26 16:21:14.366 [main] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-26 16:21:14.366 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-26 16:21:14.366 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-26 16:21:14.366 [main] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-26 16:21:14.366 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-26 16:21:14.366 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1537c744]
[DEBUG] 2020-02-26 16:21:14.366 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37314843]
[DEBUG] 2020-02-26 16:21:14.366 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-26 16:21:14.366 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-26 16:21:14.366 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-26 16:21:14.366 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-26 16:21:14.366 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-26 16:21:14.367 [main] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-26 16:21:14.367 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e9beef2]
[DEBUG] 2020-02-26 16:21:14.367 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f15a964]
[DEBUG] 2020-02-26 16:21:14.367 [main] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-26 16:21:14.367 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-26 16:21:14.367 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-26 16:21:14.367 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5fe46d52]
[DEBUG] 2020-02-26 16:21:14.368 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-26 16:21:14.369 [main] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-26 16:21:14.369 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.376 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.380 [main] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-26 16:21:14.381 [main] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-26 16:21:14.381 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49cc9b2a]
[DEBUG] 2020-02-26 16:21:14.381 [main] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-26 16:21:14.381 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.381 [main] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-26 16:21:14.381 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c5ca0b6]
[DEBUG] 2020-02-26 16:21:14.381 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37b01ce2]
[DEBUG] 2020-02-26 16:21:14.381 [main] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-26 16:21:14.381 [main] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-26 16:21:14.382 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a88c4f5]
[DEBUG] 2020-02-26 16:21:14.382 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1894fa9f]
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-26 16:21:14.382 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1144a02b]
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-26 16:21:14.382 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a572ea0]
[DEBUG] 2020-02-26 16:21:14.382 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45287377]
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-26 16:21:14.382 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7159d601]
[DEBUG] 2020-02-26 16:21:14.382 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70b33256]
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-26 16:21:14.382 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a316f6b]
[DEBUG] 2020-02-26 16:21:14.382 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63f9ddf9]
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-26 16:21:14.382 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@410fc508]
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-26 16:21:14.382 [main] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-26 16:21:14.382 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.383 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.383 [main] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-26 16:21:14.383 [main] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-26 16:21:14.391 [main] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-26 16:21:14.391 [main] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-26 16:21:14.391 [main] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-26 16:21:14.391 [main] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-26 16:21:14.391 [main] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-26 16:21:14.391 [main] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-26 16:21:14.391 [main] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-26 16:21:14.391 [main] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-26 16:21:14.391 [main] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-26 16:21:14.391 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f6b7426]
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-26 16:21:14.392 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d969330]
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-26 16:21:14.392 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c8f4bc7]
[DEBUG] 2020-02-26 16:21:14.392 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@714e861f]
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-26 16:21:14.392 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28989415]
[DEBUG] 2020-02-26 16:21:14.392 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eda012b]
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-26 16:21:14.392 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1132baa3]
[DEBUG] 2020-02-26 16:21:14.392 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fdf22f7]
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-26 16:21:14.392 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3a2546d6]
[DEBUG] 2020-02-26 16:21:14.392 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-26 16:21:14.392 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.393 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.393 [main] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-26 16:21:14.393 [main] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-26 16:21:14.393 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7661e474]
[DEBUG] 2020-02-26 16:21:14.393 [main] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-26 16:21:14.393 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.393 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-26 16:21:14.393 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-26 16:21:14.393 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.393 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-26 16:21:14.393 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@307c59ea]
[DEBUG] 2020-02-26 16:21:14.393 [main] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-26 16:21:14.393 [main] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-26 16:21:14.393 [main] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-26 16:21:14.393 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-26 16:21:14.393 [main] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-26 16:21:14.393 [main] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-26 16:21:14.393 [main] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-26 16:21:14.393 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2edb2f8b]
[DEBUG] 2020-02-26 16:21:14.394 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@733f1395]
[DEBUG] 2020-02-26 16:21:14.394 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-26 16:21:14.394 [main] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-26 16:21:14.394 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-26 16:21:14.394 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-26 16:21:14.394 [main] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-26 16:21:14.394 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-26 16:21:14.394 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21dea711]
[DEBUG] 2020-02-26 16:21:14.394 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7772d266]
[DEBUG] 2020-02-26 16:21:14.394 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-26 16:21:14.394 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-26 16:21:14.394 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-26 16:21:14.394 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-26 16:21:14.394 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-26 16:21:14.394 [main] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-26 16:21:14.394 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fb8dc01]
[DEBUG] 2020-02-26 16:21:14.394 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e38c472]
[DEBUG] 2020-02-26 16:21:14.394 [main] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-26 16:21:14.394 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-26 16:21:14.394 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-26 16:21:14.394 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2ee92e7d]
[DEBUG] 2020-02-26 16:21:14.394 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-26 16:21:14.394 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.394 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.394 [main] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-26 16:21:14.395 [main] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-26 16:21:14.395 [main] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-26 16:21:14.395 [main] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-26 16:21:14.395 [main] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-26 16:21:14.395 [main] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-26 16:21:14.395 [main] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-26 16:21:14.395 [main] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-26 16:21:14.395 [main] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-26 16:21:14.395 [main] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-26 16:21:14.395 [main] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-26 16:21:14.395 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cdbe5ec]
[DEBUG] 2020-02-26 16:21:14.395 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.395 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-26 16:21:14.395 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.395 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-26 16:21:14.395 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7345f97d]
[DEBUG] 2020-02-26 16:21:14.395 [main] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-26 16:21:14.395 [main] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-26 16:21:14.395 [main] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-26 16:21:14.395 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-26 16:21:14.395 [main] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-26 16:21:14.395 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66020d69]
[DEBUG] 2020-02-26 16:21:14.395 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3751acd7]
[DEBUG] 2020-02-26 16:21:14.395 [main] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-26 16:21:14.395 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b832551]
[DEBUG] 2020-02-26 16:21:14.395 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@150d6eaf]
[DEBUG] 2020-02-26 16:21:14.395 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-26 16:21:14.395 [main] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-26 16:21:14.395 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-26 16:21:14.395 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-26 16:21:14.395 [main] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-26 16:21:14.395 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-26 16:21:14.396 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-26 16:21:14.396 [main] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-26 16:21:14.396 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63124022]
[DEBUG] 2020-02-26 16:21:14.396 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@591f6f83]
[DEBUG] 2020-02-26 16:21:14.396 [main] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-26 16:21:14.396 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-26 16:21:14.396 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-26 16:21:14.396 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2b44605c]
[DEBUG] 2020-02-26 16:21:14.396 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-26 16:21:14.396 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.396 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.396 [main] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-26 16:21:14.396 [main] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-26 16:21:14.396 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24a04257]
[DEBUG] 2020-02-26 16:21:14.396 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.396 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-26 16:21:14.396 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.396 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-26 16:21:14.396 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eaf8427]
[DEBUG] 2020-02-26 16:21:14.396 [main] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-26 16:21:14.396 [main] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-26 16:21:14.396 [main] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-26 16:21:14.396 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-26 16:21:14.396 [main] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-26 16:21:14.396 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d6039df]
[DEBUG] 2020-02-26 16:21:14.396 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@611c3eae]
[DEBUG] 2020-02-26 16:21:14.396 [main] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-26 16:21:14.397 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13e00016]
[DEBUG] 2020-02-26 16:21:14.397 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b3cbe6e]
[DEBUG] 2020-02-26 16:21:14.397 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-26 16:21:14.397 [main] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-26 16:21:14.397 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-26 16:21:14.397 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-26 16:21:14.397 [main] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-26 16:21:14.397 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-26 16:21:14.397 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-26 16:21:14.397 [main] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-26 16:21:14.397 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@177ede17]
[DEBUG] 2020-02-26 16:21:14.397 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17176b18]
[DEBUG] 2020-02-26 16:21:14.397 [main] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-26 16:21:14.397 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-26 16:21:14.397 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-26 16:21:14.397 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4e4395c]
[DEBUG] 2020-02-26 16:21:14.397 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-26 16:21:14.397 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.397 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.397 [main] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-26 16:21:14.397 [main] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-26 16:21:14.397 [main] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-26 16:21:14.397 [main] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-26 16:21:14.398 [main] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-26 16:21:14.398 [main] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-26 16:21:14.398 [main] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-26 16:21:14.398 [main] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-26 16:21:14.398 [main] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-26 16:21:14.398 [main] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-26 16:21:14.398 [main] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-26 16:21:14.398 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b5ac347]
[DEBUG] 2020-02-26 16:21:14.398 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.398 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-26 16:21:14.398 [main] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-26 16:21:14.398 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72b2c5ed]
[DEBUG] 2020-02-26 16:21:14.398 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41f785e3]
[DEBUG] 2020-02-26 16:21:14.398 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-26 16:21:14.398 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.398 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.398 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.398 [main] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-26 16:21:14.398 [main] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-26 16:21:14.398 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c9a3661]
[DEBUG] 2020-02-26 16:21:14.398 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.398 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-26 16:21:14.398 [main] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-26 16:21:14.398 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1600a8a2]
[DEBUG] 2020-02-26 16:21:14.398 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b25ef1c]
[DEBUG] 2020-02-26 16:21:14.398 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-26 16:21:14.398 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.398 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.398 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.399 [main] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-26 16:21:14.399 [main] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-26 16:21:14.399 [main] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-26 16:21:14.399 [main] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-26 16:21:14.399 [main] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-26 16:21:14.399 [main] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-26 16:21:14.399 [main] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-26 16:21:14.399 [main] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-26 16:21:14.399 [main] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-26 16:21:14.399 [main] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-26 16:21:14.399 [main] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-26 16:21:14.399 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56b1e527]
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-26 16:21:14.399 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b95bdb0]
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-26 16:21:14.399 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@664db2ca]
[DEBUG] 2020-02-26 16:21:14.399 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1491cd6c]
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-26 16:21:14.399 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@423f8a73]
[DEBUG] 2020-02-26 16:21:14.399 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aedf08d]
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-26 16:21:14.399 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-26 16:21:14.399 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@113dcaf8]
[DEBUG] 2020-02-26 16:21:14.400 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b5d9f1e]
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-26 16:21:14.400 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3f866f50]
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-26 16:21:14.400 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.400 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.400 [main] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-26 16:21:14.400 [main] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-26 16:21:14.400 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1201769d]
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.400 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-26 16:21:14.400 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4607d78b]
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-26 16:21:14.401 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22048bd6]
[DEBUG] 2020-02-26 16:21:14.401 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@566c1e71]
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-26 16:21:14.401 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e2f20b8]
[DEBUG] 2020-02-26 16:21:14.401 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@504497fa]
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-26 16:21:14.401 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5618fc1f]
[DEBUG] 2020-02-26 16:21:14.401 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60b1ff3b]
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-26 16:21:14.401 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@52aa7742]
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-26 16:21:14.401 [main] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-26 16:21:14.401 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.401 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.402 [main] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-26 16:21:14.402 [main] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-26 16:21:14.402 [main] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-26 16:21:14.402 [main] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-26 16:21:14.402 [main] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-26 16:21:14.402 [main] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-26 16:21:14.402 [main] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-26 16:21:14.402 [main] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-26 16:21:14.402 [main] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-26 16:21:14.402 [main] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-26 16:21:14.402 [main] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-26 16:21:14.402 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b5c134e]
[DEBUG] 2020-02-26 16:21:14.402 [main] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-26 16:21:14.402 [main] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-26 16:21:14.402 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.402 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-26 16:21:14.402 [main] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-26 16:21:14.402 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35c8be21]
[DEBUG] 2020-02-26 16:21:14.402 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60807fd9]
[DEBUG] 2020-02-26 16:21:14.402 [main] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-26 16:21:14.402 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6bcdd6e4]
[DEBUG] 2020-02-26 16:21:14.402 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1192c925]
[DEBUG] 2020-02-26 16:21:14.402 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-26 16:21:14.402 [main] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-26 16:21:14.402 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-26 16:21:14.402 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-26 16:21:14.402 [main] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-26 16:21:14.403 [main] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-26 16:21:14.403 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@615b5480]
[DEBUG] 2020-02-26 16:21:14.403 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24691c5]
[DEBUG] 2020-02-26 16:21:14.403 [main] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-26 16:21:14.403 [main] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-26 16:21:14.403 [main] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-26 16:21:14.403 [main] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-26 16:21:14.403 [main] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-26 16:21:14.403 [main] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-26 16:21:14.403 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b218c74]
[DEBUG] 2020-02-26 16:21:14.403 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ddffa6c]
[DEBUG] 2020-02-26 16:21:14.403 [main] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-26 16:21:14.403 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-26 16:21:14.403 [main] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-26 16:21:14.403 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@42c54bad]
[DEBUG] 2020-02-26 16:21:14.403 [main] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-26 16:21:14.403 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.403 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.403 [main] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-26 16:21:14.403 [main] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-26 16:21:14.403 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cc1bf20]
[DEBUG] 2020-02-26 16:21:14.403 [main] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-26 16:21:14.403 [main] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-26 16:21:14.403 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.403 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-26 16:21:14.403 [main] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-26 16:21:14.403 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46cf8c07]
[DEBUG] 2020-02-26 16:21:14.404 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b56ec6c]
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-26 16:21:14.404 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5abf6a99]
[DEBUG] 2020-02-26 16:21:14.404 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dc59ec2]
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-26 16:21:14.404 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@375084c9]
[DEBUG] 2020-02-26 16:21:14.404 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bd93bc3]
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-26 16:21:14.404 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38c460e8]
[DEBUG] 2020-02-26 16:21:14.404 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a814310]
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-26 16:21:14.404 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4bbf38b8]
[DEBUG] 2020-02-26 16:21:14.404 [main] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-26 16:21:14.404 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.404 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.404 [main] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-26 16:21:14.404 [main] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-26 16:21:14.405 [main] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-26 16:21:14.405 [main] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-26 16:21:14.406 [main] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-26 16:21:14.406 [main] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-26 16:21:14.406 [main] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-26 16:21:14.406 [main] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-26 16:21:14.406 [main] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-26 16:21:14.406 [main] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-26 16:21:14.406 [main] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-26 16:21:14.406 [main] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-26 16:21:14.407 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@197ce367]
[DEBUG] 2020-02-26 16:21:14.407 [main] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-26 16:21:14.407 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.407 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-26 16:21:14.407 [main] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-26 16:21:14.407 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65036e8d]
[DEBUG] 2020-02-26 16:21:14.407 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48ccbb32]
[DEBUG] 2020-02-26 16:21:14.407 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-26 16:21:14.407 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-26 16:21:14.407 [main] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-26 16:21:14.407 [main] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-26 16:21:14.407 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.407 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.407 [main] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-26 16:21:14.407 [main] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-26 16:21:14.407 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36551e97]
[DEBUG] 2020-02-26 16:21:14.407 [main] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-26 16:21:14.407 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.407 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-26 16:21:14.407 [main] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-26 16:21:14.407 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16d41725]
[DEBUG] 2020-02-26 16:21:14.407 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b6c2be6]
[DEBUG] 2020-02-26 16:21:14.407 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-26 16:21:14.407 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-26 16:21:14.407 [main] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-26 16:21:14.407 [main] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-26 16:21:14.407 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.407 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.407 [main] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-26 16:21:14.407 [main] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-26 16:21:14.408 [main] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-26 16:21:14.408 [main] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-26 16:21:14.410 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19eea77c]
[DEBUG] 2020-02-26 16:21:14.411 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6682e6a5]
[DEBUG] 2020-02-26 16:21:14.411 [main] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-26 16:21:14.411 [main] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-26 16:21:14.411 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.411 [main] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-26 16:21:14.411 [main] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-26 16:21:14.411 [main] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-26 16:21:14.411 [main] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-26 16:21:14.411 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-26 16:21:14.411 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.411 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-26 16:21:14.411 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-26 16:21:14.411 [main] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-26 16:21:14.411 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.412 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.412 [main] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-26 16:21:14.412 [main] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-26 16:21:14.412 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d47dfed]
[DEBUG] 2020-02-26 16:21:14.413 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a38e4dc]
[DEBUG] 2020-02-26 16:21:14.413 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.413 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-26 16:21:14.413 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.413 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-26 16:21:14.413 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-26 16:21:14.413 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.413 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.413 [main] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-26 16:21:14.413 [main] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-26 16:21:14.413 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ec9f8d]
[DEBUG] 2020-02-26 16:21:14.413 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e0f9528]
[DEBUG] 2020-02-26 16:21:14.413 [main] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-26 16:21:14.413 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.413 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-26 16:21:14.413 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-26 16:21:14.413 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.413 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-26 16:21:14.413 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-26 16:21:14.413 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.413 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.413 [main] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-26 16:21:14.413 [main] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-26 16:21:14.413 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@448cdb47]
[DEBUG] 2020-02-26 16:21:14.413 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4628a02b]
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-26 16:21:14.414 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7336fd8f]
[DEBUG] 2020-02-26 16:21:14.414 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@701c223a]
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-26 16:21:14.414 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@550c973e]
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-26 16:21:14.414 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5203c80f]
[DEBUG] 2020-02-26 16:21:14.414 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@439f2d87]
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-26 16:21:14.414 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@721bf7ad]
[DEBUG] 2020-02-26 16:21:14.414 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@852ef8d]
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-26 16:21:14.414 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44dd0d38]
[DEBUG] 2020-02-26 16:21:14.414 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e94e331]
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-26 16:21:14.414 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@539fc5d1]
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-26 16:21:14.414 [main] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-26 16:21:14.414 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.415 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.415 [main] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-26 16:21:14.415 [main] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-26 16:21:14.415 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2bdab835]
[DEBUG] 2020-02-26 16:21:14.415 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b8aebd0]
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-26 16:21:14.415 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f64d9cb]
[DEBUG] 2020-02-26 16:21:14.415 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@639c7f9c]
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-26 16:21:14.415 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@270d5060]
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-26 16:21:14.415 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71567f33]
[DEBUG] 2020-02-26 16:21:14.415 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71369e1a]
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-26 16:21:14.415 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cf55e0c]
[DEBUG] 2020-02-26 16:21:14.415 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ee96866]
[DEBUG] 2020-02-26 16:21:14.415 [main] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-26 16:21:14.415 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c04216f]
[DEBUG] 2020-02-26 16:21:14.416 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@987a0bb]
[DEBUG] 2020-02-26 16:21:14.416 [main] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-26 16:21:14.416 [main] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-26 16:21:14.416 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-26 16:21:14.416 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1f949ab9]
[DEBUG] 2020-02-26 16:21:14.416 [main] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-26 16:21:14.416 [main] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-26 16:21:14.416 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.416 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.416 [main] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-26 16:21:14.416 [main] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-26 16:21:14.416 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3719360c]
[DEBUG] 2020-02-26 16:21:14.416 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3afca2c]
[DEBUG] 2020-02-26 16:21:14.416 [main] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-26 16:21:14.416 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.416 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-26 16:21:14.416 [main] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-26 16:21:14.416 [main] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-26 16:21:14.416 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-26 16:21:14.416 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-26 16:21:14.416 [main] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-26 16:21:14.416 [main] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-26 16:21:14.416 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.416 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.416 [main] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-26 16:21:14.417 [main] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-26 16:21:14.417 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47a3d56a]
[DEBUG] 2020-02-26 16:21:14.417 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a209918]
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.417 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.417 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.417 [main] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-26 16:21:14.417 [main] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-26 16:21:14.417 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d7b001b]
[DEBUG] 2020-02-26 16:21:14.417 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@532dacf5]
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-26 16:21:14.417 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@587f4f63]
[DEBUG] 2020-02-26 16:21:14.417 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@660b1a9d]
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-26 16:21:14.417 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fb0261e]
[DEBUG] 2020-02-26 16:21:14.417 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d6b532f]
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-26 16:21:14.417 [main] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-26 16:21:14.417 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-26 16:21:14.417 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-26 16:21:14.418 [main] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-26 16:21:14.418 [main] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-26 16:21:14.434 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-26 16:21:14.434 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-26 16:21:14.435 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-26 16:21:14.437 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-26 16:21:14.437 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-26 16:21:14.438 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-26 16:21:14.438 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-26 16:21:14.439 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@74500e4f
[DEBUG] 2020-02-26 16:21:14.440 [main] SessionFactoryRegistry - Registering SessionFactory: 2847f571-7433-4676-b451-d89332daea59 (<unnamed>)
[DEBUG] 2020-02-26 16:21:14.440 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-26 16:21:14.482 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-26 16:21:14.491 [main] SQL - select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-26 16:21:14.940 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-26 16:21:14.942 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-26 16:21:14.976 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.streammedia.entity.User.roles#User(userId=2, username=fhensen, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-26 16:21:14.982 [main] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Trailer#3]
[DEBUG] 2020-02-26 16:21:14.982 [main] TwoPhaseLoad - Processing attribute `author` : value = Chantal
[DEBUG] 2020-02-26 16:21:14.982 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.982 [main] TwoPhaseLoad - Processing attribute `cover` : value = null
[DEBUG] 2020-02-26 16:21:14.982 [main] TwoPhaseLoad - Attribute (`cover`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.982 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:14.982 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Processing attribute `duration` : value = 00:01:40
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Attribute (`duration`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Processing attribute `link` : value = null
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Attribute (`link`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Processing attribute `publicationDate` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Attribute (`publicationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Processing attribute `summary` : value =  In Java terms, we would like the state of (some of) our objects to live beyond the scope of the JVM so that the same state is available later.
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Attribute (`summary`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Processing attribute `title` : value = Peace
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Processing attribute `video` : value = null
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Attribute (`video`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Trailer#3]
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-26 16:21:14.983 [main] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.984 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 1988-05-08
[DEBUG] 2020-02-26 16:21:14.984 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.984 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:14.984 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.984 [main] TwoPhaseLoad - Processing attribute `email` : value = fhensen@streammedia.com
[DEBUG] 2020-02-26 16:21:14.984 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.984 [main] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-26 16:21:14.984 [main] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Fred
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Hensen
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Processing attribute `password` : value = supersecret2
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Processing attribute `username` : value = fhensen
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@ff03361
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:14.985 [main] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-26 16:21:14.985 [main] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-26 16:21:14.986 [main] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-26 16:21:14.986 [main] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-26 16:21:14.986 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-26 16:21:14.986 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.Trailer#3
[DEBUG] 2020-02-26 16:21:14.987 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-26 16:21:15.346 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Trailer as generatedAlias0
[DEBUG] 2020-02-26 16:21:15.355 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@34549979
[DEBUG] 2020-02-26 16:21:15.371 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Trailer as generatedAlias0
[DEBUG] 2020-02-26 16:21:15.373 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-26 16:21:15.378 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Trailer'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-26 16:21:15.389 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-26 16:21:15.396 [main] FromElement - FromClause{level=1} : com.streammedia.entity.Trailer (generatedAlias0) -> trailer0_
[DEBUG] 2020-02-26 16:21:15.397 [main] FromReferenceNode - Resolved : generatedAlias0 -> trailer0_.trailer_id
[DEBUG] 2020-02-26 16:21:15.398 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-26 16:21:15.398 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} trailer0_.trailer_id ) ( FromClause{level=1} Trailer trailer0_ ) )
[DEBUG] 2020-02-26 16:21:15.402 [main] JoinProcessor - Using FROM fragment [Trailer trailer0_]
[DEBUG] 2020-02-26 16:21:15.402 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-26 16:21:15.402 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Trailer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'trailer0_.trailer_id as trailer_1_8_' {alias=generatedAlias0, className=com.streammedia.entity.Trailer, tableAlias=trailer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'trailer0_.author as author2_8_, trailer0_.cover as cover3_8_, trailer0_.created_at as created_4_8_, trailer0_.duration as duration5_8_, trailer0_.links as links6_8_, trailer0_.pub_date as pub_date7_8_, trailer0_.summary as summary8_8_, trailer0_.title as title9_8_, trailer0_.updated_at as updated10_8_, trailer0_.user as user12_8_, trailer0_.video as video11_8_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[trailer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Trailer trailer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Trailer,tableAlias=trailer0_,origin=null,columns={,className=com.streammedia.entity.Trailer}}

[DEBUG] 2020-02-26 16:21:15.402 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-26 16:21:15.406 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Trailer as generatedAlias0
[DEBUG] 2020-02-26 16:21:15.406 [main] QueryTranslatorImpl - SQL: select trailer0_.trailer_id as trailer_1_8_, trailer0_.author as author2_8_, trailer0_.cover as cover3_8_, trailer0_.created_at as created_4_8_, trailer0_.duration as duration5_8_, trailer0_.links as links6_8_, trailer0_.pub_date as pub_date7_8_, trailer0_.summary as summary8_8_, trailer0_.title as title9_8_, trailer0_.updated_at as updated10_8_, trailer0_.user as user12_8_, trailer0_.video as video11_8_ from Trailer trailer0_
[DEBUG] 2020-02-26 16:21:15.406 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-26 16:21:15.412 [main] SQL - select trailer0_.trailer_id as trailer_1_8_, trailer0_.author as author2_8_, trailer0_.cover as cover3_8_, trailer0_.created_at as created_4_8_, trailer0_.duration as duration5_8_, trailer0_.links as links6_8_, trailer0_.pub_date as pub_date7_8_, trailer0_.summary as summary8_8_, trailer0_.title as title9_8_, trailer0_.updated_at as updated10_8_, trailer0_.user as user12_8_, trailer0_.video as video11_8_ from Trailer trailer0_
[DEBUG] 2020-02-26 16:21:15.415 [main] Loader - Result set row: 0
[DEBUG] 2020-02-26 16:21:15.415 [main] Loader - Result row: EntityKey[com.streammedia.entity.Trailer#1]
[DEBUG] 2020-02-26 16:21:15.416 [main] Loader - Result set row: 1
[DEBUG] 2020-02-26 16:21:15.416 [main] Loader - Result row: EntityKey[com.streammedia.entity.Trailer#2]
[DEBUG] 2020-02-26 16:21:15.417 [main] Loader - Result set row: 2
[DEBUG] 2020-02-26 16:21:15.417 [main] Loader - Result row: EntityKey[com.streammedia.entity.Trailer#3]
[DEBUG] 2020-02-26 16:21:15.417 [main] Loader - Result set row: 3
[DEBUG] 2020-02-26 16:21:15.417 [main] Loader - Result row: EntityKey[com.streammedia.entity.Trailer#4]
[DEBUG] 2020-02-26 16:21:15.417 [main] Loader - Result set row: 4
[DEBUG] 2020-02-26 16:21:15.417 [main] Loader - Result row: EntityKey[com.streammedia.entity.Trailer#5]
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Trailer#1]
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Processing attribute `author` : value = James
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Processing attribute `cover` : value = null
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Attribute (`cover`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Processing attribute `duration` : value = 00:01:40
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Attribute (`duration`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Processing attribute `link` : value = null
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Attribute (`link`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Processing attribute `publicationDate` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Attribute (`publicationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Processing attribute `summary` : value = Hibernate ORM is concerned with helping your application to achieve persistence.
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Attribute (`summary`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Processing attribute `title` : value = Home Sweet Home
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-02-26 16:21:15.418 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.418 [main] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-26 16:21:15.420 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-26 16:21:15.420 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-26 16:21:15.420 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.streammedia.entity.User.roles#User(userId=1, username=jcoyne, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 1964-04-01
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `email` : value = jcoyne@streammedia.com
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Joe
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Coyne
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `password` : value = supersecret1
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `username` : value = jcoyne
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@7ea07516
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-02-26 16:21:15.421 [main] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-26 16:21:15.421 [main] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-02-26 16:21:15.421 [main] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-26 16:21:15.421 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-26 16:21:15.421 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#1
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `video` : value = null
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`video`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Trailer#1]
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Trailer#2]
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `author` : value = Henry
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Processing attribute `cover` : value = null
[DEBUG] 2020-02-26 16:21:15.421 [main] TwoPhaseLoad - Attribute (`cover`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.422 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.422 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.422 [main] TwoPhaseLoad - Processing attribute `duration` : value = 00:01:40
[DEBUG] 2020-02-26 16:21:15.422 [main] TwoPhaseLoad - Attribute (`duration`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.422 [main] TwoPhaseLoad - Processing attribute `link` : value = null
[DEBUG] 2020-02-26 16:21:15.422 [main] TwoPhaseLoad - Attribute (`link`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.422 [main] TwoPhaseLoad - Processing attribute `publicationDate` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.422 [main] TwoPhaseLoad - Attribute (`publicationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.422 [main] TwoPhaseLoad - Processing attribute `summary` : value = So what is persistence? Persistence simply means that we would like our application’s data to outlive the applications process.
[DEBUG] 2020-02-26 16:21:15.422 [main] TwoPhaseLoad - Attribute (`summary`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.422 [main] TwoPhaseLoad - Processing attribute `title` : value = Hope
[DEBUG] 2020-02-26 16:21:15.422 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.422 [main] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.422 [main] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.422 [main] TwoPhaseLoad - Processing attribute `user` : value = 6
[DEBUG] 2020-02-26 16:21:15.422 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.422 [main] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-26 16:21:15.424 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-26 16:21:15.424 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-26 16:21:15.425 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.streammedia.entity.User.roles#User(userId=6, username=dtillman, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#6]
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 1979-08-30
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Processing attribute `email` : value = dtillman@streammedia.com
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Dawn
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Tillman
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Processing attribute `password` : value = supersecret6
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-26 16:21:15.425 [main] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Processing attribute `username` : value = dtillman
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@1716c037
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#6]
[DEBUG] 2020-02-26 16:21:15.426 [main] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-26 16:21:15.426 [main] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#6]
[DEBUG] 2020-02-26 16:21:15.426 [main] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-26 16:21:15.426 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-26 16:21:15.426 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#6
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Processing attribute `video` : value = null
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Attribute (`video`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Trailer#2]
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Trailer#3]
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Processing attribute `author` : value = Chantal
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Processing attribute `cover` : value = null
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Attribute (`cover`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.426 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.427 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.427 [main] TwoPhaseLoad - Processing attribute `duration` : value = 00:01:40
[DEBUG] 2020-02-26 16:21:15.427 [main] TwoPhaseLoad - Attribute (`duration`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.427 [main] TwoPhaseLoad - Processing attribute `link` : value = null
[DEBUG] 2020-02-26 16:21:15.427 [main] TwoPhaseLoad - Attribute (`link`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.427 [main] TwoPhaseLoad - Processing attribute `publicationDate` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.427 [main] TwoPhaseLoad - Attribute (`publicationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.427 [main] TwoPhaseLoad - Processing attribute `summary` : value =  In Java terms, we would like the state of (some of) our objects to live beyond the scope of the JVM so that the same state is available later.
[DEBUG] 2020-02-26 16:21:15.427 [main] TwoPhaseLoad - Attribute (`summary`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.427 [main] TwoPhaseLoad - Processing attribute `title` : value = Peace
[DEBUG] 2020-02-26 16:21:15.427 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.427 [main] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.427 [main] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.427 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-26 16:21:15.427 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.427 [main] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-26 16:21:15.428 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-26 16:21:15.428 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-26 16:21:15.429 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.streammedia.entity.User.roles#User(userId=2, username=fhensen, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 1988-05-08
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Processing attribute `email` : value = fhensen@streammedia.com
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Fred
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Hensen
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Processing attribute `password` : value = supersecret2
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Processing attribute `username` : value = fhensen
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@13e1e816
[DEBUG] 2020-02-26 16:21:15.429 [main] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-26 16:21:15.430 [main] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-26 16:21:15.430 [main] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-26 16:21:15.430 [main] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-26 16:21:15.430 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-26 16:21:15.430 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `video` : value = null
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Attribute (`video`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Trailer#3]
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Trailer#4]
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `author` : value = Nadine
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `cover` : value = null
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Attribute (`cover`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `duration` : value = 00:01:40
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Attribute (`duration`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `link` : value = null
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Attribute (`link`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `publicationDate` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Attribute (`publicationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `summary` : value = So what is persistence?
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Attribute (`summary`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `title` : value = The happiness
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `video` : value = null
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Attribute (`video`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Trailer#4]
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Trailer#5]
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `author` : value = Ella
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `cover` : value = null
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Attribute (`cover`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `duration` : value = 00:01:40
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Attribute (`duration`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.430 [main] TwoPhaseLoad - Processing attribute `link` : value = null
[DEBUG] 2020-02-26 16:21:15.431 [main] TwoPhaseLoad - Attribute (`link`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.431 [main] TwoPhaseLoad - Processing attribute `publicationDate` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.431 [main] TwoPhaseLoad - Attribute (`publicationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.431 [main] TwoPhaseLoad - Processing attribute `summary` : value = Hibernate ORM is concerned with helping your application to achieve persistence.
[DEBUG] 2020-02-26 16:21:15.431 [main] TwoPhaseLoad - Attribute (`summary`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.431 [main] TwoPhaseLoad - Processing attribute `title` : value = Great Dane
[DEBUG] 2020-02-26 16:21:15.431 [main] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.431 [main] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-26
[DEBUG] 2020-02-26 16:21:15.431 [main] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.431 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-02-26 16:21:15.431 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.431 [main] TwoPhaseLoad - Processing attribute `video` : value = null
[DEBUG] 2020-02-26 16:21:15.431 [main] TwoPhaseLoad - Attribute (`video`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-26 16:21:15.431 [main] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Trailer#5]
[DEBUG] 2020-02-26 16:21:15.432 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
