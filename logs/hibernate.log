[DEBUG] 2020-02-28 13:09:17.524 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 13:09:17.529 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 13:09:17.538 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 13:09:17.681 [http-nio-8080-exec-1] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 13:09:17.684 [http-nio-8080-exec-1] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 13:09:17.854 [http-nio-8080-exec-1] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 13:09:17.855 [http-nio-8080-exec-1] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 13:09:17.886 [http-nio-8080-exec-1] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 13:09:18.527 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 13:09:18.565 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 13:09:18.570 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 13:09:18.597 [http-nio-8080-exec-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 13:09:18.673 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2a8bbd6
[DEBUG] 2020-02-28 13:09:18.674 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2a8bbd6
[DEBUG] 2020-02-28 13:09:18.675 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2a8bbd6
[DEBUG] 2020-02-28 13:09:18.676 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@697853dd
[DEBUG] 2020-02-28 13:09:18.677 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@60c8d45f
[DEBUG] 2020-02-28 13:09:18.678 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6362e317
[DEBUG] 2020-02-28 13:09:18.679 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@45f2270a
[DEBUG] 2020-02-28 13:09:18.679 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@45f2270a
[DEBUG] 2020-02-28 13:09:18.680 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@45f2270a
[DEBUG] 2020-02-28 13:09:18.682 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1a3be470
[DEBUG] 2020-02-28 13:09:18.683 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1a3be470
[DEBUG] 2020-02-28 13:09:18.683 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1a3be470
[DEBUG] 2020-02-28 13:09:18.685 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@518ca78c
[DEBUG] 2020-02-28 13:09:18.688 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@518ca78c
[DEBUG] 2020-02-28 13:09:18.689 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@518ca78c
[DEBUG] 2020-02-28 13:09:18.690 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7b4f203e
[DEBUG] 2020-02-28 13:09:18.690 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7b4f203e
[DEBUG] 2020-02-28 13:09:18.691 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7b4f203e
[DEBUG] 2020-02-28 13:09:18.692 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@707dbea7
[DEBUG] 2020-02-28 13:09:18.692 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@707dbea7
[DEBUG] 2020-02-28 13:09:18.692 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@707dbea7
[DEBUG] 2020-02-28 13:09:18.693 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5471f680
[DEBUG] 2020-02-28 13:09:18.693 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5471f680
[DEBUG] 2020-02-28 13:09:18.693 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5471f680
[DEBUG] 2020-02-28 13:09:18.694 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5c8afb46
[DEBUG] 2020-02-28 13:09:18.695 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5c8afb46
[DEBUG] 2020-02-28 13:09:18.695 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5c8afb46
[DEBUG] 2020-02-28 13:09:18.696 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@b7fd0a5
[DEBUG] 2020-02-28 13:09:18.696 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@b7fd0a5
[DEBUG] 2020-02-28 13:09:18.696 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2d7a0c72
[DEBUG] 2020-02-28 13:09:18.696 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2d7a0c72
[DEBUG] 2020-02-28 13:09:18.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4c48cbf6
[DEBUG] 2020-02-28 13:09:18.698 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4c48cbf6
[DEBUG] 2020-02-28 13:09:18.699 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@36f639ea
[DEBUG] 2020-02-28 13:09:18.700 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6daf9c95
[DEBUG] 2020-02-28 13:09:18.702 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@264604dd
[DEBUG] 2020-02-28 13:09:18.702 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@264604dd
[DEBUG] 2020-02-28 13:09:18.704 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2bb0e0e7
[DEBUG] 2020-02-28 13:09:18.705 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2bb0e0e7
[DEBUG] 2020-02-28 13:09:18.712 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7b45a06c
[DEBUG] 2020-02-28 13:09:18.712 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7b45a06c
[DEBUG] 2020-02-28 13:09:18.713 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@29a72d65
[DEBUG] 2020-02-28 13:09:18.713 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@29a72d65
[DEBUG] 2020-02-28 13:09:18.714 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4d8d231f
[DEBUG] 2020-02-28 13:09:18.715 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4d8d231f
[DEBUG] 2020-02-28 13:09:18.716 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@61e199f1
[DEBUG] 2020-02-28 13:09:18.716 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@61e199f1
[DEBUG] 2020-02-28 13:09:18.717 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@24c8f974
[DEBUG] 2020-02-28 13:09:18.717 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@24c8f974
[DEBUG] 2020-02-28 13:09:18.720 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@498e269d
[DEBUG] 2020-02-28 13:09:18.720 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@498e269d
[DEBUG] 2020-02-28 13:09:18.721 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47d10f97
[DEBUG] 2020-02-28 13:09:18.721 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47d10f97
[DEBUG] 2020-02-28 13:09:18.723 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38ce10a
[DEBUG] 2020-02-28 13:09:18.723 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38ce10a
[DEBUG] 2020-02-28 13:09:18.725 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@47d67e2
[DEBUG] 2020-02-28 13:09:18.725 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@47d67e2
[DEBUG] 2020-02-28 13:09:18.727 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@439d069
[DEBUG] 2020-02-28 13:09:18.727 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@439d069
[DEBUG] 2020-02-28 13:09:18.727 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@439d069
[DEBUG] 2020-02-28 13:09:18.729 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3f4d215
[DEBUG] 2020-02-28 13:09:18.730 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6cb37b2f
[DEBUG] 2020-02-28 13:09:18.731 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6cb37b2f
[DEBUG] 2020-02-28 13:09:18.731 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6cb37b2f
[DEBUG] 2020-02-28 13:09:18.732 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b3b0d82
[DEBUG] 2020-02-28 13:09:18.732 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7b3466e7
[DEBUG] 2020-02-28 13:09:18.732 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b3466e7
[DEBUG] 2020-02-28 13:09:18.733 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@49105201
[DEBUG] 2020-02-28 13:09:18.734 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@49105201
[DEBUG] 2020-02-28 13:09:18.734 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a464291
[DEBUG] 2020-02-28 13:09:18.734 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a464291
[DEBUG] 2020-02-28 13:09:18.735 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@561955ce
[DEBUG] 2020-02-28 13:09:18.735 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@561955ce
[DEBUG] 2020-02-28 13:09:18.736 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3255fd25
[DEBUG] 2020-02-28 13:09:18.736 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3255fd25
[DEBUG] 2020-02-28 13:09:18.736 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@502167c4
[DEBUG] 2020-02-28 13:09:18.737 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@68b4c4c0
[DEBUG] 2020-02-28 13:09:18.738 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@68b4c4c0
[DEBUG] 2020-02-28 13:09:18.738 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@68b4c4c0
[DEBUG] 2020-02-28 13:09:18.739 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3553ec37
[DEBUG] 2020-02-28 13:09:18.739 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3553ec37
[DEBUG] 2020-02-28 13:09:18.739 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3553ec37
[DEBUG] 2020-02-28 13:09:18.740 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@38a2bff8
[DEBUG] 2020-02-28 13:09:18.741 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@384dc583
[DEBUG] 2020-02-28 13:09:18.742 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4f2d9361
[DEBUG] 2020-02-28 13:09:18.742 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4f2d9361
[DEBUG] 2020-02-28 13:09:18.742 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4f2d9361
[DEBUG] 2020-02-28 13:09:18.744 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5806dec4
[DEBUG] 2020-02-28 13:09:18.744 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5806dec4
[DEBUG] 2020-02-28 13:09:18.744 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5806dec4
[DEBUG] 2020-02-28 13:09:18.745 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@69a6186c
[DEBUG] 2020-02-28 13:09:18.745 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1d12b4c7
[DEBUG] 2020-02-28 13:09:18.746 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@56efd918
[DEBUG] 2020-02-28 13:09:18.746 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56efd918
[DEBUG] 2020-02-28 13:09:18.749 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6e53ecc3
[DEBUG] 2020-02-28 13:09:18.751 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5e23963f
[DEBUG] 2020-02-28 13:09:18.752 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5e23963f
[DEBUG] 2020-02-28 13:09:18.754 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5c7c4f13
[DEBUG] 2020-02-28 13:09:18.754 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c7c4f13
[DEBUG] 2020-02-28 13:09:18.755 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@fe50018
[DEBUG] 2020-02-28 13:09:18.755 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5e127734
[DEBUG] 2020-02-28 13:09:18.760 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@e857f23
[DEBUG] 2020-02-28 13:09:18.763 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7781d55e
[DEBUG] 2020-02-28 13:09:18.763 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7781d55e
[DEBUG] 2020-02-28 13:09:18.763 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@16fe8244
[DEBUG] 2020-02-28 13:09:18.764 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@40af228a
[DEBUG] 2020-02-28 13:09:18.764 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c9c46f
[DEBUG] 2020-02-28 13:09:18.764 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ae0a7dd
[DEBUG] 2020-02-28 13:09:18.764 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@686ef867
[DEBUG] 2020-02-28 13:09:18.768 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@516c2c92
[DEBUG] 2020-02-28 13:09:18.769 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e49706c
[DEBUG] 2020-02-28 13:09:18.769 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1118f237
[DEBUG] 2020-02-28 13:09:18.815 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 13:09:18.816 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 13:09:18.818 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:09:18.818 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:09:18.819 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 13:09:18.820 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 13:09:18.820 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 13:09:18.821 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:09:18.821 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 13:09:18.822 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 13:09:18.822 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 13:09:18.822 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 13:09:18.823 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:09:18.823 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 13:09:18.831 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 13:09:18.832 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 13:09:18.833 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 13:09:19.044 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 13:09:20.228 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:09:20.228 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:09:20.228 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 13:09:20.285 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 13:09:20.309 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 13:09:20.356 [http-nio-8080-exec-1] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 13:09:20.416 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 13:09:20.422 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62d4ac8c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@351545b7]
[DEBUG] 2020-02-28 13:09:20.507 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:09:20.538 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:09:20.547 [http-nio-8080-exec-1] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 13:09:20.552 [http-nio-8080-exec-1] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 13:09:20.603 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.611 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 13:09:20.613 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 13:09:20.616 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 13:09:20.617 [http-nio-8080-exec-1] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 13:09:20.621 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:09:20.622 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.623 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:09:20.623 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 13:09:20.623 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:09:20.623 [http-nio-8080-exec-1] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:09:20.623 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.624 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 13:09:20.625 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 13:09:20.625 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 13:09:20.627 [http-nio-8080-exec-1] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 13:09:20.627 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:09:20.628 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:09:20.628 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 13:09:20.628 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:09:20.628 [http-nio-8080-exec-1] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:09:20.628 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.634 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:09:20.635 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 13:09:20.635 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:09:20.635 [http-nio-8080-exec-1] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:09:20.639 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:09:20.641 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.644 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.658 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.659 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.662 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:09:20.664 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:09:20.664 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:09:20.665 [http-nio-8080-exec-1] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:09:20.669 [http-nio-8080-exec-1] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 13:09:20.669 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:09:20.670 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.670 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.670 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.670 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.670 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:09:20.670 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:09:20.670 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:09:20.670 [http-nio-8080-exec-1] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:09:20.670 [http-nio-8080-exec-1] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:09:20.670 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.671 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:09:20.671 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 13:09:20.671 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:09:20.671 [http-nio-8080-exec-1] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:09:20.671 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.671 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 13:09:20.671 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 13:09:20.671 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 13:09:20.671 [http-nio-8080-exec-1] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 13:09:20.671 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.673 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:09:20.675 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 13:09:20.675 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:09:20.675 [http-nio-8080-exec-1] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:09:20.675 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.676 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 13:09:20.676 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 13:09:20.676 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 13:09:20.676 [http-nio-8080-exec-1] PropertyBinder - Building property password
[DEBUG] 2020-02-28 13:09:20.676 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.676 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 13:09:20.676 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 13:09:20.676 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 13:09:20.676 [http-nio-8080-exec-1] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 13:09:20.676 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:09:20.676 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.677 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.677 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.677 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.677 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:09:20.677 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:09:20.678 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:09:20.678 [http-nio-8080-exec-1] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:09:20.678 [http-nio-8080-exec-1] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 13:09:20.678 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:09:20.678 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.678 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.679 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.679 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.679 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:09:20.679 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:09:20.679 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:09:20.679 [http-nio-8080-exec-1] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:09:20.679 [http-nio-8080-exec-1] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 13:09:20.679 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.679 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:09:20.679 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 13:09:20.679 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:09:20.679 [http-nio-8080-exec-1] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:09:20.680 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 13:09:20.681 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 13:09:20.682 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 13:09:20.683 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 13:09:20.685 [http-nio-8080-exec-1] PropertyBinder - Building property username
[DEBUG] 2020-02-28 13:09:20.686 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:09:20.687 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:09:20.688 [http-nio-8080-exec-1] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 13:09:20.688 [http-nio-8080-exec-1] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 13:09:20.695 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.695 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 13:09:20.695 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 13:09:20.695 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 13:09:20.695 [http-nio-8080-exec-1] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 13:09:20.696 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:09:20.696 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.696 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:09:20.696 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 13:09:20.696 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:09:20.696 [http-nio-8080-exec-1] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:09:20.713 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.713 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 13:09:20.713 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 13:09:20.713 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 13:09:20.713 [http-nio-8080-exec-1] PropertyBinder - Building property name
[DEBUG] 2020-02-28 13:09:20.714 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.714 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:09:20.714 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 13:09:20.714 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:09:20.714 [http-nio-8080-exec-1] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:09:20.717 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 13:09:20.718 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.722 [http-nio-8080-exec-1] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:09:20.723 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:09:20.726 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:09:20.726 [http-nio-8080-exec-1] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 13:09:20.726 [http-nio-8080-exec-1] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 13:09:20.730 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.730 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 13:09:20.730 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 13:09:20.730 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 13:09:20.731 [http-nio-8080-exec-1] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 13:09:20.731 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:09:20.731 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.731 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 13:09:20.731 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 13:09:20.731 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 13:09:20.731 [http-nio-8080-exec-1] PropertyBinder - Building property author
[DEBUG] 2020-02-28 13:09:20.732 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.732 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:09:20.732 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 13:09:20.732 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:09:20.732 [http-nio-8080-exec-1] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:09:20.732 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.732 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:09:20.732 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 13:09:20.732 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:09:20.732 [http-nio-8080-exec-1] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:09:20.732 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.732 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:09:20.732 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 13:09:20.732 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:09:20.732 [http-nio-8080-exec-1] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:09:20.733 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.733 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:09:20.733 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 13:09:20.733 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:09:20.733 [http-nio-8080-exec-1] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:09:20.733 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.733 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:09:20.733 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 13:09:20.733 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:09:20.733 [http-nio-8080-exec-1] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:09:20.733 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.733 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:09:20.733 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 13:09:20.733 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:09:20.733 [http-nio-8080-exec-1] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:09:20.734 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.734 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:09:20.734 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 13:09:20.734 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:09:20.734 [http-nio-8080-exec-1] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:09:20.734 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.734 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:09:20.734 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 13:09:20.734 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:09:20.734 [http-nio-8080-exec-1] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:09:20.734 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:09:20.735 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.736 [http-nio-8080-exec-1] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:09:20.736 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.736 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:09:20.736 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 13:09:20.736 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:09:20.736 [http-nio-8080-exec-1] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:09:20.736 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:09:20.736 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:09:20.736 [http-nio-8080-exec-1] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 13:09:20.737 [http-nio-8080-exec-1] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 13:09:20.739 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.739 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 13:09:20.739 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 13:09:20.739 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 13:09:20.739 [http-nio-8080-exec-1] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 13:09:20.739 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:09:20.739 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.739 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:09:20.740 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 13:09:20.740 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:09:20.740 [http-nio-8080-exec-1] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:09:20.740 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.740 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:09:20.740 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 13:09:20.740 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:09:20.740 [http-nio-8080-exec-1] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:09:20.741 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.741 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.741 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.741 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:09:20.741 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:09:20.741 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:09:20.741 [http-nio-8080-exec-1] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:09:20.742 [http-nio-8080-exec-1] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:09:20.742 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.742 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:09:20.742 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 13:09:20.742 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:09:20.743 [http-nio-8080-exec-1] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:09:20.746 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.747 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:09:20.748 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 13:09:20.748 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:09:20.748 [http-nio-8080-exec-1] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:09:20.748 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:09:20.748 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:09:20.748 [http-nio-8080-exec-1] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 13:09:20.748 [http-nio-8080-exec-1] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 13:09:20.753 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.753 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 13:09:20.753 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 13:09:20.753 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 13:09:20.753 [http-nio-8080-exec-1] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 13:09:20.753 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:09:20.754 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.754 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:09:20.754 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 13:09:20.754 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:09:20.754 [http-nio-8080-exec-1] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:09:20.754 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.754 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:09:20.754 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 13:09:20.754 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:09:20.754 [http-nio-8080-exec-1] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:09:20.754 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.755 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.755 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.755 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:09:20.755 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:09:20.755 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:09:20.755 [http-nio-8080-exec-1] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:09:20.755 [http-nio-8080-exec-1] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 13:09:20.755 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.755 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 13:09:20.755 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 13:09:20.755 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 13:09:20.755 [http-nio-8080-exec-1] PropertyBinder - Building property director
[DEBUG] 2020-02-28 13:09:20.755 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.756 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:09:20.756 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 13:09:20.756 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:09:20.756 [http-nio-8080-exec-1] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:09:20.756 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.756 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 13:09:20.756 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 13:09:20.756 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 13:09:20.756 [http-nio-8080-exec-1] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 13:09:20.756 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.756 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.756 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.756 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 13:09:20.757 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:09:20.758 [http-nio-8080-exec-1] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:09:20.758 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.758 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:09:20.758 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 13:09:20.758 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:09:20.758 [http-nio-8080-exec-1] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:09:20.758 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:09:20.758 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.758 [http-nio-8080-exec-1] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:09:20.758 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.758 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:09:20.760 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 13:09:20.760 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:09:20.760 [http-nio-8080-exec-1] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:09:20.760 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:09:20.760 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:09:20.760 [http-nio-8080-exec-1] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 13:09:20.761 [http-nio-8080-exec-1] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 13:09:20.761 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.761 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 13:09:20.761 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 13:09:20.761 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 13:09:20.761 [http-nio-8080-exec-1] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 13:09:20.762 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:09:20.762 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.762 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 13:09:20.762 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 13:09:20.762 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 13:09:20.763 [http-nio-8080-exec-1] PropertyBinder - Building property category
[DEBUG] 2020-02-28 13:09:20.764 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.764 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:09:20.764 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 13:09:20.764 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:09:20.764 [http-nio-8080-exec-1] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:09:20.764 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.764 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:09:20.764 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 13:09:20.764 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:09:20.764 [http-nio-8080-exec-1] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:09:20.764 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.765 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:09:20.765 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 13:09:20.765 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:09:20.765 [http-nio-8080-exec-1] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:09:20.765 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.765 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:09:20.765 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 13:09:20.765 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:09:20.765 [http-nio-8080-exec-1] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:09:20.765 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:09:20.765 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.766 [http-nio-8080-exec-1] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:09:20.766 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:09:20.766 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:09:20.766 [http-nio-8080-exec-1] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 13:09:20.766 [http-nio-8080-exec-1] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 13:09:20.768 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.768 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 13:09:20.768 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 13:09:20.768 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 13:09:20.771 [http-nio-8080-exec-1] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 13:09:20.771 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:09:20.771 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.771 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:09:20.771 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 13:09:20.771 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:09:20.771 [http-nio-8080-exec-1] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:09:20.772 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:09:20.772 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:09:20.772 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 13:09:20.772 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:09:20.772 [http-nio-8080-exec-1] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:09:20.772 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.772 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:09:20.772 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 13:09:20.772 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:09:20.772 [http-nio-8080-exec-1] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:09:20.772 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.772 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.772 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.773 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:09:20.773 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:09:20.773 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:09:20.773 [http-nio-8080-exec-1] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:09:20.773 [http-nio-8080-exec-1] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:09:20.773 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.774 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:09:20.776 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 13:09:20.776 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:09:20.776 [http-nio-8080-exec-1] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:09:20.776 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.776 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:09:20.776 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 13:09:20.777 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:09:20.777 [http-nio-8080-exec-1] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:09:20.777 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.777 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 13:09:20.777 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 13:09:20.777 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 13:09:20.777 [http-nio-8080-exec-1] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 13:09:20.777 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:09:20.777 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:09:20.777 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 13:09:20.777 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:09:20.777 [http-nio-8080-exec-1] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:09:20.778 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 13:09:20.779 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:09:20.792 [http-nio-8080-exec-1] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 13:09:20.792 [http-nio-8080-exec-1] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 13:09:20.792 [http-nio-8080-exec-1] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 13:09:20.792 [http-nio-8080-exec-1] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 13:09:20.792 [http-nio-8080-exec-1] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 13:09:20.792 [http-nio-8080-exec-1] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 13:09:20.792 [http-nio-8080-exec-1] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 13:09:20.792 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:09:20.792 [http-nio-8080-exec-1] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:09:20.795 [http-nio-8080-exec-1] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:09:20.796 [http-nio-8080-exec-1] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:09:20.796 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 13:09:20.796 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:09:20.796 [http-nio-8080-exec-1] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:09:20.796 [http-nio-8080-exec-1] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:09:20.796 [http-nio-8080-exec-1] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:09:20.796 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 13:09:20.796 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:09:20.796 [http-nio-8080-exec-1] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 13:09:20.796 [http-nio-8080-exec-1] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 13:09:20.796 [http-nio-8080-exec-1] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 13:09:20.797 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:09:20.797 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:09:20.797 [http-nio-8080-exec-1] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 13:09:20.797 [http-nio-8080-exec-1] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 13:09:20.797 [http-nio-8080-exec-1] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 13:09:20.797 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:09:20.797 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:09:20.797 [http-nio-8080-exec-1] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:09:20.798 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:09:20.803 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:09:20.803 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:09:20.803 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:09:20.803 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:09:20.803 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:09:20.803 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:09:20.804 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:09:20.810 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:09:20.811 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:09:20.811 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:09:20.811 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:09:20.811 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:09:20.811 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:09:20.811 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:09:20.811 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:09:20.811 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:09:20.883 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 13:09:20.886 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 13:09:20.886 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 13:09:20.886 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 13:09:20.886 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2020-02-28 13:09:20.886 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 13:09:20.886 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 13:09:20.886 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 13:09:20.886 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 13:09:20.887 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 13:09:20.957 [http-nio-8080-exec-1] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 13:09:20.989 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 13:09:20.989 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@689068, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 13:09:21.014 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:09:21.014 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:09:21.042 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:09:21.042 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:09:21.045 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:09:21.045 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:09:21.047 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:09:21.047 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:09:21.048 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:09:21.048 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:09:21.050 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:09:21.051 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:09:21.055 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:09:21.055 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:09:21.061 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 13:09:21.063 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 13:09:21.063 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62d4ac8c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@43a1972c]
[DEBUG] 2020-02-28 13:09:21.131 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:09:21.131 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:09:21.152 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:09:21.152 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:09:21.512 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:09:21.512 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:09:21.513 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:09:21.513 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:09:21.551 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:09:21.551 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:09:21.552 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:09:21.552 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:09:21.584 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:09:21.585 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:09:21.586 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:09:21.586 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:09:21.616 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:09:21.617 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:09:21.619 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:09:21.619 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:09:21.661 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:09:21.661 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:09:21.668 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:09:21.668 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:09:21.726 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:09:21.726 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:09:21.726 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:09:21.726 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:09:21.764 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:09:21.766 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 13:09:21.766 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 13:09:21.766 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 13:09:21.766 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 13:09:21.767 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:09:21.767 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 13:09:21.767 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 13:09:21.767 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 13:09:21.767 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 13:09:21.767 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:09:21.767 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 13:09:21.767 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 13:09:21.767 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 13:09:21.767 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 13:09:21.770 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:09:21.770 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:09:21.770 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:09:21.770 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:09:21.770 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 13:09:21.771 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 13:09:21.777 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:09:21.777 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 13:09:21.777 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 13:09:21.777 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:09:21.777 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 13:09:21.777 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 13:09:21.777 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:09:21.818 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@377f98b]
[DEBUG] 2020-02-28 13:09:21.819 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:09:21.819 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.819 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:09:21.825 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b649f94]
[DEBUG] 2020-02-28 13:09:21.827 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ff11a7]
[DEBUG] 2020-02-28 13:09:21.827 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:09:21.827 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:09:21.827 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:09:21.827 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:09:21.827 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b3c87db]
[DEBUG] 2020-02-28 13:09:21.827 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e2a24f2]
[DEBUG] 2020-02-28 13:09:21.827 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:09:21.827 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:09:21.827 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:09:21.827 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:09:21.827 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.827 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:09:21.827 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fc2a52f]
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38058cfb]
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2deb1ef7]
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d12c0a1]
[DEBUG] 2020-02-28 13:09:21.829 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48fb6d52]
[DEBUG] 2020-02-28 13:09:21.830 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:09:21.830 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:09:21.830 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:09:21.830 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:09:21.830 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:09:21.831 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:09:21.831 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c74c117]
[DEBUG] 2020-02-28 13:09:21.831 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2710af43]
[DEBUG] 2020-02-28 13:09:21.831 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:09:21.831 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:09:21.831 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:09:21.831 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@65555631]
[DEBUG] 2020-02-28 13:09:21.838 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:09:21.838 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:09:21.838 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.856 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.868 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:09:21.872 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:09:21.872 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4967883b]
[DEBUG] 2020-02-28 13:09:21.872 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:09:21.872 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.872 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:09:21.872 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79f6232e]
[DEBUG] 2020-02-28 13:09:21.872 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@443ecb80]
[DEBUG] 2020-02-28 13:09:21.872 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:09:21.872 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:09:21.872 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31eda56c]
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7886fb39]
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30a15854]
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e6bf4fc]
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11fb933b]
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:09:21.873 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ba21aa8]
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2666e978]
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5148387b]
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40742603]
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3e0bea84]
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.874 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.877 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:09:21.877 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:09:21.892 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:09:21.893 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:09:21.894 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:09:21.894 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 13:09:21.894 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 13:09:21.894 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:09:21.894 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 13:09:21.894 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 13:09:21.894 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:09:21.894 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@329ea8a4]
[DEBUG] 2020-02-28 13:09:21.894 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:09:21.894 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.894 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:09:21.894 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:09:21.894 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.894 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a213c4e]
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13068da6]
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@645c479a]
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@778cd413]
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75347cf7]
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@452323d4]
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13a62c43]
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@46b8099]
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:09:21.895 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.896 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7efa7591]
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4abb67b]
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55cb02f6]
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d3e8734]
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34fffc86]
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@490638d3]
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:09:21.897 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:09:21.898 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1619abdd]
[DEBUG] 2020-02-28 13:09:21.898 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e21c96d]
[DEBUG] 2020-02-28 13:09:21.898 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:09:21.898 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:09:21.898 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:09:21.898 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@10f589e9]
[DEBUG] 2020-02-28 13:09:21.898 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:09:21.898 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.898 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.900 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:09:21.900 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:09:21.902 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:09:21.902 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:09:21.902 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:09:21.902 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 13:09:21.902 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 13:09:21.902 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:09:21.902 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 13:09:21.902 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 13:09:21.902 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:09:21.902 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d8ff812]
[DEBUG] 2020-02-28 13:09:21.902 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18354e7]
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a869d62]
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ed40c1d]
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@356b414c]
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@700d7565]
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7eee9b8b]
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70d4d4af]
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1f5a9ad8]
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:09:21.903 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.904 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.904 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:09:21.904 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:09:21.904 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e5f93df]
[DEBUG] 2020-02-28 13:09:21.904 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.904 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:09:21.905 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.905 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:09:21.905 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@133f828a]
[DEBUG] 2020-02-28 13:09:21.905 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:09:21.905 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:09:21.905 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:09:21.905 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:09:21.905 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:09:21.905 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ec462e6]
[DEBUG] 2020-02-28 13:09:21.905 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@445e0ede]
[DEBUG] 2020-02-28 13:09:21.905 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:09:21.905 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b1aef0d]
[DEBUG] 2020-02-28 13:09:21.905 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3911ce0f]
[DEBUG] 2020-02-28 13:09:21.905 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:09:21.906 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:09:21.906 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:09:21.906 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:09:21.906 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:09:21.906 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:09:21.906 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:09:21.906 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:09:21.906 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@443f4899]
[DEBUG] 2020-02-28 13:09:21.906 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7023863e]
[DEBUG] 2020-02-28 13:09:21.906 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:09:21.906 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:09:21.906 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:09:21.906 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@c3d7db0]
[DEBUG] 2020-02-28 13:09:21.906 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:09:21.906 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.907 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.907 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:09:21.908 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:09:21.908 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:09:21.908 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:09:21.908 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:09:21.908 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 13:09:21.908 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 13:09:21.908 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:09:21.908 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 13:09:21.908 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 13:09:21.908 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:09:21.908 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ae47ea]
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ee71370]
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68b6fee9]
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f506502]
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41ba5469]
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ea4ab01]
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.909 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c0a5a2]
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63637073]
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f4e70be]
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6444f9ef]
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:09:21.910 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c5cedfc]
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@659c0c11]
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49fb5b9c]
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab358cd]
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67369367]
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.911 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d3933db]
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a2f34db]
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17755f90]
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27bd680e]
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@342709ce]
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cc84d1]
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a78d267]
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7649303e]
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@65b2d561]
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:09:21.912 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.913 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41802a0f]
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5466489]
[DEBUG] 2020-02-28 13:09:21.914 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71feb191]
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@316e2df3]
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a6de80]
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14f29471]
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1084dd47]
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:09:21.915 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44d2a8aa]
[DEBUG] 2020-02-28 13:09:21.916 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@728a2b92]
[DEBUG] 2020-02-28 13:09:21.916 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:09:21.916 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:09:21.916 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:09:21.916 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@96cdb31]
[DEBUG] 2020-02-28 13:09:21.916 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:09:21.916 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.916 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.917 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:09:21.917 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:09:21.917 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3188387]
[DEBUG] 2020-02-28 13:09:21.917 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:09:21.917 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:09:21.917 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.917 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:09:21.917 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:09:21.917 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4fb70cb2]
[DEBUG] 2020-02-28 13:09:21.917 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a7879cc]
[DEBUG] 2020-02-28 13:09:21.918 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:09:21.918 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d3bdbbf]
[DEBUG] 2020-02-28 13:09:21.918 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62ef4343]
[DEBUG] 2020-02-28 13:09:21.918 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:09:21.918 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:09:21.918 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:09:21.918 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:09:21.918 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:09:21.918 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:09:21.918 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15ca0130]
[DEBUG] 2020-02-28 13:09:21.918 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c55bc5c]
[DEBUG] 2020-02-28 13:09:21.918 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:09:21.918 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:09:21.918 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:09:21.918 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:09:21.920 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:09:21.920 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:09:21.920 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@122b81fe]
[DEBUG] 2020-02-28 13:09:21.920 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38d68bb]
[DEBUG] 2020-02-28 13:09:21.920 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:09:21.920 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:09:21.920 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:09:21.920 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4ff3e4be]
[DEBUG] 2020-02-28 13:09:21.920 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:09:21.920 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.920 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.922 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:09:21.922 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:09:21.922 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:09:21.923 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:09:21.928 [http-nio-8080-exec-1] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:09:21.928 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:09:21.928 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 13:09:21.928 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 13:09:21.928 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:09:21.928 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 13:09:21.928 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 13:09:21.928 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:09:21.928 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42d7ef49]
[DEBUG] 2020-02-28 13:09:21.928 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56c9f151]
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a807759]
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@175070e7]
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:09:21.929 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:09:21.930 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f7deb15]
[DEBUG] 2020-02-28 13:09:21.931 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@562e691c]
[DEBUG] 2020-02-28 13:09:21.931 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:09:21.931 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:09:21.931 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:09:21.931 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:09:21.932 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.932 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.933 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:09:21.934 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:09:21.935 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:09:21.936 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:09:21.940 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51bcba89]
[DEBUG] 2020-02-28 13:09:21.940 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aae019f]
[DEBUG] 2020-02-28 13:09:21.940 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:09:21.940 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:09:21.940 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.941 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:09:21.941 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:09:21.941 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:09:21.941 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:09:21.941 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:09:21.941 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.941 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:09:21.941 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:09:21.941 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:09:21.941 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.944 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.945 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 13:09:21.945 [http-nio-8080-exec-1] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 13:09:21.945 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@579cc449]
[DEBUG] 2020-02-28 13:09:21.945 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d62a678]
[DEBUG] 2020-02-28 13:09:21.945 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.945 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:09:21.945 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.945 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:09:21.945 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:09:21.945 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.945 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.947 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 13:09:21.947 [http-nio-8080-exec-1] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 13:09:21.947 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c9a36ec]
[DEBUG] 2020-02-28 13:09:21.947 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54831261]
[DEBUG] 2020-02-28 13:09:21.947 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:09:21.947 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.947 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:09:21.947 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:09:21.947 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.947 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:09:21.947 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:09:21.947 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.949 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.951 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 13:09:21.951 [http-nio-8080-exec-1] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 13:09:21.952 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d36a5bf]
[DEBUG] 2020-02-28 13:09:21.952 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31eaa062]
[DEBUG] 2020-02-28 13:09:21.952 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1af5c10a]
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ef88b86]
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fa33755]
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:09:21.953 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d47f14a]
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7759e7df]
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71467ffe]
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c52eaa4]
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@eed99c5]
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36b2f0d8]
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:09:21.954 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@74c9d07f]
[DEBUG] 2020-02-28 13:09:21.955 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:09:21.955 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:09:21.955 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.956 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.959 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:09:21.959 [http-nio-8080-exec-1] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 13:09:21.959 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@510f968e]
[DEBUG] 2020-02-28 13:09:21.959 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8a23a65]
[DEBUG] 2020-02-28 13:09:21.959 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:09:21.959 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.959 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:09:21.959 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1cb3744c]
[DEBUG] 2020-02-28 13:09:21.959 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5db14ad]
[DEBUG] 2020-02-28 13:09:21.959 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:09:21.959 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:09:21.959 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:09:21.959 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:09:21.959 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 13:09:21.959 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@164fca8b]
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@91c3e64]
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54bf3d96]
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cccae18]
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63ce262e]
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bc9db2d]
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26b7144f]
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:09:21.960 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:09:21.961 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:09:21.961 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7fd2d2ef]
[DEBUG] 2020-02-28 13:09:21.961 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:09:21.961 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:09:21.961 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.961 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.961 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:09:21.961 [http-nio-8080-exec-1] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 13:09:21.962 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28eada54]
[DEBUG] 2020-02-28 13:09:21.962 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36e1b66a]
[DEBUG] 2020-02-28 13:09:21.962 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:09:21.962 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.963 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:09:21.963 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:09:21.964 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:09:21.964 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:09:21.964 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:09:21.964 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:09:21.964 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:09:21.964 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.964 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.964 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 13:09:21.964 [http-nio-8080-exec-1] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 13:09:21.964 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37819f6d]
[DEBUG] 2020-02-28 13:09:21.965 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c682d11]
[DEBUG] 2020-02-28 13:09:21.965 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.965 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:09:21.965 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:09:21.965 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:09:21.965 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:09:21.965 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.965 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.965 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.965 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 13:09:21.965 [http-nio-8080-exec-1] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 13:09:21.965 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75bdb227]
[DEBUG] 2020-02-28 13:09:21.965 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38701924]
[DEBUG] 2020-02-28 13:09:21.966 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:09:21.966 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:09:21.966 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:09:21.966 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48416f9e]
[DEBUG] 2020-02-28 13:09:21.966 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c0e68b]
[DEBUG] 2020-02-28 13:09:21.966 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:09:21.966 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:09:21.966 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:09:21.966 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:09:21.967 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22abbcf5]
[DEBUG] 2020-02-28 13:09:21.967 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cb97f36]
[DEBUG] 2020-02-28 13:09:21.967 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:09:21.967 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:09:21.967 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:09:21.967 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:09:21.967 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:09:21.970 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:09:21.971 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:09:21.971 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:09:21.972 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:09:21.972 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:09:21.973 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 13:09:21.973 [http-nio-8080-exec-1] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 13:09:22.032 [http-nio-8080-exec-1] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 13:09:22.032 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 13:09:22.033 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 13:09:22.042 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 13:09:22.042 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 13:09:22.043 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 13:09:22.043 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 13:09:22.070 [http-nio-8080-exec-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5d0b436a
[DEBUG] 2020-02-28 13:09:22.076 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: 8bad3acd-99f9-4b55-b382-4dd2d55fcb53 (<unnamed>)
[DEBUG] 2020-02-28 13:09:22.076 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 13:09:22.243 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 13:09:22.261 [http-nio-8080-exec-1] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:09:22.478 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:09:22.481 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:09:22.527 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:09:22.540 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:09:22.540 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:09:22.541 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.541 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:09:22.541 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.541 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:09:22.541 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.541 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:09:22.541 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.541 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:09:22.541 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.544 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@483222e4
[DEBUG] 2020-02-28 13:09:22.545 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.545 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:09:22.545 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:09:22.545 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:09:22.545 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.545 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:09:22.545 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.545 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:09:22.545 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.545 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:09:22.546 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:09:22.546 [http-nio-8080-exec-1] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:09:22.546 [http-nio-8080-exec-1] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:09:22.549 [http-nio-8080-exec-1] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:09:22.549 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:09:22.550 [http-nio-8080-exec-1] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:09:22.550 [http-nio-8080-exec-1] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:09:22.550 [http-nio-8080-exec-1] Loader - Done entity load
[DEBUG] 2020-02-28 13:09:22.550 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:09:22.551 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:09:22.551 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:09:22.552 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:09:22.552 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:09:22.552 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:09:22.553 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:09:22.574 [http-nio-8080-exec-1] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-28 13:09:22.574 [http-nio-8080-exec-1] TransactionImpl - begin
[DEBUG] 2020-02-28 13:09:22.585 [http-nio-8080-exec-1] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-02-28 13:09:22.599 [http-nio-8080-exec-1] SQL - insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:09:22.627 [http-nio-8080-exec-1] IdentifierGeneratorHelper - Natively generated identity: 1
[DEBUG] 2020-02-28 13:09:22.627 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:09:22.631 [http-nio-8080-exec-1] TransactionImpl - committing
[DEBUG] 2020-02-28 13:09:22.632 [http-nio-8080-exec-1] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-28 13:09:22.632 [http-nio-8080-exec-1] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-28 13:09:22.634 [http-nio-8080-exec-1] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-02-28 13:09:22.634 [http-nio-8080-exec-1] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-02-28 13:09:22.636 [http-nio-8080-exec-1] EntityPrinter - Listing entities:
[DEBUG] 2020-02-28 13:09:22.636 [http-nio-8080-exec-1] EntityPrinter - com.streammedia.entity.FAQ{createdAt=2020-02-28, description=This Is FAQ Creates Test, faqId=1, category=Movie, title=how movies are created!, user=com.streammedia.entity.User#2, updatedAt=2020-02-28}
[DEBUG] 2020-02-28 13:09:22.640 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:09:22.671 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:13:01.435 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 13:13:01.439 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 13:13:01.442 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 13:13:01.531 [http-nio-8080-exec-2] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 13:13:01.532 [http-nio-8080-exec-2] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 13:13:01.678 [http-nio-8080-exec-2] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 13:13:01.680 [http-nio-8080-exec-2] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 13:13:01.682 [http-nio-8080-exec-2] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 13:13:01.921 [http-nio-8080-exec-2] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 13:13:01.974 [http-nio-8080-exec-2] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 13:13:01.975 [http-nio-8080-exec-2] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 13:13:02.024 [http-nio-8080-exec-2] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 13:13:02.057 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@394f5f42
[DEBUG] 2020-02-28 13:13:02.057 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@394f5f42
[DEBUG] 2020-02-28 13:13:02.057 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@394f5f42
[DEBUG] 2020-02-28 13:13:02.058 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4778f9fe
[DEBUG] 2020-02-28 13:13:02.059 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@529630eb
[DEBUG] 2020-02-28 13:13:02.059 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fe121a2
[DEBUG] 2020-02-28 13:13:02.060 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7effd50c
[DEBUG] 2020-02-28 13:13:02.061 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7effd50c
[DEBUG] 2020-02-28 13:13:02.061 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7effd50c
[DEBUG] 2020-02-28 13:13:02.062 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@27c0580b
[DEBUG] 2020-02-28 13:13:02.062 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@27c0580b
[DEBUG] 2020-02-28 13:13:02.062 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@27c0580b
[DEBUG] 2020-02-28 13:13:02.063 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@258c504d
[DEBUG] 2020-02-28 13:13:02.063 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@258c504d
[DEBUG] 2020-02-28 13:13:02.063 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@258c504d
[DEBUG] 2020-02-28 13:13:02.076 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6b6dd2bb
[DEBUG] 2020-02-28 13:13:02.076 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6b6dd2bb
[DEBUG] 2020-02-28 13:13:02.076 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6b6dd2bb
[DEBUG] 2020-02-28 13:13:02.085 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4c0566f0
[DEBUG] 2020-02-28 13:13:02.085 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4c0566f0
[DEBUG] 2020-02-28 13:13:02.085 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c0566f0
[DEBUG] 2020-02-28 13:13:02.086 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@ffc818b
[DEBUG] 2020-02-28 13:13:02.086 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@ffc818b
[DEBUG] 2020-02-28 13:13:02.086 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@ffc818b
[DEBUG] 2020-02-28 13:13:02.087 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@56003da5
[DEBUG] 2020-02-28 13:13:02.087 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@56003da5
[DEBUG] 2020-02-28 13:13:02.087 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@56003da5
[DEBUG] 2020-02-28 13:13:02.092 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5dcf9285
[DEBUG] 2020-02-28 13:13:02.092 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5dcf9285
[DEBUG] 2020-02-28 13:13:02.094 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2c428f37
[DEBUG] 2020-02-28 13:13:02.094 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2c428f37
[DEBUG] 2020-02-28 13:13:02.098 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3e468cce
[DEBUG] 2020-02-28 13:13:02.098 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3e468cce
[DEBUG] 2020-02-28 13:13:02.099 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@27d39e5c
[DEBUG] 2020-02-28 13:13:02.099 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65696777
[DEBUG] 2020-02-28 13:13:02.100 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5ea31c87
[DEBUG] 2020-02-28 13:13:02.100 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5ea31c87
[DEBUG] 2020-02-28 13:13:02.100 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2544e90f
[DEBUG] 2020-02-28 13:13:02.100 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2544e90f
[DEBUG] 2020-02-28 13:13:02.109 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@fcfcb15
[DEBUG] 2020-02-28 13:13:02.109 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@fcfcb15
[DEBUG] 2020-02-28 13:13:02.116 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b614d2e
[DEBUG] 2020-02-28 13:13:02.116 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b614d2e
[DEBUG] 2020-02-28 13:13:02.117 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7f34ef59
[DEBUG] 2020-02-28 13:13:02.117 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7f34ef59
[DEBUG] 2020-02-28 13:13:02.118 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@583b1015
[DEBUG] 2020-02-28 13:13:02.118 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@583b1015
[DEBUG] 2020-02-28 13:13:02.119 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d19355e
[DEBUG] 2020-02-28 13:13:02.119 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d19355e
[DEBUG] 2020-02-28 13:13:02.120 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3459f46d
[DEBUG] 2020-02-28 13:13:02.120 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3459f46d
[DEBUG] 2020-02-28 13:13:02.120 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@278789da
[DEBUG] 2020-02-28 13:13:02.121 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@278789da
[DEBUG] 2020-02-28 13:13:02.121 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@ff4acdf
[DEBUG] 2020-02-28 13:13:02.121 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@ff4acdf
[DEBUG] 2020-02-28 13:13:02.122 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4bf8e4de
[DEBUG] 2020-02-28 13:13:02.122 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4bf8e4de
[DEBUG] 2020-02-28 13:13:02.123 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@b773056
[DEBUG] 2020-02-28 13:13:02.123 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@b773056
[DEBUG] 2020-02-28 13:13:02.123 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@b773056
[DEBUG] 2020-02-28 13:13:02.124 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3f5f6840
[DEBUG] 2020-02-28 13:13:02.125 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@239a9047
[DEBUG] 2020-02-28 13:13:02.125 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@239a9047
[DEBUG] 2020-02-28 13:13:02.125 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@239a9047
[DEBUG] 2020-02-28 13:13:02.125 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@36b1a95e
[DEBUG] 2020-02-28 13:13:02.126 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@46af90f5
[DEBUG] 2020-02-28 13:13:02.126 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@46af90f5
[DEBUG] 2020-02-28 13:13:02.126 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3b3c3d50
[DEBUG] 2020-02-28 13:13:02.127 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b3c3d50
[DEBUG] 2020-02-28 13:13:02.127 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@622052df
[DEBUG] 2020-02-28 13:13:02.127 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@622052df
[DEBUG] 2020-02-28 13:13:02.128 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3de784f0
[DEBUG] 2020-02-28 13:13:02.128 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3de784f0
[DEBUG] 2020-02-28 13:13:02.128 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5742d7ce
[DEBUG] 2020-02-28 13:13:02.128 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5742d7ce
[DEBUG] 2020-02-28 13:13:02.128 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@216891ac
[DEBUG] 2020-02-28 13:13:02.130 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4d14bfb6
[DEBUG] 2020-02-28 13:13:02.130 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4d14bfb6
[DEBUG] 2020-02-28 13:13:02.130 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4d14bfb6
[DEBUG] 2020-02-28 13:13:02.132 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c56397f
[DEBUG] 2020-02-28 13:13:02.132 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c56397f
[DEBUG] 2020-02-28 13:13:02.132 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c56397f
[DEBUG] 2020-02-28 13:13:02.132 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@77e4a3f4
[DEBUG] 2020-02-28 13:13:02.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@41266e59
[DEBUG] 2020-02-28 13:13:02.134 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3ae8e13d
[DEBUG] 2020-02-28 13:13:02.134 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3ae8e13d
[DEBUG] 2020-02-28 13:13:02.134 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3ae8e13d
[DEBUG] 2020-02-28 13:13:02.134 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@43eb7216
[DEBUG] 2020-02-28 13:13:02.134 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@43eb7216
[DEBUG] 2020-02-28 13:13:02.134 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@43eb7216
[DEBUG] 2020-02-28 13:13:02.135 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@8268fc5
[DEBUG] 2020-02-28 13:13:02.135 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@580036e8
[DEBUG] 2020-02-28 13:13:02.138 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@53a16f5a
[DEBUG] 2020-02-28 13:13:02.138 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@53a16f5a
[DEBUG] 2020-02-28 13:13:02.138 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64b7761f
[DEBUG] 2020-02-28 13:13:02.140 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@76db8158
[DEBUG] 2020-02-28 13:13:02.140 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@76db8158
[DEBUG] 2020-02-28 13:13:02.142 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@19072f89
[DEBUG] 2020-02-28 13:13:02.142 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19072f89
[DEBUG] 2020-02-28 13:13:02.143 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1eb424c3
[DEBUG] 2020-02-28 13:13:02.143 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77f8c80f
[DEBUG] 2020-02-28 13:13:02.145 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@541268d0
[DEBUG] 2020-02-28 13:13:02.148 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4d2f7276
[DEBUG] 2020-02-28 13:13:02.148 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4d2f7276
[DEBUG] 2020-02-28 13:13:02.149 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a5fd823
[DEBUG] 2020-02-28 13:13:02.149 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b5332a9
[DEBUG] 2020-02-28 13:13:02.149 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@41a703b6
[DEBUG] 2020-02-28 13:13:02.149 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@10ebd75e
[DEBUG] 2020-02-28 13:13:02.149 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24419ba0
[DEBUG] 2020-02-28 13:13:02.149 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@567533fb
[DEBUG] 2020-02-28 13:13:02.149 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2f363030
[DEBUG] 2020-02-28 13:13:02.149 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61a953af
[DEBUG] 2020-02-28 13:13:02.188 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 13:13:02.188 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 13:13:02.189 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:13:02.189 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:13:02.190 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 13:13:02.190 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 13:13:02.191 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 13:13:02.192 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:13:02.192 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 13:13:02.192 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 13:13:02.193 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 13:13:02.193 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 13:13:02.193 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:13:02.194 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 13:13:02.198 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 13:13:02.198 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 13:13:02.199 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 13:13:02.336 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 13:13:02.570 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:13:02.570 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:13:02.571 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 13:13:02.585 [http-nio-8080-exec-2] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 13:13:02.597 [http-nio-8080-exec-2] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 13:13:02.729 [http-nio-8080-exec-2] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 13:13:02.780 [http-nio-8080-exec-2] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 13:13:02.784 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@206385a1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@526238d3]
[DEBUG] 2020-02-28 13:13:02.836 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:13:02.866 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:13:02.873 [http-nio-8080-exec-2] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 13:13:02.877 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 13:13:02.915 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.917 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 13:13:02.919 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 13:13:02.920 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 13:13:02.923 [http-nio-8080-exec-2] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 13:13:02.927 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:13:02.929 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.930 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:13:02.930 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 13:13:02.930 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:13:02.930 [http-nio-8080-exec-2] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:13:02.930 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.931 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 13:13:02.931 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 13:13:02.931 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 13:13:02.931 [http-nio-8080-exec-2] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 13:13:02.931 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:13:02.932 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:13:02.932 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 13:13:02.932 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:13:02.932 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:13:02.932 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.932 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:13:02.932 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 13:13:02.932 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:13:02.932 [http-nio-8080-exec-2] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:13:02.933 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:13:02.934 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.935 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.952 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.952 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.953 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:13:02.954 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:13:02.954 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:13:02.955 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:13:02.958 [http-nio-8080-exec-2] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 13:13:02.958 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:13:02.960 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.960 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.960 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.960 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.960 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:13:02.960 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:13:02.960 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:13:02.960 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:13:02.960 [http-nio-8080-exec-2] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:13:02.961 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.961 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:13:02.961 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 13:13:02.961 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:13:02.961 [http-nio-8080-exec-2] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:13:02.961 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.961 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 13:13:02.961 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 13:13:02.961 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 13:13:02.961 [http-nio-8080-exec-2] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 13:13:02.962 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.962 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:13:02.962 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 13:13:02.962 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:13:02.962 [http-nio-8080-exec-2] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:13:02.962 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.962 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 13:13:02.962 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 13:13:02.962 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 13:13:02.962 [http-nio-8080-exec-2] PropertyBinder - Building property password
[DEBUG] 2020-02-28 13:13:02.962 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.962 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 13:13:02.963 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 13:13:02.963 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 13:13:02.963 [http-nio-8080-exec-2] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 13:13:02.963 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:13:02.963 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.963 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.963 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.963 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.963 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:13:02.965 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:13:02.966 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:13:02.966 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:13:02.966 [http-nio-8080-exec-2] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 13:13:02.966 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:13:02.967 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.967 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.968 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.968 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.968 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:13:02.968 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:13:02.968 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:13:02.968 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:13:02.968 [http-nio-8080-exec-2] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 13:13:02.968 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.968 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:13:02.968 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 13:13:02.968 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:13:02.968 [http-nio-8080-exec-2] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:13:02.968 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 13:13:02.968 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 13:13:02.968 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 13:13:02.969 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 13:13:02.973 [http-nio-8080-exec-2] PropertyBinder - Building property username
[DEBUG] 2020-02-28 13:13:02.977 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:13:02.980 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:13:02.982 [http-nio-8080-exec-2] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 13:13:02.982 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 13:13:02.987 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.987 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 13:13:02.988 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 13:13:02.988 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 13:13:02.988 [http-nio-8080-exec-2] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 13:13:02.988 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:13:02.989 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:02.989 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:13:02.989 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 13:13:02.989 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:13:02.989 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:13:03.012 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.012 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 13:13:03.012 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 13:13:03.012 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 13:13:03.013 [http-nio-8080-exec-2] PropertyBinder - Building property name
[DEBUG] 2020-02-28 13:13:03.013 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.013 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:13:03.014 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 13:13:03.014 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:13:03.014 [http-nio-8080-exec-2] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:13:03.015 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 13:13:03.015 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.017 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:13:03.017 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:13:03.019 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:13:03.019 [http-nio-8080-exec-2] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 13:13:03.019 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 13:13:03.023 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.023 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 13:13:03.023 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 13:13:03.023 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 13:13:03.023 [http-nio-8080-exec-2] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 13:13:03.023 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:13:03.024 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.024 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 13:13:03.024 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 13:13:03.024 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 13:13:03.024 [http-nio-8080-exec-2] PropertyBinder - Building property author
[DEBUG] 2020-02-28 13:13:03.024 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.024 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:13:03.024 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 13:13:03.024 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:13:03.025 [http-nio-8080-exec-2] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:13:03.025 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.025 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:13:03.025 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 13:13:03.025 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:13:03.025 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:13:03.025 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.025 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:13:03.025 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 13:13:03.025 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:13:03.025 [http-nio-8080-exec-2] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:13:03.025 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.025 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:13:03.025 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 13:13:03.025 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:13:03.025 [http-nio-8080-exec-2] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:13:03.026 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.026 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:13:03.026 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 13:13:03.026 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:13:03.026 [http-nio-8080-exec-2] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:13:03.026 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.026 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:13:03.026 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 13:13:03.026 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:13:03.026 [http-nio-8080-exec-2] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:13:03.026 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.027 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:13:03.027 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 13:13:03.027 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:13:03.027 [http-nio-8080-exec-2] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:13:03.027 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.027 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:13:03.027 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 13:13:03.027 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:13:03.027 [http-nio-8080-exec-2] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:13:03.027 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:13:03.027 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.028 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:13:03.029 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.030 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:13:03.030 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 13:13:03.030 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:13:03.030 [http-nio-8080-exec-2] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:13:03.030 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:13:03.030 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:13:03.030 [http-nio-8080-exec-2] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 13:13:03.030 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 13:13:03.032 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.033 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 13:13:03.033 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 13:13:03.033 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 13:13:03.033 [http-nio-8080-exec-2] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 13:13:03.033 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:13:03.033 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.033 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:13:03.033 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 13:13:03.033 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:13:03.033 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:13:03.034 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.034 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:13:03.034 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 13:13:03.034 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:13:03.034 [http-nio-8080-exec-2] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:13:03.035 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.036 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.036 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.036 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:13:03.036 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:13:03.036 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:13:03.036 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:13:03.037 [http-nio-8080-exec-2] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:13:03.037 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.037 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:13:03.037 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 13:13:03.037 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:13:03.039 [http-nio-8080-exec-2] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:13:03.039 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.039 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:13:03.046 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 13:13:03.047 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:13:03.047 [http-nio-8080-exec-2] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:13:03.047 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:13:03.047 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:13:03.047 [http-nio-8080-exec-2] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 13:13:03.047 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 13:13:03.050 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.050 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 13:13:03.051 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 13:13:03.051 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 13:13:03.051 [http-nio-8080-exec-2] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 13:13:03.054 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:13:03.055 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.055 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:13:03.055 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 13:13:03.055 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:13:03.055 [http-nio-8080-exec-2] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:13:03.055 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.055 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:13:03.055 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 13:13:03.055 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:13:03.055 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:13:03.055 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.057 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.057 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.057 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:13:03.057 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:13:03.057 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:13:03.057 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:13:03.057 [http-nio-8080-exec-2] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] PropertyBinder - Building property director
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.058 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:13:03.059 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:13:03.060 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:13:03.060 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:13:03.060 [http-nio-8080-exec-2] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 13:13:03.060 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.060 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:13:03.060 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 13:13:03.061 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:13:03.061 [http-nio-8080-exec-2] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:13:03.061 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.061 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:13:03.061 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 13:13:03.061 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:13:03.061 [http-nio-8080-exec-2] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:13:03.061 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.063 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:13:03.064 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 13:13:03.064 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:13:03.064 [http-nio-8080-exec-2] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:13:03.065 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.066 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:13:03.066 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 13:13:03.066 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:13:03.066 [http-nio-8080-exec-2] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:13:03.066 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.066 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:13:03.066 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 13:13:03.066 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:13:03.066 [http-nio-8080-exec-2] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:13:03.066 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:13:03.067 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.067 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:13:03.067 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.067 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:13:03.067 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 13:13:03.067 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:13:03.067 [http-nio-8080-exec-2] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:13:03.067 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:13:03.067 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:13:03.067 [http-nio-8080-exec-2] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 13:13:03.067 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 13:13:03.070 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.070 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 13:13:03.071 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 13:13:03.071 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 13:13:03.071 [http-nio-8080-exec-2] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 13:13:03.073 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:13:03.074 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.074 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 13:13:03.074 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 13:13:03.074 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 13:13:03.074 [http-nio-8080-exec-2] PropertyBinder - Building property category
[DEBUG] 2020-02-28 13:13:03.075 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.075 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:13:03.075 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 13:13:03.075 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:13:03.075 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:13:03.075 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.075 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:13:03.075 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 13:13:03.076 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:13:03.076 [http-nio-8080-exec-2] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:13:03.077 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.077 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:13:03.077 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 13:13:03.077 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:13:03.077 [http-nio-8080-exec-2] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:13:03.077 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.077 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:13:03.077 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 13:13:03.077 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:13:03.077 [http-nio-8080-exec-2] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:13:03.077 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:13:03.077 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.077 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:13:03.077 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:13:03.079 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:13:03.079 [http-nio-8080-exec-2] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 13:13:03.079 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 13:13:03.083 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.086 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 13:13:03.086 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 13:13:03.086 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 13:13:03.086 [http-nio-8080-exec-2] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 13:13:03.086 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:13:03.087 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.087 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:13:03.087 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 13:13:03.093 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:13:03.093 [http-nio-8080-exec-2] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:13:03.093 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:13:03.093 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:13:03.093 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 13:13:03.093 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:13:03.093 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:13:03.093 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:13:03.094 [http-nio-8080-exec-2] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:13:03.096 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.096 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:13:03.096 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 13:13:03.096 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:13:03.096 [http-nio-8080-exec-2] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:13:03.097 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.097 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 13:13:03.097 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 13:13:03.097 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 13:13:03.097 [http-nio-8080-exec-2] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 13:13:03.097 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:13:03.097 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:13:03.097 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 13:13:03.097 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:13:03.097 [http-nio-8080-exec-2] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:13:03.100 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:13:03.101 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:13:03.101 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 13:13:03.101 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:13:03.101 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:13:03.101 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 13:13:03.101 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:13:03.101 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 13:13:03.101 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:13:03.101 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:13:03.101 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:13:03.101 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:13:03.101 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:13:03.103 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:13:03.103 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 13:13:03.103 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 13:13:03.103 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:13:03.103 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:13:03.103 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:13:03.103 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:13:03.103 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 13:13:03.103 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:13:03.103 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:13:03.103 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:13:03.103 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:13:03.103 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:13:03.103 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 13:13:03.103 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:13:03.112 [http-nio-8080-exec-2] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 13:13:03.112 [http-nio-8080-exec-2] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 13:13:03.112 [http-nio-8080-exec-2] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 13:13:03.112 [http-nio-8080-exec-2] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 13:13:03.112 [http-nio-8080-exec-2] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 13:13:03.112 [http-nio-8080-exec-2] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 13:13:03.112 [http-nio-8080-exec-2] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 13:13:03.112 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:13:03.113 [http-nio-8080-exec-2] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:13:03.116 [http-nio-8080-exec-2] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:13:03.116 [http-nio-8080-exec-2] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:13:03.117 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 13:13:03.117 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:13:03.117 [http-nio-8080-exec-2] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:13:03.117 [http-nio-8080-exec-2] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:13:03.117 [http-nio-8080-exec-2] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:13:03.117 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 13:13:03.117 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:13:03.117 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 13:13:03.117 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 13:13:03.117 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 13:13:03.117 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:13:03.118 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:13:03.118 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 13:13:03.118 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 13:13:03.118 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 13:13:03.118 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:13:03.118 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:13:03.118 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 13:13:03.118 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 13:13:03.118 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 13:13:03.118 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:13:03.118 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:13:03.118 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 13:13:03.118 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 13:13:03.118 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 13:13:03.120 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:13:03.120 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:13:03.121 [http-nio-8080-exec-2] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:13:03.121 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:13:03.121 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 13:13:03.121 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:13:03.122 [http-nio-8080-exec-2] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:13:03.122 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:13:03.122 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 13:13:03.122 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:13:03.122 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:13:03.124 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:13:03.124 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:13:03.125 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:13:03.125 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:13:03.125 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:13:03.125 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:13:03.125 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:13:03.130 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:13:03.130 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:13:03.133 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:13:03.133 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:13:03.133 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:13:03.133 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:13:03.133 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:13:03.133 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:13:03.133 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:13:03.200 [http-nio-8080-exec-2] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Statistics: disabled
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 13:13:03.201 [http-nio-8080-exec-2] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 13:13:03.202 [http-nio-8080-exec-2] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 13:13:03.202 [http-nio-8080-exec-2] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 13:13:03.202 [http-nio-8080-exec-2] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 13:13:03.202 [http-nio-8080-exec-2] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 13:13:03.202 [http-nio-8080-exec-2] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 13:13:03.202 [http-nio-8080-exec-2] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 13:13:03.202 [http-nio-8080-exec-2] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 13:13:03.202 [http-nio-8080-exec-2] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 13:13:03.202 [http-nio-8080-exec-2] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 13:13:03.202 [http-nio-8080-exec-2] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 13:13:03.202 [http-nio-8080-exec-2] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 13:13:03.202 [http-nio-8080-exec-2] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 13:13:03.323 [http-nio-8080-exec-2] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 13:13:03.359 [http-nio-8080-exec-2] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 13:13:03.359 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@39ef24b2, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 13:13:03.384 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:13:03.384 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:13:03.386 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:13:03.387 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:13:03.389 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:13:03.390 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:13:03.393 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:13:03.393 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:13:03.394 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:13:03.394 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:13:03.395 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:13:03.396 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:13:03.398 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:13:03.398 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:13:03.401 [http-nio-8080-exec-2] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 13:13:03.402 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 13:13:03.402 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@206385a1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5bbd4015]
[DEBUG] 2020-02-28 13:13:03.446 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:13:03.446 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:13:03.457 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:13:03.457 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:13:03.741 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:13:03.741 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:13:03.742 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:13:03.742 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:13:03.774 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:13:03.774 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:13:03.774 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:13:03.774 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:13:03.793 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:13:03.793 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:13:03.793 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:13:03.793 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:13:03.813 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:13:03.813 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:13:03.814 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:13:03.814 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:13:03.851 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:13:03.851 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:13:03.854 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:13:03.854 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:13:03.907 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:13:03.907 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:13:03.907 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:13:03.908 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:13:03.951 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:13:03.951 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 13:13:03.951 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 13:13:03.951 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 13:13:03.951 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 13:13:03.957 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:13:03.957 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 13:13:03.957 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 13:13:03.957 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 13:13:03.957 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 13:13:03.958 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:13:03.958 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 13:13:03.958 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 13:13:03.958 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 13:13:03.958 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:13:03.960 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 13:13:03.961 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:13:03.961 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 13:13:03.961 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 13:13:03.961 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 13:13:03.961 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 13:13:03.964 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:13:03.964 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 13:13:03.964 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 13:13:03.964 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:13:03.964 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 13:13:03.964 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 13:13:03.964 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:13:03.990 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@164916d8]
[DEBUG] 2020-02-28 13:13:03.991 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:13:03.991 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:03.991 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:13:03.994 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e84b28a]
[DEBUG] 2020-02-28 13:13:03.995 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@560fc495]
[DEBUG] 2020-02-28 13:13:03.995 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:13:03.995 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:13:03.995 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:13:03.995 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:13:03.995 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4805cd3b]
[DEBUG] 2020-02-28 13:13:03.995 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27a188c8]
[DEBUG] 2020-02-28 13:13:03.995 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:13:03.995 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:13:03.995 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:13:03.995 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:13:03.995 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:03.995 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:13:03.995 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@489b7e41]
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ec57f06]
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@676052b1]
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40645ad2]
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25f46db5]
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:13:03.997 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:13:03.998 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:13:03.998 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:13:03.998 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:13:03.998 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c971a68]
[DEBUG] 2020-02-28 13:13:03.998 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@762fe95a]
[DEBUG] 2020-02-28 13:13:03.998 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:13:03.998 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:13:03.998 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:13:03.999 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@662dbda8]
[DEBUG] 2020-02-28 13:13:04.000 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:13:04.000 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:13:04.000 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.009 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.015 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5efe0bd2]
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32b87c22]
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7732554]
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@297d1ef3]
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2864fa46]
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:04.016 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:13:04.017 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@594cda04]
[DEBUG] 2020-02-28 13:13:04.017 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:13:04.017 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:13:04.017 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:13:04.017 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:13:04.017 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:13:04.017 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6401978]
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@979653c]
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@365a12ed]
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29218d27]
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b95b0ce]
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ef85c2e]
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@67c8fa99]
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.018 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.019 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:13:04.019 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:13:04.028 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dfcdb4d]
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4311790d]
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1aa14644]
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5737a2]
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5546ec14]
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@425193ce]
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14d8dde2]
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a59f354]
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1b3f11f7]
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:13:04.029 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.030 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.030 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:13:04.030 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:13:04.030 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a1e5f38]
[DEBUG] 2020-02-28 13:13:04.031 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:13:04.031 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.032 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:13:04.032 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:13:04.032 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:04.032 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:13:04.032 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c9bc4cb]
[DEBUG] 2020-02-28 13:13:04.032 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:13:04.032 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:13:04.032 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:13:04.032 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:13:04.032 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:13:04.032 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:13:04.032 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:13:04.032 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@515a9921]
[DEBUG] 2020-02-28 13:13:04.032 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58b85c42]
[DEBUG] 2020-02-28 13:13:04.033 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:13:04.033 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:13:04.033 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:13:04.033 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:13:04.033 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:13:04.033 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:13:04.033 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2af76602]
[DEBUG] 2020-02-28 13:13:04.033 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cc15db6]
[DEBUG] 2020-02-28 13:13:04.033 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:13:04.033 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:13:04.033 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:13:04.033 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:13:04.033 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:13:04.033 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:13:04.033 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7241f4ac]
[DEBUG] 2020-02-28 13:13:04.033 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41b2bbf]
[DEBUG] 2020-02-28 13:13:04.034 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:13:04.034 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:13:04.034 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:13:04.034 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@470b4802]
[DEBUG] 2020-02-28 13:13:04.034 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:13:04.034 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.034 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.035 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:13:04.035 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:13:04.035 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:13:04.035 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:13:04.035 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:13:04.035 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 13:13:04.035 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 13:13:04.035 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:13:04.035 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 13:13:04.035 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 13:13:04.035 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:13:04.035 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6391e029]
[DEBUG] 2020-02-28 13:13:04.035 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.035 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:13:04.035 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23dc6dbc]
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15ec5b37]
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78c2db7c]
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38b3e855]
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42bdd79b]
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35ff1918]
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b882de0]
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7c5e8784]
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.036 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d096254]
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f1e7ef5]
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15582727]
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3757e3cf]
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b42da06]
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@278d0e43]
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:13:04.037 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:13:04.038 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73b8748a]
[DEBUG] 2020-02-28 13:13:04.038 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b79a8a9]
[DEBUG] 2020-02-28 13:13:04.038 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:13:04.038 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:13:04.038 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:13:04.038 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2636cf2a]
[DEBUG] 2020-02-28 13:13:04.040 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:13:04.040 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.040 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.041 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:13:04.042 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:13:04.042 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:13:04.043 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:13:04.043 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:13:04.043 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 13:13:04.043 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 13:13:04.043 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:13:04.043 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 13:13:04.043 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 13:13:04.043 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:13:04.043 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@592a1727]
[DEBUG] 2020-02-28 13:13:04.043 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.043 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:13:04.043 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fff1d1a]
[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27346bb6]
[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e2ed358]
[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40f53e65]
[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44189416]
[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:04.044 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c743bde]
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:04.045 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d743de2]
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20dbd0c2]
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d75f468]
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31d24309]
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4975d80f]
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37d64c23]
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15a23805]
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:13:04.046 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:13:04.047 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:13:04.047 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:13:04.047 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:13:04.047 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@542b1181]
[DEBUG] 2020-02-28 13:13:04.047 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:13:04.047 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:13:04.047 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.047 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.049 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:13:04.049 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:13:04.049 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39b216c8]
[DEBUG] 2020-02-28 13:13:04.049 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:13:04.049 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:13:04.049 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.049 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:13:04.049 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:13:04.049 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:13:04.049 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:13:04.049 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:13:04.049 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd8349d]
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39cb8594]
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2745090]
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68e2e09f]
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e8ac6f0]
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:13:04.050 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b080d90]
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bd828b1]
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7ebc6f2]
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.051 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.057 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:13:04.058 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@373da65b]
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23026881]
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@94c13f4]
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@531973f8]
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16b050bb]
[DEBUG] 2020-02-28 13:13:04.059 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:13:04.060 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:13:04.060 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:13:04.060 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:13:04.060 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:13:04.060 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:13:04.060 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2646748c]
[DEBUG] 2020-02-28 13:13:04.061 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f7c0003]
[DEBUG] 2020-02-28 13:13:04.061 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:13:04.061 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:13:04.061 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:13:04.062 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:13:04.062 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:13:04.062 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:13:04.062 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56346598]
[DEBUG] 2020-02-28 13:13:04.062 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79e70b45]
[DEBUG] 2020-02-28 13:13:04.062 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:13:04.062 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:13:04.062 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:13:04.062 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3fa617da]
[DEBUG] 2020-02-28 13:13:04.062 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:13:04.062 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@158c62bc]
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b673be8]
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35f466b2]
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@439b6b32]
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cb569c]
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72918716]
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6446be00]
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48fec51c]
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1919d4bd]
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@147025c]
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:13:04.063 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.064 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.064 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:13:04.065 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:13:04.066 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:13:04.066 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@543c57b4]
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@692e0292]
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@328eb71e]
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:13:04.068 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@439c70c]
[DEBUG] 2020-02-28 13:13:04.069 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:13:04.069 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.069 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:13:04.069 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:13:04.069 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5daf4551]
[DEBUG] 2020-02-28 13:13:04.069 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ade2fbd]
[DEBUG] 2020-02-28 13:13:04.069 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:13:04.069 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:13:04.069 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:13:04.069 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:13:04.070 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.070 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.070 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:13:04.070 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:13:04.070 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:13:04.070 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:13:04.073 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38530c0f]
[DEBUG] 2020-02-28 13:13:04.073 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70d9ad9c]
[DEBUG] 2020-02-28 13:13:04.073 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:13:04.073 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:13:04.073 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.073 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:13:04.073 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:13:04.073 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:13:04.073 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:13:04.073 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:13:04.073 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:04.073 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:13:04.075 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:13:04.075 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:13:04.075 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.077 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.077 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 13:13:04.077 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 13:13:04.077 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3986bc06]
[DEBUG] 2020-02-28 13:13:04.077 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34558c8e]
[DEBUG] 2020-02-28 13:13:04.077 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.078 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:13:04.078 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:04.078 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:13:04.078 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:13:04.078 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.078 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.078 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 13:13:04.078 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d3d1f7]
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1efa0c5f]
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25f82527]
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b2e4d33]
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@144359d8]
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d1dc9b6]
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:04.079 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f896348]
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1567bd83]
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76d496e0]
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62533851]
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cdccfff]
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@747ffa42]
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@264e11bb]
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5da42493]
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:13:04.080 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.081 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c9a75dd]
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fb7821e]
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d265215]
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ec298dd]
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a7a05b5]
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38bb2abe]
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12155904]
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38e8b15e]
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c0b81da]
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d04ae3f]
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e10de2]
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@78fe2e41]
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.082 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.083 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:13:04.083 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 13:13:04.083 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@601649b3]
[DEBUG] 2020-02-28 13:13:04.083 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d95c64e]
[DEBUG] 2020-02-28 13:13:04.083 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:13:04.083 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.083 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:13:04.083 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:13:04.083 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:13:04.083 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:13:04.083 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:13:04.083 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:13:04.083 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:13:04.083 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.084 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.084 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 13:13:04.084 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 13:13:04.084 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@156ff78f]
[DEBUG] 2020-02-28 13:13:04.084 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@568be4da]
[DEBUG] 2020-02-28 13:13:04.084 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.084 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:13:04.084 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:13:04.084 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:13:04.084 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:13:04.086 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:04.086 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f73bad2]
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26d736d2]
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35711ac2]
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a0fdb18]
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@577a5ef3]
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6401a97f]
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:13:04.087 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:13:04.088 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:13:04.088 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:13:04.088 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:13:04.088 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:13:04.088 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 13:13:04.088 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 13:13:04.112 [http-nio-8080-exec-2] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 13:13:04.112 [http-nio-8080-exec-2] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 13:13:04.112 [http-nio-8080-exec-2] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 13:13:04.117 [http-nio-8080-exec-2] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 13:13:04.117 [http-nio-8080-exec-2] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 13:13:04.118 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 13:13:04.118 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 13:13:04.119 [http-nio-8080-exec-2] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@17cd26ba
[DEBUG] 2020-02-28 13:13:04.121 [http-nio-8080-exec-2] SessionFactoryRegistry - Registering SessionFactory: addf3ffb-baef-44b1-abfb-d04adfcbb3e0 (<unnamed>)
[DEBUG] 2020-02-28 13:13:04.121 [http-nio-8080-exec-2] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 13:13:04.167 [http-nio-8080-exec-2] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 13:13:04.187 [http-nio-8080-exec-2] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:13:04.202 [http-nio-8080-exec-2] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@78536a8a
[DEBUG] 2020-02-28 13:13:04.223 [http-nio-8080-exec-2] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:13:04.227 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:13:04.235 [http-nio-8080-exec-2] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 13:13:04.255 [http-nio-8080-exec-2] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 13:13:04.278 [http-nio-8080-exec-2] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 13:13:04.278 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 13:13:04.279 [http-nio-8080-exec-2] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 13:13:04.280 [http-nio-8080-exec-2] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 13:13:04.288 [http-nio-8080-exec-2] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 13:13:04.288 [http-nio-8080-exec-2] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 13:13:04.288 [http-nio-8080-exec-2] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 13:13:04.288 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:13:04.293 [http-nio-8080-exec-2] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:13:04.293 [http-nio-8080-exec-2] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:13:04.293 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:13:04.314 [http-nio-8080-exec-2] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:13:04.381 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:13:04.384 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:13:04.450 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:13:04.450 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:13:04.450 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.450 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:13:04.451 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.451 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:13:04.451 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.451 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:13:04.451 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.451 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:13:04.451 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.451 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:13:04.451 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.464 [http-nio-8080-exec-2] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:13:04.496 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:13:04.498 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:13:04.505 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:13:04.514 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:13:04.514 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:13:04.515 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.515 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:13:04.515 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.515 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:13:04.515 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.515 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:13:04.515 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.515 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:13:04.515 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.517 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@57266974
[DEBUG] 2020-02-28 13:13:04.518 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.519 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:13:04.519 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:13:04.520 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:13:04.520 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.521 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:13:04.521 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.521 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:13:04.521 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.521 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:13:04.521 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:04.522 [http-nio-8080-exec-2] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:13:04.522 [http-nio-8080-exec-2] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:13:04.526 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:13:04.526 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:13:04.527 [http-nio-8080-exec-2] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:13:04.527 [http-nio-8080-exec-2] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:13:04.528 [http-nio-8080-exec-2] Loader - Done entity load
[DEBUG] 2020-02-28 13:13:04.528 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:13:04.529 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:13:04.529 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:13:04.529 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:13:04.530 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:13:04.530 [http-nio-8080-exec-2] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:13:04.530 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:13:04.532 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:13:08.293 [http-nio-8080-exec-5] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:13:08.293 [http-nio-8080-exec-5] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:13:08.295 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:13:08.295 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:13:08.295 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:13:08.295 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:13:08.295 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.295 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:13:08.296 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.296 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:13:08.296 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.296 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:13:08.296 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.296 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:13:08.296 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.296 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:13:08.296 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.296 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:13:08.297 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:13:08.297 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6c66016a
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:13:08.298 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.299 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:13:08.299 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.299 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:13:08.299 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.299 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:13:08.302 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:13:08.302 [http-nio-8080-exec-5] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:13:08.302 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:13:08.307 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:13:08.307 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:13:08.307 [http-nio-8080-exec-5] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:13:08.311 [http-nio-8080-exec-5] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:13:08.311 [http-nio-8080-exec-5] Loader - Done entity load
[DEBUG] 2020-02-28 13:13:08.311 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:13:08.311 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:13:08.311 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:13:08.311 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:13:08.311 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:13:08.312 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:13:08.312 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:13:08.312 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:19:12.741 [http-nio-8080-exec-25] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 13:19:12.742 [http-nio-8080-exec-25] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 13:19:12.745 [http-nio-8080-exec-25] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 13:19:12.844 [http-nio-8080-exec-25] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 13:19:12.848 [http-nio-8080-exec-25] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 13:19:12.989 [http-nio-8080-exec-25] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 13:19:12.990 [http-nio-8080-exec-25] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 13:19:12.991 [http-nio-8080-exec-25] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 13:19:13.197 [http-nio-8080-exec-25] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 13:19:13.221 [http-nio-8080-exec-25] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 13:19:13.222 [http-nio-8080-exec-25] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 13:19:13.241 [http-nio-8080-exec-25] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 13:19:13.288 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@42d6d39a
[DEBUG] 2020-02-28 13:19:13.288 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@42d6d39a
[DEBUG] 2020-02-28 13:19:13.288 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@42d6d39a
[DEBUG] 2020-02-28 13:19:13.289 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5c1e504c
[DEBUG] 2020-02-28 13:19:13.290 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c2a95e4
[DEBUG] 2020-02-28 13:19:13.291 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5cc3a43
[DEBUG] 2020-02-28 13:19:13.292 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@73487f8e
[DEBUG] 2020-02-28 13:19:13.292 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@73487f8e
[DEBUG] 2020-02-28 13:19:13.292 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@73487f8e
[DEBUG] 2020-02-28 13:19:13.293 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2c6bb2d0
[DEBUG] 2020-02-28 13:19:13.293 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2c6bb2d0
[DEBUG] 2020-02-28 13:19:13.293 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c6bb2d0
[DEBUG] 2020-02-28 13:19:13.294 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@42b8064d
[DEBUG] 2020-02-28 13:19:13.294 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@42b8064d
[DEBUG] 2020-02-28 13:19:13.294 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@42b8064d
[DEBUG] 2020-02-28 13:19:13.295 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@54a17e73
[DEBUG] 2020-02-28 13:19:13.295 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@54a17e73
[DEBUG] 2020-02-28 13:19:13.296 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@54a17e73
[DEBUG] 2020-02-28 13:19:13.297 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@349c41
[DEBUG] 2020-02-28 13:19:13.298 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@349c41
[DEBUG] 2020-02-28 13:19:13.298 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@349c41
[DEBUG] 2020-02-28 13:19:13.298 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@a7cb8fc
[DEBUG] 2020-02-28 13:19:13.299 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@a7cb8fc
[DEBUG] 2020-02-28 13:19:13.299 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a7cb8fc
[DEBUG] 2020-02-28 13:19:13.300 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@19fa6bf3
[DEBUG] 2020-02-28 13:19:13.300 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@19fa6bf3
[DEBUG] 2020-02-28 13:19:13.300 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@19fa6bf3
[DEBUG] 2020-02-28 13:19:13.301 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5da9be11
[DEBUG] 2020-02-28 13:19:13.301 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5da9be11
[DEBUG] 2020-02-28 13:19:13.302 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@57b34dbf
[DEBUG] 2020-02-28 13:19:13.302 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@57b34dbf
[DEBUG] 2020-02-28 13:19:13.302 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5b1f692d
[DEBUG] 2020-02-28 13:19:13.309 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5b1f692d
[DEBUG] 2020-02-28 13:19:13.310 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@336babfb
[DEBUG] 2020-02-28 13:19:13.310 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31d1f0bd
[DEBUG] 2020-02-28 13:19:13.311 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1084d60
[DEBUG] 2020-02-28 13:19:13.311 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1084d60
[DEBUG] 2020-02-28 13:19:13.313 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3d6a1757
[DEBUG] 2020-02-28 13:19:13.313 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3d6a1757
[DEBUG] 2020-02-28 13:19:13.317 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@edc37e8
[DEBUG] 2020-02-28 13:19:13.318 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@edc37e8
[DEBUG] 2020-02-28 13:19:13.320 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@34c04776
[DEBUG] 2020-02-28 13:19:13.320 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@34c04776
[DEBUG] 2020-02-28 13:19:13.321 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ff1c137
[DEBUG] 2020-02-28 13:19:13.321 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ff1c137
[DEBUG] 2020-02-28 13:19:13.323 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@15a9482c
[DEBUG] 2020-02-28 13:19:13.323 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@15a9482c
[DEBUG] 2020-02-28 13:19:13.324 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@31db506e
[DEBUG] 2020-02-28 13:19:13.324 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@31db506e
[DEBUG] 2020-02-28 13:19:13.326 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41a1e3ec
[DEBUG] 2020-02-28 13:19:13.326 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41a1e3ec
[DEBUG] 2020-02-28 13:19:13.329 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7147777d
[DEBUG] 2020-02-28 13:19:13.329 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7147777d
[DEBUG] 2020-02-28 13:19:13.333 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@507643b9
[DEBUG] 2020-02-28 13:19:13.333 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@507643b9
[DEBUG] 2020-02-28 13:19:13.335 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@c8d21e8
[DEBUG] 2020-02-28 13:19:13.335 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c8d21e8
[DEBUG] 2020-02-28 13:19:13.336 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@dc08a46
[DEBUG] 2020-02-28 13:19:13.337 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@dc08a46
[DEBUG] 2020-02-28 13:19:13.337 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@dc08a46
[DEBUG] 2020-02-28 13:19:13.339 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a9b107
[DEBUG] 2020-02-28 13:19:13.341 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@d0de17c
[DEBUG] 2020-02-28 13:19:13.341 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@d0de17c
[DEBUG] 2020-02-28 13:19:13.341 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@d0de17c
[DEBUG] 2020-02-28 13:19:13.342 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4ed7e07
[DEBUG] 2020-02-28 13:19:13.343 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@10dbd79
[DEBUG] 2020-02-28 13:19:13.344 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10dbd79
[DEBUG] 2020-02-28 13:19:13.344 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2c5d545e
[DEBUG] 2020-02-28 13:19:13.344 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2c5d545e
[DEBUG] 2020-02-28 13:19:13.345 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@ebfa1f8
[DEBUG] 2020-02-28 13:19:13.345 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@ebfa1f8
[DEBUG] 2020-02-28 13:19:13.346 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@52ff9bff
[DEBUG] 2020-02-28 13:19:13.346 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52ff9bff
[DEBUG] 2020-02-28 13:19:13.347 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@75670a13
[DEBUG] 2020-02-28 13:19:13.348 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@75670a13
[DEBUG] 2020-02-28 13:19:13.349 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@279179e5
[DEBUG] 2020-02-28 13:19:13.351 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6deb92c0
[DEBUG] 2020-02-28 13:19:13.351 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6deb92c0
[DEBUG] 2020-02-28 13:19:13.351 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6deb92c0
[DEBUG] 2020-02-28 13:19:13.353 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4e4284ad
[DEBUG] 2020-02-28 13:19:13.353 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4e4284ad
[DEBUG] 2020-02-28 13:19:13.353 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4e4284ad
[DEBUG] 2020-02-28 13:19:13.354 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@65741028
[DEBUG] 2020-02-28 13:19:13.354 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6b3f8b93
[DEBUG] 2020-02-28 13:19:13.355 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2f5218fb
[DEBUG] 2020-02-28 13:19:13.356 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2f5218fb
[DEBUG] 2020-02-28 13:19:13.356 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2f5218fb
[DEBUG] 2020-02-28 13:19:13.357 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@56480af6
[DEBUG] 2020-02-28 13:19:13.357 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@56480af6
[DEBUG] 2020-02-28 13:19:13.357 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@56480af6
[DEBUG] 2020-02-28 13:19:13.357 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@14e27c4f
[DEBUG] 2020-02-28 13:19:13.357 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7c72aaae
[DEBUG] 2020-02-28 13:19:13.358 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5718d0a8
[DEBUG] 2020-02-28 13:19:13.358 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5718d0a8
[DEBUG] 2020-02-28 13:19:13.359 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@669c7506
[DEBUG] 2020-02-28 13:19:13.359 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@55089cce
[DEBUG] 2020-02-28 13:19:13.360 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55089cce
[DEBUG] 2020-02-28 13:19:13.361 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5051342d
[DEBUG] 2020-02-28 13:19:13.361 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5051342d
[DEBUG] 2020-02-28 13:19:13.362 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71f1b78e
[DEBUG] 2020-02-28 13:19:13.362 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@605150a2
[DEBUG] 2020-02-28 13:19:13.363 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@22f435b6
[DEBUG] 2020-02-28 13:19:13.366 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2b06dd74
[DEBUG] 2020-02-28 13:19:13.367 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2b06dd74
[DEBUG] 2020-02-28 13:19:13.368 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@995ff43
[DEBUG] 2020-02-28 13:19:13.368 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@49b74b68
[DEBUG] 2020-02-28 13:19:13.368 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2d77f3a3
[DEBUG] 2020-02-28 13:19:13.368 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@12c3b006
[DEBUG] 2020-02-28 13:19:13.368 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@348a2afa
[DEBUG] 2020-02-28 13:19:13.368 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4795db08
[DEBUG] 2020-02-28 13:19:13.368 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@556dd2b2
[DEBUG] 2020-02-28 13:19:13.368 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5aa11b99
[DEBUG] 2020-02-28 13:19:13.407 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 13:19:13.408 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 13:19:13.408 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:19:13.408 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:19:13.409 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 13:19:13.410 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 13:19:13.411 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 13:19:13.413 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:19:13.414 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 13:19:13.417 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 13:19:13.420 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 13:19:13.421 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 13:19:13.421 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:19:13.422 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 13:19:13.430 [http-nio-8080-exec-25] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 13:19:13.430 [http-nio-8080-exec-25] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 13:19:13.430 [http-nio-8080-exec-25] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 13:19:13.560 [http-nio-8080-exec-25] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 13:19:13.912 [http-nio-8080-exec-25] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:19:13.912 [http-nio-8080-exec-25] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:19:13.912 [http-nio-8080-exec-25] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 13:19:13.939 [http-nio-8080-exec-25] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 13:19:13.954 [http-nio-8080-exec-25] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 13:19:13.989 [http-nio-8080-exec-25] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 13:19:14.014 [http-nio-8080-exec-25] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 13:19:14.018 [http-nio-8080-exec-25] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5fb66fa9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74577b73]
[DEBUG] 2020-02-28 13:19:14.053 [http-nio-8080-exec-25] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:19:14.069 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:19:14.072 [http-nio-8080-exec-25] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 13:19:14.074 [http-nio-8080-exec-25] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 13:19:14.089 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.091 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 13:19:14.092 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 13:19:14.093 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 13:19:14.094 [http-nio-8080-exec-25] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 13:19:14.096 [http-nio-8080-exec-25] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:19:14.097 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.098 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:19:14.098 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 13:19:14.098 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:19:14.098 [http-nio-8080-exec-25] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:19:14.098 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.098 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 13:19:14.098 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 13:19:14.098 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 13:19:14.098 [http-nio-8080-exec-25] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 13:19:14.098 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:19:14.098 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:19:14.098 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 13:19:14.098 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:19:14.099 [http-nio-8080-exec-25] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:19:14.099 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.099 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:19:14.099 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 13:19:14.099 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:19:14.099 [http-nio-8080-exec-25] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:19:14.100 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:19:14.101 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.102 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.107 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.107 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.108 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:19:14.108 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:19:14.108 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:19:14.109 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:19:14.110 [http-nio-8080-exec-25] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 13:19:14.111 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:19:14.111 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.111 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.111 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.111 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.111 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:19:14.111 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:19:14.111 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:19:14.111 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:19:14.111 [http-nio-8080-exec-25] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:19:14.111 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.111 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:19:14.111 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 13:19:14.111 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:19:14.111 [http-nio-8080-exec-25] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:19:14.111 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] PropertyBinder - Building property password
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.112 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.113 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.113 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.113 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:19:14.113 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:19:14.113 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:19:14.113 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:19:14.113 [http-nio-8080-exec-25] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 13:19:14.113 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:19:14.113 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.113 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.113 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.114 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.114 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:19:14.114 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:19:14.114 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:19:14.114 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:19:14.114 [http-nio-8080-exec-25] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 13:19:14.114 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.114 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:19:14.114 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 13:19:14.114 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:19:14.114 [http-nio-8080-exec-25] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:19:14.114 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 13:19:14.114 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 13:19:14.114 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 13:19:14.114 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 13:19:14.114 [http-nio-8080-exec-25] PropertyBinder - Building property username
[DEBUG] 2020-02-28 13:19:14.118 [http-nio-8080-exec-25] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:19:14.118 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:19:14.118 [http-nio-8080-exec-25] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 13:19:14.118 [http-nio-8080-exec-25] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 13:19:14.120 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.121 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 13:19:14.121 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 13:19:14.121 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 13:19:14.121 [http-nio-8080-exec-25] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 13:19:14.121 [http-nio-8080-exec-25] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:19:14.121 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.121 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:19:14.121 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 13:19:14.121 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:19:14.121 [http-nio-8080-exec-25] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:19:14.128 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.128 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 13:19:14.128 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 13:19:14.128 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 13:19:14.128 [http-nio-8080-exec-25] PropertyBinder - Building property name
[DEBUG] 2020-02-28 13:19:14.129 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.129 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:19:14.129 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 13:19:14.130 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:19:14.130 [http-nio-8080-exec-25] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:19:14.131 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 13:19:14.131 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.133 [http-nio-8080-exec-25] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:19:14.133 [http-nio-8080-exec-25] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:19:14.133 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:19:14.133 [http-nio-8080-exec-25] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 13:19:14.133 [http-nio-8080-exec-25] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 13:19:14.135 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.135 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 13:19:14.135 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 13:19:14.135 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 13:19:14.135 [http-nio-8080-exec-25] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 13:19:14.135 [http-nio-8080-exec-25] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:19:14.135 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.135 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 13:19:14.135 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 13:19:14.135 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 13:19:14.135 [http-nio-8080-exec-25] PropertyBinder - Building property author
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:19:14.136 [http-nio-8080-exec-25] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:19:14.137 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.137 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:19:14.137 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 13:19:14.137 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:19:14.137 [http-nio-8080-exec-25] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:19:14.137 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.137 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:19:14.137 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 13:19:14.137 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:19:14.137 [http-nio-8080-exec-25] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:19:14.137 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.137 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:19:14.137 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 13:19:14.138 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:19:14.138 [http-nio-8080-exec-25] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:19:14.138 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.138 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:19:14.138 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 13:19:14.138 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:19:14.138 [http-nio-8080-exec-25] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:19:14.138 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:19:14.138 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.139 [http-nio-8080-exec-25] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:19:14.139 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.139 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:19:14.139 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 13:19:14.139 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:19:14.139 [http-nio-8080-exec-25] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:19:14.139 [http-nio-8080-exec-25] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:19:14.139 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:19:14.139 [http-nio-8080-exec-25] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 13:19:14.139 [http-nio-8080-exec-25] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 13:19:14.141 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.141 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 13:19:14.142 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 13:19:14.142 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 13:19:14.142 [http-nio-8080-exec-25] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 13:19:14.142 [http-nio-8080-exec-25] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:19:14.143 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.143 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:19:14.143 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 13:19:14.143 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:19:14.143 [http-nio-8080-exec-25] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:19:14.143 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.143 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:19:14.143 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 13:19:14.143 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:19:14.144 [http-nio-8080-exec-25] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:19:14.147 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.147 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.147 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.147 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:19:14.147 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:19:14.147 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:19:14.147 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:19:14.148 [http-nio-8080-exec-25] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:19:14.148 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.148 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:19:14.148 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 13:19:14.148 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:19:14.150 [http-nio-8080-exec-25] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:19:14.150 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.150 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:19:14.150 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 13:19:14.150 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:19:14.152 [http-nio-8080-exec-25] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:19:14.154 [http-nio-8080-exec-25] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:19:14.154 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:19:14.156 [http-nio-8080-exec-25] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 13:19:14.158 [http-nio-8080-exec-25] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 13:19:14.160 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.160 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 13:19:14.160 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 13:19:14.160 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 13:19:14.160 [http-nio-8080-exec-25] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 13:19:14.160 [http-nio-8080-exec-25] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] PropertyBinder - Building property director
[DEBUG] 2020-02-28 13:19:14.161 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:19:14.162 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 13:19:14.163 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:19:14.164 [http-nio-8080-exec-25] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:19:14.164 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:19:14.164 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.164 [http-nio-8080-exec-25] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:19:14.164 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.164 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:19:14.164 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 13:19:14.164 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:19:14.164 [http-nio-8080-exec-25] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:19:14.164 [http-nio-8080-exec-25] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:19:14.164 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:19:14.164 [http-nio-8080-exec-25] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 13:19:14.164 [http-nio-8080-exec-25] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 13:19:14.165 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.165 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 13:19:14.165 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 13:19:14.165 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 13:19:14.165 [http-nio-8080-exec-25] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 13:19:14.165 [http-nio-8080-exec-25] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:19:14.165 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.165 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 13:19:14.165 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 13:19:14.165 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 13:19:14.165 [http-nio-8080-exec-25] PropertyBinder - Building property category
[DEBUG] 2020-02-28 13:19:14.165 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.165 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:19:14.165 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 13:19:14.165 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:19:14.165 [http-nio-8080-exec-25] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 13:19:14.166 [http-nio-8080-exec-25] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 13:19:14.167 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.167 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 13:19:14.167 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 13:19:14.167 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 13:19:14.167 [http-nio-8080-exec-25] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 13:19:14.167 [http-nio-8080-exec-25] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:19:14.168 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:19:14.169 [http-nio-8080-exec-25] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:19:14.170 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:19:14.171 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:19:14.172 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 13:19:14.172 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:19:14.172 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 13:19:14.172 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:19:14.172 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 13:19:14.173 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:19:14.187 [http-nio-8080-exec-25] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 13:19:14.187 [http-nio-8080-exec-25] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 13:19:14.189 [http-nio-8080-exec-25] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 13:19:14.189 [http-nio-8080-exec-25] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 13:19:14.189 [http-nio-8080-exec-25] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 13:19:14.189 [http-nio-8080-exec-25] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 13:19:14.189 [http-nio-8080-exec-25] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 13:19:14.189 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:19:14.189 [http-nio-8080-exec-25] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:19:14.191 [http-nio-8080-exec-25] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:19:14.191 [http-nio-8080-exec-25] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:19:14.191 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 13:19:14.191 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:19:14.191 [http-nio-8080-exec-25] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:19:14.191 [http-nio-8080-exec-25] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:19:14.191 [http-nio-8080-exec-25] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:19:14.191 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 13:19:14.191 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:19:14.191 [http-nio-8080-exec-25] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 13:19:14.191 [http-nio-8080-exec-25] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 13:19:14.191 [http-nio-8080-exec-25] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:19:14.192 [http-nio-8080-exec-25] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:19:14.193 [http-nio-8080-exec-25] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:19:14.193 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 13:19:14.193 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:19:14.193 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:19:14.194 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:19:14.194 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:19:14.194 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:19:14.194 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:19:14.194 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:19:14.194 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:19:14.195 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:19:14.206 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:19:14.206 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:19:14.206 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:19:14.206 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:19:14.206 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:19:14.206 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:19:14.206 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:19:14.206 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:19:14.206 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Statistics: disabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 13:19:14.239 [http-nio-8080-exec-25] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 13:19:14.240 [http-nio-8080-exec-25] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 13:19:14.240 [http-nio-8080-exec-25] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 13:19:14.240 [http-nio-8080-exec-25] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 13:19:14.240 [http-nio-8080-exec-25] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 13:19:14.240 [http-nio-8080-exec-25] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 13:19:14.240 [http-nio-8080-exec-25] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 13:19:14.240 [http-nio-8080-exec-25] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 13:19:14.240 [http-nio-8080-exec-25] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 13:19:14.240 [http-nio-8080-exec-25] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 13:19:14.280 [http-nio-8080-exec-25] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 13:19:14.294 [http-nio-8080-exec-25] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 13:19:14.295 [http-nio-8080-exec-25] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@60c8f061, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 13:19:14.307 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:19:14.307 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:19:14.309 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:19:14.309 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:19:14.309 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:19:14.309 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:19:14.310 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:19:14.310 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:19:14.310 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:19:14.310 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:19:14.310 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:19:14.310 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:19:14.312 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:19:14.312 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:19:14.314 [http-nio-8080-exec-25] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 13:19:14.315 [http-nio-8080-exec-25] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 13:19:14.315 [http-nio-8080-exec-25] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5fb66fa9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@21db4f93]
[DEBUG] 2020-02-28 13:19:14.341 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:19:14.341 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:19:14.348 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:19:14.348 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:19:14.517 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:19:14.517 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:19:14.517 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:19:14.517 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:19:14.529 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:19:14.529 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:19:14.529 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:19:14.529 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:19:14.537 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:19:14.537 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:19:14.537 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:19:14.537 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:19:14.570 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:19:14.570 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:19:14.571 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:19:14.571 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:19:14.635 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:19:14.635 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:19:14.639 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:19:14.639 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:19:14.673 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:19:14.674 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:19:14.674 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:19:14.674 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:19:14.696 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:19:14.698 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 13:19:14.698 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 13:19:14.698 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 13:19:14.698 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 13:19:14.698 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:19:14.698 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 13:19:14.698 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 13:19:14.698 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 13:19:14.698 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 13:19:14.698 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:19:14.698 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 13:19:14.698 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 13:19:14.698 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 13:19:14.698 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 13:19:14.700 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:19:14.700 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:19:14.700 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:19:14.700 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:19:14.700 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 13:19:14.700 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:19:14.700 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:19:14.700 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:19:14.700 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:19:14.700 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 13:19:14.701 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:19:14.701 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 13:19:14.701 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:19:14.701 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:19:14.701 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 13:19:14.701 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:19:14.701 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 13:19:14.701 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:19:14.701 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:19:14.701 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 13:19:14.701 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:19:14.701 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 13:19:14.701 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 13:19:14.701 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 13:19:14.701 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 13:19:14.703 [http-nio-8080-exec-25] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:19:14.703 [http-nio-8080-exec-25] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 13:19:14.703 [http-nio-8080-exec-25] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 13:19:14.703 [http-nio-8080-exec-25] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:19:14.703 [http-nio-8080-exec-25] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 13:19:14.703 [http-nio-8080-exec-25] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 13:19:14.703 [http-nio-8080-exec-25] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:19:14.719 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@264901df]
[DEBUG] 2020-02-28 13:19:14.720 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:19:14.720 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.720 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:19:14.723 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ec4aa75]
[DEBUG] 2020-02-28 13:19:14.724 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f858401]
[DEBUG] 2020-02-28 13:19:14.724 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:19:14.724 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:19:14.724 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:19:14.724 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:19:14.724 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@345b76a2]
[DEBUG] 2020-02-28 13:19:14.724 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24947c77]
[DEBUG] 2020-02-28 13:19:14.724 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:19:14.724 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:19:14.724 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:19:14.724 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:19:14.724 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.724 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:19:14.724 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2457fe88]
[DEBUG] 2020-02-28 13:19:14.725 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:19:14.725 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:19:14.725 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:19:14.725 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:19:14.725 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:19:14.725 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e8eed3e]
[DEBUG] 2020-02-28 13:19:14.725 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bc23e90]
[DEBUG] 2020-02-28 13:19:14.725 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:19:14.725 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:19:14.725 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:19:14.725 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:19:14.725 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:19:14.725 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:19:14.725 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:19:14.725 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:19:14.726 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6781c8f3]
[DEBUG] 2020-02-28 13:19:14.726 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dad4c2d]
[DEBUG] 2020-02-28 13:19:14.726 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:19:14.726 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:19:14.726 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:19:14.726 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:19:14.726 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:19:14.727 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:19:14.727 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@582b3b43]
[DEBUG] 2020-02-28 13:19:14.727 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49daa8b7]
[DEBUG] 2020-02-28 13:19:14.727 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:19:14.727 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:19:14.727 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:19:14.727 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3a1a1959]
[DEBUG] 2020-02-28 13:19:14.728 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:19:14.728 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:19:14.729 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.737 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.741 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:19:14.742 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:19:14.742 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d7b48fe]
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30c450e3]
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7defd69d]
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a244d66]
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fe77d75]
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6db66922]
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46092ee1]
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c1ff80]
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c606983]
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42993c91]
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1fabf23e]
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14dd28ee]
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1a5b6624]
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:19:14.743 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.744 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.744 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:19:14.744 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:19:14.753 [http-nio-8080-exec-25] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:19:14.753 [http-nio-8080-exec-25] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:19:14.753 [http-nio-8080-exec-25] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:19:14.753 [http-nio-8080-exec-25] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 13:19:14.753 [http-nio-8080-exec-25] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 13:19:14.753 [http-nio-8080-exec-25] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:19:14.753 [http-nio-8080-exec-25] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 13:19:14.753 [http-nio-8080-exec-25] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 13:19:14.753 [http-nio-8080-exec-25] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:19:14.753 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63f327ac]
[DEBUG] 2020-02-28 13:19:14.753 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:19:14.753 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.753 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:19:14.753 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:19:14.753 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.753 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6608bc8b]
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a58629b]
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f13bd86]
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1cdcb20b]
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b0c076c]
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:19:14.754 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19812c8d]
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@123d6fb6]
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1fb8e951]
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b0e81bc]
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a1d92d2]
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:19:14.755 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@570038ba]
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d001f49]
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b0d8d39]
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5180c6ef]
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d67764b]
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a8762b6]
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2200e3e2]
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:19:14.756 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c2c8437]
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28053860]
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@614e4e85]
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@122ca61f]
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13eb5a02]
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41e7a062]
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@524ef4bd]
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2525acb5]
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6c57c959]
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:19:14.757 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@358165b9]
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f062c49]
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3db77750]
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4937e3b9]
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@178dfab2]
[DEBUG] 2020-02-28 13:19:14.758 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f311a15]
[DEBUG] 2020-02-28 13:19:14.759 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39bae754]
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fe6f1f1]
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@37c6dad5]
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:19:14.761 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e7e588b]
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@177e35b6]
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1396941c]
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fb03ce5]
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a893ba]
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22b9d167]
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:19:14.762 [http-nio-8080-exec-25] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c6096c1]
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@604bba60]
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24eb342a]
[DEBUG] 2020-02-28 13:19:14.764 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b4ef221]
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@466bcf92]
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61b6f8fd]
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c01ca85]
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1052ecde]
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:19:14.765 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:19:14.766 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:19:14.766 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:19:14.766 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:19:14.766 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4c3d6a57]
[DEBUG] 2020-02-28 13:19:14.766 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:19:14.766 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:19:14.766 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.766 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e86d114]
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18b1e58]
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:19:14.768 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20726bc9]
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb29b5d]
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42123fad]
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a73cdcc]
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@696cd968]
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@668bdf6b]
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7e46ed5b]
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:19:14.769 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.770 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.771 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:19:14.771 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:19:14.771 [http-nio-8080-exec-25] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48ed1b95]
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68d6569]
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@301ead3a]
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@100f291f]
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cc4c9d1]
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@718f410d]
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@343d557b]
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6cafa7d0]
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32e7a1b3]
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@711ec888]
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.772 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.773 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:19:14.773 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:19:14.773 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1feaff84]
[DEBUG] 2020-02-28 13:19:14.773 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:19:14.773 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:19:14.773 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.773 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:19:14.775 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:19:14.775 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1752fff2]
[DEBUG] 2020-02-28 13:19:14.775 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ba1fa9e]
[DEBUG] 2020-02-28 13:19:14.775 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ff2ab1]
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ae6fd8a]
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6acb224b]
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e7a5086]
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a9752f6]
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4615cb42]
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@40539e47]
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:19:14.776 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:19:14.777 [http-nio-8080-exec-25] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:19:14.777 [http-nio-8080-exec-25] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ebd82b]
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e04bfc2]
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c2387ed]
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.781 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b9e30c2]
[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40d625b0]
[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@303acea8]
[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:19:14.782 [http-nio-8080-exec-25] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:19:14.783 [http-nio-8080-exec-25] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:19:14.786 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5981ec8]
[DEBUG] 2020-02-28 13:19:14.786 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@525b15ae]
[DEBUG] 2020-02-28 13:19:14.786 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:19:14.786 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:19:14.786 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.786 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:19:14.786 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:19:14.786 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:19:14.786 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:19:14.786 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:19:14.786 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.786 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:19:14.786 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:19:14.787 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:19:14.787 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.788 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.789 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 13:19:14.789 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 13:19:14.789 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bcf50f8]
[DEBUG] 2020-02-28 13:19:14.789 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65e7a065]
[DEBUG] 2020-02-28 13:19:14.789 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.789 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:19:14.789 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.789 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:19:14.789 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:19:14.789 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.789 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50ef39af]
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8d35f5f]
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5de2b797]
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fd922d3]
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c8cedf2]
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a458f0a]
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ba0b9]
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@798f5d00]
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f24a0e4]
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31e45bd1]
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2df1db3b]
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:19:14.790 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e15f4d8]
[DEBUG] 2020-02-28 13:19:14.791 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@647c527e]
[DEBUG] 2020-02-28 13:19:14.791 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:19:14.791 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:19:14.791 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:19:14.791 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7755b7f3]
[DEBUG] 2020-02-28 13:19:14.791 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:19:14.791 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:19:14.791 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.791 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.791 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:19:14.791 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 13:19:14.791 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@295ac316]
[DEBUG] 2020-02-28 13:19:14.791 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c797f54]
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3fd53b88]
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@680160f9]
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b46d1dd]
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3da65ed3]
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec3e736]
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43960d0a]
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2107672e]
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ed8e51b]
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fe34da1]
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1ceef30a]
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f530441]
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a28c24f]
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:19:14.792 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56e44de3]
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a02d7ca]
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17c2e03b]
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b62c98e]
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c1612ea]
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11a5945f]
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3efafed6]
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d4f1f9a]
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 13:19:14.793 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 13:19:14.819 [http-nio-8080-exec-25] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 13:19:14.819 [http-nio-8080-exec-25] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 13:19:14.819 [http-nio-8080-exec-25] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 13:19:14.826 [http-nio-8080-exec-25] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 13:19:14.826 [http-nio-8080-exec-25] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 13:19:14.826 [http-nio-8080-exec-25] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 13:19:14.826 [http-nio-8080-exec-25] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 13:19:14.827 [http-nio-8080-exec-25] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@32a6f2d8
[DEBUG] 2020-02-28 13:19:14.828 [http-nio-8080-exec-25] SessionFactoryRegistry - Registering SessionFactory: 0b0eb883-aa80-45b1-8fd5-229d1bd19ae6 (<unnamed>)
[DEBUG] 2020-02-28 13:19:14.828 [http-nio-8080-exec-25] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 13:19:14.873 [http-nio-8080-exec-25] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 13:19:14.887 [http-nio-8080-exec-25] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:19:14.902 [http-nio-8080-exec-25] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1a3344cd
[DEBUG] 2020-02-28 13:19:14.916 [http-nio-8080-exec-25] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:19:14.919 [http-nio-8080-exec-25] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:19:14.922 [http-nio-8080-exec-25] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 13:19:14.934 [http-nio-8080-exec-25] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 13:19:14.943 [http-nio-8080-exec-25] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 13:19:14.943 [http-nio-8080-exec-25] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 13:19:14.944 [http-nio-8080-exec-25] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 13:19:14.944 [http-nio-8080-exec-25] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 13:19:14.949 [http-nio-8080-exec-25] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 13:19:14.949 [http-nio-8080-exec-25] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 13:19:14.950 [http-nio-8080-exec-25] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 13:19:14.950 [http-nio-8080-exec-25] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:19:14.953 [http-nio-8080-exec-25] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:19:14.953 [http-nio-8080-exec-25] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:19:14.953 [http-nio-8080-exec-25] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:19:14.962 [http-nio-8080-exec-25] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:19:14.977 [http-nio-8080-exec-25] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:19:14.979 [http-nio-8080-exec-25] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:19:14.985 [http-nio-8080-exec-25] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:19:14.985 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:19:14.985 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:14.985 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:19:14.985 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:14.985 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:19:14.985 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:14.985 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:19:14.985 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:14.985 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:19:14.985 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:14.985 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:19:14.985 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:14.988 [http-nio-8080-exec-25] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:19:15.023 [http-nio-8080-exec-25] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:19:15.025 [http-nio-8080-exec-25] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:19:15.030 [http-nio-8080-exec-25] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:19:15.042 [http-nio-8080-exec-25] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:19:15.042 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:19:15.042 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.042 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:19:15.042 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.042 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:19:15.042 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.042 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:19:15.042 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.042 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:19:15.042 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.044 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:19:15.044 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.044 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:19:15.044 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.044 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:19:15.044 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.044 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:19:15.044 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.044 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:19:15.044 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.044 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:19:15.044 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.044 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:19:15.045 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.045 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:19:15.045 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.045 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:19:15.045 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.045 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:19:15.045 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.045 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@14188391
[DEBUG] 2020-02-28 13:19:15.045 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.046 [http-nio-8080-exec-25] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:19:15.046 [http-nio-8080-exec-25] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:19:15.046 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:19:15.046 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.046 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:19:15.046 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.046 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:19:15.046 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.046 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:19:15.046 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:15.047 [http-nio-8080-exec-25] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:19:15.047 [http-nio-8080-exec-25] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:19:15.049 [http-nio-8080-exec-25] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:19:15.050 [http-nio-8080-exec-25] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:19:15.050 [http-nio-8080-exec-25] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:19:15.050 [http-nio-8080-exec-25] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:19:15.050 [http-nio-8080-exec-25] Loader - Done entity load
[DEBUG] 2020-02-28 13:19:15.050 [http-nio-8080-exec-25] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:19:15.050 [http-nio-8080-exec-25] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:19:15.051 [http-nio-8080-exec-25] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:19:15.051 [http-nio-8080-exec-25] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:19:15.051 [http-nio-8080-exec-25] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:19:15.051 [http-nio-8080-exec-25] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:19:15.051 [http-nio-8080-exec-25] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:19:15.053 [http-nio-8080-exec-25] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:19:16.747 [http-nio-8080-exec-21] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:19:16.748 [http-nio-8080-exec-21] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:19:16.750 [http-nio-8080-exec-21] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:19:16.750 [http-nio-8080-exec-21] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:19:16.751 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:19:16.751 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:19:16.751 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.751 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:19:16.751 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.751 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:19:16.751 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.751 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:19:16.751 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.751 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:19:16.751 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.751 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:19:16.751 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.751 [http-nio-8080-exec-21] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:19:16.753 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:19:16.753 [http-nio-8080-exec-21] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@7dd7c747
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:19:16.758 [http-nio-8080-exec-21] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:19:16.760 [http-nio-8080-exec-21] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:19:16.760 [http-nio-8080-exec-21] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:19:16.760 [http-nio-8080-exec-21] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:19:16.760 [http-nio-8080-exec-21] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:19:16.760 [http-nio-8080-exec-21] Loader - Done entity load
[DEBUG] 2020-02-28 13:19:16.761 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:19:16.761 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:19:16.761 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:19:16.762 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:19:16.762 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:19:16.762 [http-nio-8080-exec-21] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:19:16.762 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:19:16.762 [http-nio-8080-exec-21] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:20:34.874 [http-nio-8080-exec-34] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:20:34.877 [http-nio-8080-exec-34] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:20:34.877 [http-nio-8080-exec-34] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:20:34.878 [http-nio-8080-exec-34] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:20:34.878 [http-nio-8080-exec-34] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:20:34.878 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:20:34.878 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.878 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:20:34.878 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.878 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:20:34.878 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.879 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:20:34.879 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.879 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:20:34.879 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.880 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:20:34.880 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.880 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:20:34.880 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.880 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:20:34.880 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.880 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:20:34.880 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.880 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:20:34.880 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.880 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:20:34.880 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.880 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:20:34.880 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.880 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:20:34.880 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.881 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:20:34.881 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.881 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:20:34.881 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.881 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@7566f9e8
[DEBUG] 2020-02-28 13:20:34.881 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.882 [http-nio-8080-exec-34] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:20:34.882 [http-nio-8080-exec-34] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:20:34.882 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:20:34.882 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.882 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:20:34.882 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.882 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:20:34.882 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.882 [http-nio-8080-exec-34] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:20:34.882 [http-nio-8080-exec-34] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:34.884 [http-nio-8080-exec-34] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:20:34.884 [http-nio-8080-exec-34] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:20:34.887 [http-nio-8080-exec-34] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:20:34.887 [http-nio-8080-exec-34] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:20:34.887 [http-nio-8080-exec-34] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:20:34.887 [http-nio-8080-exec-34] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:20:34.888 [http-nio-8080-exec-34] Loader - Done entity load
[DEBUG] 2020-02-28 13:20:34.888 [http-nio-8080-exec-34] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:20:34.888 [http-nio-8080-exec-34] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:20:34.888 [http-nio-8080-exec-34] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:20:34.888 [http-nio-8080-exec-34] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:20:34.888 [http-nio-8080-exec-34] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:20:34.888 [http-nio-8080-exec-34] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:20:34.888 [http-nio-8080-exec-34] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:20:34.894 [http-nio-8080-exec-34] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-28 13:20:34.894 [http-nio-8080-exec-34] TransactionImpl - begin
[DEBUG] 2020-02-28 13:20:34.904 [http-nio-8080-exec-34] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-02-28 13:20:34.907 [http-nio-8080-exec-34] SQL - insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:20:35.019 [http-nio-8080-exec-34] IdentifierGeneratorHelper - Natively generated identity: 2
[DEBUG] 2020-02-28 13:20:35.020 [http-nio-8080-exec-34] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:20:35.024 [http-nio-8080-exec-34] TransactionImpl - committing
[DEBUG] 2020-02-28 13:20:35.024 [http-nio-8080-exec-34] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-28 13:20:35.024 [http-nio-8080-exec-34] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-28 13:20:35.026 [http-nio-8080-exec-34] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-02-28 13:20:35.026 [http-nio-8080-exec-34] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-02-28 13:20:35.028 [http-nio-8080-exec-34] EntityPrinter - Listing entities:
[DEBUG] 2020-02-28 13:20:35.028 [http-nio-8080-exec-34] EntityPrinter - com.streammedia.entity.FAQ{createdAt=2020-02-28, description=This is a trailer Question, faqId=2, category=Trailer, title=Where to find new trailers, user=com.streammedia.entity.User#2, updatedAt=2020-02-28}
[DEBUG] 2020-02-28 13:20:35.036 [http-nio-8080-exec-34] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:20:35.037 [http-nio-8080-exec-34] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:20:35.041 [http-nio-8080-exec-35] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:20:35.041 [http-nio-8080-exec-35] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] Loader - Result set row: 1
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:20:35.043 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.044 [http-nio-8080-exec-35] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:20:35.045 [http-nio-8080-exec-35] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:20:35.046 [http-nio-8080-exec-35] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:20:35.048 [http-nio-8080-exec-35] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:20:35.048 [http-nio-8080-exec-35] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:20:35.048 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:20:35.048 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.048 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:20:35.048 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.048 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:20:35.048 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.048 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:20:35.048 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.048 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:20:35.048 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.048 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:20:35.048 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.048 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6e8e0a07
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:20:35.049 [http-nio-8080-exec-35] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:20:35.051 [http-nio-8080-exec-35] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:20:35.051 [http-nio-8080-exec-35] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] Loader - Done entity load
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:35.052 [http-nio-8080-exec-35] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:20:35.053 [http-nio-8080-exec-35] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:20:37.286 [http-nio-8080-exec-30] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:20:37.286 [http-nio-8080-exec-30] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] Loader - Result set row: 1
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:20:37.288 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.289 [http-nio-8080-exec-30] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:20:37.291 [http-nio-8080-exec-30] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:20:37.291 [http-nio-8080-exec-30] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:20:37.293 [http-nio-8080-exec-30] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:20:37.293 [http-nio-8080-exec-30] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:20:37.293 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:20:37.293 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.293 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:20:37.293 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.293 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:20:37.293 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.293 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:20:37.293 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.293 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:20:37.293 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.293 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:20:37.293 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.294 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@25f9ac63
[DEBUG] 2020-02-28 13:20:37.296 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.296 [http-nio-8080-exec-30] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:20:37.296 [http-nio-8080-exec-30] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:20:37.296 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:20:37.296 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.296 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:20:37.296 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.296 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:20:37.296 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.296 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:20:37.296 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.296 [http-nio-8080-exec-30] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:20:37.296 [http-nio-8080-exec-30] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:20:37.299 [http-nio-8080-exec-30] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:20:37.299 [http-nio-8080-exec-30] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] Loader - Done entity load
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:20:37.300 [http-nio-8080-exec-30] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:20:38.426 [http-nio-8080-exec-31] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:20:38.426 [http-nio-8080-exec-31] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:20:38.429 [http-nio-8080-exec-31] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:20:38.429 [http-nio-8080-exec-31] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:20:38.429 [http-nio-8080-exec-31] Loader - Result set row: 1
[DEBUG] 2020-02-28 13:20:38.429 [http-nio-8080-exec-31] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:20:38.429 [http-nio-8080-exec-31] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:20:38.429 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:20:38.429 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.430 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:20:38.430 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.430 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:20:38.430 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.430 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:20:38.430 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.430 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:20:38.430 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.430 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:20:38.430 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.430 [http-nio-8080-exec-31] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:20:38.431 [http-nio-8080-exec-31] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:20:38.431 [http-nio-8080-exec-31] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@7ffcf02a
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:20:38.432 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.433 [http-nio-8080-exec-31] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:20:38.433 [http-nio-8080-exec-31] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:20:38.434 [http-nio-8080-exec-31] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:20:38.434 [http-nio-8080-exec-31] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:20:38.434 [http-nio-8080-exec-31] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:20:38.434 [http-nio-8080-exec-31] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:20:38.434 [http-nio-8080-exec-31] Loader - Done entity load
[DEBUG] 2020-02-28 13:20:38.434 [http-nio-8080-exec-31] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:20:38.434 [http-nio-8080-exec-31] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:20:38.434 [http-nio-8080-exec-31] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:20:38.434 [http-nio-8080-exec-31] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:20:38.438 [http-nio-8080-exec-31] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:20:38.438 [http-nio-8080-exec-31] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:20:38.438 [http-nio-8080-exec-31] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:20:38.438 [http-nio-8080-exec-31] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:20:38.438 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 13:20:38.438 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.438 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:20:38.438 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.438 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 13:20:38.438 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.438 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 13:20:38.438 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.438 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:20:38.438 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.438 [http-nio-8080-exec-31] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:20:38.438 [http-nio-8080-exec-31] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:20:38.439 [http-nio-8080-exec-31] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:20:38.440 [http-nio-8080-exec-31] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:33:44.118 [http-nio-8080-exec-40] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 13:33:44.120 [http-nio-8080-exec-40] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 13:33:44.124 [http-nio-8080-exec-40] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 13:33:44.207 [http-nio-8080-exec-40] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 13:33:44.210 [http-nio-8080-exec-40] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 13:33:44.389 [http-nio-8080-exec-40] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 13:33:44.390 [http-nio-8080-exec-40] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 13:33:44.393 [http-nio-8080-exec-40] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 13:33:44.763 [http-nio-8080-exec-40] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 13:33:44.781 [http-nio-8080-exec-40] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 13:33:44.782 [http-nio-8080-exec-40] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 13:33:44.810 [http-nio-8080-exec-40] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 13:33:44.856 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2343d96e
[DEBUG] 2020-02-28 13:33:44.856 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2343d96e
[DEBUG] 2020-02-28 13:33:44.856 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2343d96e
[DEBUG] 2020-02-28 13:33:44.856 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5a8fdc30
[DEBUG] 2020-02-28 13:33:44.857 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@ce54d14
[DEBUG] 2020-02-28 13:33:44.857 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@50b96202
[DEBUG] 2020-02-28 13:33:44.858 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7c6d5094
[DEBUG] 2020-02-28 13:33:44.858 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7c6d5094
[DEBUG] 2020-02-28 13:33:44.858 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7c6d5094
[DEBUG] 2020-02-28 13:33:44.861 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4e25d970
[DEBUG] 2020-02-28 13:33:44.862 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4e25d970
[DEBUG] 2020-02-28 13:33:44.862 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4e25d970
[DEBUG] 2020-02-28 13:33:44.863 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@11cfc35
[DEBUG] 2020-02-28 13:33:44.863 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@11cfc35
[DEBUG] 2020-02-28 13:33:44.863 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11cfc35
[DEBUG] 2020-02-28 13:33:44.864 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3fc6c661
[DEBUG] 2020-02-28 13:33:44.864 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3fc6c661
[DEBUG] 2020-02-28 13:33:44.864 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3fc6c661
[DEBUG] 2020-02-28 13:33:44.866 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4cdad89a
[DEBUG] 2020-02-28 13:33:44.866 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4cdad89a
[DEBUG] 2020-02-28 13:33:44.866 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4cdad89a
[DEBUG] 2020-02-28 13:33:44.866 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@18955f84
[DEBUG] 2020-02-28 13:33:44.866 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@18955f84
[DEBUG] 2020-02-28 13:33:44.866 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18955f84
[DEBUG] 2020-02-28 13:33:44.867 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2f4ec474
[DEBUG] 2020-02-28 13:33:44.867 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2f4ec474
[DEBUG] 2020-02-28 13:33:44.867 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f4ec474
[DEBUG] 2020-02-28 13:33:44.868 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2e17551c
[DEBUG] 2020-02-28 13:33:44.868 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2e17551c
[DEBUG] 2020-02-28 13:33:44.868 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@39b80184
[DEBUG] 2020-02-28 13:33:44.868 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@39b80184
[DEBUG] 2020-02-28 13:33:44.871 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3646b51
[DEBUG] 2020-02-28 13:33:44.872 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3646b51
[DEBUG] 2020-02-28 13:33:44.872 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@288afe3b
[DEBUG] 2020-02-28 13:33:44.874 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@50795ea8
[DEBUG] 2020-02-28 13:33:44.875 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@212fe319
[DEBUG] 2020-02-28 13:33:44.875 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@212fe319
[DEBUG] 2020-02-28 13:33:44.876 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@71c7bbc5
[DEBUG] 2020-02-28 13:33:44.876 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@71c7bbc5
[DEBUG] 2020-02-28 13:33:44.878 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@469cbaa9
[DEBUG] 2020-02-28 13:33:44.879 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@469cbaa9
[DEBUG] 2020-02-28 13:33:44.880 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7489f3ea
[DEBUG] 2020-02-28 13:33:44.881 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7489f3ea
[DEBUG] 2020-02-28 13:33:44.882 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@701a0d3d
[DEBUG] 2020-02-28 13:33:44.882 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@701a0d3d
[DEBUG] 2020-02-28 13:33:44.882 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6fe7e1fd
[DEBUG] 2020-02-28 13:33:44.882 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6fe7e1fd
[DEBUG] 2020-02-28 13:33:44.883 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5f07010a
[DEBUG] 2020-02-28 13:33:44.883 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5f07010a
[DEBUG] 2020-02-28 13:33:44.884 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5b1b5426
[DEBUG] 2020-02-28 13:33:44.884 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5b1b5426
[DEBUG] 2020-02-28 13:33:44.884 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@50470c07
[DEBUG] 2020-02-28 13:33:44.884 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@50470c07
[DEBUG] 2020-02-28 13:33:44.885 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@67a02e2e
[DEBUG] 2020-02-28 13:33:44.885 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67a02e2e
[DEBUG] 2020-02-28 13:33:44.886 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@55c8eeb1
[DEBUG] 2020-02-28 13:33:44.886 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55c8eeb1
[DEBUG] 2020-02-28 13:33:44.887 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6be7d42c
[DEBUG] 2020-02-28 13:33:44.888 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6be7d42c
[DEBUG] 2020-02-28 13:33:44.888 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6be7d42c
[DEBUG] 2020-02-28 13:33:44.889 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c0de214
[DEBUG] 2020-02-28 13:33:44.889 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7c70466
[DEBUG] 2020-02-28 13:33:44.890 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7c70466
[DEBUG] 2020-02-28 13:33:44.890 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7c70466
[DEBUG] 2020-02-28 13:33:44.890 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7a317092
[DEBUG] 2020-02-28 13:33:44.891 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2eaff0b5
[DEBUG] 2020-02-28 13:33:44.891 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2eaff0b5
[DEBUG] 2020-02-28 13:33:44.892 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4cd67955
[DEBUG] 2020-02-28 13:33:44.892 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4cd67955
[DEBUG] 2020-02-28 13:33:44.892 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@da6ac17
[DEBUG] 2020-02-28 13:33:44.892 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@da6ac17
[DEBUG] 2020-02-28 13:33:44.893 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@32252410
[DEBUG] 2020-02-28 13:33:44.893 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@32252410
[DEBUG] 2020-02-28 13:33:44.894 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7d767c8a
[DEBUG] 2020-02-28 13:33:44.894 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7d767c8a
[DEBUG] 2020-02-28 13:33:44.894 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a206e17
[DEBUG] 2020-02-28 13:33:44.902 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@28668c6b
[DEBUG] 2020-02-28 13:33:44.902 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@28668c6b
[DEBUG] 2020-02-28 13:33:44.902 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@28668c6b
[DEBUG] 2020-02-28 13:33:44.903 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45807a82
[DEBUG] 2020-02-28 13:33:44.903 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45807a82
[DEBUG] 2020-02-28 13:33:44.903 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45807a82
[DEBUG] 2020-02-28 13:33:44.903 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4d209555
[DEBUG] 2020-02-28 13:33:44.904 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5ec4e507
[DEBUG] 2020-02-28 13:33:44.904 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@744e3167
[DEBUG] 2020-02-28 13:33:44.904 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@744e3167
[DEBUG] 2020-02-28 13:33:44.904 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@744e3167
[DEBUG] 2020-02-28 13:33:44.905 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5227a9bf
[DEBUG] 2020-02-28 13:33:44.905 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5227a9bf
[DEBUG] 2020-02-28 13:33:44.905 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5227a9bf
[DEBUG] 2020-02-28 13:33:44.905 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@78129094
[DEBUG] 2020-02-28 13:33:44.905 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7cef45a5
[DEBUG] 2020-02-28 13:33:44.906 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5a9a0051
[DEBUG] 2020-02-28 13:33:44.906 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5a9a0051
[DEBUG] 2020-02-28 13:33:44.907 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@32aa4e16
[DEBUG] 2020-02-28 13:33:44.907 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@614ac8d5
[DEBUG] 2020-02-28 13:33:44.908 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@614ac8d5
[DEBUG] 2020-02-28 13:33:44.908 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3aab2385
[DEBUG] 2020-02-28 13:33:44.908 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3aab2385
[DEBUG] 2020-02-28 13:33:44.909 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4dc7d88d
[DEBUG] 2020-02-28 13:33:44.909 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53658120
[DEBUG] 2020-02-28 13:33:44.910 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@53ea34c6
[DEBUG] 2020-02-28 13:33:44.919 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@40bbcd4f
[DEBUG] 2020-02-28 13:33:44.919 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@40bbcd4f
[DEBUG] 2020-02-28 13:33:44.919 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@45cd4ec3
[DEBUG] 2020-02-28 13:33:44.919 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@42a2c67d
[DEBUG] 2020-02-28 13:33:44.919 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@38142101
[DEBUG] 2020-02-28 13:33:44.919 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@725647a3
[DEBUG] 2020-02-28 13:33:44.919 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5d42a47c
[DEBUG] 2020-02-28 13:33:44.919 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@9070087
[DEBUG] 2020-02-28 13:33:44.923 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1002348f
[DEBUG] 2020-02-28 13:33:44.923 [http-nio-8080-exec-40] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@50a90273
[DEBUG] 2020-02-28 13:33:44.963 [http-nio-8080-exec-40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 13:33:44.963 [http-nio-8080-exec-40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 13:33:44.964 [http-nio-8080-exec-40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:33:44.966 [http-nio-8080-exec-40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:33:44.967 [http-nio-8080-exec-40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 13:33:44.968 [http-nio-8080-exec-40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 13:33:44.968 [http-nio-8080-exec-40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 13:33:44.970 [http-nio-8080-exec-40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:33:44.971 [http-nio-8080-exec-40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 13:33:44.972 [http-nio-8080-exec-40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 13:33:44.973 [http-nio-8080-exec-40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 13:33:44.973 [http-nio-8080-exec-40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 13:33:44.973 [http-nio-8080-exec-40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:33:44.974 [http-nio-8080-exec-40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 13:33:44.980 [http-nio-8080-exec-40] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 13:33:44.980 [http-nio-8080-exec-40] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 13:33:44.980 [http-nio-8080-exec-40] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 13:33:45.080 [http-nio-8080-exec-40] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 13:33:45.451 [http-nio-8080-exec-40] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:33:45.451 [http-nio-8080-exec-40] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:33:45.451 [http-nio-8080-exec-40] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 13:33:45.482 [http-nio-8080-exec-40] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 13:33:45.507 [http-nio-8080-exec-40] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 13:33:45.568 [http-nio-8080-exec-40] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 13:33:45.606 [http-nio-8080-exec-40] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 13:33:45.608 [http-nio-8080-exec-40] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2924cd17] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@392de1c1]
[DEBUG] 2020-02-28 13:33:45.647 [http-nio-8080-exec-40] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:33:45.670 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:33:45.675 [http-nio-8080-exec-40] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 13:33:45.678 [http-nio-8080-exec-40] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 13:33:45.705 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.708 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 13:33:45.710 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 13:33:45.711 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 13:33:45.712 [http-nio-8080-exec-40] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 13:33:45.715 [http-nio-8080-exec-40] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:33:45.717 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.718 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:33:45.718 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 13:33:45.718 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:33:45.718 [http-nio-8080-exec-40] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:33:45.718 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.718 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 13:33:45.718 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 13:33:45.718 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 13:33:45.718 [http-nio-8080-exec-40] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 13:33:45.718 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:33:45.718 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:33:45.718 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 13:33:45.718 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:33:45.718 [http-nio-8080-exec-40] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:33:45.718 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.718 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:33:45.719 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 13:33:45.719 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:33:45.719 [http-nio-8080-exec-40] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:33:45.721 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:33:45.723 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.724 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.734 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.735 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.735 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:33:45.738 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:33:45.738 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:33:45.739 [http-nio-8080-exec-40] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:33:45.741 [http-nio-8080-exec-40] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 13:33:45.741 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:33:45.742 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.742 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.742 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.745 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.746 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:33:45.746 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:33:45.746 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:33:45.746 [http-nio-8080-exec-40] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:33:45.747 [http-nio-8080-exec-40] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:33:45.747 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.747 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:33:45.747 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 13:33:45.747 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:33:45.747 [http-nio-8080-exec-40] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:33:45.747 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.747 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 13:33:45.747 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 13:33:45.747 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 13:33:45.747 [http-nio-8080-exec-40] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 13:33:45.747 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.748 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:33:45.748 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 13:33:45.749 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:33:45.749 [http-nio-8080-exec-40] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:33:45.749 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.749 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 13:33:45.750 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 13:33:45.750 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 13:33:45.750 [http-nio-8080-exec-40] PropertyBinder - Building property password
[DEBUG] 2020-02-28 13:33:45.750 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.750 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 13:33:45.750 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 13:33:45.750 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 13:33:45.750 [http-nio-8080-exec-40] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 13:33:45.750 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:33:45.750 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.750 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.750 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.750 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.750 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:33:45.751 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:33:45.751 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:33:45.751 [http-nio-8080-exec-40] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:33:45.751 [http-nio-8080-exec-40] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 13:33:45.751 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:33:45.752 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.752 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.752 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.752 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.752 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:33:45.752 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:33:45.752 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:33:45.752 [http-nio-8080-exec-40] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:33:45.755 [http-nio-8080-exec-40] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 13:33:45.756 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.756 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:33:45.756 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 13:33:45.756 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:33:45.756 [http-nio-8080-exec-40] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:33:45.756 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 13:33:45.756 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 13:33:45.756 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 13:33:45.759 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 13:33:45.760 [http-nio-8080-exec-40] PropertyBinder - Building property username
[DEBUG] 2020-02-28 13:33:45.762 [http-nio-8080-exec-40] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:33:45.762 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:33:45.762 [http-nio-8080-exec-40] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 13:33:45.762 [http-nio-8080-exec-40] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 13:33:45.767 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.768 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 13:33:45.768 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 13:33:45.768 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 13:33:45.768 [http-nio-8080-exec-40] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 13:33:45.768 [http-nio-8080-exec-40] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:33:45.769 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.769 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:33:45.769 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 13:33:45.769 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:33:45.769 [http-nio-8080-exec-40] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:33:45.774 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.774 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 13:33:45.774 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 13:33:45.774 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 13:33:45.774 [http-nio-8080-exec-40] PropertyBinder - Building property name
[DEBUG] 2020-02-28 13:33:45.775 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.775 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:33:45.775 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 13:33:45.775 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:33:45.775 [http-nio-8080-exec-40] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:33:45.776 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 13:33:45.776 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.782 [http-nio-8080-exec-40] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:33:45.782 [http-nio-8080-exec-40] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:33:45.784 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:33:45.784 [http-nio-8080-exec-40] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 13:33:45.784 [http-nio-8080-exec-40] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 13:33:45.786 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.786 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 13:33:45.786 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 13:33:45.787 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 13:33:45.787 [http-nio-8080-exec-40] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 13:33:45.787 [http-nio-8080-exec-40] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:33:45.787 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.787 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 13:33:45.787 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 13:33:45.787 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 13:33:45.787 [http-nio-8080-exec-40] PropertyBinder - Building property author
[DEBUG] 2020-02-28 13:33:45.787 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.787 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:33:45.787 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 13:33:45.787 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:33:45.787 [http-nio-8080-exec-40] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:33:45.788 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.788 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:33:45.788 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 13:33:45.788 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:33:45.788 [http-nio-8080-exec-40] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:33:45.788 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.788 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:33:45.788 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 13:33:45.788 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:33:45.788 [http-nio-8080-exec-40] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:33:45.788 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.788 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:33:45.788 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 13:33:45.788 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:33:45.788 [http-nio-8080-exec-40] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:33:45.789 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.789 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:33:45.789 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 13:33:45.789 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:33:45.789 [http-nio-8080-exec-40] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:33:45.789 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.789 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:33:45.789 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 13:33:45.789 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:33:45.789 [http-nio-8080-exec-40] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:33:45.790 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.790 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:33:45.790 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 13:33:45.790 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:33:45.790 [http-nio-8080-exec-40] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:33:45.790 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.790 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:33:45.790 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 13:33:45.790 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:33:45.790 [http-nio-8080-exec-40] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:33:45.790 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:33:45.790 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.790 [http-nio-8080-exec-40] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:33:45.790 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.790 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:33:45.790 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 13:33:45.791 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:33:45.791 [http-nio-8080-exec-40] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:33:45.791 [http-nio-8080-exec-40] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:33:45.791 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:33:45.791 [http-nio-8080-exec-40] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 13:33:45.791 [http-nio-8080-exec-40] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 13:33:45.794 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.794 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 13:33:45.794 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 13:33:45.794 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 13:33:45.794 [http-nio-8080-exec-40] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 13:33:45.794 [http-nio-8080-exec-40] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:33:45.795 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.795 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:33:45.795 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 13:33:45.795 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:33:45.795 [http-nio-8080-exec-40] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:33:45.795 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.795 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:33:45.795 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 13:33:45.795 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:33:45.796 [http-nio-8080-exec-40] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:33:45.796 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.796 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.796 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.796 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:33:45.796 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:33:45.796 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:33:45.796 [http-nio-8080-exec-40] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:33:45.796 [http-nio-8080-exec-40] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:33:45.796 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.796 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:33:45.796 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 13:33:45.796 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:33:45.797 [http-nio-8080-exec-40] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:33:45.797 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.797 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:33:45.797 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 13:33:45.797 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:33:45.797 [http-nio-8080-exec-40] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:33:45.797 [http-nio-8080-exec-40] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:33:45.797 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:33:45.798 [http-nio-8080-exec-40] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 13:33:45.799 [http-nio-8080-exec-40] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 13:33:45.800 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.800 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 13:33:45.800 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 13:33:45.800 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 13:33:45.800 [http-nio-8080-exec-40] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 13:33:45.801 [http-nio-8080-exec-40] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:33:45.801 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.801 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:33:45.801 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 13:33:45.801 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:33:45.801 [http-nio-8080-exec-40] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:33:45.801 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.801 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:33:45.801 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 13:33:45.801 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:33:45.801 [http-nio-8080-exec-40] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:33:45.801 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.801 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] PropertyBinder - Building property director
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 13:33:45.802 [http-nio-8080-exec-40] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 13:33:45.804 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.804 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.804 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.805 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:33:45.805 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:33:45.805 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:33:45.806 [http-nio-8080-exec-40] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:33:45.806 [http-nio-8080-exec-40] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 13:33:45.806 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.806 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:33:45.806 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 13:33:45.806 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:33:45.806 [http-nio-8080-exec-40] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:33:45.807 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.807 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:33:45.807 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 13:33:45.807 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:33:45.807 [http-nio-8080-exec-40] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:33:45.807 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.807 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:33:45.807 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 13:33:45.807 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:33:45.807 [http-nio-8080-exec-40] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:33:45.808 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.808 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:33:45.808 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 13:33:45.808 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:33:45.808 [http-nio-8080-exec-40] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:33:45.808 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.808 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:33:45.808 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 13:33:45.808 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:33:45.808 [http-nio-8080-exec-40] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:33:45.808 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:33:45.808 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.808 [http-nio-8080-exec-40] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:33:45.808 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.809 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:33:45.809 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 13:33:45.809 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:33:45.809 [http-nio-8080-exec-40] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:33:45.809 [http-nio-8080-exec-40] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:33:45.809 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:33:45.809 [http-nio-8080-exec-40] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 13:33:45.809 [http-nio-8080-exec-40] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 13:33:45.813 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.813 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 13:33:45.813 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 13:33:45.813 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 13:33:45.814 [http-nio-8080-exec-40] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 13:33:45.814 [http-nio-8080-exec-40] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:33:45.815 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.815 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 13:33:45.815 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 13:33:45.815 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 13:33:45.815 [http-nio-8080-exec-40] PropertyBinder - Building property category
[DEBUG] 2020-02-28 13:33:45.815 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.816 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:33:45.816 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 13:33:45.816 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:33:45.816 [http-nio-8080-exec-40] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:33:45.816 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:33:45.817 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:33:45.818 [http-nio-8080-exec-40] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 13:33:45.818 [http-nio-8080-exec-40] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 13:33:45.822 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.824 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 13:33:45.824 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 13:33:45.824 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 13:33:45.824 [http-nio-8080-exec-40] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 13:33:45.824 [http-nio-8080-exec-40] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:33:45.825 [http-nio-8080-exec-40] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 13:33:45.826 [http-nio-8080-exec-40] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:33:45.828 [http-nio-8080-exec-40] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:33:45.829 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 13:33:45.830 [http-nio-8080-exec-40] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:33:45.837 [http-nio-8080-exec-40] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 13:33:45.837 [http-nio-8080-exec-40] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 13:33:45.837 [http-nio-8080-exec-40] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 13:33:45.837 [http-nio-8080-exec-40] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 13:33:45.837 [http-nio-8080-exec-40] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 13:33:45.837 [http-nio-8080-exec-40] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 13:33:45.837 [http-nio-8080-exec-40] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 13:33:45.837 [http-nio-8080-exec-40] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:33:45.838 [http-nio-8080-exec-40] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:33:45.840 [http-nio-8080-exec-40] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:33:45.840 [http-nio-8080-exec-40] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:33:45.840 [http-nio-8080-exec-40] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 13:33:45.840 [http-nio-8080-exec-40] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:33:45.841 [http-nio-8080-exec-40] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:33:45.841 [http-nio-8080-exec-40] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:33:45.841 [http-nio-8080-exec-40] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:33:45.841 [http-nio-8080-exec-40] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 13:33:45.841 [http-nio-8080-exec-40] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:33:45.841 [http-nio-8080-exec-40] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 13:33:45.841 [http-nio-8080-exec-40] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 13:33:45.841 [http-nio-8080-exec-40] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 13:33:45.841 [http-nio-8080-exec-40] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:33:45.841 [http-nio-8080-exec-40] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:33:45.843 [http-nio-8080-exec-40] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 13:33:45.844 [http-nio-8080-exec-40] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 13:33:45.844 [http-nio-8080-exec-40] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 13:33:45.844 [http-nio-8080-exec-40] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:33:45.844 [http-nio-8080-exec-40] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:33:45.844 [http-nio-8080-exec-40] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 13:33:45.844 [http-nio-8080-exec-40] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 13:33:45.848 [http-nio-8080-exec-40] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 13:33:45.848 [http-nio-8080-exec-40] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:33:45.848 [http-nio-8080-exec-40] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:33:45.848 [http-nio-8080-exec-40] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 13:33:45.849 [http-nio-8080-exec-40] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 13:33:45.849 [http-nio-8080-exec-40] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 13:33:45.849 [http-nio-8080-exec-40] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:33:45.849 [http-nio-8080-exec-40] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:33:45.849 [http-nio-8080-exec-40] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:33:45.850 [http-nio-8080-exec-40] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:33:45.850 [http-nio-8080-exec-40] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 13:33:45.850 [http-nio-8080-exec-40] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:33:45.850 [http-nio-8080-exec-40] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:33:45.850 [http-nio-8080-exec-40] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:33:45.850 [http-nio-8080-exec-40] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 13:33:45.850 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:33:45.850 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:33:45.852 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:33:45.853 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:33:45.853 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:33:45.853 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:33:45.853 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:33:45.853 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:33:45.853 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:33:45.857 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:33:45.857 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:33:45.858 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:33:45.858 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:33:45.858 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:33:45.858 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:33:45.858 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:33:45.858 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:33:45.858 [http-nio-8080-exec-40] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:33:45.903 [http-nio-8080-exec-40] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Statistics: disabled
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 13:33:45.905 [http-nio-8080-exec-40] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 13:33:45.906 [http-nio-8080-exec-40] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 13:33:45.906 [http-nio-8080-exec-40] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 13:33:45.906 [http-nio-8080-exec-40] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 13:33:45.906 [http-nio-8080-exec-40] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 13:33:45.906 [http-nio-8080-exec-40] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 13:33:45.906 [http-nio-8080-exec-40] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 13:33:45.906 [http-nio-8080-exec-40] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 13:33:45.906 [http-nio-8080-exec-40] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 13:33:45.906 [http-nio-8080-exec-40] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 13:33:45.906 [http-nio-8080-exec-40] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 13:33:45.967 [http-nio-8080-exec-40] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 13:33:45.992 [http-nio-8080-exec-40] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 13:33:45.993 [http-nio-8080-exec-40] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6f45452b, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 13:33:46.013 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:33:46.013 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:33:46.021 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:33:46.021 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:33:46.021 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:33:46.021 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:33:46.051 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:33:46.051 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:33:46.051 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:33:46.052 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:33:46.052 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:33:46.052 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:33:46.058 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:33:46.058 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:33:46.065 [http-nio-8080-exec-40] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 13:33:46.068 [http-nio-8080-exec-40] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 13:33:46.068 [http-nio-8080-exec-40] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2924cd17] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@17ae14ef]
[DEBUG] 2020-02-28 13:33:46.105 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:33:46.105 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:33:46.114 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:33:46.114 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:33:47.483 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:33:47.483 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:33:47.484 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:33:47.484 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:33:47.495 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:33:47.495 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:33:47.496 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:33:47.496 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:33:47.508 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:33:47.509 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:33:47.509 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:33:47.509 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:33:47.518 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:33:47.519 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:33:47.519 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:33:47.520 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:33:47.542 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:33:47.542 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:33:47.549 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:33:47.550 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:33:46.457 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:33:46.457 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:33:46.457 [http-nio-8080-exec-40] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:33:46.457 [http-nio-8080-exec-40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:33:46.484 [http-nio-8080-exec-40] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:33:46.484 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 13:33:46.484 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 13:33:46.484 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 13:33:46.484 [http-nio-8080-exec-40] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 13:33:46.485 [http-nio-8080-exec-40] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:33:46.485 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 13:33:46.485 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 13:33:46.485 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 13:33:46.485 [http-nio-8080-exec-40] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 13:33:46.485 [http-nio-8080-exec-40] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:33:46.485 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 13:33:46.485 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 13:33:46.485 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 13:33:46.485 [http-nio-8080-exec-40] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 13:33:46.487 [http-nio-8080-exec-40] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:33:46.487 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:33:46.487 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:33:46.487 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:33:46.487 [http-nio-8080-exec-40] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 13:33:46.487 [http-nio-8080-exec-40] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:33:46.487 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:33:46.488 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:33:46.488 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:33:46.488 [http-nio-8080-exec-40] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 13:33:46.488 [http-nio-8080-exec-40] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:33:46.488 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 13:33:46.488 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:33:46.489 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:33:46.489 [http-nio-8080-exec-40] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 13:33:46.489 [http-nio-8080-exec-40] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:33:46.489 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 13:33:46.489 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:33:46.489 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:33:46.489 [http-nio-8080-exec-40] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 13:33:46.489 [http-nio-8080-exec-40] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:33:46.489 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 13:33:46.489 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 13:33:46.489 [http-nio-8080-exec-40] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 13:33:46.489 [http-nio-8080-exec-40] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 13:33:46.492 [http-nio-8080-exec-40] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:33:46.492 [http-nio-8080-exec-40] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 13:33:46.492 [http-nio-8080-exec-40] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 13:33:46.492 [http-nio-8080-exec-40] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:33:46.492 [http-nio-8080-exec-40] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 13:33:46.492 [http-nio-8080-exec-40] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 13:33:46.492 [http-nio-8080-exec-40] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:33:46.514 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e4716f9]
[DEBUG] 2020-02-28 13:33:46.515 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:33:46.515 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.515 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:33:46.518 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d26b1a3]
[DEBUG] 2020-02-28 13:33:46.519 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@521f733b]
[DEBUG] 2020-02-28 13:33:46.520 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:33:46.520 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:33:46.520 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:33:46.520 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:33:46.520 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e6a1792]
[DEBUG] 2020-02-28 13:33:46.520 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bb78296]
[DEBUG] 2020-02-28 13:33:46.520 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:33:46.520 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:33:46.520 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:33:46.520 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:33:46.520 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.520 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:33:46.520 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b8be5]
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ce02c07]
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ecf5a45]
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21833a4f]
[DEBUG] 2020-02-28 13:33:46.523 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@358a5148]
[DEBUG] 2020-02-28 13:33:46.524 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:33:46.524 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:33:46.524 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:33:46.524 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:33:46.524 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:33:46.525 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:33:46.526 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@418efe88]
[DEBUG] 2020-02-28 13:33:46.526 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35ef45b8]
[DEBUG] 2020-02-28 13:33:46.528 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:33:46.528 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:33:46.528 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:33:46.529 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@48eb1d81]
[DEBUG] 2020-02-28 13:33:46.531 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:33:46.531 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:33:46.532 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.541 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.547 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:33:46.550 [http-nio-8080-exec-40] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:33:46.550 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2afba2ad]
[DEBUG] 2020-02-28 13:33:46.550 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:33:46.550 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.550 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:33:46.550 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60990f00]
[DEBUG] 2020-02-28 13:33:46.550 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c6d6805]
[DEBUG] 2020-02-28 13:33:46.550 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:33:46.550 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:33:46.550 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:33:46.550 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:33:46.550 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3bf455ef]
[DEBUG] 2020-02-28 13:33:46.550 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bd37605]
[DEBUG] 2020-02-28 13:33:46.550 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@739a9370]
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d529c06]
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@df1a8f7]
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ad7ab2a]
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79167ce6]
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3752be4e]
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d69150e]
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:33:46.551 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@363411d0]
[DEBUG] 2020-02-28 13:33:46.552 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:33:46.552 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:33:46.552 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.552 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.554 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:33:46.555 [http-nio-8080-exec-40] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:33:46.571 [http-nio-8080-exec-40] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:33:46.571 [http-nio-8080-exec-40] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:33:46.571 [http-nio-8080-exec-40] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d368ef6]
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b7ffe29]
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1daf68cf]
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f4cf73b]
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4bf6d04d]
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7781cdf5]
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@746a2f36]
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d7daa2b]
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6dc519a4]
[DEBUG] 2020-02-28 13:33:46.572 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:33:46.573 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.573 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.575 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:33:46.575 [http-nio-8080-exec-40] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:33:46.575 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e9179b4]
[DEBUG] 2020-02-28 13:33:46.575 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:33:46.575 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.575 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:33:46.577 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:33:46.577 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.577 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:33:46.577 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b909af9]
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a29d1c9]
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39422067]
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46fa32e4]
[DEBUG] 2020-02-28 13:33:46.578 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bfdc3b8]
[DEBUG] 2020-02-28 13:33:46.579 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:33:46.579 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:33:46.579 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:33:46.579 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:33:46.579 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:33:46.579 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:33:46.579 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60edc113]
[DEBUG] 2020-02-28 13:33:46.579 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75182eb5]
[DEBUG] 2020-02-28 13:33:46.580 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:33:46.580 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:33:46.580 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:33:46.580 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5d5a90db]
[DEBUG] 2020-02-28 13:33:46.580 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:33:46.580 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.580 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.581 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:33:46.581 [http-nio-8080-exec-40] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:33:46.582 [http-nio-8080-exec-40] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:33:46.582 [http-nio-8080-exec-40] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:33:46.582 [http-nio-8080-exec-40] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:33:46.582 [http-nio-8080-exec-40] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 13:33:46.582 [http-nio-8080-exec-40] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 13:33:46.582 [http-nio-8080-exec-40] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:33:46.582 [http-nio-8080-exec-40] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 13:33:46.582 [http-nio-8080-exec-40] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@196c2ad5]
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@246043ee]
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@772d365b]
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@748d11ef]
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@525443a3]
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21374e9f]
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:33:46.584 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:33:46.585 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:33:46.585 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:33:46.585 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:33:46.585 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:33:46.585 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:33:46.585 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f362b0c]
[DEBUG] 2020-02-28 13:33:46.585 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23a8476c]
[DEBUG] 2020-02-28 13:33:46.586 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:33:46.587 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:33:46.587 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:33:46.587 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@531141e1]
[DEBUG] 2020-02-28 13:33:46.587 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:33:46.587 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.587 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.588 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46a992e4]
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e1c6d29]
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7111b38c]
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fc77b3a]
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12af3ace]
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40ddd865]
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cac8e21]
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8062c25]
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@63941ea1]
[DEBUG] 2020-02-28 13:33:46.589 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:33:46.590 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.592 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.593 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:33:46.593 [http-nio-8080-exec-40] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:33:46.595 [http-nio-8080-exec-40] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:33:46.595 [http-nio-8080-exec-40] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:33:46.596 [http-nio-8080-exec-40] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:33:46.596 [http-nio-8080-exec-40] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 13:33:46.596 [http-nio-8080-exec-40] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 13:33:46.596 [http-nio-8080-exec-40] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:33:46.596 [http-nio-8080-exec-40] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 13:33:46.596 [http-nio-8080-exec-40] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 13:33:46.596 [http-nio-8080-exec-40] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:33:46.596 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1521be45]
[DEBUG] 2020-02-28 13:33:46.596 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.596 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:33:46.596 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:33:46.596 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f5dadf8]
[DEBUG] 2020-02-28 13:33:46.596 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5712a89]
[DEBUG] 2020-02-28 13:33:46.596 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:33:46.596 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.596 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.597 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.597 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:33:46.597 [http-nio-8080-exec-40] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:33:46.597 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d3a7ff4]
[DEBUG] 2020-02-28 13:33:46.597 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.597 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:33:46.597 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:33:46.597 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d59e424]
[DEBUG] 2020-02-28 13:33:46.597 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4170aa64]
[DEBUG] 2020-02-28 13:33:46.597 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:33:46.597 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.597 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.598 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.598 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:33:46.598 [http-nio-8080-exec-40] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:33:46.598 [http-nio-8080-exec-40] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:33:46.598 [http-nio-8080-exec-40] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:33:46.598 [http-nio-8080-exec-40] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:33:46.598 [http-nio-8080-exec-40] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 13:33:46.598 [http-nio-8080-exec-40] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 13:33:46.598 [http-nio-8080-exec-40] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:33:46.598 [http-nio-8080-exec-40] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 13:33:46.598 [http-nio-8080-exec-40] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 13:33:46.598 [http-nio-8080-exec-40] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f7bb861]
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f78add0]
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19751473]
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e81dd]
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4eb2baad]
[DEBUG] 2020-02-28 13:33:46.599 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d309f27]
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4cd7da7e]
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cc7ca50]
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6c3d2755]
[DEBUG] 2020-02-28 13:33:46.600 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:33:46.601 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:33:46.601 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.603 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.607 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:33:46.607 [http-nio-8080-exec-40] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:33:46.607 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52a8866a]
[DEBUG] 2020-02-28 13:33:46.607 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:33:46.607 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:33:46.607 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.607 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:33:46.607 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:33:46.608 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:33:46.608 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:33:46.608 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:33:46.608 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.608 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:33:46.608 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11f1d1e9]
[DEBUG] 2020-02-28 13:33:46.608 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:33:46.608 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:33:46.608 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:33:46.608 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:33:46.608 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:33:46.609 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e413a1f]
[DEBUG] 2020-02-28 13:33:46.609 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30e1a059]
[DEBUG] 2020-02-28 13:33:46.609 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:33:46.610 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f805135]
[DEBUG] 2020-02-28 13:33:46.610 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64922fcd]
[DEBUG] 2020-02-28 13:33:46.610 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:33:46.610 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:33:46.610 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:33:46.610 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:33:46.610 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:33:46.610 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:33:46.611 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53b47082]
[DEBUG] 2020-02-28 13:33:46.611 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eeae1c5]
[DEBUG] 2020-02-28 13:33:46.611 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:33:46.611 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:33:46.611 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:33:46.611 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:33:46.611 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:33:46.612 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:33:46.612 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:33:46.612 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:33:46.612 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:33:46.612 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:33:46.612 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4617f91f]
[DEBUG] 2020-02-28 13:33:46.612 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:33:46.613 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:33:46.614 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.614 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cd1c740]
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e52310a]
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17575e45]
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55fe6028]
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3555065a]
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:33:46.616 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:33:46.617 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:33:46.617 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1aa0bb9b]
[DEBUG] 2020-02-28 13:33:46.617 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37286bfc]
[DEBUG] 2020-02-28 13:33:46.617 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:33:46.617 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:33:46.617 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:33:46.618 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:33:46.618 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:33:46.618 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:33:46.619 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13680fda]
[DEBUG] 2020-02-28 13:33:46.619 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@676be1c0]
[DEBUG] 2020-02-28 13:33:46.619 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:33:46.619 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:33:46.619 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:33:46.619 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7b96a606]
[DEBUG] 2020-02-28 13:33:46.619 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:33:46.619 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.619 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.619 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:33:46.619 [http-nio-8080-exec-40] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c816a23]
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a34c989]
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cfcc7]
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77eb4e9f]
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54987181]
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@784c921a]
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f01f310]
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39f03899]
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f9d5c4]
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@528bc23]
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:33:46.621 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.622 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.622 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:33:46.622 [http-nio-8080-exec-40] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:33:46.622 [http-nio-8080-exec-40] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:33:46.622 [http-nio-8080-exec-40] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:33:46.625 [http-nio-8080-exec-40] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49fe99f5]
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@629e3bbc]
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@761e656e]
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.626 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.627 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:33:46.627 [http-nio-8080-exec-40] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:33:46.627 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b927b69]
[DEBUG] 2020-02-28 13:33:46.627 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:33:46.627 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.627 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:33:46.627 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:33:46.628 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ed8cdf4]
[DEBUG] 2020-02-28 13:33:46.628 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4be8f454]
[DEBUG] 2020-02-28 13:33:46.628 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:33:46.628 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:33:46.628 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:33:46.628 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:33:46.628 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.628 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.629 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:33:46.629 [http-nio-8080-exec-40] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:33:46.629 [http-nio-8080-exec-40] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:33:46.629 [http-nio-8080-exec-40] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:33:46.633 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57e184b9]
[DEBUG] 2020-02-28 13:33:46.633 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fd23280]
[DEBUG] 2020-02-28 13:33:46.633 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:33:46.634 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:33:46.634 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.634 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:33:46.634 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:33:46.634 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:33:46.634 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:33:46.634 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:33:46.634 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.634 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:33:46.634 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:33:46.634 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:33:46.635 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.638 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.638 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 13:33:46.639 [http-nio-8080-exec-40] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 13:33:46.639 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e2d2d29]
[DEBUG] 2020-02-28 13:33:46.639 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@170c80c1]
[DEBUG] 2020-02-28 13:33:46.639 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.639 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:33:46.639 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.639 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:33:46.639 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:33:46.639 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.639 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.640 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 13:33:46.640 [http-nio-8080-exec-40] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 13:33:46.640 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58295bf9]
[DEBUG] 2020-02-28 13:33:46.640 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd0c2b5]
[DEBUG] 2020-02-28 13:33:46.640 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:33:46.641 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.641 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:33:46.641 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:33:46.641 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.641 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:33:46.641 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:33:46.641 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.641 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.641 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 13:33:46.642 [http-nio-8080-exec-40] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 13:33:46.642 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76648cc8]
[DEBUG] 2020-02-28 13:33:46.642 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b0c2ddb]
[DEBUG] 2020-02-28 13:33:46.642 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:33:46.642 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.642 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@213dc197]
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1be5529e]
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31912868]
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6516f0e6]
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54d63f78]
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:33:46.643 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:33:46.644 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6cbc8fe2]
[DEBUG] 2020-02-28 13:33:46.644 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d18535]
[DEBUG] 2020-02-28 13:33:46.644 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:33:46.644 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5112c469]
[DEBUG] 2020-02-28 13:33:46.644 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34da0ccc]
[DEBUG] 2020-02-28 13:33:46.644 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:33:46.644 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:33:46.644 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:33:46.644 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3c11562a]
[DEBUG] 2020-02-28 13:33:46.644 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:33:46.644 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:33:46.644 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.645 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@211a9641]
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54868c3c]
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@226f11ce]
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42689ed3]
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a0d740f]
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@562da401]
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50353611]
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71b98d14]
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cbbe9da]
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@778d41e0]
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e7174be]
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:33:46.646 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@339d8949]
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d649467]
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3835d3f1]
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:33:46.647 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.648 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.648 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 13:33:46.648 [http-nio-8080-exec-40] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 13:33:46.648 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4fcc8b5]
[DEBUG] 2020-02-28 13:33:46.648 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12c03980]
[DEBUG] 2020-02-28 13:33:46.648 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.648 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:33:46.648 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:33:46.648 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:33:46.648 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:33:46.650 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.653 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.653 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.654 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 13:33:46.654 [http-nio-8080-exec-40] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 13:33:46.654 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71103377]
[DEBUG] 2020-02-28 13:33:46.654 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@628f18ec]
[DEBUG] 2020-02-28 13:33:46.654 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:33:46.654 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:33:46.654 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:33:46.654 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c8c6cf8]
[DEBUG] 2020-02-28 13:33:46.654 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66de43fd]
[DEBUG] 2020-02-28 13:33:46.655 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:33:46.655 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:33:46.655 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:33:46.655 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:33:46.655 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1059ceb1]
[DEBUG] 2020-02-28 13:33:46.655 [http-nio-8080-exec-40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f56a1d]
[DEBUG] 2020-02-28 13:33:46.655 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:33:46.655 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:33:46.655 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:33:46.655 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:33:46.655 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:33:46.655 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:33:46.655 [http-nio-8080-exec-40] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:33:46.655 [http-nio-8080-exec-40] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:33:46.655 [http-nio-8080-exec-40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:33:46.656 [http-nio-8080-exec-40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:33:46.656 [http-nio-8080-exec-40] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 13:33:46.656 [http-nio-8080-exec-40] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 13:33:46.694 [http-nio-8080-exec-40] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 13:33:46.694 [http-nio-8080-exec-40] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 13:33:46.695 [http-nio-8080-exec-40] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 13:33:46.702 [http-nio-8080-exec-40] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 13:33:46.702 [http-nio-8080-exec-40] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 13:33:46.705 [http-nio-8080-exec-40] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 13:33:46.705 [http-nio-8080-exec-40] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 13:33:46.707 [http-nio-8080-exec-40] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@47a50b74
[DEBUG] 2020-02-28 13:33:46.711 [http-nio-8080-exec-40] SessionFactoryRegistry - Registering SessionFactory: d0b3c6c3-f15a-4a9b-a644-eedd9ea16f2f (<unnamed>)
[DEBUG] 2020-02-28 13:33:46.712 [http-nio-8080-exec-40] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 13:33:46.782 [http-nio-8080-exec-40] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 13:33:46.801 [http-nio-8080-exec-40] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:33:46.821 [http-nio-8080-exec-40] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6ccf830d
[DEBUG] 2020-02-28 13:33:46.845 [http-nio-8080-exec-40] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:33:46.850 [http-nio-8080-exec-40] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:33:46.856 [http-nio-8080-exec-40] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 13:33:46.894 [http-nio-8080-exec-40] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 13:33:46.905 [http-nio-8080-exec-40] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 13:33:46.905 [http-nio-8080-exec-40] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 13:33:46.906 [http-nio-8080-exec-40] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 13:33:46.906 [http-nio-8080-exec-40] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 13:33:46.916 [http-nio-8080-exec-40] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 13:33:46.916 [http-nio-8080-exec-40] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 13:33:46.916 [http-nio-8080-exec-40] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 13:33:46.916 [http-nio-8080-exec-40] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:33:46.921 [http-nio-8080-exec-40] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:33:46.921 [http-nio-8080-exec-40] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:33:46.921 [http-nio-8080-exec-40] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:33:46.932 [http-nio-8080-exec-40] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:33:46.961 [http-nio-8080-exec-40] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:33:46.966 [http-nio-8080-exec-40] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:33:46.978 [http-nio-8080-exec-40] Loader - Result set row: 1
[DEBUG] 2020-02-28 13:33:46.978 [http-nio-8080-exec-40] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:33:46.979 [http-nio-8080-exec-40] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:33:46.980 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:33:46.980 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:46.980 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:33:46.980 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:46.980 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:33:46.980 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:46.980 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:33:46.980 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:46.980 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:33:46.980 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:46.980 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:33:46.980 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:46.984 [http-nio-8080-exec-40] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:33:47.006 [http-nio-8080-exec-40] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:33:47.007 [http-nio-8080-exec-40] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:33:47.009 [http-nio-8080-exec-40] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:33:47.018 [http-nio-8080-exec-40] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:33:47.018 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:33:47.018 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.018 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:33:47.019 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.019 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:33:47.019 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.019 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:33:47.019 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.019 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:33:47.019 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@45a2aeb5
[DEBUG] 2020-02-28 13:33:47.025 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.026 [http-nio-8080-exec-40] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:33:47.027 [http-nio-8080-exec-40] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:33:47.027 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:33:47.027 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.027 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:33:47.027 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.027 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:33:47.027 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.027 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:33:47.027 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.028 [http-nio-8080-exec-40] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:33:47.028 [http-nio-8080-exec-40] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:33:47.030 [http-nio-8080-exec-40] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:33:47.030 [http-nio-8080-exec-40] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:33:47.030 [http-nio-8080-exec-40] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:33:47.030 [http-nio-8080-exec-40] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:33:47.032 [http-nio-8080-exec-40] Loader - Done entity load
[DEBUG] 2020-02-28 13:33:47.032 [http-nio-8080-exec-40] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:33:47.032 [http-nio-8080-exec-40] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:33:47.032 [http-nio-8080-exec-40] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:33:47.032 [http-nio-8080-exec-40] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:33:47.033 [http-nio-8080-exec-40] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:33:47.034 [http-nio-8080-exec-40] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:35:32.197 [http-nio-8080-exec-36] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 13:35:32.198 [http-nio-8080-exec-36] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 13:35:32.203 [http-nio-8080-exec-36] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 13:35:32.299 [http-nio-8080-exec-36] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 13:35:32.301 [http-nio-8080-exec-36] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 13:35:32.412 [http-nio-8080-exec-36] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 13:35:32.413 [http-nio-8080-exec-36] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 13:35:32.416 [http-nio-8080-exec-36] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 13:35:32.647 [http-nio-8080-exec-36] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 13:35:32.666 [http-nio-8080-exec-36] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 13:35:32.667 [http-nio-8080-exec-36] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 13:35:32.687 [http-nio-8080-exec-36] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 13:35:32.719 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4055618a
[DEBUG] 2020-02-28 13:35:32.719 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4055618a
[DEBUG] 2020-02-28 13:35:32.719 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4055618a
[DEBUG] 2020-02-28 13:35:32.719 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@78484367
[DEBUG] 2020-02-28 13:35:32.720 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@22db23c
[DEBUG] 2020-02-28 13:35:32.720 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@206d5913
[DEBUG] 2020-02-28 13:35:32.720 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2ddf569b
[DEBUG] 2020-02-28 13:35:32.720 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2ddf569b
[DEBUG] 2020-02-28 13:35:32.720 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2ddf569b
[DEBUG] 2020-02-28 13:35:32.721 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4c741759
[DEBUG] 2020-02-28 13:35:32.721 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4c741759
[DEBUG] 2020-02-28 13:35:32.721 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4c741759
[DEBUG] 2020-02-28 13:35:32.724 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5519a243
[DEBUG] 2020-02-28 13:35:32.724 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5519a243
[DEBUG] 2020-02-28 13:35:32.724 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5519a243
[DEBUG] 2020-02-28 13:35:32.725 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5beccb8a
[DEBUG] 2020-02-28 13:35:32.726 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5beccb8a
[DEBUG] 2020-02-28 13:35:32.726 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5beccb8a
[DEBUG] 2020-02-28 13:35:32.727 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@515fd2cb
[DEBUG] 2020-02-28 13:35:32.727 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@515fd2cb
[DEBUG] 2020-02-28 13:35:32.727 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@515fd2cb
[DEBUG] 2020-02-28 13:35:32.728 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@388371aa
[DEBUG] 2020-02-28 13:35:32.729 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@388371aa
[DEBUG] 2020-02-28 13:35:32.729 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@388371aa
[DEBUG] 2020-02-28 13:35:32.731 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@e22ab59
[DEBUG] 2020-02-28 13:35:32.731 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@e22ab59
[DEBUG] 2020-02-28 13:35:32.731 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@e22ab59
[DEBUG] 2020-02-28 13:35:32.733 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@40f219d6
[DEBUG] 2020-02-28 13:35:32.733 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@40f219d6
[DEBUG] 2020-02-28 13:35:32.733 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@202cff7e
[DEBUG] 2020-02-28 13:35:32.733 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@202cff7e
[DEBUG] 2020-02-28 13:35:32.734 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2e07dd14
[DEBUG] 2020-02-28 13:35:32.734 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2e07dd14
[DEBUG] 2020-02-28 13:35:32.734 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@691fb5b0
[DEBUG] 2020-02-28 13:35:32.735 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1a6e54ae
[DEBUG] 2020-02-28 13:35:32.735 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@47588b89
[DEBUG] 2020-02-28 13:35:32.736 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47588b89
[DEBUG] 2020-02-28 13:35:32.736 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@31b7de6f
[DEBUG] 2020-02-28 13:35:32.736 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@31b7de6f
[DEBUG] 2020-02-28 13:35:32.737 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3576c1f0
[DEBUG] 2020-02-28 13:35:32.737 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3576c1f0
[DEBUG] 2020-02-28 13:35:32.738 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3268eb34
[DEBUG] 2020-02-28 13:35:32.738 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3268eb34
[DEBUG] 2020-02-28 13:35:32.738 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4881d085
[DEBUG] 2020-02-28 13:35:32.738 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4881d085
[DEBUG] 2020-02-28 13:35:32.739 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b292b69
[DEBUG] 2020-02-28 13:35:32.739 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b292b69
[DEBUG] 2020-02-28 13:35:32.740 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6a111b94
[DEBUG] 2020-02-28 13:35:32.740 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6a111b94
[DEBUG] 2020-02-28 13:35:32.741 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6cba132b
[DEBUG] 2020-02-28 13:35:32.741 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6cba132b
[DEBUG] 2020-02-28 13:35:32.741 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@70999210
[DEBUG] 2020-02-28 13:35:32.741 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@70999210
[DEBUG] 2020-02-28 13:35:32.742 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@478d8b96
[DEBUG] 2020-02-28 13:35:32.742 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@478d8b96
[DEBUG] 2020-02-28 13:35:32.743 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@364718e8
[DEBUG] 2020-02-28 13:35:32.743 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@364718e8
[DEBUG] 2020-02-28 13:35:32.744 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5a18a1ed
[DEBUG] 2020-02-28 13:35:32.744 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5a18a1ed
[DEBUG] 2020-02-28 13:35:32.744 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5a18a1ed
[DEBUG] 2020-02-28 13:35:32.746 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@8f6a443
[DEBUG] 2020-02-28 13:35:32.748 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@631cc31f
[DEBUG] 2020-02-28 13:35:32.748 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@631cc31f
[DEBUG] 2020-02-28 13:35:32.749 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@631cc31f
[DEBUG] 2020-02-28 13:35:32.750 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@59ef0979
[DEBUG] 2020-02-28 13:35:32.750 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@206221f5
[DEBUG] 2020-02-28 13:35:32.750 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@206221f5
[DEBUG] 2020-02-28 13:35:32.751 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@752d817e
[DEBUG] 2020-02-28 13:35:32.751 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@752d817e
[DEBUG] 2020-02-28 13:35:32.752 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c9e1abd
[DEBUG] 2020-02-28 13:35:32.752 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c9e1abd
[DEBUG] 2020-02-28 13:35:32.752 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2abbe735
[DEBUG] 2020-02-28 13:35:32.752 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2abbe735
[DEBUG] 2020-02-28 13:35:32.752 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5ee5011e
[DEBUG] 2020-02-28 13:35:32.753 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5ee5011e
[DEBUG] 2020-02-28 13:35:32.753 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@62f8414b
[DEBUG] 2020-02-28 13:35:32.753 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5a87d45d
[DEBUG] 2020-02-28 13:35:32.753 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5a87d45d
[DEBUG] 2020-02-28 13:35:32.754 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5a87d45d
[DEBUG] 2020-02-28 13:35:32.754 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@154b8590
[DEBUG] 2020-02-28 13:35:32.754 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@154b8590
[DEBUG] 2020-02-28 13:35:32.754 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@154b8590
[DEBUG] 2020-02-28 13:35:32.755 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@59e5fad9
[DEBUG] 2020-02-28 13:35:32.756 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@767efc9c
[DEBUG] 2020-02-28 13:35:32.765 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@374e736c
[DEBUG] 2020-02-28 13:35:32.765 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@374e736c
[DEBUG] 2020-02-28 13:35:32.765 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@374e736c
[DEBUG] 2020-02-28 13:35:32.766 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5a1734d3
[DEBUG] 2020-02-28 13:35:32.766 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5a1734d3
[DEBUG] 2020-02-28 13:35:32.766 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5a1734d3
[DEBUG] 2020-02-28 13:35:32.767 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@18aaa068
[DEBUG] 2020-02-28 13:35:32.767 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@75d57a3
[DEBUG] 2020-02-28 13:35:32.768 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@58ebc4a2
[DEBUG] 2020-02-28 13:35:32.768 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@58ebc4a2
[DEBUG] 2020-02-28 13:35:32.768 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@470b4a7f
[DEBUG] 2020-02-28 13:35:32.769 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7477481f
[DEBUG] 2020-02-28 13:35:32.769 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7477481f
[DEBUG] 2020-02-28 13:35:32.770 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@53dcdd97
[DEBUG] 2020-02-28 13:35:32.770 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@53dcdd97
[DEBUG] 2020-02-28 13:35:32.770 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@21a3b769
[DEBUG] 2020-02-28 13:35:32.770 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2952672
[DEBUG] 2020-02-28 13:35:32.771 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7b277020
[DEBUG] 2020-02-28 13:35:32.773 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@d93cdb6
[DEBUG] 2020-02-28 13:35:32.773 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@d93cdb6
[DEBUG] 2020-02-28 13:35:32.773 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e3b80d1
[DEBUG] 2020-02-28 13:35:32.773 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58193c81
[DEBUG] 2020-02-28 13:35:32.773 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4ab43bc9
[DEBUG] 2020-02-28 13:35:32.773 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@174a8fa1
[DEBUG] 2020-02-28 13:35:32.773 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3555b891
[DEBUG] 2020-02-28 13:35:32.773 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@24b9778e
[DEBUG] 2020-02-28 13:35:32.773 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4fb86aa3
[DEBUG] 2020-02-28 13:35:32.773 [http-nio-8080-exec-36] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@cccd372
[DEBUG] 2020-02-28 13:35:32.800 [http-nio-8080-exec-36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 13:35:32.800 [http-nio-8080-exec-36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 13:35:32.800 [http-nio-8080-exec-36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:35:32.800 [http-nio-8080-exec-36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:35:32.801 [http-nio-8080-exec-36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 13:35:32.801 [http-nio-8080-exec-36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 13:35:32.801 [http-nio-8080-exec-36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 13:35:32.802 [http-nio-8080-exec-36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:35:32.803 [http-nio-8080-exec-36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 13:35:32.803 [http-nio-8080-exec-36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 13:35:32.803 [http-nio-8080-exec-36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 13:35:32.804 [http-nio-8080-exec-36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 13:35:32.804 [http-nio-8080-exec-36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:35:32.806 [http-nio-8080-exec-36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 13:35:32.814 [http-nio-8080-exec-36] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 13:35:32.814 [http-nio-8080-exec-36] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 13:35:32.814 [http-nio-8080-exec-36] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 13:35:32.950 [http-nio-8080-exec-36] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 13:35:33.273 [http-nio-8080-exec-36] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:35:33.273 [http-nio-8080-exec-36] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:35:33.273 [http-nio-8080-exec-36] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 13:35:33.299 [http-nio-8080-exec-36] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 13:35:33.316 [http-nio-8080-exec-36] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 13:35:33.397 [http-nio-8080-exec-36] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 13:35:33.462 [http-nio-8080-exec-36] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 13:35:33.467 [http-nio-8080-exec-36] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4891ec7d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b7df479]
[DEBUG] 2020-02-28 13:35:33.521 [http-nio-8080-exec-36] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:35:33.547 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:35:33.552 [http-nio-8080-exec-36] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 13:35:33.554 [http-nio-8080-exec-36] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 13:35:33.586 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.588 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 13:35:33.589 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 13:35:33.591 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 13:35:33.592 [http-nio-8080-exec-36] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 13:35:33.594 [http-nio-8080-exec-36] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:35:33.596 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.597 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:35:33.597 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 13:35:33.597 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:35:33.598 [http-nio-8080-exec-36] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:35:33.598 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.599 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 13:35:33.599 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 13:35:33.599 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 13:35:33.599 [http-nio-8080-exec-36] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 13:35:33.599 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:35:33.599 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:35:33.599 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 13:35:33.599 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:35:33.599 [http-nio-8080-exec-36] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:35:33.599 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.599 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:35:33.599 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 13:35:33.599 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:35:33.599 [http-nio-8080-exec-36] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:35:33.600 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:35:33.601 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.602 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.615 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.615 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.616 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:35:33.617 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:35:33.617 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:35:33.617 [http-nio-8080-exec-36] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:35:33.620 [http-nio-8080-exec-36] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 13:35:33.620 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:35:33.620 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.620 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.620 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.620 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.620 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:35:33.620 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 13:35:33.621 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 13:35:33.622 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 13:35:33.622 [http-nio-8080-exec-36] PropertyBinder - Building property password
[DEBUG] 2020-02-28 13:35:33.622 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.622 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 13:35:33.622 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 13:35:33.622 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 13:35:33.622 [http-nio-8080-exec-36] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 13:35:33.622 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:35:33.622 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.622 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.622 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.622 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.622 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:35:33.622 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 13:35:33.623 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 13:35:33.624 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 13:35:33.624 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 13:35:33.624 [http-nio-8080-exec-36] PropertyBinder - Building property username
[DEBUG] 2020-02-28 13:35:33.625 [http-nio-8080-exec-36] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:35:33.625 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:35:33.625 [http-nio-8080-exec-36] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 13:35:33.625 [http-nio-8080-exec-36] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 13:35:33.627 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.627 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 13:35:33.627 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 13:35:33.627 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 13:35:33.627 [http-nio-8080-exec-36] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 13:35:33.627 [http-nio-8080-exec-36] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:35:33.627 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.627 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:35:33.627 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 13:35:33.627 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:35:33.627 [http-nio-8080-exec-36] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:35:33.634 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.634 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 13:35:33.634 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 13:35:33.634 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 13:35:33.634 [http-nio-8080-exec-36] PropertyBinder - Building property name
[DEBUG] 2020-02-28 13:35:33.635 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.635 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:35:33.635 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 13:35:33.635 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:35:33.635 [http-nio-8080-exec-36] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:35:33.635 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 13:35:33.635 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.637 [http-nio-8080-exec-36] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:35:33.637 [http-nio-8080-exec-36] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:35:33.637 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:35:33.637 [http-nio-8080-exec-36] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 13:35:33.637 [http-nio-8080-exec-36] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 13:35:33.640 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.640 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 13:35:33.640 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 13:35:33.640 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 13:35:33.640 [http-nio-8080-exec-36] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 13:35:33.641 [http-nio-8080-exec-36] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:35:33.641 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.641 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 13:35:33.641 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 13:35:33.641 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 13:35:33.641 [http-nio-8080-exec-36] PropertyBinder - Building property author
[DEBUG] 2020-02-28 13:35:33.641 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.641 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:35:33.641 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 13:35:33.641 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:35:33.641 [http-nio-8080-exec-36] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:35:33.641 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.641 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:35:33.641 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 13:35:33.641 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:35:33.641 [http-nio-8080-exec-36] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:35:33.642 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.642 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:35:33.642 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 13:35:33.642 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:35:33.642 [http-nio-8080-exec-36] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:35:33.642 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.642 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:35:33.642 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 13:35:33.642 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:35:33.642 [http-nio-8080-exec-36] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:35:33.642 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.642 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:35:33.642 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 13:35:33.643 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:35:33.643 [http-nio-8080-exec-36] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:35:33.643 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.643 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:35:33.643 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 13:35:33.643 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:35:33.644 [http-nio-8080-exec-36] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:35:33.644 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.644 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:35:33.644 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 13:35:33.644 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:35:33.644 [http-nio-8080-exec-36] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:35:33.644 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.644 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:35:33.644 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 13:35:33.644 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:35:33.644 [http-nio-8080-exec-36] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:35:33.644 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:35:33.645 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.645 [http-nio-8080-exec-36] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:35:33.645 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.645 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:35:33.645 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 13:35:33.645 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:35:33.645 [http-nio-8080-exec-36] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:35:33.645 [http-nio-8080-exec-36] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:35:33.645 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:35:33.645 [http-nio-8080-exec-36] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 13:35:33.645 [http-nio-8080-exec-36] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 13:35:33.646 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.647 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 13:35:33.647 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 13:35:33.647 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 13:35:33.647 [http-nio-8080-exec-36] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 13:35:33.647 [http-nio-8080-exec-36] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:35:33.648 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.648 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:35:33.648 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 13:35:33.648 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:35:33.648 [http-nio-8080-exec-36] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:35:33.648 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.648 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:35:33.648 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 13:35:33.648 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:35:33.649 [http-nio-8080-exec-36] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:35:33.649 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.649 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.649 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.649 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:35:33.649 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:35:33.649 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:35:33.649 [http-nio-8080-exec-36] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:35:33.650 [http-nio-8080-exec-36] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:35:33.650 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.650 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:35:33.650 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 13:35:33.650 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:35:33.650 [http-nio-8080-exec-36] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:35:33.650 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.650 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:35:33.650 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 13:35:33.650 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:35:33.650 [http-nio-8080-exec-36] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:35:33.651 [http-nio-8080-exec-36] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:35:33.651 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:35:33.651 [http-nio-8080-exec-36] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 13:35:33.651 [http-nio-8080-exec-36] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 13:35:33.652 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.652 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 13:35:33.652 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 13:35:33.652 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 13:35:33.653 [http-nio-8080-exec-36] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 13:35:33.653 [http-nio-8080-exec-36] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:35:33.653 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.653 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:35:33.653 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 13:35:33.653 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:35:33.653 [http-nio-8080-exec-36] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:35:33.653 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.653 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:35:33.653 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 13:35:33.653 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:35:33.653 [http-nio-8080-exec-36] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:35:33.653 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.653 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.653 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.653 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] PropertyBinder - Building property director
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.654 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.655 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:35:33.655 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:35:33.655 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:35:33.655 [http-nio-8080-exec-36] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:35:33.655 [http-nio-8080-exec-36] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 13:35:33.655 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.655 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:35:33.656 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 13:35:33.656 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:35:33.656 [http-nio-8080-exec-36] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:35:33.657 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.657 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:35:33.657 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 13:35:33.657 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:35:33.657 [http-nio-8080-exec-36] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:35:33.657 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.657 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:35:33.657 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 13:35:33.657 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:35:33.657 [http-nio-8080-exec-36] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:35:33.657 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.657 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:35:33.657 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 13:35:33.658 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:35:33.658 [http-nio-8080-exec-36] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:35:33.658 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.658 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:35:33.658 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 13:35:33.658 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:35:33.658 [http-nio-8080-exec-36] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:35:33.658 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:35:33.658 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.658 [http-nio-8080-exec-36] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:35:33.658 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.658 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:35:33.658 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 13:35:33.658 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:35:33.658 [http-nio-8080-exec-36] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:35:33.658 [http-nio-8080-exec-36] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:35:33.659 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:35:33.659 [http-nio-8080-exec-36] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 13:35:33.659 [http-nio-8080-exec-36] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 13:35:33.660 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.660 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 13:35:33.660 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 13:35:33.660 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 13:35:33.660 [http-nio-8080-exec-36] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 13:35:33.660 [http-nio-8080-exec-36] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:35:33.660 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.660 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 13:35:33.660 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 13:35:33.660 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 13:35:33.661 [http-nio-8080-exec-36] PropertyBinder - Building property category
[DEBUG] 2020-02-28 13:35:33.661 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.661 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:35:33.661 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 13:35:33.661 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:35:33.661 [http-nio-8080-exec-36] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:35:33.661 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.661 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:35:33.661 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 13:35:33.661 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:35:33.661 [http-nio-8080-exec-36] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:35:33.661 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.661 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:35:33.661 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 13:35:33.661 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:35:33.662 [http-nio-8080-exec-36] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:35:33.662 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.662 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:35:33.662 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 13:35:33.662 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:35:33.662 [http-nio-8080-exec-36] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:35:33.662 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:35:33.662 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.662 [http-nio-8080-exec-36] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:35:33.662 [http-nio-8080-exec-36] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:35:33.662 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:35:33.662 [http-nio-8080-exec-36] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 13:35:33.663 [http-nio-8080-exec-36] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 13:35:33.664 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.664 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 13:35:33.664 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 13:35:33.664 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 13:35:33.664 [http-nio-8080-exec-36] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 13:35:33.665 [http-nio-8080-exec-36] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:35:33.665 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.665 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:35:33.665 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 13:35:33.665 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:35:33.665 [http-nio-8080-exec-36] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:35:33.665 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:35:33.665 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:35:33.665 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 13:35:33.665 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:35:33.665 [http-nio-8080-exec-36] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:35:33.665 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.665 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:35:33.665 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 13:35:33.665 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:35:33.665 [http-nio-8080-exec-36] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:35:33.666 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.666 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.666 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.666 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:35:33.666 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:35:33.666 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:35:33.666 [http-nio-8080-exec-36] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:35:33.666 [http-nio-8080-exec-36] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:35:33.666 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.666 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:35:33.666 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 13:35:33.666 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:35:33.666 [http-nio-8080-exec-36] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:35:33.667 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.667 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:35:33.667 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 13:35:33.667 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:35:33.667 [http-nio-8080-exec-36] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:35:33.667 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.667 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 13:35:33.667 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 13:35:33.667 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 13:35:33.667 [http-nio-8080-exec-36] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 13:35:33.667 [http-nio-8080-exec-36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:35:33.667 [http-nio-8080-exec-36] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:35:33.667 [http-nio-8080-exec-36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 13:35:33.667 [http-nio-8080-exec-36] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:35:33.667 [http-nio-8080-exec-36] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:35:33.669 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:35:33.670 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 13:35:33.671 [http-nio-8080-exec-36] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:35:33.677 [http-nio-8080-exec-36] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 13:35:33.677 [http-nio-8080-exec-36] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 13:35:33.677 [http-nio-8080-exec-36] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 13:35:33.677 [http-nio-8080-exec-36] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 13:35:33.677 [http-nio-8080-exec-36] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 13:35:33.677 [http-nio-8080-exec-36] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 13:35:33.677 [http-nio-8080-exec-36] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 13:35:33.677 [http-nio-8080-exec-36] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:35:33.677 [http-nio-8080-exec-36] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:35:33.679 [http-nio-8080-exec-36] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:35:33.679 [http-nio-8080-exec-36] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:35:33.680 [http-nio-8080-exec-36] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 13:35:33.680 [http-nio-8080-exec-36] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:35:33.680 [http-nio-8080-exec-36] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:35:33.680 [http-nio-8080-exec-36] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:35:33.681 [http-nio-8080-exec-36] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:35:33.681 [http-nio-8080-exec-36] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 13:35:33.681 [http-nio-8080-exec-36] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:35:33.681 [http-nio-8080-exec-36] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 13:35:33.681 [http-nio-8080-exec-36] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 13:35:33.681 [http-nio-8080-exec-36] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 13:35:33.681 [http-nio-8080-exec-36] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:35:33.681 [http-nio-8080-exec-36] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:35:33.681 [http-nio-8080-exec-36] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 13:35:33.681 [http-nio-8080-exec-36] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 13:35:33.681 [http-nio-8080-exec-36] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 13:35:33.682 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:35:33.683 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:35:33.684 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:35:33.684 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:35:33.684 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:35:33.684 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:35:33.685 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:35:33.685 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:35:33.685 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:35:33.687 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:35:33.687 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:35:33.687 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:35:33.687 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:35:33.687 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:35:33.687 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:35:33.687 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:35:33.687 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:35:33.687 [http-nio-8080-exec-36] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:35:33.731 [http-nio-8080-exec-36] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 13:35:33.732 [http-nio-8080-exec-36] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Statistics: disabled
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 13:35:33.733 [http-nio-8080-exec-36] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 13:35:33.736 [http-nio-8080-exec-36] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 13:35:33.737 [http-nio-8080-exec-36] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 13:35:33.737 [http-nio-8080-exec-36] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 13:35:33.737 [http-nio-8080-exec-36] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 13:35:33.737 [http-nio-8080-exec-36] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 13:35:33.737 [http-nio-8080-exec-36] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 13:35:33.737 [http-nio-8080-exec-36] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 13:35:33.737 [http-nio-8080-exec-36] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 13:35:33.737 [http-nio-8080-exec-36] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 13:35:33.737 [http-nio-8080-exec-36] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 13:35:33.737 [http-nio-8080-exec-36] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 13:35:33.788 [http-nio-8080-exec-36] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 13:35:33.874 [http-nio-8080-exec-36] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 13:35:33.874 [http-nio-8080-exec-36] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@69cb6e22, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 13:35:33.900 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:35:33.900 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:35:33.901 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:35:33.901 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:35:33.901 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:35:33.901 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:35:33.902 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:35:33.902 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:35:33.902 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:35:33.902 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:35:33.902 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:35:33.902 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:35:33.903 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:35:33.903 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:35:33.905 [http-nio-8080-exec-36] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 13:35:33.906 [http-nio-8080-exec-36] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 13:35:33.906 [http-nio-8080-exec-36] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4891ec7d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4bf18bee]
[DEBUG] 2020-02-28 13:35:33.956 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:35:33.956 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:35:33.965 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:35:33.965 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:35:34.182 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:35:34.182 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:35:34.182 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:35:34.182 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:35:34.196 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:35:34.196 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:35:34.196 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:35:34.196 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:35:34.204 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:35:34.205 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:35:34.205 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:35:34.205 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:35:34.224 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:35:34.224 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:35:34.225 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:35:34.225 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:35:34.245 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:35:34.245 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:35:34.248 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:35:34.248 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:35:34.281 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:35:34.281 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:35:34.282 [http-nio-8080-exec-36] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:35:34.282 [http-nio-8080-exec-36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:35:34.328 [http-nio-8080-exec-36] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:35:34.329 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 13:35:34.329 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 13:35:34.329 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 13:35:34.329 [http-nio-8080-exec-36] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 13:35:34.329 [http-nio-8080-exec-36] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:35:34.329 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 13:35:34.329 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 13:35:34.329 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 13:35:34.329 [http-nio-8080-exec-36] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 13:35:34.331 [http-nio-8080-exec-36] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:35:34.331 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 13:35:34.331 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 13:35:34.331 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 13:35:34.331 [http-nio-8080-exec-36] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 13:35:34.334 [http-nio-8080-exec-36] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:35:34.334 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:35:34.334 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:35:34.334 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:35:34.334 [http-nio-8080-exec-36] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 13:35:34.335 [http-nio-8080-exec-36] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 13:35:34.338 [http-nio-8080-exec-36] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:35:34.338 [http-nio-8080-exec-36] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 13:35:34.338 [http-nio-8080-exec-36] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 13:35:34.338 [http-nio-8080-exec-36] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:35:34.338 [http-nio-8080-exec-36] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 13:35:34.338 [http-nio-8080-exec-36] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 13:35:34.338 [http-nio-8080-exec-36] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:35:34.364 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8e1daa]
[DEBUG] 2020-02-28 13:35:34.365 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:35:34.365 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.365 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:35:34.368 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e58deb1]
[DEBUG] 2020-02-28 13:35:34.374 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51bcd4d2]
[DEBUG] 2020-02-28 13:35:34.375 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:35:34.375 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:35:34.375 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:35:34.375 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:35:34.375 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2348af82]
[DEBUG] 2020-02-28 13:35:34.375 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@104a5fa0]
[DEBUG] 2020-02-28 13:35:34.375 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:35:34.375 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:35:34.375 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:35:34.375 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:35:34.375 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.375 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:35:34.375 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5014c22d]
[DEBUG] 2020-02-28 13:35:34.377 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:35:34.377 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:35:34.377 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:35:34.377 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:35:34.377 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:35:34.377 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ea17b25]
[DEBUG] 2020-02-28 13:35:34.377 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14720d21]
[DEBUG] 2020-02-28 13:35:34.377 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:35:34.377 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:35:34.377 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:35:34.377 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:35:34.377 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:35:34.377 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:35:34.377 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:35:34.377 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:35:34.377 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@402cd24b]
[DEBUG] 2020-02-28 13:35:34.378 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44b3c46a]
[DEBUG] 2020-02-28 13:35:34.378 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:35:34.378 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:35:34.378 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:35:34.378 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:35:34.378 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:35:34.379 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:35:34.379 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@612d23de]
[DEBUG] 2020-02-28 13:35:34.379 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b5de5b3]
[DEBUG] 2020-02-28 13:35:34.379 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:35:34.379 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:35:34.379 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:35:34.381 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3eff9b0c]
[DEBUG] 2020-02-28 13:35:34.388 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:35:34.388 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:35:34.388 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.403 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.414 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7947ab05]
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1da98b20]
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9c3ddd]
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79c7b6e8]
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39024a85]
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6823360e]
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:35:34.416 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70b91c9d]
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bc4266d]
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2aa6f85d]
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72131c97]
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d827983]
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@479f2f00]
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@38cb4714]
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.417 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.418 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:35:34.418 [http-nio-8080-exec-36] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:35:34.440 [http-nio-8080-exec-36] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b7b5366]
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5754563c]
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ecfea80]
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35ca195a]
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40da4c69]
[DEBUG] 2020-02-28 13:35:34.441 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cab4314]
[DEBUG] 2020-02-28 13:35:34.442 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:35:34.442 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:35:34.442 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:35:34.442 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:35:34.442 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:35:34.442 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:35:34.442 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5aff5fb9]
[DEBUG] 2020-02-28 13:35:34.442 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cba1411]
[DEBUG] 2020-02-28 13:35:34.442 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:35:34.442 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:35:34.442 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:35:34.442 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@8906012]
[DEBUG] 2020-02-28 13:35:34.442 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:35:34.442 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.442 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.444 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:35:34.444 [http-nio-8080-exec-36] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:35:34.447 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47577915]
[DEBUG] 2020-02-28 13:35:34.447 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:35:34.447 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.447 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:35:34.447 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:35:34.447 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.447 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:35:34.447 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30aa80e6]
[DEBUG] 2020-02-28 13:35:34.447 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:35:34.447 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:35:34.447 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:35:34.447 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@472eca8]
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@304c8133]
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54859a6c]
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@210aa75f]
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1eb1e244]
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af59e92]
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@287a067e]
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.448 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.449 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:35:34.449 [http-nio-8080-exec-36] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:35:34.449 [http-nio-8080-exec-36] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:35:34.449 [http-nio-8080-exec-36] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25db3121]
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b2d89fd]
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1925331d]
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1beb7635]
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c7e66d4]
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@536f210b]
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63e25da0]
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2378c537]
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3caf4f4a]
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.450 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@679c169c]
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@443bec35]
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47474b56]
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41d4495]
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f5c4a67]
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bd95db8]
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6639b86e]
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@86e71d0]
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@751c1dc8]
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.451 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f289c77]
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61d43da0]
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@896500e]
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.452 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.453 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:35:34.453 [http-nio-8080-exec-36] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:35:34.453 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4316be4f]
[DEBUG] 2020-02-28 13:35:34.453 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.453 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:35:34.453 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:35:34.453 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b51f572]
[DEBUG] 2020-02-28 13:35:34.453 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51fdce36]
[DEBUG] 2020-02-28 13:35:34.453 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:35:34.453 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.453 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27eff680]
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:35:34.454 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f114c25]
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48a114ed]
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d4992e8]
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@581c9900]
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d67af5f]
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1da1de62]
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ccec1ec]
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@639a5347]
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.455 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.456 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:35:34.456 [http-nio-8080-exec-36] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:35:34.456 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d4cb85c]
[DEBUG] 2020-02-28 13:35:34.456 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@287538e]
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a3b0e0d]
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48f9d900]
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70daf8b2]
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c391727]
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ee03fcb]
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38d7c0ce]
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:35:34.457 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:35:34.458 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:35:34.458 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:35:34.458 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:35:34.458 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:35:34.458 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:35:34.458 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:35:34.458 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@442a6a26]
[DEBUG] 2020-02-28 13:35:34.458 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:35:34.458 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:35:34.458 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.458 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.459 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:35:34.459 [http-nio-8080-exec-36] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:35:34.459 [http-nio-8080-exec-36] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:35:34.459 [http-nio-8080-exec-36] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:35:34.459 [http-nio-8080-exec-36] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:35:34.459 [http-nio-8080-exec-36] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 13:35:34.459 [http-nio-8080-exec-36] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 13:35:34.459 [http-nio-8080-exec-36] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:35:34.459 [http-nio-8080-exec-36] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 13:35:34.459 [http-nio-8080-exec-36] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 13:35:34.459 [http-nio-8080-exec-36] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20f0345c]
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1453b976]
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e1a33da]
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1fe9a291]
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@606aad61]
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69fb2013]
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6105a15]
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:35:34.460 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:35:34.461 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51c06cb5]
[DEBUG] 2020-02-28 13:35:34.461 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5504546a]
[DEBUG] 2020-02-28 13:35:34.461 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:35:34.461 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:35:34.461 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:35:34.461 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7d78f75b]
[DEBUG] 2020-02-28 13:35:34.461 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:35:34.461 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.461 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.462 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:35:34.462 [http-nio-8080-exec-36] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:35:34.462 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17a558cb]
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a0d182b]
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e0368cb]
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@335d0ac0]
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2dc28b]
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e535165]
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b032d54]
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@467437a6]
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45fcbb1]
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:35:34.463 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:35:34.464 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:35:34.464 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1daae013]
[DEBUG] 2020-02-28 13:35:34.464 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:35:34.464 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.464 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.464 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:35:34.467 [http-nio-8080-exec-36] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:35:34.468 [http-nio-8080-exec-36] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:35:34.468 [http-nio-8080-exec-36] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:35:34.470 [http-nio-8080-exec-36] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8c7da9]
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47143b38]
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3137574]
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:35:34.471 [http-nio-8080-exec-36] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:35:34.472 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ddc218a]
[DEBUG] 2020-02-28 13:35:34.472 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:35:34.472 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.472 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:35:34.472 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:35:34.472 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d3a92d3]
[DEBUG] 2020-02-28 13:35:34.472 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@651af0d5]
[DEBUG] 2020-02-28 13:35:34.472 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:35:34.472 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:35:34.472 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:35:34.472 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:35:34.472 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.472 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.472 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:35:34.472 [http-nio-8080-exec-36] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:35:34.473 [http-nio-8080-exec-36] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:35:34.473 [http-nio-8080-exec-36] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:35:34.486 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e2a76bc]
[DEBUG] 2020-02-28 13:35:34.486 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37ff81a2]
[DEBUG] 2020-02-28 13:35:34.487 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:35:34.487 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:35:34.487 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.487 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:35:34.487 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:35:34.487 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:35:34.487 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:35:34.487 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:35:34.487 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.487 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:35:34.487 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:35:34.487 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:35:34.487 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.490 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.490 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 13:35:34.491 [http-nio-8080-exec-36] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 13:35:34.491 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1295ac3]
[DEBUG] 2020-02-28 13:35:34.491 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4735ef1e]
[DEBUG] 2020-02-28 13:35:34.491 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.491 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:35:34.491 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.491 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:35:34.491 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:35:34.492 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.492 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.492 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 13:35:34.492 [http-nio-8080-exec-36] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 13:35:34.492 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5734dcab]
[DEBUG] 2020-02-28 13:35:34.492 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f11844c]
[DEBUG] 2020-02-28 13:35:34.492 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:35:34.492 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.492 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:35:34.492 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:35:34.492 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.492 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:35:34.492 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:35:34.492 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11b9a882]
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22397d1d]
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@341b8885]
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5da3da8e]
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:35:34.493 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.496 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:35:34.497 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10005aa8]
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46b68de5]
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5025817]
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17458705]
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32594b0a]
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40723101]
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57270bf8]
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6c61d3b6]
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:35:34.499 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:35:34.502 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.505 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.505 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:35:34.505 [http-nio-8080-exec-36] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 13:35:34.505 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a510824]
[DEBUG] 2020-02-28 13:35:34.505 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@479391fb]
[DEBUG] 2020-02-28 13:35:34.505 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:35:34.505 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.505 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43cd7ab6]
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@188a277d]
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1210af7d]
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1180a3a6]
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5878df24]
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:35:34.506 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:35:34.507 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f84f811]
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7539f01b]
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61b0f089]
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7faf8264]
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1703a9f0]
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.508 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.510 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:35:34.511 [http-nio-8080-exec-36] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 13:35:34.512 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4bd2a3b2]
[DEBUG] 2020-02-28 13:35:34.512 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48edb40e]
[DEBUG] 2020-02-28 13:35:34.512 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:35:34.512 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.512 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:35:34.512 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:35:34.512 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:35:34.512 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:35:34.512 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:35:34.512 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:35:34.512 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:35:34.512 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.512 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.513 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 13:35:34.513 [http-nio-8080-exec-36] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 13:35:34.513 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30c7d2c5]
[DEBUG] 2020-02-28 13:35:34.513 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@152f4d17]
[DEBUG] 2020-02-28 13:35:34.513 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.513 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:35:34.513 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:35:34.513 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:35:34.513 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:35:34.513 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.513 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.514 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.514 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 13:35:34.514 [http-nio-8080-exec-36] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 13:35:34.514 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58949370]
[DEBUG] 2020-02-28 13:35:34.516 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37bc3a80]
[DEBUG] 2020-02-28 13:35:34.516 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:35:34.516 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:35:34.516 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:35:34.519 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cee5fb0]
[DEBUG] 2020-02-28 13:35:34.519 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ad01a97]
[DEBUG] 2020-02-28 13:35:34.519 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:35:34.519 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:35:34.519 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:35:34.519 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:35:34.520 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49c34097]
[DEBUG] 2020-02-28 13:35:34.520 [http-nio-8080-exec-36] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63aa5134]
[DEBUG] 2020-02-28 13:35:34.520 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:35:34.520 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:35:34.520 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:35:34.520 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:35:34.520 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:35:34.520 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:35:34.520 [http-nio-8080-exec-36] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:35:34.525 [http-nio-8080-exec-36] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:35:34.526 [http-nio-8080-exec-36] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:35:34.526 [http-nio-8080-exec-36] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:35:34.526 [http-nio-8080-exec-36] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 13:35:34.526 [http-nio-8080-exec-36] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 13:35:34.592 [http-nio-8080-exec-36] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 13:35:34.592 [http-nio-8080-exec-36] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 13:35:34.593 [http-nio-8080-exec-36] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 13:35:34.603 [http-nio-8080-exec-36] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 13:35:34.603 [http-nio-8080-exec-36] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 13:35:34.604 [http-nio-8080-exec-36] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 13:35:34.604 [http-nio-8080-exec-36] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 13:35:34.606 [http-nio-8080-exec-36] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2ab2d921
[DEBUG] 2020-02-28 13:35:34.609 [http-nio-8080-exec-36] SessionFactoryRegistry - Registering SessionFactory: fd1a118c-e08c-440d-954b-3ef16225ede6 (<unnamed>)
[DEBUG] 2020-02-28 13:35:34.609 [http-nio-8080-exec-36] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 13:35:34.692 [http-nio-8080-exec-36] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 13:35:34.714 [http-nio-8080-exec-36] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:35:34.735 [http-nio-8080-exec-36] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5bd850c
[DEBUG] 2020-02-28 13:35:34.766 [http-nio-8080-exec-36] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:35:34.769 [http-nio-8080-exec-36] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:35:34.776 [http-nio-8080-exec-36] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 13:35:34.798 [http-nio-8080-exec-36] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 13:35:34.816 [http-nio-8080-exec-36] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 13:35:34.816 [http-nio-8080-exec-36] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 13:35:34.818 [http-nio-8080-exec-36] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 13:35:34.818 [http-nio-8080-exec-36] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 13:35:34.825 [http-nio-8080-exec-36] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 13:35:34.825 [http-nio-8080-exec-36] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 13:35:34.826 [http-nio-8080-exec-36] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 13:35:34.826 [http-nio-8080-exec-36] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:35:34.834 [http-nio-8080-exec-36] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:35:34.834 [http-nio-8080-exec-36] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:35:34.834 [http-nio-8080-exec-36] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:35:34.853 [http-nio-8080-exec-36] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:35:34.877 [http-nio-8080-exec-36] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:35:34.883 [http-nio-8080-exec-36] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:35:34.892 [http-nio-8080-exec-36] Loader - Result set row: 1
[DEBUG] 2020-02-28 13:35:34.893 [http-nio-8080-exec-36] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:35:34.894 [http-nio-8080-exec-36] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:35:34.894 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:35:34.894 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.894 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:35:34.894 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.894 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:35:34.894 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.894 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:35:34.894 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.894 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:35:34.894 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.894 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:35:34.894 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.898 [http-nio-8080-exec-36] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:35:34.936 [http-nio-8080-exec-36] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:35:34.938 [http-nio-8080-exec-36] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:35:34.943 [http-nio-8080-exec-36] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:35:34.956 [http-nio-8080-exec-36] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:35:34.956 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:35:34.956 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.956 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:35:34.956 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.956 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:35:34.956 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.957 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:35:34.957 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.957 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:35:34.957 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.959 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:35:34.959 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.959 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:35:34.959 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.959 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:35:34.959 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.959 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:35:34.959 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.959 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:35:34.959 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.959 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:35:34.959 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.959 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:35:34.959 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.959 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:35:34.960 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.960 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:35:34.960 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.960 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:35:34.960 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.960 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@564dd34e
[DEBUG] 2020-02-28 13:35:34.961 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.962 [http-nio-8080-exec-36] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:35:34.962 [http-nio-8080-exec-36] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:35:34.962 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:35:34.962 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.962 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:35:34.962 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.962 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:35:34.962 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.962 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:35:34.962 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.963 [http-nio-8080-exec-36] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:35:34.963 [http-nio-8080-exec-36] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:35:34.967 [http-nio-8080-exec-36] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:35:34.969 [http-nio-8080-exec-36] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:35:34.969 [http-nio-8080-exec-36] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:35:34.969 [http-nio-8080-exec-36] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:35:34.969 [http-nio-8080-exec-36] Loader - Done entity load
[DEBUG] 2020-02-28 13:35:34.969 [http-nio-8080-exec-36] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:35:34.969 [http-nio-8080-exec-36] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:35:34.969 [http-nio-8080-exec-36] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:35:34.969 [http-nio-8080-exec-36] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:34.970 [http-nio-8080-exec-36] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:35:34.972 [http-nio-8080-exec-36] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:35:37.591 [http-nio-8080-exec-43] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:35:37.593 [http-nio-8080-exec-43] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:35:37.597 [http-nio-8080-exec-43] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:35:37.597 [http-nio-8080-exec-43] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:35:37.598 [http-nio-8080-exec-43] Loader - Result set row: 1
[DEBUG] 2020-02-28 13:35:37.598 [http-nio-8080-exec-43] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:35:37.598 [http-nio-8080-exec-43] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:35:37.598 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:35:37.598 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.598 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:35:37.598 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.598 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:35:37.598 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.598 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:35:37.598 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.598 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:35:37.598 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.598 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:35:37.598 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.598 [http-nio-8080-exec-43] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:35:37.599 [http-nio-8080-exec-43] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.600 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@286ebea8
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:35:37.601 [http-nio-8080-exec-43] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:35:37.602 [http-nio-8080-exec-43] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:35:37.602 [http-nio-8080-exec-43] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:35:37.602 [http-nio-8080-exec-43] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:35:37.602 [http-nio-8080-exec-43] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:35:37.602 [http-nio-8080-exec-43] Loader - Done entity load
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:35:37.603 [http-nio-8080-exec-43] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:40:53.161 [http-nio-8080-exec-52] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 13:40:53.165 [http-nio-8080-exec-52] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 13:40:53.170 [http-nio-8080-exec-52] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 13:40:53.298 [http-nio-8080-exec-52] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 13:40:53.300 [http-nio-8080-exec-52] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 13:40:53.430 [http-nio-8080-exec-52] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 13:40:53.430 [http-nio-8080-exec-52] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 13:40:53.434 [http-nio-8080-exec-52] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 13:40:53.602 [http-nio-8080-exec-52] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 13:40:53.619 [http-nio-8080-exec-52] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 13:40:53.620 [http-nio-8080-exec-52] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 13:40:53.640 [http-nio-8080-exec-52] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 13:40:53.696 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5dcd8e32
[DEBUG] 2020-02-28 13:40:53.697 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5dcd8e32
[DEBUG] 2020-02-28 13:40:53.697 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5dcd8e32
[DEBUG] 2020-02-28 13:40:53.698 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6566fdfe
[DEBUG] 2020-02-28 13:40:53.699 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@504bee34
[DEBUG] 2020-02-28 13:40:53.700 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@14435a07
[DEBUG] 2020-02-28 13:40:53.701 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@248e8bfe
[DEBUG] 2020-02-28 13:40:53.701 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@248e8bfe
[DEBUG] 2020-02-28 13:40:53.701 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@248e8bfe
[DEBUG] 2020-02-28 13:40:53.704 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6f573ffd
[DEBUG] 2020-02-28 13:40:53.704 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6f573ffd
[DEBUG] 2020-02-28 13:40:53.704 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6f573ffd
[DEBUG] 2020-02-28 13:40:53.706 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7a0167ba
[DEBUG] 2020-02-28 13:40:53.706 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7a0167ba
[DEBUG] 2020-02-28 13:40:53.706 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7a0167ba
[DEBUG] 2020-02-28 13:40:53.708 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@23cef3b7
[DEBUG] 2020-02-28 13:40:53.708 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@23cef3b7
[DEBUG] 2020-02-28 13:40:53.708 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@23cef3b7
[DEBUG] 2020-02-28 13:40:53.710 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4501cdde
[DEBUG] 2020-02-28 13:40:53.710 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4501cdde
[DEBUG] 2020-02-28 13:40:53.710 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4501cdde
[DEBUG] 2020-02-28 13:40:53.713 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@143f6ec6
[DEBUG] 2020-02-28 13:40:53.713 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@143f6ec6
[DEBUG] 2020-02-28 13:40:53.713 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@143f6ec6
[DEBUG] 2020-02-28 13:40:53.714 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4251e94a
[DEBUG] 2020-02-28 13:40:53.714 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4251e94a
[DEBUG] 2020-02-28 13:40:53.715 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4251e94a
[DEBUG] 2020-02-28 13:40:53.715 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@15090ec6
[DEBUG] 2020-02-28 13:40:53.716 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@15090ec6
[DEBUG] 2020-02-28 13:40:53.717 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@326cbddd
[DEBUG] 2020-02-28 13:40:53.717 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@326cbddd
[DEBUG] 2020-02-28 13:40:53.718 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@25c044fc
[DEBUG] 2020-02-28 13:40:53.718 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@25c044fc
[DEBUG] 2020-02-28 13:40:53.719 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@791c9ed
[DEBUG] 2020-02-28 13:40:53.719 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@495df19d
[DEBUG] 2020-02-28 13:40:53.741 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7ac1a89c
[DEBUG] 2020-02-28 13:40:53.741 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7ac1a89c
[DEBUG] 2020-02-28 13:40:53.742 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@55741937
[DEBUG] 2020-02-28 13:40:53.742 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@55741937
[DEBUG] 2020-02-28 13:40:53.744 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@50ea1e9f
[DEBUG] 2020-02-28 13:40:53.744 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@50ea1e9f
[DEBUG] 2020-02-28 13:40:53.746 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@15dfbc33
[DEBUG] 2020-02-28 13:40:53.747 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@15dfbc33
[DEBUG] 2020-02-28 13:40:53.748 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@13c48fe
[DEBUG] 2020-02-28 13:40:53.748 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@13c48fe
[DEBUG] 2020-02-28 13:40:53.749 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4c20697e
[DEBUG] 2020-02-28 13:40:53.749 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4c20697e
[DEBUG] 2020-02-28 13:40:53.750 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@717799bf
[DEBUG] 2020-02-28 13:40:53.750 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@717799bf
[DEBUG] 2020-02-28 13:40:53.752 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7e8f4623
[DEBUG] 2020-02-28 13:40:53.752 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7e8f4623
[DEBUG] 2020-02-28 13:40:53.753 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6041cf9f
[DEBUG] 2020-02-28 13:40:53.753 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6041cf9f
[DEBUG] 2020-02-28 13:40:53.754 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4b5e44c7
[DEBUG] 2020-02-28 13:40:53.754 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b5e44c7
[DEBUG] 2020-02-28 13:40:53.755 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6f9c22ce
[DEBUG] 2020-02-28 13:40:53.755 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6f9c22ce
[DEBUG] 2020-02-28 13:40:53.766 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3f08e076
[DEBUG] 2020-02-28 13:40:53.766 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3f08e076
[DEBUG] 2020-02-28 13:40:53.766 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3f08e076
[DEBUG] 2020-02-28 13:40:53.767 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@684e224
[DEBUG] 2020-02-28 13:40:53.774 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7093d7fa
[DEBUG] 2020-02-28 13:40:53.774 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7093d7fa
[DEBUG] 2020-02-28 13:40:53.778 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7093d7fa
[DEBUG] 2020-02-28 13:40:53.778 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2ca17787
[DEBUG] 2020-02-28 13:40:53.779 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@69604945
[DEBUG] 2020-02-28 13:40:53.779 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@69604945
[DEBUG] 2020-02-28 13:40:53.780 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4321d478
[DEBUG] 2020-02-28 13:40:53.780 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4321d478
[DEBUG] 2020-02-28 13:40:53.782 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@16a5557f
[DEBUG] 2020-02-28 13:40:53.782 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@16a5557f
[DEBUG] 2020-02-28 13:40:53.788 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1b885fef
[DEBUG] 2020-02-28 13:40:53.789 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b885fef
[DEBUG] 2020-02-28 13:40:53.789 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@fea4470
[DEBUG] 2020-02-28 13:40:53.789 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@fea4470
[DEBUG] 2020-02-28 13:40:53.790 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@37b4f9d2
[DEBUG] 2020-02-28 13:40:53.796 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2d5caa4b
[DEBUG] 2020-02-28 13:40:53.796 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2d5caa4b
[DEBUG] 2020-02-28 13:40:53.796 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2d5caa4b
[DEBUG] 2020-02-28 13:40:53.800 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@22424309
[DEBUG] 2020-02-28 13:40:53.800 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@22424309
[DEBUG] 2020-02-28 13:40:53.800 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@22424309
[DEBUG] 2020-02-28 13:40:53.801 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4354c2e
[DEBUG] 2020-02-28 13:40:53.802 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7df4eee9
[DEBUG] 2020-02-28 13:40:53.802 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@23620c05
[DEBUG] 2020-02-28 13:40:53.802 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@23620c05
[DEBUG] 2020-02-28 13:40:53.802 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@23620c05
[DEBUG] 2020-02-28 13:40:53.803 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1598372
[DEBUG] 2020-02-28 13:40:53.803 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1598372
[DEBUG] 2020-02-28 13:40:53.803 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1598372
[DEBUG] 2020-02-28 13:40:53.803 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@8f424d8
[DEBUG] 2020-02-28 13:40:53.804 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3156b161
[DEBUG] 2020-02-28 13:40:53.806 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@73142c7e
[DEBUG] 2020-02-28 13:40:53.806 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@73142c7e
[DEBUG] 2020-02-28 13:40:53.806 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@59c3a905
[DEBUG] 2020-02-28 13:40:53.807 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3892aa5e
[DEBUG] 2020-02-28 13:40:53.807 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3892aa5e
[DEBUG] 2020-02-28 13:40:53.808 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@68058bfd
[DEBUG] 2020-02-28 13:40:53.808 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@68058bfd
[DEBUG] 2020-02-28 13:40:53.808 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f516fed
[DEBUG] 2020-02-28 13:40:53.809 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@40bb2e2d
[DEBUG] 2020-02-28 13:40:53.809 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@70138fc
[DEBUG] 2020-02-28 13:40:53.814 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6dde48e5
[DEBUG] 2020-02-28 13:40:53.814 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6dde48e5
[DEBUG] 2020-02-28 13:40:53.815 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@199ee132
[DEBUG] 2020-02-28 13:40:53.815 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7dccc502
[DEBUG] 2020-02-28 13:40:53.815 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@d1328e4
[DEBUG] 2020-02-28 13:40:53.815 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b0e4a8a
[DEBUG] 2020-02-28 13:40:53.815 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2577b5a8
[DEBUG] 2020-02-28 13:40:53.815 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3e0880d1
[DEBUG] 2020-02-28 13:40:53.815 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2ac8cbfc
[DEBUG] 2020-02-28 13:40:53.816 [http-nio-8080-exec-52] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@132b8e35
[DEBUG] 2020-02-28 13:40:53.844 [http-nio-8080-exec-52] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 13:40:53.845 [http-nio-8080-exec-52] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 13:40:53.845 [http-nio-8080-exec-52] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:40:53.845 [http-nio-8080-exec-52] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:40:53.847 [http-nio-8080-exec-52] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 13:40:53.849 [http-nio-8080-exec-52] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 13:40:53.849 [http-nio-8080-exec-52] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 13:40:53.851 [http-nio-8080-exec-52] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:40:53.852 [http-nio-8080-exec-52] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 13:40:53.853 [http-nio-8080-exec-52] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 13:40:53.854 [http-nio-8080-exec-52] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 13:40:53.854 [http-nio-8080-exec-52] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 13:40:53.854 [http-nio-8080-exec-52] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:40:53.855 [http-nio-8080-exec-52] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 13:40:53.860 [http-nio-8080-exec-52] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 13:40:53.860 [http-nio-8080-exec-52] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 13:40:53.860 [http-nio-8080-exec-52] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 13:40:53.976 [http-nio-8080-exec-52] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 13:40:54.212 [http-nio-8080-exec-52] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:40:54.212 [http-nio-8080-exec-52] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:40:54.212 [http-nio-8080-exec-52] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 13:40:54.236 [http-nio-8080-exec-52] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 13:40:54.254 [http-nio-8080-exec-52] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 13:40:54.335 [http-nio-8080-exec-52] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 13:40:54.391 [http-nio-8080-exec-52] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 13:40:54.400 [http-nio-8080-exec-52] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c73ef42] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1f8fef5e]
[DEBUG] 2020-02-28 13:40:54.454 [http-nio-8080-exec-52] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:40:54.477 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:40:54.481 [http-nio-8080-exec-52] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 13:40:54.483 [http-nio-8080-exec-52] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 13:40:54.504 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.506 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 13:40:54.507 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 13:40:54.509 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 13:40:54.513 [http-nio-8080-exec-52] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 13:40:54.519 [http-nio-8080-exec-52] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:40:54.521 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.522 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:40:54.522 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 13:40:54.522 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:40:54.522 [http-nio-8080-exec-52] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:40:54.523 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.523 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 13:40:54.523 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 13:40:54.523 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 13:40:54.523 [http-nio-8080-exec-52] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 13:40:54.524 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:40:54.524 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:40:54.524 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 13:40:54.525 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:40:54.525 [http-nio-8080-exec-52] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:40:54.525 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.525 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:40:54.525 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 13:40:54.525 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:40:54.525 [http-nio-8080-exec-52] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:40:54.526 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:40:54.527 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.528 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.542 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.542 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.543 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:40:54.543 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:40:54.543 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:40:54.544 [http-nio-8080-exec-52] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:40:54.546 [http-nio-8080-exec-52] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 13:40:54.546 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:40:54.547 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.547 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.547 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.547 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.547 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:40:54.547 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:40:54.547 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:40:54.547 [http-nio-8080-exec-52] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:40:54.547 [http-nio-8080-exec-52] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:40:54.547 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.547 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:40:54.548 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 13:40:54.548 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:40:54.548 [http-nio-8080-exec-52] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:40:54.548 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.548 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 13:40:54.548 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 13:40:54.548 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 13:40:54.548 [http-nio-8080-exec-52] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 13:40:54.548 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.548 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:40:54.548 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 13:40:54.548 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:40:54.548 [http-nio-8080-exec-52] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] PropertyBinder - Building property password
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:40:54.549 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:40:54.550 [http-nio-8080-exec-52] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:40:54.551 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 13:40:54.551 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 13:40:54.551 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 13:40:54.551 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 13:40:54.551 [http-nio-8080-exec-52] PropertyBinder - Building property username
[DEBUG] 2020-02-28 13:40:54.553 [http-nio-8080-exec-52] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:40:54.555 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:40:54.555 [http-nio-8080-exec-52] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 13:40:54.555 [http-nio-8080-exec-52] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 13:40:54.561 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.561 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 13:40:54.561 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 13:40:54.561 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 13:40:54.561 [http-nio-8080-exec-52] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 13:40:54.561 [http-nio-8080-exec-52] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:40:54.561 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.561 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:40:54.561 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 13:40:54.561 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:40:54.561 [http-nio-8080-exec-52] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:40:54.570 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.570 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 13:40:54.570 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 13:40:54.570 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 13:40:54.571 [http-nio-8080-exec-52] PropertyBinder - Building property name
[DEBUG] 2020-02-28 13:40:54.572 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.572 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:40:54.572 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 13:40:54.572 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:40:54.572 [http-nio-8080-exec-52] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:40:54.573 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 13:40:54.573 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.575 [http-nio-8080-exec-52] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:40:54.575 [http-nio-8080-exec-52] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:40:54.576 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:40:54.576 [http-nio-8080-exec-52] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 13:40:54.576 [http-nio-8080-exec-52] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 13:40:54.577 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.577 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 13:40:54.577 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 13:40:54.577 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 13:40:54.577 [http-nio-8080-exec-52] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 13:40:54.577 [http-nio-8080-exec-52] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:40:54.577 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.577 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 13:40:54.577 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 13:40:54.577 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 13:40:54.577 [http-nio-8080-exec-52] PropertyBinder - Building property author
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:40:54.578 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.579 [http-nio-8080-exec-52] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:40:54.580 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.580 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:40:54.580 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 13:40:54.580 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:40:54.580 [http-nio-8080-exec-52] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:40:54.580 [http-nio-8080-exec-52] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:40:54.580 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:40:54.580 [http-nio-8080-exec-52] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 13:40:54.580 [http-nio-8080-exec-52] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 13:40:54.580 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.580 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 13:40:54.580 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 13:40:54.580 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 13:40:54.581 [http-nio-8080-exec-52] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 13:40:54.581 [http-nio-8080-exec-52] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:40:54.581 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.581 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:40:54.581 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 13:40:54.581 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:40:54.581 [http-nio-8080-exec-52] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:40:54.581 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.581 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:40:54.581 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 13:40:54.581 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:40:54.581 [http-nio-8080-exec-52] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:40:54.581 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.581 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 13:40:54.582 [http-nio-8080-exec-52] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 13:40:54.583 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.583 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 13:40:54.583 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 13:40:54.583 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 13:40:54.583 [http-nio-8080-exec-52] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 13:40:54.583 [http-nio-8080-exec-52] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:40:54.583 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 13:40:54.584 [http-nio-8080-exec-52] PropertyBinder - Building property director
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 13:40:54.585 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 13:40:54.586 [http-nio-8080-exec-52] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 13:40:54.587 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.587 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 13:40:54.587 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 13:40:54.587 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 13:40:54.588 [http-nio-8080-exec-52] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 13:40:54.588 [http-nio-8080-exec-52] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:40:54.588 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.588 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 13:40:54.588 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 13:40:54.588 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 13:40:54.588 [http-nio-8080-exec-52] PropertyBinder - Building property category
[DEBUG] 2020-02-28 13:40:54.588 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.588 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:40:54.589 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 13:40:54.589 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:40:54.589 [http-nio-8080-exec-52] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:40:54.589 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.589 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:40:54.589 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 13:40:54.590 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:40:54.590 [http-nio-8080-exec-52] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:40:54.590 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.590 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:40:54.590 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 13:40:54.590 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:40:54.590 [http-nio-8080-exec-52] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:40:54.590 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.590 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:40:54.590 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 13:40:54.590 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:40:54.590 [http-nio-8080-exec-52] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:40:54.590 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:40:54.590 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.590 [http-nio-8080-exec-52] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:40:54.591 [http-nio-8080-exec-52] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:40:54.591 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:40:54.604 [http-nio-8080-exec-52] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 13:40:54.604 [http-nio-8080-exec-52] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 13:40:54.605 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.605 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 13:40:54.605 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 13:40:54.605 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 13:40:54.605 [http-nio-8080-exec-52] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 13:40:54.605 [http-nio-8080-exec-52] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:40:54.605 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.605 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:40:54.605 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 13:40:54.608 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:40:54.609 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:40:54.610 [http-nio-8080-exec-52] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:40:54.612 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 13:40:54.612 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:40:54.615 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:40:54.616 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:40:54.616 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 13:40:54.616 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:40:54.616 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:40:54.616 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 13:40:54.616 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:40:54.616 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 13:40:54.616 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:40:54.616 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:40:54.616 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:40:54.616 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:40:54.616 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:40:54.617 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:40:54.618 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 13:40:54.618 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 13:40:54.618 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:40:54.618 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:40:54.618 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:40:54.618 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:40:54.618 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 13:40:54.618 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:40:54.618 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:40:54.618 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:40:54.618 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:40:54.618 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:40:54.618 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 13:40:54.618 [http-nio-8080-exec-52] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:40:54.628 [http-nio-8080-exec-52] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 13:40:54.628 [http-nio-8080-exec-52] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 13:40:54.628 [http-nio-8080-exec-52] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 13:40:54.628 [http-nio-8080-exec-52] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 13:40:54.628 [http-nio-8080-exec-52] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 13:40:54.628 [http-nio-8080-exec-52] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 13:40:54.629 [http-nio-8080-exec-52] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 13:40:54.629 [http-nio-8080-exec-52] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:40:54.629 [http-nio-8080-exec-52] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:40:54.638 [http-nio-8080-exec-52] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:40:54.638 [http-nio-8080-exec-52] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:40:54.638 [http-nio-8080-exec-52] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 13:40:54.638 [http-nio-8080-exec-52] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:40:54.638 [http-nio-8080-exec-52] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:40:54.638 [http-nio-8080-exec-52] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:40:54.638 [http-nio-8080-exec-52] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:40:54.638 [http-nio-8080-exec-52] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 13:40:54.638 [http-nio-8080-exec-52] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:40:54.638 [http-nio-8080-exec-52] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 13:40:54.639 [http-nio-8080-exec-52] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 13:40:54.639 [http-nio-8080-exec-52] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 13:40:54.641 [http-nio-8080-exec-52] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:40:54.641 [http-nio-8080-exec-52] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:40:54.641 [http-nio-8080-exec-52] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 13:40:54.641 [http-nio-8080-exec-52] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 13:40:54.641 [http-nio-8080-exec-52] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 13:40:54.641 [http-nio-8080-exec-52] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:40:54.641 [http-nio-8080-exec-52] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:40:54.641 [http-nio-8080-exec-52] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 13:40:54.641 [http-nio-8080-exec-52] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 13:40:54.641 [http-nio-8080-exec-52] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 13:40:54.641 [http-nio-8080-exec-52] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:40:54.641 [http-nio-8080-exec-52] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:40:54.642 [http-nio-8080-exec-52] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 13:40:54.642 [http-nio-8080-exec-52] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 13:40:54.642 [http-nio-8080-exec-52] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 13:40:54.642 [http-nio-8080-exec-52] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:40:54.642 [http-nio-8080-exec-52] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:40:54.642 [http-nio-8080-exec-52] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:40:54.642 [http-nio-8080-exec-52] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:40:54.642 [http-nio-8080-exec-52] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 13:40:54.642 [http-nio-8080-exec-52] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:40:54.642 [http-nio-8080-exec-52] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:40:54.642 [http-nio-8080-exec-52] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:40:54.642 [http-nio-8080-exec-52] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 13:40:54.642 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:40:54.642 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:40:54.649 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:40:54.650 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:40:54.650 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:40:54.650 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:40:54.650 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:40:54.652 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:40:54.652 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:40:54.654 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:40:54.654 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:40:54.655 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:40:54.655 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:40:54.655 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:40:54.655 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:40:54.655 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:40:54.655 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:40:54.655 [http-nio-8080-exec-52] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:40:54.761 [http-nio-8080-exec-52] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Statistics: disabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 13:40:54.762 [http-nio-8080-exec-52] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 13:40:54.763 [http-nio-8080-exec-52] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 13:40:54.763 [http-nio-8080-exec-52] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 13:40:54.763 [http-nio-8080-exec-52] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 13:40:54.763 [http-nio-8080-exec-52] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 13:40:54.763 [http-nio-8080-exec-52] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 13:40:54.763 [http-nio-8080-exec-52] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 13:40:54.763 [http-nio-8080-exec-52] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 13:40:54.822 [http-nio-8080-exec-52] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 13:40:54.846 [http-nio-8080-exec-52] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 13:40:54.846 [http-nio-8080-exec-52] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@44f49795, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 13:40:54.865 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:40:54.865 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:40:54.867 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:40:54.867 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:40:54.867 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:40:54.867 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:40:54.867 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:40:54.867 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:40:54.868 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:40:54.868 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:40:54.869 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:40:54.869 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:40:54.870 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:40:54.870 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:40:54.873 [http-nio-8080-exec-52] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 13:40:54.874 [http-nio-8080-exec-52] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 13:40:54.874 [http-nio-8080-exec-52] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c73ef42] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4d8bb1a5]
[DEBUG] 2020-02-28 13:40:54.918 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:40:54.918 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:40:54.928 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:40:54.928 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:40:55.138 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:40:55.138 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:40:55.139 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:40:55.139 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:40:55.167 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:40:55.167 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:40:55.167 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:40:55.167 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:40:55.182 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:40:55.182 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:40:55.182 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:40:55.182 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:40:55.197 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:40:55.197 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:40:55.198 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:40:55.198 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:40:55.245 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:40:55.246 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:40:55.247 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:40:55.247 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:40:55.360 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:40:55.362 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:40:55.363 [http-nio-8080-exec-52] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:40:55.363 [http-nio-8080-exec-52] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:40:55.409 [http-nio-8080-exec-52] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:40:55.410 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 13:40:55.410 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 13:40:55.410 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 13:40:55.410 [http-nio-8080-exec-52] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 13:40:55.411 [http-nio-8080-exec-52] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:40:55.411 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 13:40:55.411 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 13:40:55.411 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 13:40:55.411 [http-nio-8080-exec-52] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 13:40:55.411 [http-nio-8080-exec-52] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:40:55.411 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 13:40:55.411 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 13:40:55.411 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 13:40:55.411 [http-nio-8080-exec-52] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 13:40:55.414 [http-nio-8080-exec-52] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:40:55.414 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:40:55.414 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:40:55.414 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:40:55.414 [http-nio-8080-exec-52] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 13:40:55.415 [http-nio-8080-exec-52] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 13:40:55.420 [http-nio-8080-exec-52] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:40:55.420 [http-nio-8080-exec-52] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 13:40:55.420 [http-nio-8080-exec-52] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 13:40:55.421 [http-nio-8080-exec-52] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:40:55.421 [http-nio-8080-exec-52] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 13:40:55.421 [http-nio-8080-exec-52] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 13:40:55.421 [http-nio-8080-exec-52] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:40:55.445 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@293b517e]
[DEBUG] 2020-02-28 13:40:55.446 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:40:55.446 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.446 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:40:55.449 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78a0664b]
[DEBUG] 2020-02-28 13:40:55.450 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b7d342d]
[DEBUG] 2020-02-28 13:40:55.450 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:40:55.450 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:40:55.451 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:40:55.451 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:40:55.451 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24bca3]
[DEBUG] 2020-02-28 13:40:55.451 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79f86d59]
[DEBUG] 2020-02-28 13:40:55.451 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:40:55.451 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:40:55.451 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:40:55.451 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:40:55.451 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.451 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:40:55.452 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56f2b3dc]
[DEBUG] 2020-02-28 13:40:55.453 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:40:55.454 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:40:55.454 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:40:55.454 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:40:55.454 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:40:55.454 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@173706db]
[DEBUG] 2020-02-28 13:40:55.454 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b5def67]
[DEBUG] 2020-02-28 13:40:55.454 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:40:55.454 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:40:55.454 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:40:55.454 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:40:55.454 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:40:55.454 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:40:55.454 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:40:55.454 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:40:55.454 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58d701e8]
[DEBUG] 2020-02-28 13:40:55.454 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c05eb42]
[DEBUG] 2020-02-28 13:40:55.455 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:40:55.455 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:40:55.455 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:40:55.455 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:40:55.455 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:40:55.455 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:40:55.455 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ff8a907]
[DEBUG] 2020-02-28 13:40:55.455 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e9794e]
[DEBUG] 2020-02-28 13:40:55.455 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:40:55.455 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:40:55.455 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:40:55.456 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@11ec2f1d]
[DEBUG] 2020-02-28 13:40:55.457 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:40:55.457 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:40:55.457 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.471 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.476 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3503763a]
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@765dcef4]
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c3cefa4]
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32a0f8bf]
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ce06c43]
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:40:55.477 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64523745]
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ab8c3e6]
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55c52086]
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20d8dd64]
[DEBUG] 2020-02-28 13:40:55.478 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a47194e]
[DEBUG] 2020-02-28 13:40:55.479 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:40:55.479 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:40:55.479 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:40:55.479 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:40:55.479 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:40:55.479 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:40:55.479 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c64528b]
[DEBUG] 2020-02-28 13:40:55.479 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eabb720]
[DEBUG] 2020-02-28 13:40:55.479 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:40:55.479 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:40:55.479 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:40:55.479 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3a43f83c]
[DEBUG] 2020-02-28 13:40:55.479 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:40:55.479 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:40:55.479 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.479 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.481 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:40:55.481 [http-nio-8080-exec-52] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:40:55.497 [http-nio-8080-exec-52] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:40:55.497 [http-nio-8080-exec-52] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:40:55.497 [http-nio-8080-exec-52] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:40:55.497 [http-nio-8080-exec-52] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 13:40:55.497 [http-nio-8080-exec-52] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 13:40:55.497 [http-nio-8080-exec-52] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:40:55.497 [http-nio-8080-exec-52] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 13:40:55.497 [http-nio-8080-exec-52] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 13:40:55.497 [http-nio-8080-exec-52] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@626a6717]
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c0212c5]
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4716b80]
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18a3cae1]
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14bb770a]
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@360c40d7]
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7090023d]
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24cefe00]
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6dae3b8c]
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.498 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43526198]
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c5182dc]
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77366ef7]
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aac5ec4]
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1aeb682f]
[DEBUG] 2020-02-28 13:40:55.499 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7999a796]
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@455ae15]
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30c40c1e]
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6c78f58d]
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:40:55.500 [http-nio-8080-exec-52] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@701b6eca]
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bd06d3e]
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d59cd7]
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aa202e6]
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52532511]
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64a7afb8]
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4bbba4df]
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41043a7c]
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@ab4f4e0]
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:40:55.501 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@453c9b94]
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8b56d20]
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40a9479d]
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39af063b]
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a50a043]
[DEBUG] 2020-02-28 13:40:55.502 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f9da36e]
[DEBUG] 2020-02-28 13:40:55.507 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:40:55.507 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:40:55.507 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:40:55.507 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:40:55.507 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:40:55.507 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:40:55.507 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:40:55.507 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:40:55.507 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35829eaf]
[DEBUG] 2020-02-28 13:40:55.507 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ddc8fa]
[DEBUG] 2020-02-28 13:40:55.507 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:40:55.507 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:40:55.507 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:40:55.507 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6b902c9a]
[DEBUG] 2020-02-28 13:40:55.507 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:40:55.508 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1812f224]
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@680c6be0]
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72f0dc68]
[DEBUG] 2020-02-28 13:40:55.509 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:40:55.510 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.511 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.511 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.511 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:40:55.511 [http-nio-8080-exec-52] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:40:55.511 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dfc93c0]
[DEBUG] 2020-02-28 13:40:55.512 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.512 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:40:55.512 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:40:55.512 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@673976ef]
[DEBUG] 2020-02-28 13:40:55.512 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@135ef5fc]
[DEBUG] 2020-02-28 13:40:55.512 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:40:55.512 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.512 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.513 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.513 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:40:55.513 [http-nio-8080-exec-52] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:40:55.513 [http-nio-8080-exec-52] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:40:55.513 [http-nio-8080-exec-52] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:40:55.513 [http-nio-8080-exec-52] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:40:55.513 [http-nio-8080-exec-52] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 13:40:55.513 [http-nio-8080-exec-52] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 13:40:55.513 [http-nio-8080-exec-52] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:40:55.513 [http-nio-8080-exec-52] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 13:40:55.513 [http-nio-8080-exec-52] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 13:40:55.513 [http-nio-8080-exec-52] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa506c4]
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@409ff70d]
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6bbba84]
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@152e69a]
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3eca5e22]
[DEBUG] 2020-02-28 13:40:55.514 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a6bbfaf]
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11df43fc]
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72f016b]
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@17d24425]
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.515 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40fe0d7a]
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7083bae7]
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@615173c0]
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3da0e9d1]
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50193800]
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2097a5a3]
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ab21d02]
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70668be4]
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:40:55.516 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:40:55.517 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:40:55.517 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:40:55.517 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:40:55.517 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:40:55.517 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2e813765]
[DEBUG] 2020-02-28 13:40:55.517 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:40:55.517 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:40:55.517 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.517 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.517 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:40:55.517 [http-nio-8080-exec-52] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:40:55.517 [http-nio-8080-exec-52] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:40:55.517 [http-nio-8080-exec-52] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30a64991]
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68322b5e]
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67462dd2]
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65ae0a6a]
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52881811]
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b19a1c5]
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d6721c9]
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ca4ddd3]
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5809cee7]
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4cd8b182]
[DEBUG] 2020-02-28 13:40:55.518 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:40:55.519 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.519 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.522 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:40:55.522 [http-nio-8080-exec-52] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:40:55.522 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@264bf3a9]
[DEBUG] 2020-02-28 13:40:55.522 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:40:55.522 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:40:55.522 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.522 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:40:55.522 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@397e8c56]
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7afbe27e]
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3548033]
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28a7afdf]
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65768aa1]
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@403b6c63]
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2377045d]
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38b43c24]
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1699e92c]
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.523 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.524 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:40:55.524 [http-nio-8080-exec-52] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:40:55.524 [http-nio-8080-exec-52] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:40:55.524 [http-nio-8080-exec-52] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:40:55.528 [http-nio-8080-exec-52] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:40:55.528 [http-nio-8080-exec-52] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:40:55.528 [http-nio-8080-exec-52] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 13:40:55.528 [http-nio-8080-exec-52] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 13:40:55.528 [http-nio-8080-exec-52] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:40:55.528 [http-nio-8080-exec-52] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 13:40:55.528 [http-nio-8080-exec-52] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 13:40:55.528 [http-nio-8080-exec-52] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@219dd159]
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f83485f]
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40278d91]
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fff8bd5]
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43e0ddde]
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fd79b36]
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:40:55.529 [http-nio-8080-exec-52] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:40:55.530 [http-nio-8080-exec-52] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:40:55.530 [http-nio-8080-exec-52] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:40:55.534 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a4bfe26]
[DEBUG] 2020-02-28 13:40:55.534 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47368c8]
[DEBUG] 2020-02-28 13:40:55.534 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:40:55.534 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:40:55.534 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.534 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:40:55.534 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:40:55.534 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:40:55.534 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:40:55.534 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:40:55.534 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.534 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:40:55.534 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:40:55.534 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:40:55.534 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.538 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.539 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 13:40:55.540 [http-nio-8080-exec-52] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 13:40:55.540 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1161cabe]
[DEBUG] 2020-02-28 13:40:55.540 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66f0cebb]
[DEBUG] 2020-02-28 13:40:55.540 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.540 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:40:55.540 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.542 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:40:55.542 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:40:55.542 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.542 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.543 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 13:40:55.543 [http-nio-8080-exec-52] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 13:40:55.543 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@758fe28]
[DEBUG] 2020-02-28 13:40:55.543 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67bd7d6e]
[DEBUG] 2020-02-28 13:40:55.543 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:40:55.543 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.543 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:40:55.543 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:40:55.543 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.543 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:40:55.543 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:40:55.543 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.544 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.545 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 13:40:55.545 [http-nio-8080-exec-52] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 13:40:55.545 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c5195b4]
[DEBUG] 2020-02-28 13:40:55.545 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@600bc35d]
[DEBUG] 2020-02-28 13:40:55.545 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:40:55.545 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.545 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:40:55.545 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 13:40:55.545 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:40:55.545 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:40:55.545 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:40:55.545 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:40:55.545 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4bf4733b]
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75db5033]
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1edcc7c0]
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18a19ddf]
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37d40c30]
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4fce2fcd]
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d92b5e2]
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9c98cea]
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eeba46f]
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@20e55038]
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:40:55.546 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.548 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ac3b019]
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a1203cd]
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@505ed1c3]
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7af8bc6e]
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:40:55.551 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35cdf523]
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3338c01]
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c174bc5]
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66a9d589]
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f689876]
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7024421e]
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@766b66bc]
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5e46f065]
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:40:55.552 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.553 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.553 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:40:55.553 [http-nio-8080-exec-52] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 13:40:55.553 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27a0f0e7]
[DEBUG] 2020-02-28 13:40:55.553 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ad32c29]
[DEBUG] 2020-02-28 13:40:55.553 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:40:55.553 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.553 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:40:55.553 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:40:55.555 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:40:55.555 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:40:55.555 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:40:55.555 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:40:55.555 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:40:55.555 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.556 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.556 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 13:40:55.556 [http-nio-8080-exec-52] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 13:40:55.556 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53f363a]
[DEBUG] 2020-02-28 13:40:55.556 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@161ee0d0]
[DEBUG] 2020-02-28 13:40:55.556 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.556 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:40:55.556 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:40:55.556 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:40:55.556 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:40:55.556 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.556 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.556 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.560 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 13:40:55.560 [http-nio-8080-exec-52] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 13:40:55.560 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1339a7d8]
[DEBUG] 2020-02-28 13:40:55.560 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7240dd0f]
[DEBUG] 2020-02-28 13:40:55.560 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:40:55.560 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:40:55.560 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:40:55.560 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b3341bc]
[DEBUG] 2020-02-28 13:40:55.560 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fef5370]
[DEBUG] 2020-02-28 13:40:55.561 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:40:55.561 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:40:55.561 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:40:55.561 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:40:55.561 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@214dd76d]
[DEBUG] 2020-02-28 13:40:55.561 [http-nio-8080-exec-52] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55fec12f]
[DEBUG] 2020-02-28 13:40:55.561 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:40:55.561 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:40:55.561 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:40:55.561 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:40:55.561 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:40:55.561 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:40:55.561 [http-nio-8080-exec-52] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:40:55.561 [http-nio-8080-exec-52] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:40:55.561 [http-nio-8080-exec-52] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:40:55.562 [http-nio-8080-exec-52] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:40:55.562 [http-nio-8080-exec-52] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 13:40:55.562 [http-nio-8080-exec-52] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 13:40:55.608 [http-nio-8080-exec-52] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 13:40:55.609 [http-nio-8080-exec-52] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 13:40:55.609 [http-nio-8080-exec-52] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 13:40:55.614 [http-nio-8080-exec-52] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 13:40:55.614 [http-nio-8080-exec-52] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 13:40:55.614 [http-nio-8080-exec-52] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 13:40:55.614 [http-nio-8080-exec-52] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 13:40:55.615 [http-nio-8080-exec-52] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@d2dd47e
[DEBUG] 2020-02-28 13:40:55.616 [http-nio-8080-exec-52] SessionFactoryRegistry - Registering SessionFactory: efc276b8-2638-4e65-999a-e822f8367fd3 (<unnamed>)
[DEBUG] 2020-02-28 13:40:55.616 [http-nio-8080-exec-52] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 13:40:55.670 [http-nio-8080-exec-52] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 13:40:55.694 [http-nio-8080-exec-52] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:40:55.716 [http-nio-8080-exec-52] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@582f2058
[DEBUG] 2020-02-28 13:40:55.736 [http-nio-8080-exec-52] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:40:55.739 [http-nio-8080-exec-52] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:40:55.743 [http-nio-8080-exec-52] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 13:40:55.769 [http-nio-8080-exec-52] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 13:40:55.784 [http-nio-8080-exec-52] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 13:40:55.785 [http-nio-8080-exec-52] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 13:40:55.786 [http-nio-8080-exec-52] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 13:40:55.786 [http-nio-8080-exec-52] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 13:40:55.795 [http-nio-8080-exec-52] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 13:40:55.795 [http-nio-8080-exec-52] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 13:40:55.796 [http-nio-8080-exec-52] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 13:40:55.796 [http-nio-8080-exec-52] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:40:55.807 [http-nio-8080-exec-52] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:40:55.807 [http-nio-8080-exec-52] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:40:55.807 [http-nio-8080-exec-52] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:40:55.818 [http-nio-8080-exec-52] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:40:55.975 [http-nio-8080-exec-52] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:40:55.978 [http-nio-8080-exec-52] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:40:55.990 [http-nio-8080-exec-52] Loader - Result set row: 1
[DEBUG] 2020-02-28 13:40:55.990 [http-nio-8080-exec-52] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:40:55.991 [http-nio-8080-exec-52] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:40:55.992 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:40:55.992 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:55.992 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:40:55.992 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:55.992 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:40:55.992 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:55.992 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:40:55.992 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:55.992 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:40:55.992 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:55.992 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:40:55.992 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:55.995 [http-nio-8080-exec-52] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:40:56.072 [http-nio-8080-exec-52] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:40:56.072 [http-nio-8080-exec-52] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:40:56.075 [http-nio-8080-exec-52] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:40:56.086 [http-nio-8080-exec-52] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:40:56.086 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:40:56.086 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.086 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:40:56.086 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.086 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:40:56.086 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.086 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:40:56.086 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.086 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:40:56.086 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@7fbe9a8b
[DEBUG] 2020-02-28 13:40:56.088 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.089 [http-nio-8080-exec-52] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:40:56.089 [http-nio-8080-exec-52] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:40:56.090 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:40:56.090 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.090 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:40:56.090 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.090 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:40:56.090 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.090 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:40:56.090 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.091 [http-nio-8080-exec-52] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:40:56.091 [http-nio-8080-exec-52] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:40:56.121 [http-nio-8080-exec-52] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:40:56.122 [http-nio-8080-exec-52] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:40:56.122 [http-nio-8080-exec-52] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:40:56.122 [http-nio-8080-exec-52] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:40:56.122 [http-nio-8080-exec-52] Loader - Done entity load
[DEBUG] 2020-02-28 13:40:56.123 [http-nio-8080-exec-52] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:40:56.123 [http-nio-8080-exec-52] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:40:56.123 [http-nio-8080-exec-52] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:40:56.123 [http-nio-8080-exec-52] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:40:56.124 [http-nio-8080-exec-52] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:40:56.125 [http-nio-8080-exec-52] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:40:56.125 [http-nio-8080-exec-52] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:40:56.125 [http-nio-8080-exec-52] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:40:56.125 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 13:40:56.125 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.125 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:40:56.125 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.125 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 13:40:56.125 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.125 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 13:40:56.125 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.125 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:40:56.125 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.125 [http-nio-8080-exec-52] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:40:56.125 [http-nio-8080-exec-52] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:40:56.125 [http-nio-8080-exec-52] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:40:56.127 [http-nio-8080-exec-52] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:42:03.725 [http-nio-8080-exec-55] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 13:42:03.726 [http-nio-8080-exec-55] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 13:42:03.728 [http-nio-8080-exec-55] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 13:42:03.811 [http-nio-8080-exec-55] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 13:42:03.812 [http-nio-8080-exec-55] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 13:42:03.913 [http-nio-8080-exec-55] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 13:42:03.914 [http-nio-8080-exec-55] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 13:42:03.915 [http-nio-8080-exec-55] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 13:42:04.076 [http-nio-8080-exec-55] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 13:42:04.108 [http-nio-8080-exec-55] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 13:42:04.109 [http-nio-8080-exec-55] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 13:42:04.137 [http-nio-8080-exec-55] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 13:42:04.172 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6b450a85
[DEBUG] 2020-02-28 13:42:04.172 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6b450a85
[DEBUG] 2020-02-28 13:42:04.172 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6b450a85
[DEBUG] 2020-02-28 13:42:04.173 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@57df354a
[DEBUG] 2020-02-28 13:42:04.173 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6ebc4be8
[DEBUG] 2020-02-28 13:42:04.174 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@18f223dc
[DEBUG] 2020-02-28 13:42:04.174 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@58ef1b4d
[DEBUG] 2020-02-28 13:42:04.174 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@58ef1b4d
[DEBUG] 2020-02-28 13:42:04.174 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@58ef1b4d
[DEBUG] 2020-02-28 13:42:04.175 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@24af8cb2
[DEBUG] 2020-02-28 13:42:04.175 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@24af8cb2
[DEBUG] 2020-02-28 13:42:04.175 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@24af8cb2
[DEBUG] 2020-02-28 13:42:04.176 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@69b2384b
[DEBUG] 2020-02-28 13:42:04.176 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@69b2384b
[DEBUG] 2020-02-28 13:42:04.176 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@69b2384b
[DEBUG] 2020-02-28 13:42:04.177 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3edb0c87
[DEBUG] 2020-02-28 13:42:04.177 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3edb0c87
[DEBUG] 2020-02-28 13:42:04.177 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3edb0c87
[DEBUG] 2020-02-28 13:42:04.177 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5c4f7d2b
[DEBUG] 2020-02-28 13:42:04.177 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5c4f7d2b
[DEBUG] 2020-02-28 13:42:04.177 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c4f7d2b
[DEBUG] 2020-02-28 13:42:04.178 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5f75afd8
[DEBUG] 2020-02-28 13:42:04.178 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5f75afd8
[DEBUG] 2020-02-28 13:42:04.178 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5f75afd8
[DEBUG] 2020-02-28 13:42:04.178 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4ce619ff
[DEBUG] 2020-02-28 13:42:04.178 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4ce619ff
[DEBUG] 2020-02-28 13:42:04.178 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4ce619ff
[DEBUG] 2020-02-28 13:42:04.180 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@62b7003e
[DEBUG] 2020-02-28 13:42:04.180 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@62b7003e
[DEBUG] 2020-02-28 13:42:04.182 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@37ef3873
[DEBUG] 2020-02-28 13:42:04.182 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@37ef3873
[DEBUG] 2020-02-28 13:42:04.183 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@64a0479
[DEBUG] 2020-02-28 13:42:04.183 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@64a0479
[DEBUG] 2020-02-28 13:42:04.183 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7e947f76
[DEBUG] 2020-02-28 13:42:04.184 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@59de0d75
[DEBUG] 2020-02-28 13:42:04.185 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@751fe372
[DEBUG] 2020-02-28 13:42:04.185 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@751fe372
[DEBUG] 2020-02-28 13:42:04.186 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5ed8b117
[DEBUG] 2020-02-28 13:42:04.186 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5ed8b117
[DEBUG] 2020-02-28 13:42:04.189 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@31c85948
[DEBUG] 2020-02-28 13:42:04.189 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@31c85948
[DEBUG] 2020-02-28 13:42:04.190 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@643de664
[DEBUG] 2020-02-28 13:42:04.190 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@643de664
[DEBUG] 2020-02-28 13:42:04.208 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3d482586
[DEBUG] 2020-02-28 13:42:04.208 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3d482586
[DEBUG] 2020-02-28 13:42:04.209 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@50c8f182
[DEBUG] 2020-02-28 13:42:04.209 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@50c8f182
[DEBUG] 2020-02-28 13:42:04.210 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d28faa1
[DEBUG] 2020-02-28 13:42:04.210 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d28faa1
[DEBUG] 2020-02-28 13:42:04.217 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@535e79ac
[DEBUG] 2020-02-28 13:42:04.217 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@535e79ac
[DEBUG] 2020-02-28 13:42:04.219 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@65bd5ac1
[DEBUG] 2020-02-28 13:42:04.219 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@65bd5ac1
[DEBUG] 2020-02-28 13:42:04.221 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5cb24042
[DEBUG] 2020-02-28 13:42:04.221 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5cb24042
[DEBUG] 2020-02-28 13:42:04.223 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3f36b8df
[DEBUG] 2020-02-28 13:42:04.223 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f36b8df
[DEBUG] 2020-02-28 13:42:04.224 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e115764
[DEBUG] 2020-02-28 13:42:04.225 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e115764
[DEBUG] 2020-02-28 13:42:04.225 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e115764
[DEBUG] 2020-02-28 13:42:04.226 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@23c629dc
[DEBUG] 2020-02-28 13:42:04.227 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@70593c1e
[DEBUG] 2020-02-28 13:42:04.227 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@70593c1e
[DEBUG] 2020-02-28 13:42:04.227 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@70593c1e
[DEBUG] 2020-02-28 13:42:04.228 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@23048059
[DEBUG] 2020-02-28 13:42:04.228 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5dbacdd3
[DEBUG] 2020-02-28 13:42:04.228 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5dbacdd3
[DEBUG] 2020-02-28 13:42:04.229 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6000fe6b
[DEBUG] 2020-02-28 13:42:04.229 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6000fe6b
[DEBUG] 2020-02-28 13:42:04.229 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6291cbc5
[DEBUG] 2020-02-28 13:42:04.229 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6291cbc5
[DEBUG] 2020-02-28 13:42:04.230 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@38bd0041
[DEBUG] 2020-02-28 13:42:04.230 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38bd0041
[DEBUG] 2020-02-28 13:42:04.230 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@282d6573
[DEBUG] 2020-02-28 13:42:04.230 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@282d6573
[DEBUG] 2020-02-28 13:42:04.231 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3b4c4f4
[DEBUG] 2020-02-28 13:42:04.231 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@514a5e39
[DEBUG] 2020-02-28 13:42:04.231 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@514a5e39
[DEBUG] 2020-02-28 13:42:04.231 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@514a5e39
[DEBUG] 2020-02-28 13:42:04.232 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b7bce48
[DEBUG] 2020-02-28 13:42:04.232 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b7bce48
[DEBUG] 2020-02-28 13:42:04.232 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b7bce48
[DEBUG] 2020-02-28 13:42:04.233 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@725df9f7
[DEBUG] 2020-02-28 13:42:04.235 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7ae034b4
[DEBUG] 2020-02-28 13:42:04.236 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@220644c7
[DEBUG] 2020-02-28 13:42:04.236 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@220644c7
[DEBUG] 2020-02-28 13:42:04.236 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@220644c7
[DEBUG] 2020-02-28 13:42:04.237 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@713052a4
[DEBUG] 2020-02-28 13:42:04.237 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@713052a4
[DEBUG] 2020-02-28 13:42:04.237 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@713052a4
[DEBUG] 2020-02-28 13:42:04.238 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@308cb5fe
[DEBUG] 2020-02-28 13:42:04.238 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@50f4d00
[DEBUG] 2020-02-28 13:42:04.239 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5d68eccb
[DEBUG] 2020-02-28 13:42:04.239 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d68eccb
[DEBUG] 2020-02-28 13:42:04.239 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16f0cfe8
[DEBUG] 2020-02-28 13:42:04.240 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@717fd27b
[DEBUG] 2020-02-28 13:42:04.240 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@717fd27b
[DEBUG] 2020-02-28 13:42:04.241 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@292351e4
[DEBUG] 2020-02-28 13:42:04.241 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@292351e4
[DEBUG] 2020-02-28 13:42:04.242 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2db4b737
[DEBUG] 2020-02-28 13:42:04.243 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4668f83e
[DEBUG] 2020-02-28 13:42:04.244 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@16701bd5
[DEBUG] 2020-02-28 13:42:04.249 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@32180681
[DEBUG] 2020-02-28 13:42:04.249 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@32180681
[DEBUG] 2020-02-28 13:42:04.250 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1c4b1d72
[DEBUG] 2020-02-28 13:42:04.250 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c5332d2
[DEBUG] 2020-02-28 13:42:04.250 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@ac8d613
[DEBUG] 2020-02-28 13:42:04.250 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4d8b99bf
[DEBUG] 2020-02-28 13:42:04.251 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@96fadf1
[DEBUG] 2020-02-28 13:42:04.251 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c6fdbac
[DEBUG] 2020-02-28 13:42:04.251 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5be47c
[DEBUG] 2020-02-28 13:42:04.251 [http-nio-8080-exec-55] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@118cc3a9
[DEBUG] 2020-02-28 13:42:04.299 [http-nio-8080-exec-55] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 13:42:04.299 [http-nio-8080-exec-55] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 13:42:04.300 [http-nio-8080-exec-55] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:42:04.301 [http-nio-8080-exec-55] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:42:04.301 [http-nio-8080-exec-55] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 13:42:04.302 [http-nio-8080-exec-55] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 13:42:04.302 [http-nio-8080-exec-55] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 13:42:04.303 [http-nio-8080-exec-55] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:42:04.304 [http-nio-8080-exec-55] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 13:42:04.304 [http-nio-8080-exec-55] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 13:42:04.304 [http-nio-8080-exec-55] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 13:42:04.304 [http-nio-8080-exec-55] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 13:42:04.304 [http-nio-8080-exec-55] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:42:04.305 [http-nio-8080-exec-55] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 13:42:04.315 [http-nio-8080-exec-55] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 13:42:04.315 [http-nio-8080-exec-55] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 13:42:04.315 [http-nio-8080-exec-55] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 13:42:04.449 [http-nio-8080-exec-55] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 13:42:04.687 [http-nio-8080-exec-55] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:42:04.688 [http-nio-8080-exec-55] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:42:04.688 [http-nio-8080-exec-55] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 13:42:04.916 [http-nio-8080-exec-55] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 13:42:04.935 [http-nio-8080-exec-55] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 13:42:05.597 [http-nio-8080-exec-55] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 13:42:05.662 [http-nio-8080-exec-55] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 13:42:05.668 [http-nio-8080-exec-55] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3cdeb9af] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b337aee]
[DEBUG] 2020-02-28 13:42:05.770 [http-nio-8080-exec-55] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:42:05.792 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:42:05.796 [http-nio-8080-exec-55] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 13:42:05.799 [http-nio-8080-exec-55] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 13:42:05.823 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.825 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 13:42:05.827 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 13:42:05.828 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 13:42:05.831 [http-nio-8080-exec-55] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 13:42:05.835 [http-nio-8080-exec-55] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:42:05.836 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.837 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:42:05.838 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 13:42:05.838 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:42:05.838 [http-nio-8080-exec-55] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:42:05.839 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.839 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 13:42:05.839 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 13:42:05.839 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 13:42:05.839 [http-nio-8080-exec-55] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 13:42:05.839 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:42:05.839 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:42:05.839 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 13:42:05.839 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:42:05.839 [http-nio-8080-exec-55] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:42:05.839 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.840 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:42:05.840 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 13:42:05.840 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:42:05.840 [http-nio-8080-exec-55] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:42:05.843 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:42:05.844 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.846 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.853 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.853 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.854 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:42:05.854 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:42:05.854 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:42:05.855 [http-nio-8080-exec-55] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:42:05.856 [http-nio-8080-exec-55] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 13:42:05.856 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 13:42:05.857 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] PropertyBinder - Building property password
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.858 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:42:05.859 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:42:05.859 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:42:05.859 [http-nio-8080-exec-55] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:42:05.859 [http-nio-8080-exec-55] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 13:42:05.859 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:42:05.859 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.859 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.859 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.859 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.859 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:42:05.859 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:42:05.859 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:42:05.859 [http-nio-8080-exec-55] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:42:05.859 [http-nio-8080-exec-55] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 13:42:05.859 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.859 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:42:05.860 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 13:42:05.860 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:42:05.860 [http-nio-8080-exec-55] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:42:05.860 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 13:42:05.860 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 13:42:05.860 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 13:42:05.860 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 13:42:05.860 [http-nio-8080-exec-55] PropertyBinder - Building property username
[DEBUG] 2020-02-28 13:42:05.861 [http-nio-8080-exec-55] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:42:05.862 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:42:05.862 [http-nio-8080-exec-55] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 13:42:05.862 [http-nio-8080-exec-55] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 13:42:05.866 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.866 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 13:42:05.866 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 13:42:05.866 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 13:42:05.866 [http-nio-8080-exec-55] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 13:42:05.867 [http-nio-8080-exec-55] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:42:05.867 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.867 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:42:05.867 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 13:42:05.867 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:42:05.867 [http-nio-8080-exec-55] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:42:05.874 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.874 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 13:42:05.874 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 13:42:05.874 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 13:42:05.874 [http-nio-8080-exec-55] PropertyBinder - Building property name
[DEBUG] 2020-02-28 13:42:05.874 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.874 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:42:05.874 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 13:42:05.874 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:42:05.874 [http-nio-8080-exec-55] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:42:05.875 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 13:42:05.875 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.879 [http-nio-8080-exec-55] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:42:05.879 [http-nio-8080-exec-55] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:42:05.881 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:42:05.881 [http-nio-8080-exec-55] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 13:42:05.881 [http-nio-8080-exec-55] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 13:42:05.883 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.883 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 13:42:05.883 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 13:42:05.883 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 13:42:05.883 [http-nio-8080-exec-55] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 13:42:05.883 [http-nio-8080-exec-55] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:42:05.883 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.883 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 13:42:05.883 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 13:42:05.883 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 13:42:05.883 [http-nio-8080-exec-55] PropertyBinder - Building property author
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:42:05.884 [http-nio-8080-exec-55] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 13:42:05.885 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:42:05.886 [http-nio-8080-exec-55] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:42:05.886 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:42:05.886 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.887 [http-nio-8080-exec-55] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:42:05.888 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.888 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:42:05.888 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 13:42:05.888 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:42:05.888 [http-nio-8080-exec-55] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:42:05.889 [http-nio-8080-exec-55] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:42:05.889 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:42:05.889 [http-nio-8080-exec-55] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 13:42:05.889 [http-nio-8080-exec-55] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 13:42:05.890 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.890 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 13:42:05.890 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 13:42:05.890 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 13:42:05.890 [http-nio-8080-exec-55] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 13:42:05.891 [http-nio-8080-exec-55] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:42:05.891 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.891 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:42:05.891 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 13:42:05.891 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:42:05.891 [http-nio-8080-exec-55] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:42:05.891 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.891 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:42:05.891 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 13:42:05.891 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:42:05.892 [http-nio-8080-exec-55] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:42:05.893 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.893 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.893 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.893 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:42:05.893 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:42:05.893 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:42:05.893 [http-nio-8080-exec-55] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:42:05.893 [http-nio-8080-exec-55] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:42:05.893 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.893 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:42:05.893 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 13:42:05.893 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:42:05.894 [http-nio-8080-exec-55] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:42:05.895 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.895 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:42:05.895 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 13:42:05.901 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:42:05.902 [http-nio-8080-exec-55] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:42:05.902 [http-nio-8080-exec-55] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:42:05.902 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:42:05.902 [http-nio-8080-exec-55] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 13:42:05.902 [http-nio-8080-exec-55] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 13:42:05.907 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.908 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 13:42:05.908 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 13:42:05.908 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 13:42:05.908 [http-nio-8080-exec-55] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 13:42:05.908 [http-nio-8080-exec-55] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:42:05.908 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.908 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:42:05.908 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 13:42:05.908 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:42:05.908 [http-nio-8080-exec-55] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:42:05.909 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.909 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:42:05.909 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 13:42:05.909 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:42:05.909 [http-nio-8080-exec-55] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:42:05.909 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.909 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.909 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.909 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:42:05.909 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:42:05.909 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:42:05.909 [http-nio-8080-exec-55] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] PropertyBinder - Building property director
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.910 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:42:05.911 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:42:05.911 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:42:05.911 [http-nio-8080-exec-55] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:42:05.911 [http-nio-8080-exec-55] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 13:42:05.912 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.912 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:42:05.912 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 13:42:05.912 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:42:05.913 [http-nio-8080-exec-55] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:42:05.913 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.913 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:42:05.913 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 13:42:05.913 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:42:05.913 [http-nio-8080-exec-55] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:42:05.913 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.913 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:42:05.913 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 13:42:05.913 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:42:05.914 [http-nio-8080-exec-55] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:42:05.914 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.914 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:42:05.914 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 13:42:05.914 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:42:05.914 [http-nio-8080-exec-55] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:42:05.914 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.915 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:42:05.915 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 13:42:05.915 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:42:05.915 [http-nio-8080-exec-55] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:42:05.915 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:42:05.915 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.915 [http-nio-8080-exec-55] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:42:05.915 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.915 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:42:05.915 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 13:42:05.915 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:42:05.915 [http-nio-8080-exec-55] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:42:05.916 [http-nio-8080-exec-55] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:42:05.916 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:42:05.916 [http-nio-8080-exec-55] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 13:42:05.916 [http-nio-8080-exec-55] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 13:42:05.917 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.918 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 13:42:05.918 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 13:42:05.918 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 13:42:05.918 [http-nio-8080-exec-55] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 13:42:05.918 [http-nio-8080-exec-55] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:42:05.918 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.918 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 13:42:05.918 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 13:42:05.918 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 13:42:05.918 [http-nio-8080-exec-55] PropertyBinder - Building property category
[DEBUG] 2020-02-28 13:42:05.918 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.918 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:42:05.918 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 13:42:05.918 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:42:05.919 [http-nio-8080-exec-55] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:42:05.920 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:42:05.920 [http-nio-8080-exec-55] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 13:42:05.924 [http-nio-8080-exec-55] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 13:42:05.926 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.931 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 13:42:05.932 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 13:42:05.932 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 13:42:05.932 [http-nio-8080-exec-55] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 13:42:05.932 [http-nio-8080-exec-55] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:42:05.933 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.933 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:42:05.933 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 13:42:05.933 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:42:05.933 [http-nio-8080-exec-55] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:42:05.933 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:42:05.933 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:42:05.933 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 13:42:05.933 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:42:05.933 [http-nio-8080-exec-55] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:42:05.933 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.933 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:42:05.933 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 13:42:05.934 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:42:05.934 [http-nio-8080-exec-55] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:42:05.934 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.941 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.941 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.941 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:42:05.941 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:42:05.941 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:42:05.941 [http-nio-8080-exec-55] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:42:05.942 [http-nio-8080-exec-55] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:42:05.943 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 13:42:05.943 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:42:05.943 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 13:42:05.943 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:42:05.943 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:42:05.943 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:42:05.943 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 13:42:05.943 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:42:05.943 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 13:42:05.943 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:42:05.944 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 13:42:05.945 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 13:42:05.945 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:42:05.945 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:42:05.945 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:42:05.945 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:42:05.945 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 13:42:05.945 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:42:05.945 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:42:05.945 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:42:05.945 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:42:05.945 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:42:05.945 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 13:42:05.945 [http-nio-8080-exec-55] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:42:05.950 [http-nio-8080-exec-55] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 13:42:05.950 [http-nio-8080-exec-55] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 13:42:05.950 [http-nio-8080-exec-55] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 13:42:05.950 [http-nio-8080-exec-55] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 13:42:05.950 [http-nio-8080-exec-55] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 13:42:05.950 [http-nio-8080-exec-55] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 13:42:05.950 [http-nio-8080-exec-55] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 13:42:05.950 [http-nio-8080-exec-55] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:42:05.950 [http-nio-8080-exec-55] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:42:05.953 [http-nio-8080-exec-55] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:42:05.953 [http-nio-8080-exec-55] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:42:05.953 [http-nio-8080-exec-55] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 13:42:05.954 [http-nio-8080-exec-55] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:42:05.954 [http-nio-8080-exec-55] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:42:05.954 [http-nio-8080-exec-55] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:42:05.954 [http-nio-8080-exec-55] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:42:05.954 [http-nio-8080-exec-55] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 13:42:05.954 [http-nio-8080-exec-55] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:42:05.954 [http-nio-8080-exec-55] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 13:42:05.954 [http-nio-8080-exec-55] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 13:42:05.955 [http-nio-8080-exec-55] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 13:42:05.955 [http-nio-8080-exec-55] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:42:05.963 [http-nio-8080-exec-55] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:42:05.963 [http-nio-8080-exec-55] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 13:42:05.963 [http-nio-8080-exec-55] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 13:42:05.963 [http-nio-8080-exec-55] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 13:42:05.963 [http-nio-8080-exec-55] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:42:05.963 [http-nio-8080-exec-55] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:42:05.963 [http-nio-8080-exec-55] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 13:42:05.963 [http-nio-8080-exec-55] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 13:42:05.963 [http-nio-8080-exec-55] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 13:42:05.963 [http-nio-8080-exec-55] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:42:05.963 [http-nio-8080-exec-55] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:42:05.963 [http-nio-8080-exec-55] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 13:42:05.963 [http-nio-8080-exec-55] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 13:42:05.963 [http-nio-8080-exec-55] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 13:42:05.964 [http-nio-8080-exec-55] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:42:05.964 [http-nio-8080-exec-55] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:42:05.964 [http-nio-8080-exec-55] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:42:05.964 [http-nio-8080-exec-55] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:42:05.964 [http-nio-8080-exec-55] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 13:42:05.964 [http-nio-8080-exec-55] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:42:05.964 [http-nio-8080-exec-55] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:42:05.964 [http-nio-8080-exec-55] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:42:05.964 [http-nio-8080-exec-55] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 13:42:05.964 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:42:05.964 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:42:05.970 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:42:05.970 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:42:05.970 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:42:05.970 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:42:05.970 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:42:05.970 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:42:05.970 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:42:05.972 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:42:05.973 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:42:05.973 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:42:05.973 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:42:05.973 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:42:05.973 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:42:05.973 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:42:05.973 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:42:05.973 [http-nio-8080-exec-55] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:42:06.019 [http-nio-8080-exec-55] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 13:42:06.020 [http-nio-8080-exec-55] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Statistics: disabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 13:42:06.021 [http-nio-8080-exec-55] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 13:42:06.091 [http-nio-8080-exec-55] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 13:42:06.107 [http-nio-8080-exec-55] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 13:42:06.107 [http-nio-8080-exec-55] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3d416fef, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 13:42:06.131 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:42:06.131 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:42:06.132 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:42:06.132 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:42:06.132 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:42:06.132 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:42:06.133 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:42:06.133 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:42:06.133 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:42:06.133 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:42:06.134 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:42:06.134 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:42:06.135 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:42:06.135 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:42:06.138 [http-nio-8080-exec-55] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 13:42:06.138 [http-nio-8080-exec-55] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 13:42:06.138 [http-nio-8080-exec-55] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3cdeb9af] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@91fbcc]
[DEBUG] 2020-02-28 13:42:06.174 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:42:06.174 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:42:06.184 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:42:06.184 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:42:06.366 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:42:06.366 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:42:06.366 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:42:06.366 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:42:06.381 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:42:06.381 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:42:06.381 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:42:06.381 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:42:06.404 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:42:06.404 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:42:06.404 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:42:06.404 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:42:06.422 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:42:06.422 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:42:06.423 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:42:06.423 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:42:06.454 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:42:06.454 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:42:06.458 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:42:06.458 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:42:06.496 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:42:06.496 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:42:06.497 [http-nio-8080-exec-55] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:42:06.497 [http-nio-8080-exec-55] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:42:06.530 [http-nio-8080-exec-55] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:42:06.530 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 13:42:06.530 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 13:42:06.530 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 13:42:06.531 [http-nio-8080-exec-55] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 13:42:06.531 [http-nio-8080-exec-55] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:42:06.531 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 13:42:06.531 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 13:42:06.531 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 13:42:06.531 [http-nio-8080-exec-55] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 13:42:06.532 [http-nio-8080-exec-55] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:42:06.532 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 13:42:06.532 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 13:42:06.532 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 13:42:06.532 [http-nio-8080-exec-55] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 13:42:06.533 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:42:06.534 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:42:06.534 [http-nio-8080-exec-55] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 13:42:06.534 [http-nio-8080-exec-55] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:42:06.534 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 13:42:06.534 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 13:42:06.534 [http-nio-8080-exec-55] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 13:42:06.534 [http-nio-8080-exec-55] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 13:42:06.536 [http-nio-8080-exec-55] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:42:06.536 [http-nio-8080-exec-55] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 13:42:06.536 [http-nio-8080-exec-55] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 13:42:06.536 [http-nio-8080-exec-55] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:42:06.536 [http-nio-8080-exec-55] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 13:42:06.536 [http-nio-8080-exec-55] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 13:42:06.536 [http-nio-8080-exec-55] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:42:06.566 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1178aa15]
[DEBUG] 2020-02-28 13:42:06.568 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:42:06.568 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.568 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:42:06.572 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b75e60]
[DEBUG] 2020-02-28 13:42:06.574 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25286db9]
[DEBUG] 2020-02-28 13:42:06.574 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:42:06.574 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:42:06.574 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:42:06.574 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:42:06.574 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4534f357]
[DEBUG] 2020-02-28 13:42:06.574 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7143b395]
[DEBUG] 2020-02-28 13:42:06.574 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:42:06.574 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:42:06.574 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:42:06.574 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:42:06.574 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.574 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:42:06.574 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@97ef380]
[DEBUG] 2020-02-28 13:42:06.575 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:42:06.575 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:42:06.575 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:42:06.575 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:42:06.575 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:42:06.575 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@537de963]
[DEBUG] 2020-02-28 13:42:06.575 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@305cd89]
[DEBUG] 2020-02-28 13:42:06.575 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:42:06.575 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:42:06.575 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:42:06.575 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:42:06.575 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:42:06.575 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:42:06.575 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:42:06.575 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:42:06.576 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2cb7e97c]
[DEBUG] 2020-02-28 13:42:06.576 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f300e6]
[DEBUG] 2020-02-28 13:42:06.576 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:42:06.576 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:42:06.576 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:42:06.576 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:42:06.576 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:42:06.576 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:42:06.576 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1697b3a7]
[DEBUG] 2020-02-28 13:42:06.576 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47cd8e0f]
[DEBUG] 2020-02-28 13:42:06.577 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:42:06.577 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:42:06.577 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:42:06.577 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2f884c94]
[DEBUG] 2020-02-28 13:42:06.579 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:42:06.581 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:42:06.581 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.599 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.607 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39d055e5]
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74f794bf]
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72041633]
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49400aeb]
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41f7acef]
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9ed9a02]
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:42:06.609 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1254fe4a]
[DEBUG] 2020-02-28 13:42:06.610 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e38b83b]
[DEBUG] 2020-02-28 13:42:06.610 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:42:06.610 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b601274]
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5603d2a]
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10d9e885]
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14540ed9]
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3da5f114]
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.611 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.612 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:42:06.612 [http-nio-8080-exec-55] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:42:06.626 [http-nio-8080-exec-55] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@400de1c9]
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cf28a9e]
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5da508f4]
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@503c821e]
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8c254fd]
[DEBUG] 2020-02-28 13:42:06.627 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3712aeb4]
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ce263b4]
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ea71792]
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@235f39ee]
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47f82e5f]
[DEBUG] 2020-02-28 13:42:06.628 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bdf7530]
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@157a4a26]
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9a69a2e]
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19c018df]
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ab3472a]
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@590a6d72]
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7920eb6e]
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7cf3237b]
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:42:06.629 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.630 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.631 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:42:06.631 [http-nio-8080-exec-55] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:42:06.631 [http-nio-8080-exec-55] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1afbd6cc]
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f32a79]
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@573ad15a]
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42fa0bce]
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ac2510a]
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5039a31c]
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51881840]
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433ecdc4]
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@b3c8ea8]
[DEBUG] 2020-02-28 13:42:06.632 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:42:06.633 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.633 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.634 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:42:06.634 [http-nio-8080-exec-55] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:42:06.634 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dbad18]
[DEBUG] 2020-02-28 13:42:06.635 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.635 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:42:06.635 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.635 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:42:06.635 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d9881eb]
[DEBUG] 2020-02-28 13:42:06.635 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:42:06.635 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:42:06.635 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:42:06.635 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:42:06.635 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:42:06.635 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@160ccc4c]
[DEBUG] 2020-02-28 13:42:06.635 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54f6a617]
[DEBUG] 2020-02-28 13:42:06.635 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:42:06.635 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d78f2bb]
[DEBUG] 2020-02-28 13:42:06.635 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2924e082]
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@593a3746]
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@389df468]
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@327a24ea]
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.636 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.639 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:42:06.639 [http-nio-8080-exec-55] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:42:06.639 [http-nio-8080-exec-55] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:42:06.639 [http-nio-8080-exec-55] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@345c620c]
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bcba3]
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b52532f]
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cc90e4b]
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e4ae3c7]
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5788180a]
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.641 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.642 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:42:06.642 [http-nio-8080-exec-55] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:42:06.642 [http-nio-8080-exec-55] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:42:06.642 [http-nio-8080-exec-55] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:42:06.642 [http-nio-8080-exec-55] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:42:06.642 [http-nio-8080-exec-55] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 13:42:06.642 [http-nio-8080-exec-55] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 13:42:06.642 [http-nio-8080-exec-55] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:42:06.642 [http-nio-8080-exec-55] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 13:42:06.642 [http-nio-8080-exec-55] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 13:42:06.642 [http-nio-8080-exec-55] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:42:06.642 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5337efe6]
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@498e0ba7]
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32758e27]
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e9fbadc]
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57f5479b]
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e43803]
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f7e9aae]
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c248ac7]
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3ad48c30]
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.644 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@650356ec]
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cf1a88a]
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@130cc3fa]
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@510bff9d]
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@503fa8ce]
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b1c7d]
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@732d0c5d]
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d54f2b2]
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1522b0f0]
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.645 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8b4441]
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23324667]
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@248046a4]
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63eea739]
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7edaed7e]
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4fea9dbc]
[DEBUG] 2020-02-28 13:42:06.646 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69794783]
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d3c317b]
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eda2200]
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@564db203]
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e297cd1]
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2abae4a4]
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@390b49ec]
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ca165e8]
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29010a6b]
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54e3542b]
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37443372]
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:42:06.647 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:42:06.648 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:42:06.648 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:42:06.648 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f62c467]
[DEBUG] 2020-02-28 13:42:06.648 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@192bb95a]
[DEBUG] 2020-02-28 13:42:06.648 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:42:06.648 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:42:06.648 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:42:06.648 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@15c8f31e]
[DEBUG] 2020-02-28 13:42:06.648 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:42:06.648 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.648 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.648 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:42:06.648 [http-nio-8080-exec-55] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:42:06.648 [http-nio-8080-exec-55] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:42:06.648 [http-nio-8080-exec-55] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f1f8097]
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@955ca53]
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dfec86a]
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.650 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ea6e47a]
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62f8581d]
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69ce61b0]
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:42:06.651 [http-nio-8080-exec-55] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:42:06.655 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4505d9c8]
[DEBUG] 2020-02-28 13:42:06.655 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7f888b]
[DEBUG] 2020-02-28 13:42:06.656 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:42:06.656 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:42:06.656 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.656 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:42:06.656 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:42:06.656 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:42:06.656 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:42:06.656 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:42:06.656 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.656 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:42:06.656 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:42:06.656 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:42:06.656 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@106d3693]
[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cc531b4]
[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@629a9116]
[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17a74460]
[DEBUG] 2020-02-28 13:42:06.661 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:42:06.662 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.662 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:42:06.664 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:42:06.664 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.664 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:42:06.664 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:42:06.664 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.664 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.664 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 13:42:06.664 [http-nio-8080-exec-55] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 13:42:06.664 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54d7bbb7]
[DEBUG] 2020-02-28 13:42:06.664 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@797e6109]
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38e9d43b]
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32959c06]
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@168bd357]
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6705070f]
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@796ec245]
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31b7a754]
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7acf2b54]
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@353d767d]
[DEBUG] 2020-02-28 13:42:06.665 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3acee675]
[DEBUG] 2020-02-28 13:42:06.666 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:42:06.666 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:42:06.666 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:42:06.666 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@36cf7b7f]
[DEBUG] 2020-02-28 13:42:06.667 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:42:06.667 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:42:06.667 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@155c2cee]
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35dcf309]
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@405204c9]
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1244f371]
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fddd1b7]
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70946592]
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@457ecf8a]
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:42:06.668 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54bffefb]
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76e55dbc]
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@258e0e07]
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@163f97a3]
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3d5cebb9]
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34238d13]
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ecb86bb]
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f10e440]
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dec4547]
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:42:06.669 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e047dd8]
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51add122]
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15f1af8f]
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a6a48d2]
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57378b3f]
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6841711a]
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 13:42:06.670 [http-nio-8080-exec-55] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 13:42:06.702 [http-nio-8080-exec-55] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 13:42:06.702 [http-nio-8080-exec-55] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 13:42:06.703 [http-nio-8080-exec-55] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 13:42:06.710 [http-nio-8080-exec-55] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 13:42:06.710 [http-nio-8080-exec-55] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 13:42:06.711 [http-nio-8080-exec-55] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 13:42:06.711 [http-nio-8080-exec-55] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 13:42:06.712 [http-nio-8080-exec-55] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2f358be6
[DEBUG] 2020-02-28 13:42:06.713 [http-nio-8080-exec-55] SessionFactoryRegistry - Registering SessionFactory: 0557e93a-279e-45c3-9352-00d1c5c35a46 (<unnamed>)
[DEBUG] 2020-02-28 13:42:06.713 [http-nio-8080-exec-55] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 13:42:06.774 [http-nio-8080-exec-55] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 13:42:06.791 [http-nio-8080-exec-55] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:42:06.810 [http-nio-8080-exec-55] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@23870abc
[DEBUG] 2020-02-28 13:42:06.834 [http-nio-8080-exec-55] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:42:06.839 [http-nio-8080-exec-55] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:42:06.842 [http-nio-8080-exec-55] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 13:42:06.864 [http-nio-8080-exec-55] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 13:42:06.878 [http-nio-8080-exec-55] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 13:42:06.878 [http-nio-8080-exec-55] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 13:42:06.879 [http-nio-8080-exec-55] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 13:42:06.879 [http-nio-8080-exec-55] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 13:42:06.885 [http-nio-8080-exec-55] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 13:42:06.885 [http-nio-8080-exec-55] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 13:42:06.886 [http-nio-8080-exec-55] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 13:42:06.886 [http-nio-8080-exec-55] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:42:06.889 [http-nio-8080-exec-55] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:42:06.889 [http-nio-8080-exec-55] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:42:06.889 [http-nio-8080-exec-55] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:42:06.907 [http-nio-8080-exec-55] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:42:06.966 [http-nio-8080-exec-55] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:42:06.971 [http-nio-8080-exec-55] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:42:06.977 [http-nio-8080-exec-55] Loader - Result set row: 1
[DEBUG] 2020-02-28 13:42:06.977 [http-nio-8080-exec-55] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:42:06.979 [http-nio-8080-exec-55] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:42:06.981 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:42:06.981 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:06.981 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:42:06.981 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:06.981 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:42:06.981 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:06.981 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:42:06.981 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:06.981 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:42:06.981 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:06.981 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:42:06.981 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:06.987 [http-nio-8080-exec-55] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:42:06.993 [http-nio-8080-exec-55] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:42:06.994 [http-nio-8080-exec-55] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:42:06.995 [http-nio-8080-exec-55] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:42:07.002 [http-nio-8080-exec-55] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:42:07.002 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:42:07.002 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.002 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:42:07.002 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.002 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:42:07.002 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.002 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:42:07.002 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.002 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:42:07.002 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.004 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:42:07.004 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.004 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:42:07.004 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.004 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:42:07.004 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.004 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:42:07.004 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.004 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:42:07.004 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.004 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:42:07.004 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.004 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:42:07.004 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.004 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:42:07.006 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.006 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:42:07.006 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.006 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:42:07.006 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.006 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@2f0e4b00
[DEBUG] 2020-02-28 13:42:07.006 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.007 [http-nio-8080-exec-55] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:42:07.007 [http-nio-8080-exec-55] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:42:07.007 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:42:07.008 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.008 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:42:07.008 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.008 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:42:07.008 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.008 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:42:07.008 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.008 [http-nio-8080-exec-55] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:42:07.009 [http-nio-8080-exec-55] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:42:07.011 [http-nio-8080-exec-55] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:42:07.012 [http-nio-8080-exec-55] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:42:07.012 [http-nio-8080-exec-55] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:42:07.013 [http-nio-8080-exec-55] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:42:07.013 [http-nio-8080-exec-55] Loader - Done entity load
[DEBUG] 2020-02-28 13:42:07.013 [http-nio-8080-exec-55] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:42:07.013 [http-nio-8080-exec-55] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:42:07.014 [http-nio-8080-exec-55] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:42:07.014 [http-nio-8080-exec-55] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:42:07.015 [http-nio-8080-exec-55] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:42:07.015 [http-nio-8080-exec-55] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:42:07.015 [http-nio-8080-exec-55] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:42:07.015 [http-nio-8080-exec-55] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:42:07.015 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 13:42:07.015 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.015 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:42:07.015 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.015 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 13:42:07.015 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.015 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 13:42:07.015 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.015 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:42:07.015 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.015 [http-nio-8080-exec-55] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:42:07.015 [http-nio-8080-exec-55] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:42:07.018 [http-nio-8080-exec-55] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:42:07.021 [http-nio-8080-exec-55] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:47:14.893 [http-nio-8080-exec-74] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 13:47:14.895 [http-nio-8080-exec-74] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 13:47:14.899 [http-nio-8080-exec-74] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 13:47:14.964 [http-nio-8080-exec-74] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 13:47:14.965 [http-nio-8080-exec-74] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 13:47:15.057 [http-nio-8080-exec-74] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 13:47:15.058 [http-nio-8080-exec-74] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 13:47:15.059 [http-nio-8080-exec-74] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 13:47:15.260 [http-nio-8080-exec-74] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 13:47:15.287 [http-nio-8080-exec-74] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 13:47:15.287 [http-nio-8080-exec-74] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 13:47:15.311 [http-nio-8080-exec-74] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 13:47:15.346 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@24ecc43
[DEBUG] 2020-02-28 13:47:15.347 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@24ecc43
[DEBUG] 2020-02-28 13:47:15.347 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@24ecc43
[DEBUG] 2020-02-28 13:47:15.347 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@261fd067
[DEBUG] 2020-02-28 13:47:15.347 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@611fed2b
[DEBUG] 2020-02-28 13:47:15.347 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@61b2b65e
[DEBUG] 2020-02-28 13:47:15.348 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@67698f1c
[DEBUG] 2020-02-28 13:47:15.348 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@67698f1c
[DEBUG] 2020-02-28 13:47:15.348 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@67698f1c
[DEBUG] 2020-02-28 13:47:15.349 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4fb7580e
[DEBUG] 2020-02-28 13:47:15.349 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4fb7580e
[DEBUG] 2020-02-28 13:47:15.349 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4fb7580e
[DEBUG] 2020-02-28 13:47:15.349 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@ce29075
[DEBUG] 2020-02-28 13:47:15.349 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@ce29075
[DEBUG] 2020-02-28 13:47:15.350 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@ce29075
[DEBUG] 2020-02-28 13:47:15.350 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1ec26aad
[DEBUG] 2020-02-28 13:47:15.350 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1ec26aad
[DEBUG] 2020-02-28 13:47:15.350 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1ec26aad
[DEBUG] 2020-02-28 13:47:15.351 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@c5a9205
[DEBUG] 2020-02-28 13:47:15.351 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@c5a9205
[DEBUG] 2020-02-28 13:47:15.351 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c5a9205
[DEBUG] 2020-02-28 13:47:15.351 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@114ee75e
[DEBUG] 2020-02-28 13:47:15.351 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@114ee75e
[DEBUG] 2020-02-28 13:47:15.352 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@114ee75e
[DEBUG] 2020-02-28 13:47:15.353 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@48088125
[DEBUG] 2020-02-28 13:47:15.353 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@48088125
[DEBUG] 2020-02-28 13:47:15.353 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@48088125
[DEBUG] 2020-02-28 13:47:15.354 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1c32bb43
[DEBUG] 2020-02-28 13:47:15.354 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1c32bb43
[DEBUG] 2020-02-28 13:47:15.355 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5726bf2c
[DEBUG] 2020-02-28 13:47:15.355 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5726bf2c
[DEBUG] 2020-02-28 13:47:15.357 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@53cd38f8
[DEBUG] 2020-02-28 13:47:15.357 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@53cd38f8
[DEBUG] 2020-02-28 13:47:15.357 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e0ce58f
[DEBUG] 2020-02-28 13:47:15.357 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4f77fb12
[DEBUG] 2020-02-28 13:47:15.358 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6900bd9b
[DEBUG] 2020-02-28 13:47:15.359 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6900bd9b
[DEBUG] 2020-02-28 13:47:15.359 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6002882e
[DEBUG] 2020-02-28 13:47:15.359 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6002882e
[DEBUG] 2020-02-28 13:47:15.360 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2f62124c
[DEBUG] 2020-02-28 13:47:15.360 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f62124c
[DEBUG] 2020-02-28 13:47:15.361 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@44f2af14
[DEBUG] 2020-02-28 13:47:15.361 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@44f2af14
[DEBUG] 2020-02-28 13:47:15.361 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@25ba0f4c
[DEBUG] 2020-02-28 13:47:15.361 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@25ba0f4c
[DEBUG] 2020-02-28 13:47:15.362 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@30c1dd07
[DEBUG] 2020-02-28 13:47:15.362 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@30c1dd07
[DEBUG] 2020-02-28 13:47:15.365 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c66d82c
[DEBUG] 2020-02-28 13:47:15.365 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c66d82c
[DEBUG] 2020-02-28 13:47:15.366 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1c5ae459
[DEBUG] 2020-02-28 13:47:15.366 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1c5ae459
[DEBUG] 2020-02-28 13:47:15.367 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@42fb5498
[DEBUG] 2020-02-28 13:47:15.367 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@42fb5498
[DEBUG] 2020-02-28 13:47:15.368 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1999fb7c
[DEBUG] 2020-02-28 13:47:15.368 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1999fb7c
[DEBUG] 2020-02-28 13:47:15.369 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4f051f0b
[DEBUG] 2020-02-28 13:47:15.369 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4f051f0b
[DEBUG] 2020-02-28 13:47:15.369 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@74bba3bd
[DEBUG] 2020-02-28 13:47:15.369 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@74bba3bd
[DEBUG] 2020-02-28 13:47:15.369 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@74bba3bd
[DEBUG] 2020-02-28 13:47:15.370 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5bddc151
[DEBUG] 2020-02-28 13:47:15.371 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@61ec5df1
[DEBUG] 2020-02-28 13:47:15.371 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@61ec5df1
[DEBUG] 2020-02-28 13:47:15.371 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@61ec5df1
[DEBUG] 2020-02-28 13:47:15.372 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6a4021bf
[DEBUG] 2020-02-28 13:47:15.372 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5ae4bf77
[DEBUG] 2020-02-28 13:47:15.372 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5ae4bf77
[DEBUG] 2020-02-28 13:47:15.373 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@656d3ce7
[DEBUG] 2020-02-28 13:47:15.373 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@656d3ce7
[DEBUG] 2020-02-28 13:47:15.373 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5df670f6
[DEBUG] 2020-02-28 13:47:15.373 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5df670f6
[DEBUG] 2020-02-28 13:47:15.374 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1db769aa
[DEBUG] 2020-02-28 13:47:15.374 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1db769aa
[DEBUG] 2020-02-28 13:47:15.374 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@40491e3d
[DEBUG] 2020-02-28 13:47:15.374 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@40491e3d
[DEBUG] 2020-02-28 13:47:15.375 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@473f7ba2
[DEBUG] 2020-02-28 13:47:15.376 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1f1e8e4b
[DEBUG] 2020-02-28 13:47:15.376 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1f1e8e4b
[DEBUG] 2020-02-28 13:47:15.377 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1f1e8e4b
[DEBUG] 2020-02-28 13:47:15.377 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@64398c9b
[DEBUG] 2020-02-28 13:47:15.377 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@64398c9b
[DEBUG] 2020-02-28 13:47:15.377 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@64398c9b
[DEBUG] 2020-02-28 13:47:15.378 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@16f9302a
[DEBUG] 2020-02-28 13:47:15.378 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@20b2cb11
[DEBUG] 2020-02-28 13:47:15.379 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@520cc2a3
[DEBUG] 2020-02-28 13:47:15.379 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@520cc2a3
[DEBUG] 2020-02-28 13:47:15.379 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@520cc2a3
[DEBUG] 2020-02-28 13:47:15.379 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1d5eb4b0
[DEBUG] 2020-02-28 13:47:15.379 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1d5eb4b0
[DEBUG] 2020-02-28 13:47:15.379 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1d5eb4b0
[DEBUG] 2020-02-28 13:47:15.380 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7a424d0b
[DEBUG] 2020-02-28 13:47:15.380 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@72dc311c
[DEBUG] 2020-02-28 13:47:15.382 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@a64ba11
[DEBUG] 2020-02-28 13:47:15.382 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a64ba11
[DEBUG] 2020-02-28 13:47:15.382 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35cd49a3
[DEBUG] 2020-02-28 13:47:15.383 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@64504e56
[DEBUG] 2020-02-28 13:47:15.383 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@64504e56
[DEBUG] 2020-02-28 13:47:15.384 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6fff5faa
[DEBUG] 2020-02-28 13:47:15.384 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6fff5faa
[DEBUG] 2020-02-28 13:47:15.385 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a691a07
[DEBUG] 2020-02-28 13:47:15.386 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@676faef8
[DEBUG] 2020-02-28 13:47:15.388 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@374a86bc
[DEBUG] 2020-02-28 13:47:15.391 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6ad03b82
[DEBUG] 2020-02-28 13:47:15.391 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6ad03b82
[DEBUG] 2020-02-28 13:47:15.391 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2acf8e79
[DEBUG] 2020-02-28 13:47:15.391 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@bfd6eff
[DEBUG] 2020-02-28 13:47:15.391 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e85b862
[DEBUG] 2020-02-28 13:47:15.391 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a2691de
[DEBUG] 2020-02-28 13:47:15.391 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ccc6ca5
[DEBUG] 2020-02-28 13:47:15.391 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@ca67d55
[DEBUG] 2020-02-28 13:47:15.391 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1ff3820b
[DEBUG] 2020-02-28 13:47:15.392 [http-nio-8080-exec-74] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1155584a
[DEBUG] 2020-02-28 13:47:15.421 [http-nio-8080-exec-74] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 13:47:15.421 [http-nio-8080-exec-74] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 13:47:15.423 [http-nio-8080-exec-74] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:47:15.424 [http-nio-8080-exec-74] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:47:15.427 [http-nio-8080-exec-74] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 13:47:15.427 [http-nio-8080-exec-74] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 13:47:15.428 [http-nio-8080-exec-74] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 13:47:15.429 [http-nio-8080-exec-74] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:47:15.429 [http-nio-8080-exec-74] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 13:47:15.430 [http-nio-8080-exec-74] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 13:47:15.430 [http-nio-8080-exec-74] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 13:47:15.430 [http-nio-8080-exec-74] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 13:47:15.430 [http-nio-8080-exec-74] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:47:15.431 [http-nio-8080-exec-74] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 13:47:15.441 [http-nio-8080-exec-74] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 13:47:15.441 [http-nio-8080-exec-74] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 13:47:15.441 [http-nio-8080-exec-74] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 13:47:15.543 [http-nio-8080-exec-74] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 13:47:15.849 [http-nio-8080-exec-74] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:47:15.850 [http-nio-8080-exec-74] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:47:15.850 [http-nio-8080-exec-74] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 13:47:15.873 [http-nio-8080-exec-74] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 13:47:15.899 [http-nio-8080-exec-74] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 13:47:15.989 [http-nio-8080-exec-74] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 13:47:16.039 [http-nio-8080-exec-74] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 13:47:16.046 [http-nio-8080-exec-74] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@626f9e25] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@46297f4f]
[DEBUG] 2020-02-28 13:47:16.089 [http-nio-8080-exec-74] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:47:16.118 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:47:16.123 [http-nio-8080-exec-74] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 13:47:16.134 [http-nio-8080-exec-74] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 13:47:16.156 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.158 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 13:47:16.159 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 13:47:16.161 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 13:47:16.162 [http-nio-8080-exec-74] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 13:47:16.166 [http-nio-8080-exec-74] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:47:16.169 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.169 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:47:16.169 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 13:47:16.169 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:47:16.169 [http-nio-8080-exec-74] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:47:16.169 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.169 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 13:47:16.169 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 13:47:16.169 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 13:47:16.169 [http-nio-8080-exec-74] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 13:47:16.170 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:47:16.170 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:47:16.170 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 13:47:16.170 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:47:16.170 [http-nio-8080-exec-74] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:47:16.170 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.170 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:47:16.170 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 13:47:16.170 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:47:16.170 [http-nio-8080-exec-74] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:47:16.172 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:47:16.174 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.175 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.182 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.183 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.183 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:47:16.184 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:47:16.184 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:47:16.186 [http-nio-8080-exec-74] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:47:16.188 [http-nio-8080-exec-74] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 13:47:16.189 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:47:16.189 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.189 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.189 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.189 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.189 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:47:16.189 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:47:16.189 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:47:16.189 [http-nio-8080-exec-74] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:47:16.189 [http-nio-8080-exec-74] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:47:16.189 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] PropertyBinder - Building property password
[DEBUG] 2020-02-28 13:47:16.190 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.191 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 13:47:16.191 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 13:47:16.191 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 13:47:16.191 [http-nio-8080-exec-74] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 13:47:16.191 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:47:16.191 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.191 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.191 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.191 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.192 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:47:16.192 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:47:16.192 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:47:16.192 [http-nio-8080-exec-74] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:47:16.193 [http-nio-8080-exec-74] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 13:47:16.193 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:47:16.193 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.193 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.193 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.193 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.193 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:47:16.193 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:47:16.193 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:47:16.194 [http-nio-8080-exec-74] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:47:16.194 [http-nio-8080-exec-74] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 13:47:16.194 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.194 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:47:16.194 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 13:47:16.194 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:47:16.194 [http-nio-8080-exec-74] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:47:16.195 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 13:47:16.195 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 13:47:16.195 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 13:47:16.195 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 13:47:16.195 [http-nio-8080-exec-74] PropertyBinder - Building property username
[DEBUG] 2020-02-28 13:47:16.197 [http-nio-8080-exec-74] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:47:16.197 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:47:16.197 [http-nio-8080-exec-74] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 13:47:16.197 [http-nio-8080-exec-74] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 13:47:16.199 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.199 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 13:47:16.199 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 13:47:16.199 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 13:47:16.199 [http-nio-8080-exec-74] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 13:47:16.199 [http-nio-8080-exec-74] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:47:16.199 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.199 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:47:16.199 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 13:47:16.199 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:47:16.199 [http-nio-8080-exec-74] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:47:16.206 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.206 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 13:47:16.206 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 13:47:16.206 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 13:47:16.206 [http-nio-8080-exec-74] PropertyBinder - Building property name
[DEBUG] 2020-02-28 13:47:16.206 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.206 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:47:16.206 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 13:47:16.206 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:47:16.206 [http-nio-8080-exec-74] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:47:16.207 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 13:47:16.207 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.208 [http-nio-8080-exec-74] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:47:16.208 [http-nio-8080-exec-74] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:47:16.208 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:47:16.208 [http-nio-8080-exec-74] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 13:47:16.209 [http-nio-8080-exec-74] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 13:47:16.209 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.209 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 13:47:16.209 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 13:47:16.209 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 13:47:16.209 [http-nio-8080-exec-74] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] PropertyBinder - Building property author
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:47:16.210 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:47:16.211 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:47:16.212 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.212 [http-nio-8080-exec-74] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:47:16.212 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.212 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:47:16.212 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 13:47:16.212 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:47:16.212 [http-nio-8080-exec-74] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:47:16.212 [http-nio-8080-exec-74] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:47:16.212 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:47:16.212 [http-nio-8080-exec-74] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 13:47:16.212 [http-nio-8080-exec-74] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 13:47:16.219 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.221 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 13:47:16.221 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 13:47:16.221 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 13:47:16.221 [http-nio-8080-exec-74] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 13:47:16.221 [http-nio-8080-exec-74] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:47:16.222 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.222 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:47:16.222 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 13:47:16.222 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:47:16.222 [http-nio-8080-exec-74] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:47:16.222 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.222 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:47:16.222 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 13:47:16.222 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:47:16.222 [http-nio-8080-exec-74] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:47:16.222 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.222 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.223 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.223 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:47:16.223 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:47:16.223 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:47:16.223 [http-nio-8080-exec-74] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:47:16.223 [http-nio-8080-exec-74] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:47:16.223 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.223 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:47:16.223 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 13:47:16.223 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:47:16.223 [http-nio-8080-exec-74] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:47:16.223 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.223 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:47:16.223 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 13:47:16.225 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:47:16.225 [http-nio-8080-exec-74] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:47:16.229 [http-nio-8080-exec-74] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:47:16.229 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:47:16.229 [http-nio-8080-exec-74] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 13:47:16.229 [http-nio-8080-exec-74] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 13:47:16.230 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.230 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 13:47:16.230 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 13:47:16.230 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 13:47:16.230 [http-nio-8080-exec-74] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 13:47:16.230 [http-nio-8080-exec-74] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:47:16.230 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 13:47:16.231 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] PropertyBinder - Building property director
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:47:16.232 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:47:16.233 [http-nio-8080-exec-74] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:47:16.234 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:47:16.234 [http-nio-8080-exec-74] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 13:47:16.234 [http-nio-8080-exec-74] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 13:47:16.234 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.234 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 13:47:16.234 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 13:47:16.234 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 13:47:16.234 [http-nio-8080-exec-74] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 13:47:16.236 [http-nio-8080-exec-74] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:47:16.236 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.237 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 13:47:16.237 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 13:47:16.237 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] PropertyBinder - Building property category
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.238 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:47:16.239 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 13:47:16.239 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:47:16.239 [http-nio-8080-exec-74] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:47:16.239 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:47:16.239 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.239 [http-nio-8080-exec-74] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:47:16.239 [http-nio-8080-exec-74] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:47:16.239 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:47:16.239 [http-nio-8080-exec-74] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 13:47:16.239 [http-nio-8080-exec-74] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 13:47:16.240 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.240 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 13:47:16.240 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 13:47:16.240 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:47:16.241 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.242 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.242 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.242 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:47:16.242 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:47:16.242 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:47:16.242 [http-nio-8080-exec-74] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:47:16.242 [http-nio-8080-exec-74] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:47:16.242 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.242 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:47:16.242 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 13:47:16.242 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:47:16.242 [http-nio-8080-exec-74] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:47:16.242 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.242 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:47:16.242 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 13:47:16.243 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:47:16.243 [http-nio-8080-exec-74] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:47:16.243 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.243 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 13:47:16.243 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 13:47:16.243 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 13:47:16.243 [http-nio-8080-exec-74] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 13:47:16.244 [http-nio-8080-exec-74] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:47:16.244 [http-nio-8080-exec-74] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:47:16.244 [http-nio-8080-exec-74] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 13:47:16.244 [http-nio-8080-exec-74] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:47:16.244 [http-nio-8080-exec-74] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:47:16.245 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 13:47:16.246 [http-nio-8080-exec-74] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:47:16.251 [http-nio-8080-exec-74] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 13:47:16.252 [http-nio-8080-exec-74] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 13:47:16.252 [http-nio-8080-exec-74] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 13:47:16.252 [http-nio-8080-exec-74] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 13:47:16.252 [http-nio-8080-exec-74] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 13:47:16.252 [http-nio-8080-exec-74] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 13:47:16.252 [http-nio-8080-exec-74] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 13:47:16.259 [http-nio-8080-exec-74] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:47:16.260 [http-nio-8080-exec-74] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:47:16.265 [http-nio-8080-exec-74] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:47:16.265 [http-nio-8080-exec-74] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:47:16.265 [http-nio-8080-exec-74] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 13:47:16.265 [http-nio-8080-exec-74] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:47:16.265 [http-nio-8080-exec-74] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:47:16.266 [http-nio-8080-exec-74] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:47:16.266 [http-nio-8080-exec-74] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:47:16.266 [http-nio-8080-exec-74] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 13:47:16.266 [http-nio-8080-exec-74] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:47:16.266 [http-nio-8080-exec-74] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 13:47:16.266 [http-nio-8080-exec-74] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 13:47:16.266 [http-nio-8080-exec-74] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 13:47:16.267 [http-nio-8080-exec-74] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:47:16.267 [http-nio-8080-exec-74] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:47:16.267 [http-nio-8080-exec-74] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 13:47:16.267 [http-nio-8080-exec-74] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 13:47:16.267 [http-nio-8080-exec-74] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 13:47:16.267 [http-nio-8080-exec-74] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:47:16.267 [http-nio-8080-exec-74] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:47:16.267 [http-nio-8080-exec-74] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 13:47:16.267 [http-nio-8080-exec-74] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:47:16.268 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:47:16.269 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:47:16.270 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:47:16.270 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:47:16.270 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:47:16.270 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:47:16.270 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:47:16.270 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:47:16.272 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:47:16.272 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:47:16.272 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:47:16.272 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:47:16.272 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:47:16.272 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:47:16.272 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:47:16.272 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:47:16.272 [http-nio-8080-exec-74] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:47:16.327 [http-nio-8080-exec-74] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Statistics: disabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 13:47:16.328 [http-nio-8080-exec-74] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 13:47:16.373 [http-nio-8080-exec-74] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 13:47:16.396 [http-nio-8080-exec-74] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 13:47:16.396 [http-nio-8080-exec-74] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4b2a93f, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 13:47:16.416 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:47:16.417 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:47:16.418 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:47:16.418 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:47:16.419 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:47:16.419 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:47:16.419 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:47:16.419 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:47:16.424 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:47:16.425 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:47:16.425 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:47:16.425 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:47:16.426 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:47:16.426 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:47:16.428 [http-nio-8080-exec-74] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 13:47:16.428 [http-nio-8080-exec-74] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 13:47:16.428 [http-nio-8080-exec-74] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@626f9e25] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7d97cdc2]
[DEBUG] 2020-02-28 13:47:16.472 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:47:16.472 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:47:16.485 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:47:16.485 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:47:16.747 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:47:16.748 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:47:16.748 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:47:16.748 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:47:16.785 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:47:16.785 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:47:16.787 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:47:16.787 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:47:16.802 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:47:16.805 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:47:16.805 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:47:16.806 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:47:16.824 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:47:16.824 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:47:16.824 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:47:16.824 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:47:16.860 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:47:16.860 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:47:16.864 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:47:16.864 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:47:16.888 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:47:16.888 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:47:16.888 [http-nio-8080-exec-74] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:47:16.888 [http-nio-8080-exec-74] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:47:16.916 [http-nio-8080-exec-74] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:47:16.916 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 13:47:16.916 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 13:47:16.916 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 13:47:16.916 [http-nio-8080-exec-74] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 13:47:16.917 [http-nio-8080-exec-74] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:47:16.917 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 13:47:16.917 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 13:47:16.917 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 13:47:16.917 [http-nio-8080-exec-74] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 13:47:16.917 [http-nio-8080-exec-74] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:47:16.917 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 13:47:16.917 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 13:47:16.917 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 13:47:16.917 [http-nio-8080-exec-74] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 13:47:16.918 [http-nio-8080-exec-74] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:47:16.918 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:47:16.918 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:47:16.918 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:47:16.918 [http-nio-8080-exec-74] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 13:47:16.918 [http-nio-8080-exec-74] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:47:16.918 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 13:47:16.919 [http-nio-8080-exec-74] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 13:47:16.921 [http-nio-8080-exec-74] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:47:16.921 [http-nio-8080-exec-74] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 13:47:16.921 [http-nio-8080-exec-74] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 13:47:16.921 [http-nio-8080-exec-74] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:47:16.921 [http-nio-8080-exec-74] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 13:47:16.921 [http-nio-8080-exec-74] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 13:47:16.921 [http-nio-8080-exec-74] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:47:16.949 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@286b340c]
[DEBUG] 2020-02-28 13:47:16.950 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:47:16.950 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:16.950 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:47:16.957 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6cd131ba]
[DEBUG] 2020-02-28 13:47:16.959 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@752e37bc]
[DEBUG] 2020-02-28 13:47:16.959 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:47:16.959 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:47:16.959 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:47:16.959 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:47:16.959 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e6336dc]
[DEBUG] 2020-02-28 13:47:16.959 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b4b29]
[DEBUG] 2020-02-28 13:47:16.960 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:47:16.960 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:47:16.960 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:47:16.960 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:47:16.960 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:16.961 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:47:16.961 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67a0270]
[DEBUG] 2020-02-28 13:47:16.962 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:47:16.962 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:47:16.962 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:47:16.962 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:47:16.962 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:47:16.962 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72083329]
[DEBUG] 2020-02-28 13:47:16.962 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5417d471]
[DEBUG] 2020-02-28 13:47:16.962 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:47:16.963 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:47:16.963 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:47:16.963 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:47:16.963 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:47:16.963 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:47:16.963 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:47:16.963 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:47:16.963 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3bebc150]
[DEBUG] 2020-02-28 13:47:16.963 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51352e00]
[DEBUG] 2020-02-28 13:47:16.963 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:47:16.963 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:47:16.963 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:47:16.963 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:47:16.963 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:47:16.964 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:47:16.964 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73b45a56]
[DEBUG] 2020-02-28 13:47:16.964 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e764889]
[DEBUG] 2020-02-28 13:47:16.964 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:47:16.964 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:47:16.964 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:47:16.964 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@666bbbf9]
[DEBUG] 2020-02-28 13:47:16.967 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:47:16.967 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:47:16.968 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:16.983 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:16.991 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:47:16.993 [http-nio-8080-exec-74] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:47:16.993 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16e25fb7]
[DEBUG] 2020-02-28 13:47:16.993 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:47:16.993 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:16.993 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:47:16.993 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38e290b7]
[DEBUG] 2020-02-28 13:47:16.993 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b4f988f]
[DEBUG] 2020-02-28 13:47:16.993 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:47:16.993 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:47:16.993 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:47:16.993 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:47:16.993 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f5461b6]
[DEBUG] 2020-02-28 13:47:16.993 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74436a79]
[DEBUG] 2020-02-28 13:47:16.993 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:47:16.993 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:47:16.993 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58083b6e]
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@301d699]
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cfe6422]
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75b4e198]
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78150865]
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38079df7]
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6881fcb2]
[DEBUG] 2020-02-28 13:47:16.994 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:47:16.995 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:47:16.995 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:47:16.995 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@705397ee]
[DEBUG] 2020-02-28 13:47:16.995 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:47:16.995 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:47:16.995 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:16.995 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:16.998 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:47:16.999 [http-nio-8080-exec-74] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:47:17.011 [http-nio-8080-exec-74] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:47:17.011 [http-nio-8080-exec-74] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cec9dac]
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62786dd3]
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@213023f5]
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23b6139]
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@230c8258]
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44063968]
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:47:17.012 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:47:17.013 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:47:17.013 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7abb4921]
[DEBUG] 2020-02-28 13:47:17.013 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f03e267]
[DEBUG] 2020-02-28 13:47:17.013 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:47:17.013 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:47:17.013 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:47:17.013 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@278e7334]
[DEBUG] 2020-02-28 13:47:17.013 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:47:17.013 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.013 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.014 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:47:17.014 [http-nio-8080-exec-74] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:47:17.014 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a071942]
[DEBUG] 2020-02-28 13:47:17.014 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:47:17.014 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.014 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:47:17.014 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:47:17.014 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:17.014 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:47:17.014 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e440508]
[DEBUG] 2020-02-28 13:47:17.014 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:47:17.014 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:47:17.014 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bb230b5]
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f043752]
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@112615ff]
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3783617d]
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2296aa9f]
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eb2bf39]
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5825d97]
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:47:17.015 [http-nio-8080-exec-74] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67eb8489]
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b4220cf]
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50daddc6]
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71612983]
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bdf3b38]
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16737846]
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10c1b3a3]
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6894ad09]
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:47:17.016 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:47:17.017 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1ae05dd8]
[DEBUG] 2020-02-28 13:47:17.017 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:47:17.017 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.017 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.017 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:47:17.017 [http-nio-8080-exec-74] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:47:17.017 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a1d5269]
[DEBUG] 2020-02-28 13:47:17.017 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.017 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:47:17.017 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f3ac166]
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4dc6dc3a]
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6819c53e]
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@612108aa]
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e896edf]
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:47:17.018 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:47:17.019 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75554438]
[DEBUG] 2020-02-28 13:47:17.019 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53c35f99]
[DEBUG] 2020-02-28 13:47:17.019 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:47:17.019 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:47:17.019 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:47:17.019 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3ace6913]
[DEBUG] 2020-02-28 13:47:17.019 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:47:17.019 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.019 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.020 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:47:17.020 [http-nio-8080-exec-74] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:47:17.020 [http-nio-8080-exec-74] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:47:17.020 [http-nio-8080-exec-74] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:47:17.020 [http-nio-8080-exec-74] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:47:17.020 [http-nio-8080-exec-74] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 13:47:17.020 [http-nio-8080-exec-74] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 13:47:17.020 [http-nio-8080-exec-74] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:47:17.020 [http-nio-8080-exec-74] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 13:47:17.020 [http-nio-8080-exec-74] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 13:47:17.020 [http-nio-8080-exec-74] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:47:17.020 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@205ff851]
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20e62e93]
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f757993]
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20378b5c]
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@121cd4ac]
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46f18e9d]
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:17.021 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a008074]
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:17.022 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52a9aa2a]
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@463b73cc]
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c34336]
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5aa4595e]
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70f45bfd]
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d4ce33c]
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3249c750]
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@12f9c2c0]
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.023 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cac67ce]
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caa996e]
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a0c71ba]
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77fbf0d6]
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fe266ae]
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@756f4257]
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:47:17.024 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c477ce1]
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74124aff]
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6cc703]
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.025 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@429cf6f2]
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1bc12da7]
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4135bb4]
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@211d16a2]
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4140bed5]
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@537e0f4f]
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d2e206f]
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@639a5c0b]
[DEBUG] 2020-02-28 13:47:17.026 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f8b354f]
[DEBUG] 2020-02-28 13:47:17.027 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:47:17.027 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:47:17.027 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:47:17.027 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2707ad27]
[DEBUG] 2020-02-28 13:47:17.027 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:47:17.027 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.027 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.027 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:47:17.027 [http-nio-8080-exec-74] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:47:17.027 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f61c53e]
[DEBUG] 2020-02-28 13:47:17.027 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23b2425a]
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7814b1c2]
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@496dd3cb]
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45515418]
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74c06e7a]
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29075b81]
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36a9574e]
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2561d949]
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3212972a]
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:47:17.028 [http-nio-8080-exec-74] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:47:17.029 [http-nio-8080-exec-74] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:47:17.029 [http-nio-8080-exec-74] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:47:17.030 [http-nio-8080-exec-74] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34623f11]
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f0026d6]
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cb7ba9e]
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79888cae]
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a038824]
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b01aeb0]
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:47:17.031 [http-nio-8080-exec-74] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:47:17.032 [http-nio-8080-exec-74] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:47:17.039 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f771d98]
[DEBUG] 2020-02-28 13:47:17.039 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b1dc4f2]
[DEBUG] 2020-02-28 13:47:17.039 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:47:17.039 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:47:17.039 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.039 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:47:17.039 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:47:17.039 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:47:17.039 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:47:17.039 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:47:17.039 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:17.039 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:47:17.039 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:47:17.039 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:47:17.039 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.041 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.041 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 13:47:17.042 [http-nio-8080-exec-74] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 13:47:17.042 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b711138]
[DEBUG] 2020-02-28 13:47:17.042 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e0e660b]
[DEBUG] 2020-02-28 13:47:17.042 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.042 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:47:17.042 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:17.042 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:47:17.042 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:47:17.043 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.043 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.044 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 13:47:17.044 [http-nio-8080-exec-74] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 13:47:17.044 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@558cb94]
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@284bcb0a]
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b280447]
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d4d8bb3]
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@627377cd]
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43426823]
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f0758a]
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7159c24f]
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@218abf37]
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:47:17.045 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:47:17.046 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:47:17.046 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:47:17.046 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:47:17.046 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21d6d2a9]
[DEBUG] 2020-02-28 13:47:17.046 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41d7b602]
[DEBUG] 2020-02-28 13:47:17.046 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:47:17.046 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e235fcd]
[DEBUG] 2020-02-28 13:47:17.046 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa42439]
[DEBUG] 2020-02-28 13:47:17.046 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:47:17.046 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:47:17.046 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:47:17.046 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1df0ec5e]
[DEBUG] 2020-02-28 13:47:17.046 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:47:17.046 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:47:17.046 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.049 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.050 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:47:17.050 [http-nio-8080-exec-74] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 13:47:17.050 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c553bb5]
[DEBUG] 2020-02-28 13:47:17.050 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f50ec6c]
[DEBUG] 2020-02-28 13:47:17.050 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:47:17.050 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.050 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6477c178]
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c5c6216]
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6acbf9b3]
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2733a5be]
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38602f9c]
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@dd35f42]
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eae9f72]
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@648adf4c]
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d2f008e]
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:47:17.052 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:47:17.053 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:47:17.053 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4a917d26]
[DEBUG] 2020-02-28 13:47:17.053 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:47:17.053 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:47:17.053 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.053 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.054 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:47:17.054 [http-nio-8080-exec-74] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 13:47:17.054 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52acede7]
[DEBUG] 2020-02-28 13:47:17.054 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7722bc4c]
[DEBUG] 2020-02-28 13:47:17.054 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:47:17.054 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.054 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:47:17.054 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:47:17.054 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:47:17.054 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:47:17.054 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:47:17.054 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:47:17.054 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:47:17.054 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.055 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.055 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 13:47:17.055 [http-nio-8080-exec-74] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 13:47:17.055 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12e27baf]
[DEBUG] 2020-02-28 13:47:17.055 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c06563]
[DEBUG] 2020-02-28 13:47:17.055 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.055 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:47:17.055 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:47:17.055 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:47:17.055 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:47:17.055 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:17.055 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.055 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.055 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 13:47:17.055 [http-nio-8080-exec-74] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 13:47:17.055 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1fea33ee]
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cf2b60d]
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78a589e5]
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11e0a22]
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b2280f0]
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4833a2fe]
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:47:17.056 [http-nio-8080-exec-74] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:47:17.057 [http-nio-8080-exec-74] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 13:47:17.057 [http-nio-8080-exec-74] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 13:47:17.087 [http-nio-8080-exec-74] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 13:47:17.089 [http-nio-8080-exec-74] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 13:47:17.091 [http-nio-8080-exec-74] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 13:47:17.097 [http-nio-8080-exec-74] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 13:47:17.097 [http-nio-8080-exec-74] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 13:47:17.097 [http-nio-8080-exec-74] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 13:47:17.098 [http-nio-8080-exec-74] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 13:47:17.099 [http-nio-8080-exec-74] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@33c13935
[DEBUG] 2020-02-28 13:47:17.100 [http-nio-8080-exec-74] SessionFactoryRegistry - Registering SessionFactory: 528ffcbd-2cf5-413b-8c79-2a318effca6d (<unnamed>)
[DEBUG] 2020-02-28 13:47:17.100 [http-nio-8080-exec-74] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 13:47:17.165 [http-nio-8080-exec-74] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 13:47:17.199 [http-nio-8080-exec-74] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:47:17.217 [http-nio-8080-exec-74] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@318f0905
[DEBUG] 2020-02-28 13:47:17.247 [http-nio-8080-exec-74] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:47:17.250 [http-nio-8080-exec-74] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:47:17.265 [http-nio-8080-exec-74] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 13:47:17.338 [http-nio-8080-exec-74] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 13:47:17.354 [http-nio-8080-exec-74] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 13:47:17.354 [http-nio-8080-exec-74] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 13:47:17.355 [http-nio-8080-exec-74] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 13:47:17.355 [http-nio-8080-exec-74] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 13:47:17.365 [http-nio-8080-exec-74] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 13:47:17.366 [http-nio-8080-exec-74] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 13:47:17.366 [http-nio-8080-exec-74] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 13:47:17.366 [http-nio-8080-exec-74] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:47:17.377 [http-nio-8080-exec-74] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:47:17.377 [http-nio-8080-exec-74] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:47:17.377 [http-nio-8080-exec-74] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:47:17.393 [http-nio-8080-exec-74] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:47:17.498 [http-nio-8080-exec-74] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:47:17.505 [http-nio-8080-exec-74] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:47:17.516 [http-nio-8080-exec-74] Loader - Result set row: 1
[DEBUG] 2020-02-28 13:47:17.516 [http-nio-8080-exec-74] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:47:17.518 [http-nio-8080-exec-74] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:47:17.519 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:47:17.519 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.519 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:47:17.520 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.520 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:47:17.520 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.520 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:47:17.520 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.520 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:47:17.520 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.520 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:47:17.520 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.526 [http-nio-8080-exec-74] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:47:17.549 [http-nio-8080-exec-74] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:47:17.550 [http-nio-8080-exec-74] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:47:17.553 [http-nio-8080-exec-74] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:47:17.566 [http-nio-8080-exec-74] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:47:17.566 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:47:17.566 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.566 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:47:17.566 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.566 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:47:17.566 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.566 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:47:17.566 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.566 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:47:17.566 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.570 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:47:17.570 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.570 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:47:17.570 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.570 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:47:17.570 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.570 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:47:17.570 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.570 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:47:17.570 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.570 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:47:17.570 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.570 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:47:17.570 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.571 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:47:17.571 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.571 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:47:17.571 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.571 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:47:17.571 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.571 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@368f2dba
[DEBUG] 2020-02-28 13:47:17.571 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.572 [http-nio-8080-exec-74] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:47:17.572 [http-nio-8080-exec-74] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:47:17.572 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:47:17.573 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.573 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:47:17.573 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.573 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:47:17.573 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.573 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:47:17.573 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.574 [http-nio-8080-exec-74] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:47:17.575 [http-nio-8080-exec-74] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:47:17.577 [http-nio-8080-exec-74] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:47:17.578 [http-nio-8080-exec-74] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:47:17.578 [http-nio-8080-exec-74] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:47:17.579 [http-nio-8080-exec-74] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:47:17.579 [http-nio-8080-exec-74] Loader - Done entity load
[DEBUG] 2020-02-28 13:47:17.579 [http-nio-8080-exec-74] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:47:17.579 [http-nio-8080-exec-74] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:47:17.580 [http-nio-8080-exec-74] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:47:17.580 [http-nio-8080-exec-74] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:47:17.581 [http-nio-8080-exec-74] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:47:17.582 [http-nio-8080-exec-74] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:50:56.083 [http-nio-8080-exec-76] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 13:50:56.094 [http-nio-8080-exec-76] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 13:50:56.099 [http-nio-8080-exec-76] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 13:50:56.244 [http-nio-8080-exec-76] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 13:50:56.246 [http-nio-8080-exec-76] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 13:50:56.401 [http-nio-8080-exec-76] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 13:50:56.402 [http-nio-8080-exec-76] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 13:50:56.405 [http-nio-8080-exec-76] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 13:50:56.629 [http-nio-8080-exec-76] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 13:50:56.670 [http-nio-8080-exec-76] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 13:50:56.671 [http-nio-8080-exec-76] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 13:50:56.706 [http-nio-8080-exec-76] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 13:50:56.761 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6a9fd52d
[DEBUG] 2020-02-28 13:50:56.761 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6a9fd52d
[DEBUG] 2020-02-28 13:50:56.761 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a9fd52d
[DEBUG] 2020-02-28 13:50:56.762 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4cb8c36f
[DEBUG] 2020-02-28 13:50:56.763 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7a3a44c4
[DEBUG] 2020-02-28 13:50:56.763 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@49fe413f
[DEBUG] 2020-02-28 13:50:56.765 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@23e3e52f
[DEBUG] 2020-02-28 13:50:56.765 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@23e3e52f
[DEBUG] 2020-02-28 13:50:56.765 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23e3e52f
[DEBUG] 2020-02-28 13:50:56.768 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3ea0e71e
[DEBUG] 2020-02-28 13:50:56.768 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3ea0e71e
[DEBUG] 2020-02-28 13:50:56.768 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3ea0e71e
[DEBUG] 2020-02-28 13:50:56.769 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6919303a
[DEBUG] 2020-02-28 13:50:56.769 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6919303a
[DEBUG] 2020-02-28 13:50:56.769 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6919303a
[DEBUG] 2020-02-28 13:50:56.770 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4b6c712c
[DEBUG] 2020-02-28 13:50:56.770 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4b6c712c
[DEBUG] 2020-02-28 13:50:56.770 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b6c712c
[DEBUG] 2020-02-28 13:50:56.771 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3598043
[DEBUG] 2020-02-28 13:50:56.771 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3598043
[DEBUG] 2020-02-28 13:50:56.771 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3598043
[DEBUG] 2020-02-28 13:50:56.771 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@70d01ca7
[DEBUG] 2020-02-28 13:50:56.771 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@70d01ca7
[DEBUG] 2020-02-28 13:50:56.771 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@70d01ca7
[DEBUG] 2020-02-28 13:50:56.775 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4bc38253
[DEBUG] 2020-02-28 13:50:56.775 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4bc38253
[DEBUG] 2020-02-28 13:50:56.775 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4bc38253
[DEBUG] 2020-02-28 13:50:56.776 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@222eee31
[DEBUG] 2020-02-28 13:50:56.776 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@222eee31
[DEBUG] 2020-02-28 13:50:56.777 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4fb977d7
[DEBUG] 2020-02-28 13:50:56.777 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4fb977d7
[DEBUG] 2020-02-28 13:50:56.777 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@382cd160
[DEBUG] 2020-02-28 13:50:56.777 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@382cd160
[DEBUG] 2020-02-28 13:50:56.780 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5f47e3b7
[DEBUG] 2020-02-28 13:50:56.781 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@51350415
[DEBUG] 2020-02-28 13:50:56.784 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1598df16
[DEBUG] 2020-02-28 13:50:56.784 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1598df16
[DEBUG] 2020-02-28 13:50:56.785 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@8bcf7ba
[DEBUG] 2020-02-28 13:50:56.785 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@8bcf7ba
[DEBUG] 2020-02-28 13:50:56.788 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2b2c3086
[DEBUG] 2020-02-28 13:50:56.788 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2b2c3086
[DEBUG] 2020-02-28 13:50:56.789 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e2a0c8
[DEBUG] 2020-02-28 13:50:56.789 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e2a0c8
[DEBUG] 2020-02-28 13:50:56.790 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@153e65ad
[DEBUG] 2020-02-28 13:50:56.790 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@153e65ad
[DEBUG] 2020-02-28 13:50:56.797 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1aadec01
[DEBUG] 2020-02-28 13:50:56.797 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1aadec01
[DEBUG] 2020-02-28 13:50:56.831 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@789c5aa1
[DEBUG] 2020-02-28 13:50:56.832 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@789c5aa1
[DEBUG] 2020-02-28 13:50:56.834 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1e41daea
[DEBUG] 2020-02-28 13:50:56.835 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1e41daea
[DEBUG] 2020-02-28 13:50:56.836 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e85ae7b
[DEBUG] 2020-02-28 13:50:56.836 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e85ae7b
[DEBUG] 2020-02-28 13:50:56.837 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6a60176f
[DEBUG] 2020-02-28 13:50:56.837 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6a60176f
[DEBUG] 2020-02-28 13:50:56.838 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7963155b
[DEBUG] 2020-02-28 13:50:56.838 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7963155b
[DEBUG] 2020-02-28 13:50:56.839 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@45ac8553
[DEBUG] 2020-02-28 13:50:56.839 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@45ac8553
[DEBUG] 2020-02-28 13:50:56.839 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@45ac8553
[DEBUG] 2020-02-28 13:50:56.848 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1d8de412
[DEBUG] 2020-02-28 13:50:56.849 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1c425992
[DEBUG] 2020-02-28 13:50:56.849 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c425992
[DEBUG] 2020-02-28 13:50:56.849 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c425992
[DEBUG] 2020-02-28 13:50:56.855 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@70b8b09a
[DEBUG] 2020-02-28 13:50:56.856 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2d54673d
[DEBUG] 2020-02-28 13:50:56.856 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d54673d
[DEBUG] 2020-02-28 13:50:56.856 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@493c50a3
[DEBUG] 2020-02-28 13:50:56.856 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@493c50a3
[DEBUG] 2020-02-28 13:50:56.866 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@456c25e
[DEBUG] 2020-02-28 13:50:56.866 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@456c25e
[DEBUG] 2020-02-28 13:50:56.866 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@9aa6ee6
[DEBUG] 2020-02-28 13:50:56.867 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@9aa6ee6
[DEBUG] 2020-02-28 13:50:56.868 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@74b2b914
[DEBUG] 2020-02-28 13:50:56.868 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@74b2b914
[DEBUG] 2020-02-28 13:50:56.869 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@44cb47aa
[DEBUG] 2020-02-28 13:50:56.870 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4832fe8b
[DEBUG] 2020-02-28 13:50:56.870 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4832fe8b
[DEBUG] 2020-02-28 13:50:56.870 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4832fe8b
[DEBUG] 2020-02-28 13:50:56.871 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2a967b3f
[DEBUG] 2020-02-28 13:50:56.871 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2a967b3f
[DEBUG] 2020-02-28 13:50:56.871 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2a967b3f
[DEBUG] 2020-02-28 13:50:56.873 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@35d25b1
[DEBUG] 2020-02-28 13:50:56.880 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@508733f6
[DEBUG] 2020-02-28 13:50:56.882 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@63ff3555
[DEBUG] 2020-02-28 13:50:56.882 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@63ff3555
[DEBUG] 2020-02-28 13:50:56.882 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@63ff3555
[DEBUG] 2020-02-28 13:50:56.884 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4c43cb3
[DEBUG] 2020-02-28 13:50:56.885 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4c43cb3
[DEBUG] 2020-02-28 13:50:56.885 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4c43cb3
[DEBUG] 2020-02-28 13:50:56.885 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@337d81fc
[DEBUG] 2020-02-28 13:50:56.886 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2f9fe29a
[DEBUG] 2020-02-28 13:50:56.887 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4a620117
[DEBUG] 2020-02-28 13:50:56.887 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4a620117
[DEBUG] 2020-02-28 13:50:56.887 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5dc09a55
[DEBUG] 2020-02-28 13:50:56.888 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@580754e5
[DEBUG] 2020-02-28 13:50:56.888 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@580754e5
[DEBUG] 2020-02-28 13:50:56.889 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1311021d
[DEBUG] 2020-02-28 13:50:56.889 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1311021d
[DEBUG] 2020-02-28 13:50:56.889 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@54b875c6
[DEBUG] 2020-02-28 13:50:56.893 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@107d536e
[DEBUG] 2020-02-28 13:50:56.899 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@60539fa9
[DEBUG] 2020-02-28 13:50:56.902 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@217e8319
[DEBUG] 2020-02-28 13:50:56.903 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@217e8319
[DEBUG] 2020-02-28 13:50:56.904 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@342d9d79
[DEBUG] 2020-02-28 13:50:56.904 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5fc47b32
[DEBUG] 2020-02-28 13:50:56.904 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@165f8d42
[DEBUG] 2020-02-28 13:50:56.904 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2b50dfd
[DEBUG] 2020-02-28 13:50:56.904 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5a2b8e87
[DEBUG] 2020-02-28 13:50:56.904 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26ca631b
[DEBUG] 2020-02-28 13:50:56.904 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c95cf1d
[DEBUG] 2020-02-28 13:50:56.905 [http-nio-8080-exec-76] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6665f997
[DEBUG] 2020-02-28 13:50:56.950 [http-nio-8080-exec-76] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 13:50:56.951 [http-nio-8080-exec-76] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 13:50:56.952 [http-nio-8080-exec-76] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:50:56.952 [http-nio-8080-exec-76] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:50:56.952 [http-nio-8080-exec-76] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 13:50:56.953 [http-nio-8080-exec-76] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 13:50:56.953 [http-nio-8080-exec-76] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 13:50:56.955 [http-nio-8080-exec-76] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:50:56.955 [http-nio-8080-exec-76] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 13:50:56.956 [http-nio-8080-exec-76] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 13:50:56.957 [http-nio-8080-exec-76] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 13:50:56.958 [http-nio-8080-exec-76] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 13:50:56.958 [http-nio-8080-exec-76] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:50:56.959 [http-nio-8080-exec-76] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 13:50:56.970 [http-nio-8080-exec-76] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 13:50:56.970 [http-nio-8080-exec-76] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 13:50:56.970 [http-nio-8080-exec-76] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 13:50:57.185 [http-nio-8080-exec-76] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 13:50:57.591 [http-nio-8080-exec-76] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:50:57.591 [http-nio-8080-exec-76] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:50:57.592 [http-nio-8080-exec-76] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 13:50:57.617 [http-nio-8080-exec-76] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 13:50:57.696 [http-nio-8080-exec-76] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 13:50:57.746 [http-nio-8080-exec-76] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 13:50:57.820 [http-nio-8080-exec-76] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 13:50:57.823 [http-nio-8080-exec-76] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14ada882] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@76351772]
[DEBUG] 2020-02-28 13:50:57.893 [http-nio-8080-exec-76] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:50:57.925 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:50:57.936 [http-nio-8080-exec-76] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 13:50:57.943 [http-nio-8080-exec-76] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 13:50:58.005 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.018 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 13:50:58.021 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 13:50:58.027 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 13:50:58.033 [http-nio-8080-exec-76] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 13:50:58.039 [http-nio-8080-exec-76] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:50:58.050 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.050 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:50:58.051 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 13:50:58.051 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:50:58.051 [http-nio-8080-exec-76] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:50:58.051 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.051 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 13:50:58.051 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 13:50:58.051 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 13:50:58.051 [http-nio-8080-exec-76] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 13:50:58.051 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:50:58.051 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:50:58.051 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 13:50:58.051 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:50:58.051 [http-nio-8080-exec-76] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:50:58.052 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.052 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:50:58.052 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 13:50:58.052 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:50:58.052 [http-nio-8080-exec-76] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:50:58.053 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:50:58.054 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.055 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.077 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.080 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.082 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:50:58.085 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:50:58.086 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:50:58.086 [http-nio-8080-exec-76] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:50:58.098 [http-nio-8080-exec-76] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 13:50:58.098 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:50:58.101 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.101 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.102 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.102 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.102 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:50:58.102 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:50:58.102 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:50:58.102 [http-nio-8080-exec-76] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:50:58.102 [http-nio-8080-exec-76] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:50:58.102 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.102 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:50:58.102 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 13:50:58.102 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:50:58.102 [http-nio-8080-exec-76] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:50:58.102 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] PropertyBinder - Building property password
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 13:50:58.103 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:50:58.104 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.104 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.104 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.104 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.104 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:50:58.104 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:50:58.104 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:50:58.104 [http-nio-8080-exec-76] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:50:58.104 [http-nio-8080-exec-76] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 13:50:58.104 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:50:58.105 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.105 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.105 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.105 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.105 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:50:58.105 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:50:58.105 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:50:58.105 [http-nio-8080-exec-76] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:50:58.105 [http-nio-8080-exec-76] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 13:50:58.105 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.110 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:50:58.113 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 13:50:58.114 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:50:58.114 [http-nio-8080-exec-76] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:50:58.114 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 13:50:58.114 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 13:50:58.114 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 13:50:58.114 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 13:50:58.115 [http-nio-8080-exec-76] PropertyBinder - Building property username
[DEBUG] 2020-02-28 13:50:58.117 [http-nio-8080-exec-76] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:50:58.117 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:50:58.118 [http-nio-8080-exec-76] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 13:50:58.118 [http-nio-8080-exec-76] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 13:50:58.121 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.121 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 13:50:58.121 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 13:50:58.121 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 13:50:58.121 [http-nio-8080-exec-76] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 13:50:58.121 [http-nio-8080-exec-76] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:50:58.122 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.122 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:50:58.122 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 13:50:58.122 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:50:58.122 [http-nio-8080-exec-76] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:50:58.138 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.138 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 13:50:58.138 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 13:50:58.138 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 13:50:58.138 [http-nio-8080-exec-76] PropertyBinder - Building property name
[DEBUG] 2020-02-28 13:50:58.139 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.139 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:50:58.139 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 13:50:58.139 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:50:58.139 [http-nio-8080-exec-76] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:50:58.141 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 13:50:58.142 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.149 [http-nio-8080-exec-76] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:50:58.149 [http-nio-8080-exec-76] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:50:58.150 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:50:58.150 [http-nio-8080-exec-76] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 13:50:58.151 [http-nio-8080-exec-76] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 13:50:58.152 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.152 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 13:50:58.153 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 13:50:58.153 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 13:50:58.153 [http-nio-8080-exec-76] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 13:50:58.153 [http-nio-8080-exec-76] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:50:58.153 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] PropertyBinder - Building property author
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:50:58.154 [http-nio-8080-exec-76] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:50:58.155 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.155 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:50:58.155 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 13:50:58.155 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:50:58.155 [http-nio-8080-exec-76] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:50:58.155 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.155 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:50:58.155 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 13:50:58.155 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:50:58.155 [http-nio-8080-exec-76] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:50:58.155 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.155 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:50:58.155 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 13:50:58.155 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:50:58.155 [http-nio-8080-exec-76] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:50:58.159 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.159 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:50:58.159 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 13:50:58.159 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:50:58.159 [http-nio-8080-exec-76] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:50:58.159 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.159 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:50:58.160 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 13:50:58.160 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:50:58.160 [http-nio-8080-exec-76] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:50:58.160 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:50:58.160 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.161 [http-nio-8080-exec-76] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:50:58.161 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.161 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:50:58.161 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 13:50:58.161 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:50:58.162 [http-nio-8080-exec-76] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:50:58.162 [http-nio-8080-exec-76] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:50:58.162 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:50:58.162 [http-nio-8080-exec-76] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 13:50:58.162 [http-nio-8080-exec-76] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 13:50:58.163 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.164 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 13:50:58.164 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 13:50:58.164 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 13:50:58.164 [http-nio-8080-exec-76] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 13:50:58.164 [http-nio-8080-exec-76] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:50:58.165 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.165 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:50:58.165 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 13:50:58.165 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:50:58.165 [http-nio-8080-exec-76] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:50:58.165 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.165 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:50:58.165 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 13:50:58.167 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:50:58.169 [http-nio-8080-exec-76] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:50:58.169 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.169 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.169 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.169 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:50:58.169 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:50:58.169 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:50:58.170 [http-nio-8080-exec-76] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:50:58.170 [http-nio-8080-exec-76] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:50:58.170 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.170 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:50:58.170 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 13:50:58.170 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:50:58.170 [http-nio-8080-exec-76] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:50:58.170 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.170 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:50:58.170 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 13:50:58.170 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:50:58.170 [http-nio-8080-exec-76] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:50:58.170 [http-nio-8080-exec-76] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:50:58.170 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:50:58.170 [http-nio-8080-exec-76] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 13:50:58.170 [http-nio-8080-exec-76] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 13:50:58.171 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.171 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 13:50:58.172 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 13:50:58.172 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 13:50:58.174 [http-nio-8080-exec-76] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 13:50:58.174 [http-nio-8080-exec-76] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:50:58.174 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.174 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:50:58.174 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 13:50:58.174 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:50:58.174 [http-nio-8080-exec-76] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:50:58.175 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.175 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:50:58.175 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 13:50:58.175 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:50:58.175 [http-nio-8080-exec-76] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:50:58.176 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.176 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.176 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.176 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:50:58.176 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:50:58.176 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:50:58.176 [http-nio-8080-exec-76] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:50:58.176 [http-nio-8080-exec-76] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 13:50:58.176 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.176 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 13:50:58.176 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 13:50:58.176 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 13:50:58.177 [http-nio-8080-exec-76] PropertyBinder - Building property director
[DEBUG] 2020-02-28 13:50:58.177 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.177 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:50:58.177 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 13:50:58.177 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:50:58.177 [http-nio-8080-exec-76] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:50:58.178 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.178 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 13:50:58.178 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 13:50:58.178 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 13:50:58.178 [http-nio-8080-exec-76] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 13:50:58.179 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.179 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.179 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.179 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:50:58.179 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:50:58.179 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:50:58.179 [http-nio-8080-exec-76] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:50:58.179 [http-nio-8080-exec-76] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 13:50:58.179 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.180 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:50:58.180 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 13:50:58.180 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:50:58.181 [http-nio-8080-exec-76] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:50:58.182 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.182 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:50:58.182 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 13:50:58.182 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:50:58.182 [http-nio-8080-exec-76] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:50:58.182 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.182 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:50:58.182 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 13:50:58.182 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:50:58.182 [http-nio-8080-exec-76] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:50:58.182 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.182 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:50:58.182 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 13:50:58.182 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:50:58.182 [http-nio-8080-exec-76] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:50:58.183 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.183 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:50:58.183 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 13:50:58.183 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:50:58.183 [http-nio-8080-exec-76] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:50:58.183 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:50:58.183 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.183 [http-nio-8080-exec-76] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:50:58.183 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.183 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:50:58.183 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 13:50:58.184 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:50:58.184 [http-nio-8080-exec-76] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:50:58.184 [http-nio-8080-exec-76] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:50:58.184 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:50:58.184 [http-nio-8080-exec-76] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 13:50:58.184 [http-nio-8080-exec-76] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 13:50:58.185 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.186 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 13:50:58.186 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 13:50:58.186 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 13:50:58.186 [http-nio-8080-exec-76] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 13:50:58.186 [http-nio-8080-exec-76] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:50:58.186 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] PropertyBinder - Building property category
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:50:58.187 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.188 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:50:58.188 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 13:50:58.188 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:50:58.188 [http-nio-8080-exec-76] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:50:58.188 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:50:58.188 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.188 [http-nio-8080-exec-76] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:50:58.188 [http-nio-8080-exec-76] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:50:58.188 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:50:58.188 [http-nio-8080-exec-76] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 13:50:58.188 [http-nio-8080-exec-76] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 13:50:58.189 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.190 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 13:50:58.190 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 13:50:58.190 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 13:50:58.190 [http-nio-8080-exec-76] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 13:50:58.190 [http-nio-8080-exec-76] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:50:58.190 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.190 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:50:58.190 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 13:50:58.195 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:50:58.196 [http-nio-8080-exec-76] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:50:58.196 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:50:58.196 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:50:58.196 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 13:50:58.196 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:50:58.200 [http-nio-8080-exec-76] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:50:58.200 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.201 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:50:58.201 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 13:50:58.201 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:50:58.201 [http-nio-8080-exec-76] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:50:58.201 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.201 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.201 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.201 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:50:58.201 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:50:58.201 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:50:58.202 [http-nio-8080-exec-76] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:50:58.203 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 13:50:58.203 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:50:58.204 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:50:58.205 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 13:50:58.205 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:50:58.205 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:50:58.205 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:50:58.205 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:50:58.205 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:50:58.205 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 13:50:58.205 [http-nio-8080-exec-76] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:50:58.219 [http-nio-8080-exec-76] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 13:50:58.220 [http-nio-8080-exec-76] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 13:50:58.220 [http-nio-8080-exec-76] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 13:50:58.220 [http-nio-8080-exec-76] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 13:50:58.220 [http-nio-8080-exec-76] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 13:50:58.220 [http-nio-8080-exec-76] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 13:50:58.220 [http-nio-8080-exec-76] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 13:50:58.220 [http-nio-8080-exec-76] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:50:58.220 [http-nio-8080-exec-76] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:50:58.222 [http-nio-8080-exec-76] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:50:58.222 [http-nio-8080-exec-76] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:50:58.222 [http-nio-8080-exec-76] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 13:50:58.222 [http-nio-8080-exec-76] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:50:58.222 [http-nio-8080-exec-76] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:50:58.222 [http-nio-8080-exec-76] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:50:58.222 [http-nio-8080-exec-76] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:50:58.222 [http-nio-8080-exec-76] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 13:50:58.222 [http-nio-8080-exec-76] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:50:58.222 [http-nio-8080-exec-76] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 13:50:58.223 [http-nio-8080-exec-76] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 13:50:58.223 [http-nio-8080-exec-76] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 13:50:58.228 [http-nio-8080-exec-76] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:50:58.229 [http-nio-8080-exec-76] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:50:58.229 [http-nio-8080-exec-76] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 13:50:58.229 [http-nio-8080-exec-76] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 13:50:58.229 [http-nio-8080-exec-76] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 13:50:58.229 [http-nio-8080-exec-76] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:50:58.229 [http-nio-8080-exec-76] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:50:58.229 [http-nio-8080-exec-76] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 13:50:58.229 [http-nio-8080-exec-76] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 13:50:58.229 [http-nio-8080-exec-76] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 13:50:58.229 [http-nio-8080-exec-76] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:50:58.229 [http-nio-8080-exec-76] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:50:58.229 [http-nio-8080-exec-76] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 13:50:58.229 [http-nio-8080-exec-76] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 13:50:58.230 [http-nio-8080-exec-76] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 13:50:58.230 [http-nio-8080-exec-76] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:50:58.230 [http-nio-8080-exec-76] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:50:58.230 [http-nio-8080-exec-76] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:50:58.230 [http-nio-8080-exec-76] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:50:58.230 [http-nio-8080-exec-76] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 13:50:58.230 [http-nio-8080-exec-76] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:50:58.230 [http-nio-8080-exec-76] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:50:58.230 [http-nio-8080-exec-76] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:50:58.230 [http-nio-8080-exec-76] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 13:50:58.230 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:50:58.234 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:50:58.236 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:50:58.236 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:50:58.236 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:50:58.236 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:50:58.236 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:50:58.236 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:50:58.236 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:50:58.238 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:50:58.238 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:50:58.238 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:50:58.238 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:50:58.238 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:50:58.238 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:50:58.238 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:50:58.238 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:50:58.238 [http-nio-8080-exec-76] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:50:58.349 [http-nio-8080-exec-76] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 13:50:58.350 [http-nio-8080-exec-76] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Statistics: disabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 13:50:58.351 [http-nio-8080-exec-76] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 13:50:58.352 [http-nio-8080-exec-76] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 13:50:58.481 [http-nio-8080-exec-76] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 13:50:58.530 [http-nio-8080-exec-76] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 13:50:58.531 [http-nio-8080-exec-76] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@19905b5d, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 13:50:58.584 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:50:58.585 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:50:58.585 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:50:58.585 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:50:58.587 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:50:58.587 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:50:58.588 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:50:58.588 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:50:58.589 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:50:58.589 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:50:58.595 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:50:58.595 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:50:58.598 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:50:58.599 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:50:58.604 [http-nio-8080-exec-76] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 13:50:58.605 [http-nio-8080-exec-76] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 13:50:58.605 [http-nio-8080-exec-76] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14ada882] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@757a3e4b]
[DEBUG] 2020-02-28 13:50:58.669 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:50:58.669 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:50:58.681 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:50:58.681 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:50:58.940 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:50:58.940 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:50:58.941 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:50:58.941 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:50:58.957 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:50:58.957 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:50:58.958 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:50:58.958 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:50:58.996 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:50:58.996 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:50:58.996 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:50:58.996 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:50:59.017 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:50:59.017 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:50:59.017 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:50:59.017 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:50:59.220 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:50:59.220 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:50:59.235 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:50:59.235 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:50:59.332 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:50:59.334 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:50:59.336 [http-nio-8080-exec-76] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:50:59.336 [http-nio-8080-exec-76] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:50:59.392 [http-nio-8080-exec-76] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:50:59.395 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 13:50:59.395 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 13:50:59.395 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 13:50:59.395 [http-nio-8080-exec-76] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 13:50:59.395 [http-nio-8080-exec-76] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:50:59.395 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 13:50:59.395 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 13:50:59.395 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 13:50:59.395 [http-nio-8080-exec-76] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 13:50:59.395 [http-nio-8080-exec-76] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:50:59.395 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 13:50:59.395 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 13:50:59.395 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 13:50:59.396 [http-nio-8080-exec-76] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 13:50:59.399 [http-nio-8080-exec-76] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:50:59.399 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:50:59.404 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:50:59.404 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:50:59.404 [http-nio-8080-exec-76] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 13:50:59.404 [http-nio-8080-exec-76] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:50:59.404 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:50:59.404 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:50:59.404 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:50:59.404 [http-nio-8080-exec-76] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 13:50:59.405 [http-nio-8080-exec-76] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:50:59.405 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 13:50:59.405 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:50:59.406 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:50:59.406 [http-nio-8080-exec-76] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 13:50:59.406 [http-nio-8080-exec-76] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:50:59.406 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 13:50:59.406 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:50:59.406 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:50:59.406 [http-nio-8080-exec-76] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 13:50:59.406 [http-nio-8080-exec-76] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:50:59.406 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 13:50:59.406 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 13:50:59.406 [http-nio-8080-exec-76] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 13:50:59.406 [http-nio-8080-exec-76] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 13:50:59.411 [http-nio-8080-exec-76] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:50:59.411 [http-nio-8080-exec-76] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 13:50:59.411 [http-nio-8080-exec-76] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 13:50:59.411 [http-nio-8080-exec-76] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:50:59.411 [http-nio-8080-exec-76] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 13:50:59.411 [http-nio-8080-exec-76] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 13:50:59.411 [http-nio-8080-exec-76] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:50:59.450 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c5b355e]
[DEBUG] 2020-02-28 13:50:59.451 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:50:59.452 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.452 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:50:59.456 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a60f87d]
[DEBUG] 2020-02-28 13:50:59.460 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d02d18a]
[DEBUG] 2020-02-28 13:50:59.461 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:50:59.461 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:50:59.461 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:50:59.461 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:50:59.461 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@765fa35b]
[DEBUG] 2020-02-28 13:50:59.461 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21d0d232]
[DEBUG] 2020-02-28 13:50:59.462 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:50:59.462 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:50:59.462 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:50:59.462 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:50:59.462 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.462 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:50:59.462 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a2c4cb6]
[DEBUG] 2020-02-28 13:50:59.464 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:50:59.464 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:50:59.464 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:50:59.464 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:50:59.464 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:50:59.464 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55e8958d]
[DEBUG] 2020-02-28 13:50:59.464 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@240dfa6]
[DEBUG] 2020-02-28 13:50:59.464 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:50:59.464 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:50:59.464 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:50:59.464 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:50:59.464 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:50:59.464 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:50:59.464 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:50:59.464 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:50:59.465 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1fd534cb]
[DEBUG] 2020-02-28 13:50:59.465 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b6c7578]
[DEBUG] 2020-02-28 13:50:59.466 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:50:59.466 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:50:59.466 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:50:59.466 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:50:59.466 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:50:59.467 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:50:59.467 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2653909e]
[DEBUG] 2020-02-28 13:50:59.467 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@814255e]
[DEBUG] 2020-02-28 13:50:59.467 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:50:59.467 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:50:59.467 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:50:59.468 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@d0bda22]
[DEBUG] 2020-02-28 13:50:59.471 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:50:59.471 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:50:59.471 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.489 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.497 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c37df86]
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@323323b0]
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bd32406]
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@199a0315]
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45b58c20]
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e301985]
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:50:59.499 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:50:59.500 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:50:59.500 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:50:59.500 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:50:59.500 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@258ac767]
[DEBUG] 2020-02-28 13:50:59.500 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c378b7a]
[DEBUG] 2020-02-28 13:50:59.500 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:50:59.500 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:50:59.500 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:50:59.500 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:50:59.500 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:50:59.500 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:50:59.500 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:50:59.500 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:50:59.500 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22255f48]
[DEBUG] 2020-02-28 13:50:59.500 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@411dfb26]
[DEBUG] 2020-02-28 13:50:59.501 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:50:59.501 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:50:59.501 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:50:59.501 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:50:59.501 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:50:59.501 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:50:59.501 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a9454e8]
[DEBUG] 2020-02-28 13:50:59.502 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@647e5257]
[DEBUG] 2020-02-28 13:50:59.502 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:50:59.502 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:50:59.502 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:50:59.502 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2b822800]
[DEBUG] 2020-02-28 13:50:59.502 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:50:59.502 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:50:59.503 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.503 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.505 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:50:59.505 [http-nio-8080-exec-76] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:50:59.523 [http-nio-8080-exec-76] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:50:59.524 [http-nio-8080-exec-76] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:50:59.524 [http-nio-8080-exec-76] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:50:59.524 [http-nio-8080-exec-76] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d2cac12]
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19115e0c]
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:50:59.525 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:50:59.526 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:50:59.526 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:50:59.526 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64d85ff9]
[DEBUG] 2020-02-28 13:50:59.526 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35cd8fbd]
[DEBUG] 2020-02-28 13:50:59.526 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:50:59.526 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:50:59.526 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:50:59.526 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:50:59.526 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:50:59.526 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:50:59.526 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@26bf5636]
[DEBUG] 2020-02-28 13:50:59.526 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b4c20c7]
[DEBUG] 2020-02-28 13:50:59.527 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:50:59.527 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:50:59.527 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:50:59.527 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:50:59.527 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:50:59.527 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:50:59.527 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78f6aff7]
[DEBUG] 2020-02-28 13:50:59.527 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4286f236]
[DEBUG] 2020-02-28 13:50:59.527 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:50:59.527 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:50:59.527 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:50:59.527 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5304f23d]
[DEBUG] 2020-02-28 13:50:59.527 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:50:59.527 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.527 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.529 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18ff0e62]
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@197cda9d]
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@707301da]
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77a9d2dd]
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:50:59.530 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:50:59.531 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@87e4687]
[DEBUG] 2020-02-28 13:50:59.531 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64806c04]
[DEBUG] 2020-02-28 13:50:59.535 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:50:59.535 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:50:59.535 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:50:59.535 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:50:59.535 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:50:59.535 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:50:59.535 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4fa3eaa1]
[DEBUG] 2020-02-28 13:50:59.535 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28a45f1d]
[DEBUG] 2020-02-28 13:50:59.535 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:50:59.535 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:50:59.535 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:50:59.535 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@af78fb2]
[DEBUG] 2020-02-28 13:50:59.535 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:50:59.535 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.536 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.536 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:50:59.536 [http-nio-8080-exec-76] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:50:59.536 [http-nio-8080-exec-76] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:50:59.536 [http-nio-8080-exec-76] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71ae526c]
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d442d21]
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d0104ac]
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13f8f9c0]
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f39f3bb]
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2921944f]
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c20c1a3]
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58c21f1e]
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@68569b96]
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.537 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47d714eb]
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f369a9]
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@668fe46e]
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4744cb96]
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fb25cf6]
[DEBUG] 2020-02-28 13:50:59.538 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1072816a]
[DEBUG] 2020-02-28 13:50:59.540 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:50:59.540 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:50:59.540 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:50:59.540 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:50:59.540 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:50:59.540 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:50:59.540 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:50:59.541 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:50:59.541 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9c7ab9e]
[DEBUG] 2020-02-28 13:50:59.541 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68bed94b]
[DEBUG] 2020-02-28 13:50:59.541 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:50:59.541 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:50:59.541 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:50:59.541 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@75767d46]
[DEBUG] 2020-02-28 13:50:59.541 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:50:59.541 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.541 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.541 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:50:59.541 [http-nio-8080-exec-76] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:50:59.541 [http-nio-8080-exec-76] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:50:59.541 [http-nio-8080-exec-76] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:50:59.542 [http-nio-8080-exec-76] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:50:59.542 [http-nio-8080-exec-76] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 13:50:59.542 [http-nio-8080-exec-76] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 13:50:59.542 [http-nio-8080-exec-76] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:50:59.542 [http-nio-8080-exec-76] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 13:50:59.542 [http-nio-8080-exec-76] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 13:50:59.542 [http-nio-8080-exec-76] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:50:59.543 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@452415b7]
[DEBUG] 2020-02-28 13:50:59.543 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.544 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:50:59.544 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:50:59.544 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d1432bb]
[DEBUG] 2020-02-28 13:50:59.544 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32eaa309]
[DEBUG] 2020-02-28 13:50:59.544 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:50:59.544 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.544 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.544 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.544 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:50:59.544 [http-nio-8080-exec-76] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:50:59.546 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5786814e]
[DEBUG] 2020-02-28 13:50:59.546 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.546 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:50:59.546 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:50:59.546 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@479f4772]
[DEBUG] 2020-02-28 13:50:59.546 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@200a4663]
[DEBUG] 2020-02-28 13:50:59.546 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:50:59.546 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.546 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.546 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.546 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:50:59.547 [http-nio-8080-exec-76] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:50:59.547 [http-nio-8080-exec-76] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:50:59.547 [http-nio-8080-exec-76] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43652fdd]
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.548 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@142e72ee]
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c94d790]
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d91be93]
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a4f06cd]
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34def175]
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1edc9829]
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e29c847]
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@35231796]
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:50:59.549 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.550 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.550 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:50:59.550 [http-nio-8080-exec-76] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:50:59.550 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f31f1d3]
[DEBUG] 2020-02-28 13:50:59.550 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:50:59.550 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:50:59.550 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.550 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:50:59.550 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:50:59.556 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:50:59.556 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:50:59.556 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:50:59.556 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.556 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:50:59.556 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b32f7b8]
[DEBUG] 2020-02-28 13:50:59.556 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:50:59.556 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:50:59.556 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:50:59.556 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:50:59.556 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:50:59.556 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a80d908]
[DEBUG] 2020-02-28 13:50:59.556 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a7aab16]
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46c91cd6]
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24137822]
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58a7ad31]
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@772a8f28]
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@234d4404]
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.557 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.558 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:50:59.558 [http-nio-8080-exec-76] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:50:59.558 [http-nio-8080-exec-76] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:50:59.558 [http-nio-8080-exec-76] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21027880]
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b0de00e]
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@753aa669]
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47ce1636]
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ae3054f]
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e1a838d]
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eb361c9]
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:50:59.562 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:50:59.563 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:50:59.563 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:50:59.563 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10ce89a]
[DEBUG] 2020-02-28 13:50:59.563 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14a46c5b]
[DEBUG] 2020-02-28 13:50:59.563 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:50:59.563 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:50:59.563 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:50:59.563 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@70771891]
[DEBUG] 2020-02-28 13:50:59.563 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:50:59.563 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.563 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d86c9c0]
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@120c8ec0]
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5caae406]
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b9ee9a]
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@609d63ac]
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16919bf1]
[DEBUG] 2020-02-28 13:50:59.565 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d10c7f1]
[DEBUG] 2020-02-28 13:50:59.566 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:50:59.566 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:50:59.566 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:50:59.566 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:50:59.566 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:50:59.566 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:50:59.566 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@444af8db]
[DEBUG] 2020-02-28 13:50:59.566 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ffe90ec]
[DEBUG] 2020-02-28 13:50:59.566 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:50:59.566 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:50:59.566 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:50:59.566 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@23282e6b]
[DEBUG] 2020-02-28 13:50:59.566 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:50:59.566 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.574 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.574 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:50:59.575 [http-nio-8080-exec-76] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:50:59.575 [http-nio-8080-exec-76] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:50:59.575 [http-nio-8080-exec-76] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:50:59.583 [http-nio-8080-exec-76] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62d3cfbe]
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4aeecc13]
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b5ad176]
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6788439c]
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@136b752f]
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e77d755]
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:50:59.585 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.586 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.586 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:50:59.586 [http-nio-8080-exec-76] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:50:59.586 [http-nio-8080-exec-76] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:50:59.586 [http-nio-8080-exec-76] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:50:59.597 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ef5d90d]
[DEBUG] 2020-02-28 13:50:59.597 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e2cf57]
[DEBUG] 2020-02-28 13:50:59.597 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:50:59.597 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:50:59.597 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.597 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:50:59.597 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:50:59.597 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:50:59.597 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:50:59.597 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:50:59.597 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.597 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:50:59.598 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:50:59.598 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:50:59.598 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.601 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.601 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c40d029]
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7296f7a7]
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57d84940]
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12b6a7d3]
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.602 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51cec06]
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22335b49]
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6305bdc8]
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bd44bf2]
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18e5703e]
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@feb9a1a]
[DEBUG] 2020-02-28 13:50:59.603 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7699dbce]
[DEBUG] 2020-02-28 13:50:59.605 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:50:59.605 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:50:59.606 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:50:59.606 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:50:59.606 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:50:59.606 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:50:59.606 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:50:59.606 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:50:59.608 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@454e31a3]
[DEBUG] 2020-02-28 13:50:59.608 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@701563a8]
[DEBUG] 2020-02-28 13:50:59.608 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:50:59.608 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23fd1cfa]
[DEBUG] 2020-02-28 13:50:59.608 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b02e4e0]
[DEBUG] 2020-02-28 13:50:59.608 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:50:59.608 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:50:59.608 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:50:59.608 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2f750d0a]
[DEBUG] 2020-02-28 13:50:59.608 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:50:59.608 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:50:59.608 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.609 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.610 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:50:59.610 [http-nio-8080-exec-76] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 13:50:59.610 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71bc1ba7]
[DEBUG] 2020-02-28 13:50:59.610 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71953fde]
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@359b6c93]
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6da8de31]
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:50:59.611 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e614ab9]
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4db28b16]
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66409dc7]
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32a02734]
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d9c8e49]
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@542f5ed7]
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36e35f30]
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5c9475f]
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.612 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.617 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:50:59.617 [http-nio-8080-exec-76] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 13:50:59.617 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42394dc1]
[DEBUG] 2020-02-28 13:50:59.617 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e0f8069]
[DEBUG] 2020-02-28 13:50:59.618 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36c6d277]
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24d8100e]
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.619 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b5b6a3c]
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fe75f39]
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48daa941]
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d7139f4]
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31fe6399]
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d0dca3]
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 13:50:59.620 [http-nio-8080-exec-76] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 13:50:59.683 [http-nio-8080-exec-76] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 13:50:59.683 [http-nio-8080-exec-76] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 13:50:59.683 [http-nio-8080-exec-76] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 13:50:59.688 [http-nio-8080-exec-76] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 13:50:59.688 [http-nio-8080-exec-76] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 13:50:59.689 [http-nio-8080-exec-76] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 13:50:59.689 [http-nio-8080-exec-76] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 13:50:59.692 [http-nio-8080-exec-76] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7cc1d044
[DEBUG] 2020-02-28 13:50:59.694 [http-nio-8080-exec-76] SessionFactoryRegistry - Registering SessionFactory: 084bb79e-090b-4657-ae37-634e1883e295 (<unnamed>)
[DEBUG] 2020-02-28 13:50:59.694 [http-nio-8080-exec-76] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 13:50:59.786 [http-nio-8080-exec-76] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 13:50:59.816 [http-nio-8080-exec-76] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:50:59.835 [http-nio-8080-exec-76] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6aa0fef7
[DEBUG] 2020-02-28 13:50:59.853 [http-nio-8080-exec-76] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:50:59.860 [http-nio-8080-exec-76] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:50:59.864 [http-nio-8080-exec-76] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 13:50:59.886 [http-nio-8080-exec-76] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 13:50:59.902 [http-nio-8080-exec-76] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 13:50:59.903 [http-nio-8080-exec-76] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 13:50:59.904 [http-nio-8080-exec-76] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 13:50:59.904 [http-nio-8080-exec-76] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 13:50:59.914 [http-nio-8080-exec-76] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 13:50:59.915 [http-nio-8080-exec-76] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 13:50:59.915 [http-nio-8080-exec-76] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 13:50:59.915 [http-nio-8080-exec-76] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:50:59.921 [http-nio-8080-exec-76] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:50:59.921 [http-nio-8080-exec-76] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:50:59.921 [http-nio-8080-exec-76] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:50:59.939 [http-nio-8080-exec-76] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:51:00.103 [http-nio-8080-exec-76] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:51:00.105 [http-nio-8080-exec-76] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:51:00.119 [http-nio-8080-exec-76] Loader - Result set row: 1
[DEBUG] 2020-02-28 13:51:00.119 [http-nio-8080-exec-76] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:51:00.121 [http-nio-8080-exec-76] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:51:00.121 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:51:00.121 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.121 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:51:00.121 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.121 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:51:00.121 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.121 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:51:00.121 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.121 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:51:00.121 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.121 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:51:00.121 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.128 [http-nio-8080-exec-76] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:51:00.303 [http-nio-8080-exec-76] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:51:00.304 [http-nio-8080-exec-76] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:51:00.305 [http-nio-8080-exec-76] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:51:00.317 [http-nio-8080-exec-76] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:51:00.317 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:51:00.317 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.317 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:51:00.317 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.317 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:51:00.317 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.317 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:51:00.317 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.317 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:51:00.317 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@2beb42d
[DEBUG] 2020-02-28 13:51:00.320 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.321 [http-nio-8080-exec-76] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:51:00.321 [http-nio-8080-exec-76] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:51:00.321 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:51:00.321 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.321 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:51:00.321 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.321 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:51:00.321 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.321 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:51:00.321 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.322 [http-nio-8080-exec-76] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:51:00.322 [http-nio-8080-exec-76] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:51:00.329 [http-nio-8080-exec-76] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:51:00.330 [http-nio-8080-exec-76] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:51:00.330 [http-nio-8080-exec-76] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:51:00.331 [http-nio-8080-exec-76] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:51:00.331 [http-nio-8080-exec-76] Loader - Done entity load
[DEBUG] 2020-02-28 13:51:00.331 [http-nio-8080-exec-76] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:51:00.331 [http-nio-8080-exec-76] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:51:00.332 [http-nio-8080-exec-76] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:51:00.332 [http-nio-8080-exec-76] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:51:00.332 [http-nio-8080-exec-76] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:51:00.332 [http-nio-8080-exec-76] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:51:00.333 [http-nio-8080-exec-76] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:51:00.333 [http-nio-8080-exec-76] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:51:00.333 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 13:51:00.333 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.333 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:51:00.333 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.333 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 13:51:00.333 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.333 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 13:51:00.333 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.333 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:51:00.333 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.333 [http-nio-8080-exec-76] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:51:00.333 [http-nio-8080-exec-76] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:51:00.333 [http-nio-8080-exec-76] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:51:00.336 [http-nio-8080-exec-76] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:54:18.848 [http-nio-8080-exec-94] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 13:54:18.850 [http-nio-8080-exec-94] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 13:54:18.853 [http-nio-8080-exec-94] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 13:54:18.941 [http-nio-8080-exec-94] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 13:54:18.944 [http-nio-8080-exec-94] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 13:54:19.061 [http-nio-8080-exec-94] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 13:54:19.061 [http-nio-8080-exec-94] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 13:54:19.063 [http-nio-8080-exec-94] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 13:54:19.291 [http-nio-8080-exec-94] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 13:54:19.315 [http-nio-8080-exec-94] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 13:54:19.316 [http-nio-8080-exec-94] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 13:54:19.337 [http-nio-8080-exec-94] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 13:54:19.363 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@349b7e0d
[DEBUG] 2020-02-28 13:54:19.363 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@349b7e0d
[DEBUG] 2020-02-28 13:54:19.363 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@349b7e0d
[DEBUG] 2020-02-28 13:54:19.363 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@504cdd5e
[DEBUG] 2020-02-28 13:54:19.363 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@232eef1d
[DEBUG] 2020-02-28 13:54:19.364 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@45b74693
[DEBUG] 2020-02-28 13:54:19.364 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@65b44d98
[DEBUG] 2020-02-28 13:54:19.364 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@65b44d98
[DEBUG] 2020-02-28 13:54:19.364 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65b44d98
[DEBUG] 2020-02-28 13:54:19.366 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@644698c0
[DEBUG] 2020-02-28 13:54:19.366 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@644698c0
[DEBUG] 2020-02-28 13:54:19.366 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@644698c0
[DEBUG] 2020-02-28 13:54:19.366 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@37bc309d
[DEBUG] 2020-02-28 13:54:19.367 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@37bc309d
[DEBUG] 2020-02-28 13:54:19.367 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@37bc309d
[DEBUG] 2020-02-28 13:54:19.367 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4f56969c
[DEBUG] 2020-02-28 13:54:19.367 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4f56969c
[DEBUG] 2020-02-28 13:54:19.367 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4f56969c
[DEBUG] 2020-02-28 13:54:19.368 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6237d1e9
[DEBUG] 2020-02-28 13:54:19.368 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6237d1e9
[DEBUG] 2020-02-28 13:54:19.368 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6237d1e9
[DEBUG] 2020-02-28 13:54:19.369 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@646d3d72
[DEBUG] 2020-02-28 13:54:19.369 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@646d3d72
[DEBUG] 2020-02-28 13:54:19.369 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@646d3d72
[DEBUG] 2020-02-28 13:54:19.369 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5e62fef8
[DEBUG] 2020-02-28 13:54:19.369 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5e62fef8
[DEBUG] 2020-02-28 13:54:19.369 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5e62fef8
[DEBUG] 2020-02-28 13:54:19.370 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4b08e328
[DEBUG] 2020-02-28 13:54:19.370 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4b08e328
[DEBUG] 2020-02-28 13:54:19.370 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2fd5128d
[DEBUG] 2020-02-28 13:54:19.371 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2fd5128d
[DEBUG] 2020-02-28 13:54:19.371 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4410b5a0
[DEBUG] 2020-02-28 13:54:19.372 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4410b5a0
[DEBUG] 2020-02-28 13:54:19.372 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57d20b94
[DEBUG] 2020-02-28 13:54:19.373 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@784b879a
[DEBUG] 2020-02-28 13:54:19.374 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@32296210
[DEBUG] 2020-02-28 13:54:19.374 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32296210
[DEBUG] 2020-02-28 13:54:19.374 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@398ea843
[DEBUG] 2020-02-28 13:54:19.374 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@398ea843
[DEBUG] 2020-02-28 13:54:19.376 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5e8f5175
[DEBUG] 2020-02-28 13:54:19.376 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e8f5175
[DEBUG] 2020-02-28 13:54:19.376 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7f8d1131
[DEBUG] 2020-02-28 13:54:19.376 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7f8d1131
[DEBUG] 2020-02-28 13:54:19.377 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5d95103
[DEBUG] 2020-02-28 13:54:19.377 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5d95103
[DEBUG] 2020-02-28 13:54:19.377 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1db57e75
[DEBUG] 2020-02-28 13:54:19.377 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1db57e75
[DEBUG] 2020-02-28 13:54:19.378 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b4f0655
[DEBUG] 2020-02-28 13:54:19.378 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b4f0655
[DEBUG] 2020-02-28 13:54:19.379 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18cf9a96
[DEBUG] 2020-02-28 13:54:19.379 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18cf9a96
[DEBUG] 2020-02-28 13:54:19.380 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30320d06
[DEBUG] 2020-02-28 13:54:19.380 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30320d06
[DEBUG] 2020-02-28 13:54:19.382 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3e558d53
[DEBUG] 2020-02-28 13:54:19.382 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3e558d53
[DEBUG] 2020-02-28 13:54:19.383 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@77a8c486
[DEBUG] 2020-02-28 13:54:19.383 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77a8c486
[DEBUG] 2020-02-28 13:54:19.384 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@29f03708
[DEBUG] 2020-02-28 13:54:19.384 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@29f03708
[DEBUG] 2020-02-28 13:54:19.384 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@29f03708
[DEBUG] 2020-02-28 13:54:19.386 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@76490a2b
[DEBUG] 2020-02-28 13:54:19.395 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@349bbee1
[DEBUG] 2020-02-28 13:54:19.395 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@349bbee1
[DEBUG] 2020-02-28 13:54:19.395 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@349bbee1
[DEBUG] 2020-02-28 13:54:19.396 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6242e9dc
[DEBUG] 2020-02-28 13:54:19.396 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4773db5f
[DEBUG] 2020-02-28 13:54:19.396 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4773db5f
[DEBUG] 2020-02-28 13:54:19.397 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@42da3927
[DEBUG] 2020-02-28 13:54:19.397 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@42da3927
[DEBUG] 2020-02-28 13:54:19.398 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4215af8b
[DEBUG] 2020-02-28 13:54:19.398 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4215af8b
[DEBUG] 2020-02-28 13:54:19.398 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3cfbdee1
[DEBUG] 2020-02-28 13:54:19.398 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3cfbdee1
[DEBUG] 2020-02-28 13:54:19.398 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@680a234f
[DEBUG] 2020-02-28 13:54:19.399 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@680a234f
[DEBUG] 2020-02-28 13:54:19.399 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@297d9847
[DEBUG] 2020-02-28 13:54:19.399 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7f8fa6b3
[DEBUG] 2020-02-28 13:54:19.399 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7f8fa6b3
[DEBUG] 2020-02-28 13:54:19.399 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7f8fa6b3
[DEBUG] 2020-02-28 13:54:19.400 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b011efb
[DEBUG] 2020-02-28 13:54:19.400 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b011efb
[DEBUG] 2020-02-28 13:54:19.400 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b011efb
[DEBUG] 2020-02-28 13:54:19.401 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@671d5f2e
[DEBUG] 2020-02-28 13:54:19.401 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6bba25f8
[DEBUG] 2020-02-28 13:54:19.401 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4a0732e6
[DEBUG] 2020-02-28 13:54:19.401 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4a0732e6
[DEBUG] 2020-02-28 13:54:19.401 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4a0732e6
[DEBUG] 2020-02-28 13:54:19.402 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3aeba953
[DEBUG] 2020-02-28 13:54:19.402 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3aeba953
[DEBUG] 2020-02-28 13:54:19.402 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3aeba953
[DEBUG] 2020-02-28 13:54:19.402 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1b62d4c9
[DEBUG] 2020-02-28 13:54:19.402 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1a657761
[DEBUG] 2020-02-28 13:54:19.403 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@29af1081
[DEBUG] 2020-02-28 13:54:19.403 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29af1081
[DEBUG] 2020-02-28 13:54:19.403 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@12d7b3d7
[DEBUG] 2020-02-28 13:54:19.405 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@386a5517
[DEBUG] 2020-02-28 13:54:19.405 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@386a5517
[DEBUG] 2020-02-28 13:54:19.407 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7fa4d3ba
[DEBUG] 2020-02-28 13:54:19.407 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7fa4d3ba
[DEBUG] 2020-02-28 13:54:19.407 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@af5d29b
[DEBUG] 2020-02-28 13:54:19.407 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@143c8853
[DEBUG] 2020-02-28 13:54:19.408 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@35963ffe
[DEBUG] 2020-02-28 13:54:19.410 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@41f191bb
[DEBUG] 2020-02-28 13:54:19.410 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@41f191bb
[DEBUG] 2020-02-28 13:54:19.410 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@15face89
[DEBUG] 2020-02-28 13:54:19.410 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@360b8c90
[DEBUG] 2020-02-28 13:54:19.410 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@dce9ee7
[DEBUG] 2020-02-28 13:54:19.410 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a01a75c
[DEBUG] 2020-02-28 13:54:19.410 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@494cbe13
[DEBUG] 2020-02-28 13:54:19.410 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2349d4a6
[DEBUG] 2020-02-28 13:54:19.410 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a094f8e
[DEBUG] 2020-02-28 13:54:19.410 [http-nio-8080-exec-94] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5db538d4
[DEBUG] 2020-02-28 13:54:19.443 [http-nio-8080-exec-94] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 13:54:19.443 [http-nio-8080-exec-94] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 13:54:19.443 [http-nio-8080-exec-94] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:54:19.444 [http-nio-8080-exec-94] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:54:19.444 [http-nio-8080-exec-94] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 13:54:19.444 [http-nio-8080-exec-94] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 13:54:19.446 [http-nio-8080-exec-94] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 13:54:19.448 [http-nio-8080-exec-94] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:54:19.449 [http-nio-8080-exec-94] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 13:54:19.450 [http-nio-8080-exec-94] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 13:54:19.451 [http-nio-8080-exec-94] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 13:54:19.451 [http-nio-8080-exec-94] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 13:54:19.451 [http-nio-8080-exec-94] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:54:19.453 [http-nio-8080-exec-94] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 13:54:19.459 [http-nio-8080-exec-94] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 13:54:19.459 [http-nio-8080-exec-94] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 13:54:19.459 [http-nio-8080-exec-94] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 13:54:19.607 [http-nio-8080-exec-94] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 13:54:20.070 [http-nio-8080-exec-94] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:54:20.070 [http-nio-8080-exec-94] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:54:20.070 [http-nio-8080-exec-94] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 13:54:20.093 [http-nio-8080-exec-94] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 13:54:20.108 [http-nio-8080-exec-94] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 13:54:20.132 [http-nio-8080-exec-94] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 13:54:20.171 [http-nio-8080-exec-94] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 13:54:20.176 [http-nio-8080-exec-94] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@24bbc9d5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1d307108]
[DEBUG] 2020-02-28 13:54:20.217 [http-nio-8080-exec-94] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:54:20.247 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:54:20.253 [http-nio-8080-exec-94] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 13:54:20.260 [http-nio-8080-exec-94] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 13:54:20.294 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.297 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 13:54:20.299 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 13:54:20.302 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 13:54:20.304 [http-nio-8080-exec-94] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 13:54:20.308 [http-nio-8080-exec-94] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:54:20.310 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.310 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:54:20.311 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 13:54:20.311 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:54:20.311 [http-nio-8080-exec-94] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:54:20.311 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.312 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 13:54:20.312 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 13:54:20.312 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 13:54:20.312 [http-nio-8080-exec-94] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 13:54:20.313 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:54:20.314 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:54:20.314 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 13:54:20.314 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:54:20.314 [http-nio-8080-exec-94] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:54:20.314 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.314 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:54:20.314 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 13:54:20.314 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:54:20.314 [http-nio-8080-exec-94] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:54:20.315 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:54:20.316 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.317 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.324 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.325 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.325 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:54:20.325 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:54:20.325 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:54:20.326 [http-nio-8080-exec-94] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:54:20.328 [http-nio-8080-exec-94] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 13:54:20.328 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:54:20.329 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.329 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.329 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.329 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.329 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:54:20.329 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:54:20.329 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:54:20.329 [http-nio-8080-exec-94] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:54:20.329 [http-nio-8080-exec-94] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:54:20.330 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.330 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:54:20.330 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 13:54:20.330 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:54:20.330 [http-nio-8080-exec-94] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:54:20.330 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.330 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 13:54:20.330 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 13:54:20.330 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 13:54:20.330 [http-nio-8080-exec-94] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 13:54:20.330 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.330 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:54:20.331 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 13:54:20.331 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] PropertyBinder - Building property password
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.332 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:54:20.333 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:54:20.333 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:54:20.333 [http-nio-8080-exec-94] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:54:20.333 [http-nio-8080-exec-94] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 13:54:20.334 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:54:20.334 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.334 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.334 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.334 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.334 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:54:20.334 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:54:20.335 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:54:20.335 [http-nio-8080-exec-94] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:54:20.335 [http-nio-8080-exec-94] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 13:54:20.335 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.335 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:54:20.335 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 13:54:20.335 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:54:20.335 [http-nio-8080-exec-94] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:54:20.335 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 13:54:20.335 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 13:54:20.335 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 13:54:20.336 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 13:54:20.337 [http-nio-8080-exec-94] PropertyBinder - Building property username
[DEBUG] 2020-02-28 13:54:20.338 [http-nio-8080-exec-94] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:54:20.339 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:54:20.339 [http-nio-8080-exec-94] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 13:54:20.339 [http-nio-8080-exec-94] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 13:54:20.342 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.343 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 13:54:20.343 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 13:54:20.343 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 13:54:20.343 [http-nio-8080-exec-94] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 13:54:20.343 [http-nio-8080-exec-94] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:54:20.343 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.343 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:54:20.343 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 13:54:20.343 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:54:20.343 [http-nio-8080-exec-94] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:54:20.352 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.352 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 13:54:20.352 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 13:54:20.352 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 13:54:20.352 [http-nio-8080-exec-94] PropertyBinder - Building property name
[DEBUG] 2020-02-28 13:54:20.352 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.352 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:54:20.352 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 13:54:20.352 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:54:20.352 [http-nio-8080-exec-94] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:54:20.353 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 13:54:20.354 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.356 [http-nio-8080-exec-94] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:54:20.357 [http-nio-8080-exec-94] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:54:20.358 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:54:20.358 [http-nio-8080-exec-94] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 13:54:20.358 [http-nio-8080-exec-94] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 13:54:20.359 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.359 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 13:54:20.359 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 13:54:20.359 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 13:54:20.359 [http-nio-8080-exec-94] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 13:54:20.359 [http-nio-8080-exec-94] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:54:20.359 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.359 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 13:54:20.359 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 13:54:20.359 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 13:54:20.359 [http-nio-8080-exec-94] PropertyBinder - Building property author
[DEBUG] 2020-02-28 13:54:20.359 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.360 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:54:20.361 [http-nio-8080-exec-94] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:54:20.362 [http-nio-8080-exec-94] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:54:20.362 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:54:20.362 [http-nio-8080-exec-94] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 13:54:20.362 [http-nio-8080-exec-94] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 13:54:20.362 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.362 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 13:54:20.363 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 13:54:20.363 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 13:54:20.363 [http-nio-8080-exec-94] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 13:54:20.363 [http-nio-8080-exec-94] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:54:20.363 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.363 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:54:20.363 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 13:54:20.363 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:54:20.363 [http-nio-8080-exec-94] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:54:20.363 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.363 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:54:20.363 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 13:54:20.363 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:54:20.364 [http-nio-8080-exec-94] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:54:20.364 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.364 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.364 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.364 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:54:20.364 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:54:20.364 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:54:20.365 [http-nio-8080-exec-94] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:54:20.365 [http-nio-8080-exec-94] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:54:20.365 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.365 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:54:20.365 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 13:54:20.365 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:54:20.365 [http-nio-8080-exec-94] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:54:20.365 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.365 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:54:20.365 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 13:54:20.365 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:54:20.365 [http-nio-8080-exec-94] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:54:20.366 [http-nio-8080-exec-94] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:54:20.366 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:54:20.366 [http-nio-8080-exec-94] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 13:54:20.366 [http-nio-8080-exec-94] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 13:54:20.367 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.367 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 13:54:20.367 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 13:54:20.367 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 13:54:20.367 [http-nio-8080-exec-94] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 13:54:20.367 [http-nio-8080-exec-94] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:54:20.367 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 13:54:20.368 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] PropertyBinder - Building property director
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:54:20.369 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:54:20.370 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.371 [http-nio-8080-exec-94] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:54:20.371 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.371 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:54:20.371 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 13:54:20.371 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:54:20.371 [http-nio-8080-exec-94] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:54:20.371 [http-nio-8080-exec-94] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:54:20.371 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:54:20.371 [http-nio-8080-exec-94] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 13:54:20.371 [http-nio-8080-exec-94] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 13:54:20.371 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] PropertyBinder - Building property category
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:54:20.372 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 13:54:20.373 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:54:20.373 [http-nio-8080-exec-94] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:54:20.373 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.373 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:54:20.373 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 13:54:20.373 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:54:20.373 [http-nio-8080-exec-94] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:54:20.373 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:54:20.373 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.373 [http-nio-8080-exec-94] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:54:20.373 [http-nio-8080-exec-94] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:54:20.374 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:54:20.374 [http-nio-8080-exec-94] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 13:54:20.374 [http-nio-8080-exec-94] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 13:54:20.375 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.375 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:54:20.376 [http-nio-8080-exec-94] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:54:20.377 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.377 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.377 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.377 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:54:20.377 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:54:20.377 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:54:20.377 [http-nio-8080-exec-94] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:54:20.377 [http-nio-8080-exec-94] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:54:20.377 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.377 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:54:20.378 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 13:54:20.378 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:54:20.378 [http-nio-8080-exec-94] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:54:20.378 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.378 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:54:20.378 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 13:54:20.378 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:54:20.378 [http-nio-8080-exec-94] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:54:20.385 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.385 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 13:54:20.386 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 13:54:20.386 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 13:54:20.386 [http-nio-8080-exec-94] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 13:54:20.386 [http-nio-8080-exec-94] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:54:20.386 [http-nio-8080-exec-94] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:54:20.386 [http-nio-8080-exec-94] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 13:54:20.386 [http-nio-8080-exec-94] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:54:20.386 [http-nio-8080-exec-94] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:54:20.388 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:54:20.389 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 13:54:20.389 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 13:54:20.389 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:54:20.389 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:54:20.389 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:54:20.389 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:54:20.389 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 13:54:20.389 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:54:20.389 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:54:20.389 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:54:20.389 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:54:20.389 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:54:20.389 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 13:54:20.389 [http-nio-8080-exec-94] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:54:20.396 [http-nio-8080-exec-94] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 13:54:20.396 [http-nio-8080-exec-94] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 13:54:20.396 [http-nio-8080-exec-94] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 13:54:20.396 [http-nio-8080-exec-94] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 13:54:20.396 [http-nio-8080-exec-94] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 13:54:20.396 [http-nio-8080-exec-94] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 13:54:20.396 [http-nio-8080-exec-94] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 13:54:20.397 [http-nio-8080-exec-94] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:54:20.397 [http-nio-8080-exec-94] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:54:20.400 [http-nio-8080-exec-94] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:54:20.400 [http-nio-8080-exec-94] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:54:20.400 [http-nio-8080-exec-94] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 13:54:20.400 [http-nio-8080-exec-94] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:54:20.400 [http-nio-8080-exec-94] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:54:20.400 [http-nio-8080-exec-94] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:54:20.400 [http-nio-8080-exec-94] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:54:20.400 [http-nio-8080-exec-94] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 13:54:20.400 [http-nio-8080-exec-94] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:54:20.401 [http-nio-8080-exec-94] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 13:54:20.401 [http-nio-8080-exec-94] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 13:54:20.401 [http-nio-8080-exec-94] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 13:54:20.401 [http-nio-8080-exec-94] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:54:20.401 [http-nio-8080-exec-94] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:54:20.403 [http-nio-8080-exec-94] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 13:54:20.404 [http-nio-8080-exec-94] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 13:54:20.404 [http-nio-8080-exec-94] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 13:54:20.404 [http-nio-8080-exec-94] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:54:20.404 [http-nio-8080-exec-94] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 13:54:20.405 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:54:20.406 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:54:20.408 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:54:20.408 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:54:20.408 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:54:20.408 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:54:20.409 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:54:20.409 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:54:20.410 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:54:20.411 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:54:20.412 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:54:20.412 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:54:20.412 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:54:20.412 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:54:20.412 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:54:20.412 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:54:20.412 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:54:20.412 [http-nio-8080-exec-94] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:54:20.452 [http-nio-8080-exec-94] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 13:54:20.452 [http-nio-8080-exec-94] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 13:54:20.452 [http-nio-8080-exec-94] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Statistics: disabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 13:54:20.453 [http-nio-8080-exec-94] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 13:54:20.505 [http-nio-8080-exec-94] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 13:54:20.569 [http-nio-8080-exec-94] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 13:54:20.569 [http-nio-8080-exec-94] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@a50c5ec, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 13:54:20.606 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:54:20.607 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:54:20.608 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:54:20.608 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:54:20.611 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:54:20.611 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:54:20.611 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:54:20.612 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:54:20.612 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:54:20.612 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:54:20.612 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:54:20.612 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:54:20.613 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:54:20.613 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:54:20.619 [http-nio-8080-exec-94] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 13:54:20.620 [http-nio-8080-exec-94] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 13:54:20.624 [http-nio-8080-exec-94] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@24bbc9d5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3b22b81d]
[DEBUG] 2020-02-28 13:54:20.669 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:54:20.669 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:54:20.703 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:54:20.703 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:54:20.912 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:54:20.912 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:54:20.913 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:54:20.913 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:54:20.930 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:54:20.930 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:54:20.931 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:54:20.932 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:54:20.952 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:54:20.952 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:54:20.952 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:54:20.953 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:54:20.961 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:54:20.961 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:54:20.965 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:54:20.965 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:54:20.995 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:54:20.995 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:54:20.996 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:54:20.996 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:54:21.021 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:54:21.021 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:54:21.021 [http-nio-8080-exec-94] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:54:21.021 [http-nio-8080-exec-94] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:54:21.061 [http-nio-8080-exec-94] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:54:21.061 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 13:54:21.061 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 13:54:21.061 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 13:54:21.061 [http-nio-8080-exec-94] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 13:54:21.061 [http-nio-8080-exec-94] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:54:21.061 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 13:54:21.061 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 13:54:21.061 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 13:54:21.061 [http-nio-8080-exec-94] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 13:54:21.061 [http-nio-8080-exec-94] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:54:21.061 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 13:54:21.061 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 13:54:21.061 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 13:54:21.062 [http-nio-8080-exec-94] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 13:54:21.064 [http-nio-8080-exec-94] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 13:54:21.065 [http-nio-8080-exec-94] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:54:21.066 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 13:54:21.066 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 13:54:21.066 [http-nio-8080-exec-94] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 13:54:21.066 [http-nio-8080-exec-94] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 13:54:21.070 [http-nio-8080-exec-94] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:54:21.070 [http-nio-8080-exec-94] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 13:54:21.070 [http-nio-8080-exec-94] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 13:54:21.070 [http-nio-8080-exec-94] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:54:21.070 [http-nio-8080-exec-94] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 13:54:21.070 [http-nio-8080-exec-94] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 13:54:21.070 [http-nio-8080-exec-94] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:54:21.092 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11090787]
[DEBUG] 2020-02-28 13:54:21.093 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:54:21.093 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.094 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:54:21.097 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b574fa4]
[DEBUG] 2020-02-28 13:54:21.100 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d1736e1]
[DEBUG] 2020-02-28 13:54:21.101 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:54:21.101 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:54:21.101 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:54:21.101 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:54:21.101 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@142dd6e5]
[DEBUG] 2020-02-28 13:54:21.101 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f2e4489]
[DEBUG] 2020-02-28 13:54:21.101 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:54:21.101 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:54:21.101 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:54:21.101 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:54:21.101 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.103 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:54:21.103 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6009777b]
[DEBUG] 2020-02-28 13:54:21.105 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:54:21.105 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:54:21.105 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:54:21.105 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:54:21.105 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:54:21.105 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@258fca46]
[DEBUG] 2020-02-28 13:54:21.105 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28d4eac8]
[DEBUG] 2020-02-28 13:54:21.105 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:54:21.105 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:54:21.105 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:54:21.105 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:54:21.105 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:54:21.105 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:54:21.105 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:54:21.105 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:54:21.106 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39f8c923]
[DEBUG] 2020-02-28 13:54:21.106 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3675f67e]
[DEBUG] 2020-02-28 13:54:21.107 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:54:21.107 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:54:21.107 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:54:21.107 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:54:21.107 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:54:21.107 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:54:21.107 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d713c7e]
[DEBUG] 2020-02-28 13:54:21.107 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a1b36ea]
[DEBUG] 2020-02-28 13:54:21.107 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:54:21.107 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:54:21.107 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:54:21.108 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@34737c75]
[DEBUG] 2020-02-28 13:54:21.109 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:54:21.109 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:54:21.109 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.119 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.126 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:54:21.127 [http-nio-8080-exec-94] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:54:21.127 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@375eeacb]
[DEBUG] 2020-02-28 13:54:21.127 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:54:21.127 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.127 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:54:21.127 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f4054fe]
[DEBUG] 2020-02-28 13:54:21.127 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59b37806]
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19fbd949]
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8a9ca1b]
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25e39854]
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20a40b84]
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@669be499]
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:54:21.128 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:54:21.130 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:54:21.130 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:54:21.130 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f83e126]
[DEBUG] 2020-02-28 13:54:21.130 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d9e82e7]
[DEBUG] 2020-02-28 13:54:21.130 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:54:21.130 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:54:21.130 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:54:21.130 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:54:21.130 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:54:21.131 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:54:21.131 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54aa9b89]
[DEBUG] 2020-02-28 13:54:21.131 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dfab241]
[DEBUG] 2020-02-28 13:54:21.131 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:54:21.131 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:54:21.131 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:54:21.131 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1224fe89]
[DEBUG] 2020-02-28 13:54:21.131 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:54:21.131 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:54:21.131 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.132 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.132 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:54:21.132 [http-nio-8080-exec-94] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:54:21.149 [http-nio-8080-exec-94] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@348ea668]
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cd1ffa1]
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b3e0130]
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fc3cca5]
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ccc020b]
[DEBUG] 2020-02-28 13:54:21.150 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24495389]
[DEBUG] 2020-02-28 13:54:21.151 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:54:21.151 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:54:21.151 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:54:21.151 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:54:21.151 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:54:21.151 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:54:21.151 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72522383]
[DEBUG] 2020-02-28 13:54:21.151 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c69f35b]
[DEBUG] 2020-02-28 13:54:21.151 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:54:21.151 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:54:21.151 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:54:21.151 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1c91711e]
[DEBUG] 2020-02-28 13:54:21.151 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:54:21.151 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.152 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.154 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:54:21.155 [http-nio-8080-exec-94] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:54:21.155 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74e50185]
[DEBUG] 2020-02-28 13:54:21.155 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:54:21.155 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.155 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:54:21.157 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:54:21.157 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.157 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:54:21.157 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30cb4b1e]
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3854a9a5]
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31a3df59]
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bdae1c8]
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34787afb]
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ad2da89]
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d0ac68a]
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@339a730f]
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:54:21.158 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.159 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.159 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:54:21.159 [http-nio-8080-exec-94] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:54:21.159 [http-nio-8080-exec-94] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:54:21.159 [http-nio-8080-exec-94] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:54:21.159 [http-nio-8080-exec-94] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:54:21.159 [http-nio-8080-exec-94] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 13:54:21.159 [http-nio-8080-exec-94] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 13:54:21.159 [http-nio-8080-exec-94] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:54:21.159 [http-nio-8080-exec-94] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 13:54:21.159 [http-nio-8080-exec-94] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c203976]
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37d78d1c]
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f45b9d8]
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47c9a20]
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f4848de]
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@135c62e9]
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:54:21.160 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:54:21.161 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:54:21.161 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41059223]
[DEBUG] 2020-02-28 13:54:21.161 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2148bdb9]
[DEBUG] 2020-02-28 13:54:21.161 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:54:21.161 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:54:21.161 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:54:21.161 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6c8b0ff6]
[DEBUG] 2020-02-28 13:54:21.161 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:54:21.161 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.161 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.161 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:54:21.161 [http-nio-8080-exec-94] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:54:21.163 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71496e8b]
[DEBUG] 2020-02-28 13:54:21.163 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.163 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:54:21.163 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.163 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:54:21.163 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21c8f996]
[DEBUG] 2020-02-28 13:54:21.164 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:54:21.164 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:54:21.164 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:54:21.164 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:54:21.164 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:54:21.164 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47d1f3a]
[DEBUG] 2020-02-28 13:54:21.164 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5426440b]
[DEBUG] 2020-02-28 13:54:21.164 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:54:21.164 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32441350]
[DEBUG] 2020-02-28 13:54:21.164 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cca2683]
[DEBUG] 2020-02-28 13:54:21.164 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:54:21.165 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:54:21.165 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:54:21.165 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:54:21.165 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:54:21.165 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:54:21.167 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:54:21.168 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:54:21.168 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30a276ef]
[DEBUG] 2020-02-28 13:54:21.168 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56426aec]
[DEBUG] 2020-02-28 13:54:21.168 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:54:21.168 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:54:21.168 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:54:21.168 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@440e3de7]
[DEBUG] 2020-02-28 13:54:21.168 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:54:21.168 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.168 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.169 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:54:21.169 [http-nio-8080-exec-94] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:54:21.169 [http-nio-8080-exec-94] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:54:21.169 [http-nio-8080-exec-94] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:54:21.169 [http-nio-8080-exec-94] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:54:21.169 [http-nio-8080-exec-94] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 13:54:21.169 [http-nio-8080-exec-94] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 13:54:21.169 [http-nio-8080-exec-94] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:54:21.169 [http-nio-8080-exec-94] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 13:54:21.169 [http-nio-8080-exec-94] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 13:54:21.169 [http-nio-8080-exec-94] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:54:21.169 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a4bf715]
[DEBUG] 2020-02-28 13:54:21.169 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.169 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:54:21.169 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:54:21.169 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a4f14ab]
[DEBUG] 2020-02-28 13:54:21.171 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cbae914]
[DEBUG] 2020-02-28 13:54:21.171 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:54:21.171 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.171 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.171 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.171 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:54:21.171 [http-nio-8080-exec-94] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:54:21.172 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9fc42c9]
[DEBUG] 2020-02-28 13:54:21.172 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.172 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:54:21.172 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:54:21.172 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1bb2e9a9]
[DEBUG] 2020-02-28 13:54:21.172 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70ab5182]
[DEBUG] 2020-02-28 13:54:21.172 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:54:21.172 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.172 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.172 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.172 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:54:21.172 [http-nio-8080-exec-94] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:54:21.172 [http-nio-8080-exec-94] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:54:21.172 [http-nio-8080-exec-94] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:54:21.172 [http-nio-8080-exec-94] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b2aaf54]
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ccbd54f]
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58d8f986]
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cfe3dc0]
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e7df4bd]
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d38876b]
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72334783]
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ffe7438]
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4f4a3c2b]
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.173 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2056e5d4]
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72c2b6f5]
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@384b0538]
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f4a90c1]
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8d8f6c3]
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6187cc0]
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@661acbfe]
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ded8364]
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6702ec3a]
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:54:21.174 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.175 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.175 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:54:21.175 [http-nio-8080-exec-94] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:54:21.177 [http-nio-8080-exec-94] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:54:21.179 [http-nio-8080-exec-94] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:54:21.179 [http-nio-8080-exec-94] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:54:21.179 [http-nio-8080-exec-94] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 13:54:21.179 [http-nio-8080-exec-94] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 13:54:21.179 [http-nio-8080-exec-94] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:54:21.179 [http-nio-8080-exec-94] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 13:54:21.179 [http-nio-8080-exec-94] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 13:54:21.179 [http-nio-8080-exec-94] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:54:21.179 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24bc1c99]
[DEBUG] 2020-02-28 13:54:21.179 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:54:21.179 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f7379e5]
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44655e5b]
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79da9a]
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eaf054d]
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ab7f12c]
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44eeda7]
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:54:21.180 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:54:21.181 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:54:21.181 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:54:21.181 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:54:21.181 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@29f51be5]
[DEBUG] 2020-02-28 13:54:21.181 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aa5f8a9]
[DEBUG] 2020-02-28 13:54:21.181 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:54:21.181 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:54:21.181 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:54:21.181 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7a7d21f9]
[DEBUG] 2020-02-28 13:54:21.181 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:54:21.181 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.182 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.182 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:54:21.182 [http-nio-8080-exec-94] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:54:21.182 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@721f8abe]
[DEBUG] 2020-02-28 13:54:21.182 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:54:21.182 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:54:21.182 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.182 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:54:21.182 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:54:21.182 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@146bdf05]
[DEBUG] 2020-02-28 13:54:21.182 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43606c7b]
[DEBUG] 2020-02-28 13:54:21.182 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:54:21.182 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d2444d3]
[DEBUG] 2020-02-28 13:54:21.182 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18dc94f7]
[DEBUG] 2020-02-28 13:54:21.191 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:54:21.191 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:54:21.191 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:54:21.191 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:54:21.191 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:54:21.191 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5285e31e]
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12465e81]
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c4c4490]
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c5eafce]
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7d422b21]
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.192 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.193 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:54:21.193 [http-nio-8080-exec-94] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:54:21.193 [http-nio-8080-exec-94] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:54:21.193 [http-nio-8080-exec-94] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:54:21.195 [http-nio-8080-exec-94] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:54:21.195 [http-nio-8080-exec-94] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:54:21.195 [http-nio-8080-exec-94] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 13:54:21.195 [http-nio-8080-exec-94] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 13:54:21.195 [http-nio-8080-exec-94] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:54:21.195 [http-nio-8080-exec-94] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 13:54:21.195 [http-nio-8080-exec-94] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 13:54:21.195 [http-nio-8080-exec-94] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:54:21.195 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a5a33f]
[DEBUG] 2020-02-28 13:54:21.198 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:54:21.198 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.198 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:54:21.198 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:54:21.198 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@236a4d71]
[DEBUG] 2020-02-28 13:54:21.198 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ceca9a4]
[DEBUG] 2020-02-28 13:54:21.198 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:54:21.198 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:54:21.198 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:54:21.198 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:54:21.198 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14585d5d]
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40214b1f]
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39797b36]
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:54:21.202 [http-nio-8080-exec-94] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:54:21.206 [http-nio-8080-exec-94] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:54:21.213 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@411b9d7b]
[DEBUG] 2020-02-28 13:54:21.213 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b4f43c0]
[DEBUG] 2020-02-28 13:54:21.213 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:54:21.213 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:54:21.213 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.213 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:54:21.213 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:54:21.213 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:54:21.213 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:54:21.213 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:54:21.213 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.213 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:54:21.213 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:54:21.214 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:54:21.214 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.216 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.216 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 13:54:21.216 [http-nio-8080-exec-94] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 13:54:21.216 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1eace819]
[DEBUG] 2020-02-28 13:54:21.216 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@669d5616]
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79817c5d]
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7520b89d]
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@675dba34]
[DEBUG] 2020-02-28 13:54:21.217 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17491212]
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28477c8d]
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77c12215]
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@277efeb0]
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:54:21.218 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1955cc57]
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67fa84e2]
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37216dd3]
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1631305f]
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@213171ba]
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12df3cea]
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2e2c8497]
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:54:21.219 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.220 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c670fee]
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20d2869d]
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4fb250db]
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b60c1de]
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.221 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52bc7210]
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5807050]
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78132f0f]
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@490eeeef]
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc911e7]
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59cdf8be]
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38c7dfdf]
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@60027be]
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:54:21.222 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.223 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.224 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:54:21.224 [http-nio-8080-exec-94] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 13:54:21.224 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@276f5a3c]
[DEBUG] 2020-02-28 13:54:21.224 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21d04029]
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6086e5f5]
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@437420c4]
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 13:54:21.225 [http-nio-8080-exec-94] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75a1649f]
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17b118ef]
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75495cd7]
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aa054f1]
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d577f3b]
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24592b77]
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 13:54:21.226 [http-nio-8080-exec-94] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 13:54:21.283 [http-nio-8080-exec-94] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 13:54:21.283 [http-nio-8080-exec-94] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 13:54:21.284 [http-nio-8080-exec-94] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 13:54:21.291 [http-nio-8080-exec-94] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 13:54:21.291 [http-nio-8080-exec-94] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 13:54:21.293 [http-nio-8080-exec-94] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 13:54:21.293 [http-nio-8080-exec-94] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 13:54:21.294 [http-nio-8080-exec-94] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2a5cad42
[DEBUG] 2020-02-28 13:54:21.297 [http-nio-8080-exec-94] SessionFactoryRegistry - Registering SessionFactory: d951d760-0def-4552-b048-44cf56af83d5 (<unnamed>)
[DEBUG] 2020-02-28 13:54:21.297 [http-nio-8080-exec-94] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 13:54:21.367 [http-nio-8080-exec-94] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 13:54:21.449 [http-nio-8080-exec-94] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:54:21.473 [http-nio-8080-exec-94] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@19198e3c
[DEBUG] 2020-02-28 13:54:21.500 [http-nio-8080-exec-94] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:54:21.504 [http-nio-8080-exec-94] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:54:21.509 [http-nio-8080-exec-94] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 13:54:21.528 [http-nio-8080-exec-94] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 13:54:21.544 [http-nio-8080-exec-94] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 13:54:21.546 [http-nio-8080-exec-94] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 13:54:21.546 [http-nio-8080-exec-94] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 13:54:21.547 [http-nio-8080-exec-94] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 13:54:21.553 [http-nio-8080-exec-94] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 13:54:21.554 [http-nio-8080-exec-94] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 13:54:21.554 [http-nio-8080-exec-94] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 13:54:21.554 [http-nio-8080-exec-94] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:54:21.560 [http-nio-8080-exec-94] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:54:21.560 [http-nio-8080-exec-94] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:54:21.560 [http-nio-8080-exec-94] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:54:21.576 [http-nio-8080-exec-94] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:54:21.596 [http-nio-8080-exec-94] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:54:21.599 [http-nio-8080-exec-94] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:54:21.609 [http-nio-8080-exec-94] Loader - Result set row: 1
[DEBUG] 2020-02-28 13:54:21.609 [http-nio-8080-exec-94] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:54:21.610 [http-nio-8080-exec-94] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:54:21.610 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:54:21.610 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.610 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:54:21.610 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.610 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:54:21.610 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.610 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:54:21.610 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.610 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:54:21.610 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.610 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:54:21.610 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.613 [http-nio-8080-exec-94] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:54:21.616 [http-nio-8080-exec-94] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:54:21.617 [http-nio-8080-exec-94] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:54:21.618 [http-nio-8080-exec-94] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:54:21.626 [http-nio-8080-exec-94] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:54:21.626 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:54:21.626 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.626 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:54:21.626 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.626 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:54:21.626 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.626 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:54:21.626 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.626 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:54:21.626 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@5bfffe71
[DEBUG] 2020-02-28 13:54:21.628 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.629 [http-nio-8080-exec-94] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:54:21.629 [http-nio-8080-exec-94] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:54:21.629 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:54:21.630 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.631 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:54:21.631 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.631 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:54:21.631 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.631 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:54:21.631 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.632 [http-nio-8080-exec-94] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:54:21.632 [http-nio-8080-exec-94] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:54:21.634 [http-nio-8080-exec-94] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:54:21.635 [http-nio-8080-exec-94] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:54:21.635 [http-nio-8080-exec-94] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:54:21.635 [http-nio-8080-exec-94] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:54:21.636 [http-nio-8080-exec-94] Loader - Done entity load
[DEBUG] 2020-02-28 13:54:21.636 [http-nio-8080-exec-94] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:54:21.636 [http-nio-8080-exec-94] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:54:21.636 [http-nio-8080-exec-94] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:54:21.636 [http-nio-8080-exec-94] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:54:21.636 [http-nio-8080-exec-94] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:54:21.637 [http-nio-8080-exec-94] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:54:21.637 [http-nio-8080-exec-94] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:54:21.637 [http-nio-8080-exec-94] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:54:21.637 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 13:54:21.637 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.637 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:54:21.637 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.637 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 13:54:21.637 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.637 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 13:54:21.637 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.637 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:54:21.637 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.637 [http-nio-8080-exec-94] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:54:21.637 [http-nio-8080-exec-94] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:54:21.637 [http-nio-8080-exec-94] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:54:21.638 [http-nio-8080-exec-94] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:56:29.759 [http-nio-8080-exec-99] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 13:56:29.763 [http-nio-8080-exec-99] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 13:56:29.773 [http-nio-8080-exec-99] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 13:56:29.858 [http-nio-8080-exec-99] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 13:56:29.860 [http-nio-8080-exec-99] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 13:56:29.984 [http-nio-8080-exec-99] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 13:56:29.985 [http-nio-8080-exec-99] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 13:56:29.987 [http-nio-8080-exec-99] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 13:56:30.222 [http-nio-8080-exec-99] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 13:56:30.246 [http-nio-8080-exec-99] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 13:56:30.247 [http-nio-8080-exec-99] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 13:56:30.296 [http-nio-8080-exec-99] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 13:56:30.337 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@41a3f596
[DEBUG] 2020-02-28 13:56:30.338 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@41a3f596
[DEBUG] 2020-02-28 13:56:30.338 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41a3f596
[DEBUG] 2020-02-28 13:56:30.338 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@559c7b54
[DEBUG] 2020-02-28 13:56:30.339 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2e1d223
[DEBUG] 2020-02-28 13:56:30.339 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@45cd27b2
[DEBUG] 2020-02-28 13:56:30.340 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@75a7eb62
[DEBUG] 2020-02-28 13:56:30.340 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@75a7eb62
[DEBUG] 2020-02-28 13:56:30.340 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75a7eb62
[DEBUG] 2020-02-28 13:56:30.341 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3d223843
[DEBUG] 2020-02-28 13:56:30.342 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3d223843
[DEBUG] 2020-02-28 13:56:30.342 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3d223843
[DEBUG] 2020-02-28 13:56:30.342 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@385ed94b
[DEBUG] 2020-02-28 13:56:30.342 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@385ed94b
[DEBUG] 2020-02-28 13:56:30.342 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@385ed94b
[DEBUG] 2020-02-28 13:56:30.344 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5bf12eff
[DEBUG] 2020-02-28 13:56:30.344 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5bf12eff
[DEBUG] 2020-02-28 13:56:30.344 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5bf12eff
[DEBUG] 2020-02-28 13:56:30.345 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@a235c91
[DEBUG] 2020-02-28 13:56:30.345 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@a235c91
[DEBUG] 2020-02-28 13:56:30.345 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@a235c91
[DEBUG] 2020-02-28 13:56:30.347 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@17a12aff
[DEBUG] 2020-02-28 13:56:30.347 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@17a12aff
[DEBUG] 2020-02-28 13:56:30.347 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@17a12aff
[DEBUG] 2020-02-28 13:56:30.348 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2cf9461e
[DEBUG] 2020-02-28 13:56:30.348 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2cf9461e
[DEBUG] 2020-02-28 13:56:30.348 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2cf9461e
[DEBUG] 2020-02-28 13:56:30.348 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2cefbdb2
[DEBUG] 2020-02-28 13:56:30.348 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2cefbdb2
[DEBUG] 2020-02-28 13:56:30.349 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@aa88185
[DEBUG] 2020-02-28 13:56:30.349 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@aa88185
[DEBUG] 2020-02-28 13:56:30.350 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6c4c5cda
[DEBUG] 2020-02-28 13:56:30.350 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6c4c5cda
[DEBUG] 2020-02-28 13:56:30.350 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2790f52f
[DEBUG] 2020-02-28 13:56:30.350 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@440c63b5
[DEBUG] 2020-02-28 13:56:30.351 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7999ab5
[DEBUG] 2020-02-28 13:56:30.351 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7999ab5
[DEBUG] 2020-02-28 13:56:30.351 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2ce7d42e
[DEBUG] 2020-02-28 13:56:30.351 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ce7d42e
[DEBUG] 2020-02-28 13:56:30.353 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2309e451
[DEBUG] 2020-02-28 13:56:30.353 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2309e451
[DEBUG] 2020-02-28 13:56:30.353 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1b76c57a
[DEBUG] 2020-02-28 13:56:30.353 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1b76c57a
[DEBUG] 2020-02-28 13:56:30.354 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639698b8
[DEBUG] 2020-02-28 13:56:30.354 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639698b8
[DEBUG] 2020-02-28 13:56:30.354 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@531eaa7d
[DEBUG] 2020-02-28 13:56:30.355 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@531eaa7d
[DEBUG] 2020-02-28 13:56:30.356 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b4ef756
[DEBUG] 2020-02-28 13:56:30.356 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b4ef756
[DEBUG] 2020-02-28 13:56:30.356 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15342822
[DEBUG] 2020-02-28 13:56:30.357 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15342822
[DEBUG] 2020-02-28 13:56:30.359 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1d0ac221
[DEBUG] 2020-02-28 13:56:30.359 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1d0ac221
[DEBUG] 2020-02-28 13:56:30.360 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3ed6968a
[DEBUG] 2020-02-28 13:56:30.360 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3ed6968a
[DEBUG] 2020-02-28 13:56:30.361 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5ec94942
[DEBUG] 2020-02-28 13:56:30.361 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5ec94942
[DEBUG] 2020-02-28 13:56:30.361 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5319f77b
[DEBUG] 2020-02-28 13:56:30.361 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5319f77b
[DEBUG] 2020-02-28 13:56:30.361 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5319f77b
[DEBUG] 2020-02-28 13:56:30.363 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3f567502
[DEBUG] 2020-02-28 13:56:30.363 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@181f365d
[DEBUG] 2020-02-28 13:56:30.363 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@181f365d
[DEBUG] 2020-02-28 13:56:30.364 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@181f365d
[DEBUG] 2020-02-28 13:56:30.365 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@18fc9888
[DEBUG] 2020-02-28 13:56:30.367 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@44a9b946
[DEBUG] 2020-02-28 13:56:30.367 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@44a9b946
[DEBUG] 2020-02-28 13:56:30.368 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2bc362be
[DEBUG] 2020-02-28 13:56:30.368 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2bc362be
[DEBUG] 2020-02-28 13:56:30.369 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@524b6db9
[DEBUG] 2020-02-28 13:56:30.369 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@524b6db9
[DEBUG] 2020-02-28 13:56:30.370 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@9f3fe8b
[DEBUG] 2020-02-28 13:56:30.370 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@9f3fe8b
[DEBUG] 2020-02-28 13:56:30.372 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@56c9204a
[DEBUG] 2020-02-28 13:56:30.372 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@56c9204a
[DEBUG] 2020-02-28 13:56:30.372 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6e0d4550
[DEBUG] 2020-02-28 13:56:30.373 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7beb48b1
[DEBUG] 2020-02-28 13:56:30.373 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7beb48b1
[DEBUG] 2020-02-28 13:56:30.373 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7beb48b1
[DEBUG] 2020-02-28 13:56:30.374 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59cd4608
[DEBUG] 2020-02-28 13:56:30.374 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59cd4608
[DEBUG] 2020-02-28 13:56:30.374 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59cd4608
[DEBUG] 2020-02-28 13:56:30.375 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6080ab97
[DEBUG] 2020-02-28 13:56:30.375 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2517eb2f
[DEBUG] 2020-02-28 13:56:30.376 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1ff98acc
[DEBUG] 2020-02-28 13:56:30.376 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1ff98acc
[DEBUG] 2020-02-28 13:56:30.376 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1ff98acc
[DEBUG] 2020-02-28 13:56:30.376 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@27207a5d
[DEBUG] 2020-02-28 13:56:30.376 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@27207a5d
[DEBUG] 2020-02-28 13:56:30.376 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@27207a5d
[DEBUG] 2020-02-28 13:56:30.376 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@296fb4f7
[DEBUG] 2020-02-28 13:56:30.377 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5c9aae4a
[DEBUG] 2020-02-28 13:56:30.377 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6725bbfe
[DEBUG] 2020-02-28 13:56:30.377 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6725bbfe
[DEBUG] 2020-02-28 13:56:30.378 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1b1dfd91
[DEBUG] 2020-02-28 13:56:30.378 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c965a57
[DEBUG] 2020-02-28 13:56:30.378 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c965a57
[DEBUG] 2020-02-28 13:56:30.379 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@20f9f82c
[DEBUG] 2020-02-28 13:56:30.379 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@20f9f82c
[DEBUG] 2020-02-28 13:56:30.379 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b0c6a8f
[DEBUG] 2020-02-28 13:56:30.380 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6e608a3f
[DEBUG] 2020-02-28 13:56:30.380 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3c69457f
[DEBUG] 2020-02-28 13:56:30.382 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@12920fba
[DEBUG] 2020-02-28 13:56:30.382 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@12920fba
[DEBUG] 2020-02-28 13:56:30.382 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5dee76c
[DEBUG] 2020-02-28 13:56:30.383 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@78537859
[DEBUG] 2020-02-28 13:56:30.383 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@80db0b4
[DEBUG] 2020-02-28 13:56:30.383 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@111802e5
[DEBUG] 2020-02-28 13:56:30.383 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@638f622d
[DEBUG] 2020-02-28 13:56:30.383 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@fd4fb5
[DEBUG] 2020-02-28 13:56:30.383 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6510c70e
[DEBUG] 2020-02-28 13:56:30.383 [http-nio-8080-exec-99] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@34cefe63
[DEBUG] 2020-02-28 13:56:30.405 [http-nio-8080-exec-99] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 13:56:30.405 [http-nio-8080-exec-99] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 13:56:30.405 [http-nio-8080-exec-99] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:56:30.406 [http-nio-8080-exec-99] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:56:30.406 [http-nio-8080-exec-99] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 13:56:30.406 [http-nio-8080-exec-99] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 13:56:30.407 [http-nio-8080-exec-99] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 13:56:30.407 [http-nio-8080-exec-99] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:56:30.408 [http-nio-8080-exec-99] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 13:56:30.408 [http-nio-8080-exec-99] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 13:56:30.408 [http-nio-8080-exec-99] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 13:56:30.409 [http-nio-8080-exec-99] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 13:56:30.409 [http-nio-8080-exec-99] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:56:30.409 [http-nio-8080-exec-99] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 13:56:30.413 [http-nio-8080-exec-99] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 13:56:30.413 [http-nio-8080-exec-99] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 13:56:30.413 [http-nio-8080-exec-99] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 13:56:30.529 [http-nio-8080-exec-99] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 13:56:30.729 [http-nio-8080-exec-99] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:56:30.729 [http-nio-8080-exec-99] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:56:30.730 [http-nio-8080-exec-99] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 13:56:30.749 [http-nio-8080-exec-99] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 13:56:30.775 [http-nio-8080-exec-99] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 13:56:30.908 [http-nio-8080-exec-99] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 13:56:31.039 [http-nio-8080-exec-99] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 13:56:31.045 [http-nio-8080-exec-99] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23956d65] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@285d3168]
[DEBUG] 2020-02-28 13:56:31.091 [http-nio-8080-exec-99] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:56:31.111 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:56:31.121 [http-nio-8080-exec-99] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 13:56:31.125 [http-nio-8080-exec-99] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 13:56:31.143 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.148 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 13:56:31.150 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 13:56:31.151 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 13:56:31.153 [http-nio-8080-exec-99] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 13:56:31.155 [http-nio-8080-exec-99] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:56:31.156 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.156 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:56:31.156 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 13:56:31.157 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:56:31.157 [http-nio-8080-exec-99] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:56:31.157 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.157 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 13:56:31.157 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 13:56:31.157 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 13:56:31.157 [http-nio-8080-exec-99] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 13:56:31.157 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:56:31.157 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:56:31.157 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 13:56:31.157 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:56:31.157 [http-nio-8080-exec-99] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:56:31.157 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.157 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:56:31.157 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 13:56:31.157 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:56:31.158 [http-nio-8080-exec-99] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:56:31.160 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:56:31.162 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.163 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.173 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.173 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.174 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:56:31.175 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:56:31.175 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:56:31.176 [http-nio-8080-exec-99] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:56:31.178 [http-nio-8080-exec-99] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 13:56:31.178 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:56:31.179 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.179 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.179 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.179 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.179 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:56:31.179 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:56:31.179 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:56:31.179 [http-nio-8080-exec-99] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:56:31.179 [http-nio-8080-exec-99] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:56:31.179 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.179 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:56:31.179 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 13:56:31.179 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:56:31.179 [http-nio-8080-exec-99] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] PropertyBinder - Building property password
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:56:31.180 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.181 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.181 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.181 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.181 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:56:31.181 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:56:31.181 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:56:31.181 [http-nio-8080-exec-99] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:56:31.181 [http-nio-8080-exec-99] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 13:56:31.181 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:56:31.181 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.181 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.182 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.182 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.182 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:56:31.182 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:56:31.182 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:56:31.182 [http-nio-8080-exec-99] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:56:31.182 [http-nio-8080-exec-99] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 13:56:31.182 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.183 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:56:31.183 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 13:56:31.183 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:56:31.183 [http-nio-8080-exec-99] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:56:31.183 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 13:56:31.183 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 13:56:31.183 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 13:56:31.183 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 13:56:31.183 [http-nio-8080-exec-99] PropertyBinder - Building property username
[DEBUG] 2020-02-28 13:56:31.185 [http-nio-8080-exec-99] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:56:31.185 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:56:31.185 [http-nio-8080-exec-99] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 13:56:31.185 [http-nio-8080-exec-99] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 13:56:31.188 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.189 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 13:56:31.189 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 13:56:31.189 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 13:56:31.189 [http-nio-8080-exec-99] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 13:56:31.189 [http-nio-8080-exec-99] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:56:31.191 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.191 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:56:31.191 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 13:56:31.191 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:56:31.191 [http-nio-8080-exec-99] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:56:31.202 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.202 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 13:56:31.202 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 13:56:31.202 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 13:56:31.202 [http-nio-8080-exec-99] PropertyBinder - Building property name
[DEBUG] 2020-02-28 13:56:31.202 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.202 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:56:31.202 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 13:56:31.202 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:56:31.202 [http-nio-8080-exec-99] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:56:31.203 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 13:56:31.203 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.204 [http-nio-8080-exec-99] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:56:31.204 [http-nio-8080-exec-99] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:56:31.205 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:56:31.205 [http-nio-8080-exec-99] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 13:56:31.205 [http-nio-8080-exec-99] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 13:56:31.206 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.206 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 13:56:31.206 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 13:56:31.206 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 13:56:31.206 [http-nio-8080-exec-99] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 13:56:31.206 [http-nio-8080-exec-99] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:56:31.206 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.206 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 13:56:31.206 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 13:56:31.206 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 13:56:31.206 [http-nio-8080-exec-99] PropertyBinder - Building property author
[DEBUG] 2020-02-28 13:56:31.206 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:56:31.207 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:56:31.208 [http-nio-8080-exec-99] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:56:31.209 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:56:31.209 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.209 [http-nio-8080-exec-99] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:56:31.209 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.209 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:56:31.209 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 13:56:31.209 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:56:31.209 [http-nio-8080-exec-99] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:56:31.209 [http-nio-8080-exec-99] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:56:31.210 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:56:31.210 [http-nio-8080-exec-99] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 13:56:31.210 [http-nio-8080-exec-99] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 13:56:31.211 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.211 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 13:56:31.211 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 13:56:31.211 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 13:56:31.211 [http-nio-8080-exec-99] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 13:56:31.211 [http-nio-8080-exec-99] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:56:31.212 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.212 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:56:31.212 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 13:56:31.212 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:56:31.212 [http-nio-8080-exec-99] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:56:31.212 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.212 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:56:31.212 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 13:56:31.212 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:56:31.213 [http-nio-8080-exec-99] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:56:31.213 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.214 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.214 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.214 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:56:31.214 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:56:31.214 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:56:31.214 [http-nio-8080-exec-99] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:56:31.214 [http-nio-8080-exec-99] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:56:31.214 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.214 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:56:31.214 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 13:56:31.214 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:56:31.214 [http-nio-8080-exec-99] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:56:31.214 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.214 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:56:31.214 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 13:56:31.215 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:56:31.215 [http-nio-8080-exec-99] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:56:31.215 [http-nio-8080-exec-99] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:56:31.215 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:56:31.215 [http-nio-8080-exec-99] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 13:56:31.215 [http-nio-8080-exec-99] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 13:56:31.216 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.216 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 13:56:31.216 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 13:56:31.216 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 13:56:31.217 [http-nio-8080-exec-99] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 13:56:31.217 [http-nio-8080-exec-99] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:56:31.217 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.217 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:56:31.217 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 13:56:31.217 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:56:31.217 [http-nio-8080-exec-99] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:56:31.217 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.217 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:56:31.217 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 13:56:31.217 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:56:31.217 [http-nio-8080-exec-99] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:56:31.217 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.217 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.218 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.218 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:56:31.218 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:56:31.218 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:56:31.218 [http-nio-8080-exec-99] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] PropertyBinder - Building property director
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 13:56:31.219 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.220 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.220 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.220 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:56:31.220 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:56:31.220 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:56:31.220 [http-nio-8080-exec-99] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:56:31.220 [http-nio-8080-exec-99] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 13:56:31.220 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.221 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:56:31.221 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 13:56:31.221 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:56:31.221 [http-nio-8080-exec-99] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:56:31.221 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.221 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:56:31.221 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 13:56:31.221 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:56:31.221 [http-nio-8080-exec-99] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:56:31.221 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.221 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:56:31.221 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 13:56:31.221 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:56:31.222 [http-nio-8080-exec-99] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:56:31.222 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.222 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:56:31.222 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 13:56:31.222 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:56:31.222 [http-nio-8080-exec-99] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:56:31.222 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.222 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:56:31.222 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 13:56:31.222 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:56:31.222 [http-nio-8080-exec-99] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:56:31.222 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:56:31.222 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.222 [http-nio-8080-exec-99] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:56:31.223 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.223 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:56:31.223 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 13:56:31.223 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:56:31.223 [http-nio-8080-exec-99] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:56:31.223 [http-nio-8080-exec-99] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:56:31.223 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:56:31.223 [http-nio-8080-exec-99] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 13:56:31.223 [http-nio-8080-exec-99] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 13:56:31.224 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.224 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 13:56:31.224 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 13:56:31.224 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 13:56:31.224 [http-nio-8080-exec-99] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 13:56:31.224 [http-nio-8080-exec-99] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:56:31.224 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.225 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 13:56:31.225 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 13:56:31.225 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 13:56:31.225 [http-nio-8080-exec-99] PropertyBinder - Building property category
[DEBUG] 2020-02-28 13:56:31.225 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.225 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:56:31.225 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 13:56:31.225 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:56:31.225 [http-nio-8080-exec-99] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:56:31.225 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.225 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:56:31.225 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 13:56:31.225 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 13:56:31.226 [http-nio-8080-exec-99] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 13:56:31.227 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.228 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 13:56:31.228 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 13:56:31.228 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 13:56:31.228 [http-nio-8080-exec-99] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 13:56:31.228 [http-nio-8080-exec-99] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:56:31.228 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.228 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:56:31.228 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 13:56:31.228 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:56:31.228 [http-nio-8080-exec-99] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:56:31.228 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:56:31.228 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:56:31.228 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 13:56:31.228 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:56:31.228 [http-nio-8080-exec-99] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:56:31.228 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.229 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:56:31.232 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 13:56:31.232 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:56:31.232 [http-nio-8080-exec-99] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:56:31.232 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.232 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.233 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.233 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:56:31.233 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:56:31.233 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:56:31.233 [http-nio-8080-exec-99] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:56:31.233 [http-nio-8080-exec-99] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:56:31.233 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.233 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:56:31.233 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 13:56:31.233 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:56:31.233 [http-nio-8080-exec-99] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:56:31.233 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.233 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:56:31.233 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 13:56:31.233 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:56:31.233 [http-nio-8080-exec-99] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:56:31.234 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.234 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 13:56:31.234 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 13:56:31.234 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 13:56:31.234 [http-nio-8080-exec-99] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 13:56:31.234 [http-nio-8080-exec-99] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:56:31.234 [http-nio-8080-exec-99] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:56:31.234 [http-nio-8080-exec-99] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 13:56:31.234 [http-nio-8080-exec-99] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:56:31.234 [http-nio-8080-exec-99] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 13:56:31.239 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 13:56:31.240 [http-nio-8080-exec-99] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:56:31.248 [http-nio-8080-exec-99] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 13:56:31.248 [http-nio-8080-exec-99] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 13:56:31.248 [http-nio-8080-exec-99] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 13:56:31.248 [http-nio-8080-exec-99] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 13:56:31.248 [http-nio-8080-exec-99] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 13:56:31.249 [http-nio-8080-exec-99] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 13:56:31.249 [http-nio-8080-exec-99] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 13:56:31.249 [http-nio-8080-exec-99] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:56:31.249 [http-nio-8080-exec-99] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:56:31.269 [http-nio-8080-exec-99] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:56:31.270 [http-nio-8080-exec-99] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:56:31.270 [http-nio-8080-exec-99] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 13:56:31.270 [http-nio-8080-exec-99] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:56:31.270 [http-nio-8080-exec-99] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:56:31.270 [http-nio-8080-exec-99] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:56:31.270 [http-nio-8080-exec-99] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:56:31.270 [http-nio-8080-exec-99] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 13:56:31.270 [http-nio-8080-exec-99] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:56:31.270 [http-nio-8080-exec-99] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 13:56:31.271 [http-nio-8080-exec-99] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 13:56:31.271 [http-nio-8080-exec-99] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 13:56:31.273 [http-nio-8080-exec-99] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:56:31.276 [http-nio-8080-exec-99] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:56:31.277 [http-nio-8080-exec-99] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 13:56:31.277 [http-nio-8080-exec-99] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 13:56:31.277 [http-nio-8080-exec-99] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 13:56:31.277 [http-nio-8080-exec-99] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:56:31.277 [http-nio-8080-exec-99] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:56:31.277 [http-nio-8080-exec-99] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 13:56:31.277 [http-nio-8080-exec-99] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 13:56:31.278 [http-nio-8080-exec-99] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 13:56:31.278 [http-nio-8080-exec-99] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:56:31.278 [http-nio-8080-exec-99] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:56:31.278 [http-nio-8080-exec-99] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 13:56:31.278 [http-nio-8080-exec-99] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 13:56:31.278 [http-nio-8080-exec-99] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 13:56:31.278 [http-nio-8080-exec-99] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:56:31.278 [http-nio-8080-exec-99] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:56:31.278 [http-nio-8080-exec-99] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:56:31.278 [http-nio-8080-exec-99] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:56:31.279 [http-nio-8080-exec-99] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 13:56:31.279 [http-nio-8080-exec-99] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:56:31.279 [http-nio-8080-exec-99] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:56:31.279 [http-nio-8080-exec-99] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:56:31.279 [http-nio-8080-exec-99] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 13:56:31.279 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:56:31.279 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:56:31.282 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:56:31.282 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:56:31.282 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:56:31.282 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:56:31.282 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:56:31.282 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:56:31.282 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:56:31.286 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:56:31.286 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:56:31.287 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:56:31.287 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:56:31.287 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:56:31.287 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:56:31.287 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:56:31.287 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:56:31.287 [http-nio-8080-exec-99] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:56:31.331 [http-nio-8080-exec-99] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 13:56:31.332 [http-nio-8080-exec-99] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 13:56:31.332 [http-nio-8080-exec-99] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 13:56:31.332 [http-nio-8080-exec-99] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 13:56:31.332 [http-nio-8080-exec-99] Settings - Statistics: disabled
[DEBUG] 2020-02-28 13:56:31.332 [http-nio-8080-exec-99] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 13:56:31.333 [http-nio-8080-exec-99] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 13:56:31.385 [http-nio-8080-exec-99] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 13:56:31.419 [http-nio-8080-exec-99] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 13:56:31.419 [http-nio-8080-exec-99] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@68b02ea8, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 13:56:31.445 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:56:31.445 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:56:31.446 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:56:31.446 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:56:31.449 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:56:31.449 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:56:31.449 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:56:31.449 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:56:31.449 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:56:31.450 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:56:31.452 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:56:31.452 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:56:31.455 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:56:31.455 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:56:31.463 [http-nio-8080-exec-99] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 13:56:31.468 [http-nio-8080-exec-99] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 13:56:31.468 [http-nio-8080-exec-99] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@23956d65] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2132340e]
[DEBUG] 2020-02-28 13:56:31.525 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:56:31.525 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:56:31.537 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:56:31.537 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:56:31.777 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:56:31.778 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:56:31.778 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:56:31.778 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:56:31.800 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:56:31.800 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:56:31.800 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:56:31.800 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:56:31.824 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:56:31.824 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:56:31.825 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:56:31.825 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:56:31.837 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:56:31.837 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:56:31.838 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:56:31.838 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:56:31.865 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:56:31.865 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:56:31.870 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:56:31.871 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:56:31.897 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:56:31.898 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:56:31.898 [http-nio-8080-exec-99] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:56:31.898 [http-nio-8080-exec-99] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:56:31.920 [http-nio-8080-exec-99] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:56:31.921 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 13:56:31.921 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 13:56:31.921 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 13:56:31.921 [http-nio-8080-exec-99] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 13:56:31.921 [http-nio-8080-exec-99] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:56:31.921 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 13:56:31.921 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 13:56:31.921 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 13:56:31.921 [http-nio-8080-exec-99] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 13:56:31.921 [http-nio-8080-exec-99] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:56:31.921 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 13:56:31.921 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 13:56:31.921 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 13:56:31.921 [http-nio-8080-exec-99] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:56:31.923 [http-nio-8080-exec-99] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 13:56:31.924 [http-nio-8080-exec-99] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:56:31.924 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 13:56:31.924 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 13:56:31.924 [http-nio-8080-exec-99] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 13:56:31.924 [http-nio-8080-exec-99] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 13:56:31.927 [http-nio-8080-exec-99] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:56:31.927 [http-nio-8080-exec-99] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 13:56:31.927 [http-nio-8080-exec-99] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 13:56:31.927 [http-nio-8080-exec-99] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:56:31.927 [http-nio-8080-exec-99] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 13:56:31.927 [http-nio-8080-exec-99] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 13:56:31.927 [http-nio-8080-exec-99] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:56:31.960 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@750dc26d]
[DEBUG] 2020-02-28 13:56:31.962 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:56:31.962 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:31.962 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:56:31.967 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64403dbd]
[DEBUG] 2020-02-28 13:56:31.968 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ac1f589]
[DEBUG] 2020-02-28 13:56:31.969 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:56:31.969 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:56:31.969 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:56:31.969 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:56:31.969 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72b0ec6c]
[DEBUG] 2020-02-28 13:56:31.969 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59c0ec5d]
[DEBUG] 2020-02-28 13:56:31.969 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:56:31.969 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:56:31.969 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:56:31.969 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:56:31.969 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:31.970 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:56:31.970 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61999408]
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@363e9b77]
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@346523ba]
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77ba46fb]
[DEBUG] 2020-02-28 13:56:31.972 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a5fc345]
[DEBUG] 2020-02-28 13:56:31.973 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:56:31.973 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:56:31.973 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:56:31.973 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:56:31.973 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:56:31.973 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:56:31.973 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ba3caff]
[DEBUG] 2020-02-28 13:56:31.973 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d3c418a]
[DEBUG] 2020-02-28 13:56:31.973 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:56:31.973 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:56:31.973 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:56:31.974 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3d9ed92a]
[DEBUG] 2020-02-28 13:56:31.975 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:56:31.975 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:56:31.975 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:31.989 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:31.995 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:56:31.996 [http-nio-8080-exec-99] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:56:31.996 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38e2565f]
[DEBUG] 2020-02-28 13:56:31.996 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:56:31.996 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:31.996 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:56:31.996 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a57d97c]
[DEBUG] 2020-02-28 13:56:31.996 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31726670]
[DEBUG] 2020-02-28 13:56:31.996 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:56:31.996 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:56:31.996 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:56:31.997 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:56:31.997 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b088eaf]
[DEBUG] 2020-02-28 13:56:31.997 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7e7ba0]
[DEBUG] 2020-02-28 13:56:31.997 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:56:31.997 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:56:31.997 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:56:31.998 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:56:31.998 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:31.998 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:56:31.998 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bf6c50a]
[DEBUG] 2020-02-28 13:56:31.998 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:56:31.998 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:56:31.998 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:56:31.998 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:56:31.998 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:56:31.998 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3637ed89]
[DEBUG] 2020-02-28 13:56:31.998 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ab83394]
[DEBUG] 2020-02-28 13:56:31.999 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:56:32.002 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:56:32.002 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:56:32.002 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:56:32.002 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:56:32.002 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:56:32.002 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:56:32.002 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:56:32.002 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@671b7b5c]
[DEBUG] 2020-02-28 13:56:32.002 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25135636]
[DEBUG] 2020-02-28 13:56:32.005 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:56:32.006 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:56:32.006 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:56:32.006 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:56:32.007 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:56:32.009 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:56:32.009 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b435a07]
[DEBUG] 2020-02-28 13:56:32.009 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@745e07bf]
[DEBUG] 2020-02-28 13:56:32.010 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:56:32.010 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:56:32.010 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:56:32.010 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@555bc1e0]
[DEBUG] 2020-02-28 13:56:32.010 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:56:32.010 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:56:32.010 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.010 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.010 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:56:32.010 [http-nio-8080-exec-99] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:56:32.026 [http-nio-8080-exec-99] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e11ca26]
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bce15e4]
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c19f60]
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f99dcfc]
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:56:32.027 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54a399de]
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aa6d9e3]
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@780d3d18]
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34288a3b]
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7eefa2c5]
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.028 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.030 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:56:32.030 [http-nio-8080-exec-99] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:56:32.030 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ebf0e51]
[DEBUG] 2020-02-28 13:56:32.030 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:56:32.030 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.031 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:56:32.031 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:56:32.031 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:32.031 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:56:32.031 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dcc4866]
[DEBUG] 2020-02-28 13:56:32.031 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:56:32.031 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:56:32.031 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:56:32.031 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:56:32.031 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:56:32.031 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:56:32.031 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:56:32.031 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c410767]
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31fc34e]
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c9f2433]
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6442a36e]
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38df4163]
[DEBUG] 2020-02-28 13:56:32.032 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4977dcc5]
[DEBUG] 2020-02-28 13:56:32.033 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:56:32.033 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:56:32.033 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:56:32.033 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1e19665f]
[DEBUG] 2020-02-28 13:56:32.033 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:56:32.033 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.033 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.033 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:56:32.033 [http-nio-8080-exec-99] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:56:32.033 [http-nio-8080-exec-99] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33260af4]
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@113ec4e8]
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:56:32.034 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:56:32.035 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:56:32.035 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67c637b6]
[DEBUG] 2020-02-28 13:56:32.035 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@200cd79e]
[DEBUG] 2020-02-28 13:56:32.035 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:56:32.036 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47f25ef3]
[DEBUG] 2020-02-28 13:56:32.036 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@406f1f3]
[DEBUG] 2020-02-28 13:56:32.036 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:56:32.036 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:56:32.036 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:56:32.036 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:56:32.036 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:56:32.036 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:56:32.036 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:56:32.036 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:56:32.036 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52ab1d42]
[DEBUG] 2020-02-28 13:56:32.036 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14dd80ae]
[DEBUG] 2020-02-28 13:56:32.036 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:56:32.036 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:56:32.036 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@410d5100]
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@787cebb2]
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b7218a9]
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:56:32.037 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bf9d04c]
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1da43014]
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2628c459]
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e87d9ff]
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4bc91dd3]
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7751a02e]
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:56:32.038 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@17bbb891]
[DEBUG] 2020-02-28 13:56:32.039 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:56:32.039 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.040 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.042 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:56:32.042 [http-nio-8080-exec-99] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:56:32.043 [http-nio-8080-exec-99] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:56:32.043 [http-nio-8080-exec-99] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:56:32.044 [http-nio-8080-exec-99] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:56:32.044 [http-nio-8080-exec-99] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 13:56:32.044 [http-nio-8080-exec-99] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 13:56:32.044 [http-nio-8080-exec-99] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:56:32.044 [http-nio-8080-exec-99] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 13:56:32.044 [http-nio-8080-exec-99] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 13:56:32.044 [http-nio-8080-exec-99] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:56:32.044 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54977b18]
[DEBUG] 2020-02-28 13:56:32.044 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.044 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:56:32.044 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:56:32.044 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6408bb02]
[DEBUG] 2020-02-28 13:56:32.044 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2def9a28]
[DEBUG] 2020-02-28 13:56:32.044 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:56:32.044 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:32.044 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.045 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.045 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:56:32.045 [http-nio-8080-exec-99] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:56:32.045 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@424f6b36]
[DEBUG] 2020-02-28 13:56:32.045 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.045 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:56:32.045 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:56:32.045 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22c96f84]
[DEBUG] 2020-02-28 13:56:32.045 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73a69f2f]
[DEBUG] 2020-02-28 13:56:32.045 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:56:32.045 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:32.045 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.045 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.045 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:56:32.045 [http-nio-8080-exec-99] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:56:32.046 [http-nio-8080-exec-99] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:56:32.046 [http-nio-8080-exec-99] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a094cb6]
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:56:32.048 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608c7098]
[DEBUG] 2020-02-28 13:56:32.049 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:56:32.049 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:56:32.049 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:56:32.049 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:56:32.049 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:56:32.049 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@277840e9]
[DEBUG] 2020-02-28 13:56:32.050 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a7e8cbc]
[DEBUG] 2020-02-28 13:56:32.050 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:56:32.050 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@297521db]
[DEBUG] 2020-02-28 13:56:32.051 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2842ce78]
[DEBUG] 2020-02-28 13:56:32.051 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:56:32.051 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:56:32.051 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:56:32.051 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:56:32.051 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:56:32.051 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:56:32.051 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d58ac91]
[DEBUG] 2020-02-28 13:56:32.051 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@131dc2ea]
[DEBUG] 2020-02-28 13:56:32.051 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:56:32.051 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:56:32.051 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:56:32.051 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:56:32.051 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:56:32.051 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:56:32.051 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:56:32.052 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:56:32.052 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:56:32.052 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:56:32.052 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@25dd62b9]
[DEBUG] 2020-02-28 13:56:32.052 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:56:32.052 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:56:32.052 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.054 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.056 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79f80cce]
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@518c8155]
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:56:32.057 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@677d1559]
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fba5e49]
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a09e4c2]
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13bbb0cf]
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ce3b83c]
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61d6f5ff]
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:56:32.058 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:56:32.059 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:56:32.059 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:56:32.059 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:56:32.059 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7b7ca44e]
[DEBUG] 2020-02-28 13:56:32.059 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:56:32.059 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:56:32.059 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.059 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.062 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78bdcb20]
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62addc18]
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51b32ad9]
[DEBUG] 2020-02-28 13:56:32.063 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:56:32.064 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47c10f04]
[DEBUG] 2020-02-28 13:56:32.064 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@517293d2]
[DEBUG] 2020-02-28 13:56:32.064 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:56:32.064 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:56:32.064 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:56:32.064 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:56:32.064 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:56:32.064 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:56:32.064 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5db3d8f8]
[DEBUG] 2020-02-28 13:56:32.064 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@159ed475]
[DEBUG] 2020-02-28 13:56:32.064 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:56:32.064 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:56:32.064 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:56:32.065 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:56:32.065 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:56:32.065 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cf6db69]
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fa881fe]
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@27dfc1de]
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f6823a7]
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7dbc0aac]
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34053ea8]
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2aee4694]
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@292fc7ca]
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@345b5129]
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2936d974]
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:56:32.066 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:56:32.067 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:56:32.067 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:56:32.067 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@484ea7b5]
[DEBUG] 2020-02-28 13:56:32.067 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57ac3ab1]
[DEBUG] 2020-02-28 13:56:32.067 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:56:32.067 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:56:32.067 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:56:32.067 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1cfe594]
[DEBUG] 2020-02-28 13:56:32.067 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:56:32.067 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.067 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.067 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:56:32.067 [http-nio-8080-exec-99] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:56:32.067 [http-nio-8080-exec-99] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:56:32.067 [http-nio-8080-exec-99] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51f8a0bd]
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63b084bd]
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f4cef28]
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b254f34]
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:56:32.069 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@614e716]
[DEBUG] 2020-02-28 13:56:32.070 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ee97d53]
[DEBUG] 2020-02-28 13:56:32.070 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:56:32.070 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:56:32.070 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:56:32.070 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:56:32.070 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.070 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.070 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:56:32.070 [http-nio-8080-exec-99] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:56:32.070 [http-nio-8080-exec-99] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:56:32.070 [http-nio-8080-exec-99] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:56:32.077 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13c39cc]
[DEBUG] 2020-02-28 13:56:32.077 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a23dada]
[DEBUG] 2020-02-28 13:56:32.077 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:56:32.077 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:56:32.077 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.077 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:56:32.077 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:56:32.077 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:56:32.077 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:56:32.077 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:56:32.077 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:32.077 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:56:32.078 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:56:32.078 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:56:32.078 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.081 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.081 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 13:56:32.082 [http-nio-8080-exec-99] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 13:56:32.082 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65199bde]
[DEBUG] 2020-02-28 13:56:32.082 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49108f2d]
[DEBUG] 2020-02-28 13:56:32.082 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.082 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:56:32.082 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:32.082 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:56:32.082 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:56:32.082 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.082 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.083 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 13:56:32.083 [http-nio-8080-exec-99] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 13:56:32.083 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b47e155]
[DEBUG] 2020-02-28 13:56:32.083 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66376f7]
[DEBUG] 2020-02-28 13:56:32.083 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:56:32.083 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.083 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:56:32.083 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:56:32.083 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:32.083 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:56:32.083 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:56:32.083 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.083 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.084 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 13:56:32.085 [http-nio-8080-exec-99] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 13:56:32.085 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67a7a262]
[DEBUG] 2020-02-28 13:56:32.085 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aeea4af]
[DEBUG] 2020-02-28 13:56:32.085 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:56:32.085 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.085 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:56:32.085 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 13:56:32.085 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:56:32.085 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:56:32.085 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:56:32.085 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:56:32.085 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e9356fd]
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61574c5c]
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1afc96d7]
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30ba1922]
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b5496c5]
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15e0ff56]
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c533ed]
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65d6597e]
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2afb19bf]
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@387349f9]
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:56:32.086 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.088 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.088 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:56:32.088 [http-nio-8080-exec-99] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 13:56:32.088 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d54a70c]
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11efec79]
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e18754d]
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@207ad4d3]
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32870d25]
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1fd6e6af]
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@697c75ca]
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6398b3e5]
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b74c07f]
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@133faa20]
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19675fa8]
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3fc6d0fa]
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:56:32.089 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.090 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.090 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:56:32.090 [http-nio-8080-exec-99] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 13:56:32.091 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c2c589a]
[DEBUG] 2020-02-28 13:56:32.091 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f15c4a8]
[DEBUG] 2020-02-28 13:56:32.091 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:56:32.091 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.091 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:56:32.091 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:56:32.091 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:56:32.091 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:56:32.091 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:56:32.091 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:56:32.091 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:56:32.091 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.091 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.092 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 13:56:32.092 [http-nio-8080-exec-99] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 13:56:32.092 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e333e92]
[DEBUG] 2020-02-28 13:56:32.092 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fc29b78]
[DEBUG] 2020-02-28 13:56:32.092 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.092 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:56:32.092 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:56:32.092 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:56:32.092 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58ab71e5]
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e938d3]
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56ab0713]
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cce92b5]
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17f22d63]
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21c82313]
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:56:32.094 [http-nio-8080-exec-99] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:56:32.095 [http-nio-8080-exec-99] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:56:32.095 [http-nio-8080-exec-99] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 13:56:32.095 [http-nio-8080-exec-99] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 13:56:32.139 [http-nio-8080-exec-99] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 13:56:32.139 [http-nio-8080-exec-99] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 13:56:32.139 [http-nio-8080-exec-99] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 13:56:32.148 [http-nio-8080-exec-99] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 13:56:32.149 [http-nio-8080-exec-99] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 13:56:32.151 [http-nio-8080-exec-99] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 13:56:32.151 [http-nio-8080-exec-99] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 13:56:32.154 [http-nio-8080-exec-99] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6ef5ef66
[DEBUG] 2020-02-28 13:56:32.157 [http-nio-8080-exec-99] SessionFactoryRegistry - Registering SessionFactory: cdc7c203-3d31-46fc-920e-b3684758d1b8 (<unnamed>)
[DEBUG] 2020-02-28 13:56:32.157 [http-nio-8080-exec-99] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 13:56:32.237 [http-nio-8080-exec-99] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 13:56:32.264 [http-nio-8080-exec-99] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:56:32.340 [http-nio-8080-exec-99] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6f291a39
[DEBUG] 2020-02-28 13:56:32.363 [http-nio-8080-exec-99] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:56:32.371 [http-nio-8080-exec-99] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:56:32.377 [http-nio-8080-exec-99] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 13:56:32.398 [http-nio-8080-exec-99] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 13:56:32.414 [http-nio-8080-exec-99] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 13:56:32.415 [http-nio-8080-exec-99] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 13:56:32.418 [http-nio-8080-exec-99] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 13:56:32.418 [http-nio-8080-exec-99] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 13:56:32.427 [http-nio-8080-exec-99] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 13:56:32.427 [http-nio-8080-exec-99] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 13:56:32.428 [http-nio-8080-exec-99] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 13:56:32.428 [http-nio-8080-exec-99] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:56:32.435 [http-nio-8080-exec-99] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:56:32.436 [http-nio-8080-exec-99] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:56:32.436 [http-nio-8080-exec-99] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:56:32.454 [http-nio-8080-exec-99] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:56:32.474 [http-nio-8080-exec-99] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:56:32.476 [http-nio-8080-exec-99] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:56:32.492 [http-nio-8080-exec-99] Loader - Result set row: 1
[DEBUG] 2020-02-28 13:56:32.492 [http-nio-8080-exec-99] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:56:32.494 [http-nio-8080-exec-99] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:56:32.495 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:56:32.495 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.495 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:56:32.495 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.495 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:56:32.495 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.495 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:56:32.495 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.495 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:56:32.495 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.495 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:56:32.495 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.499 [http-nio-8080-exec-99] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:56:32.502 [http-nio-8080-exec-99] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:56:32.503 [http-nio-8080-exec-99] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:56:32.506 [http-nio-8080-exec-99] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:56:32.517 [http-nio-8080-exec-99] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:56:32.517 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:56:32.517 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.517 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:56:32.517 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.517 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:56:32.517 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.517 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:56:32.517 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.517 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:56:32.517 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.520 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:56:32.520 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.520 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:56:32.520 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.520 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:56:32.520 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.520 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:56:32.520 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.520 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:56:32.520 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.520 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:56:32.520 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.520 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:56:32.520 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.520 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:56:32.522 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.522 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:56:32.522 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.522 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:56:32.522 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.522 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@4b10565
[DEBUG] 2020-02-28 13:56:32.522 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.523 [http-nio-8080-exec-99] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:56:32.523 [http-nio-8080-exec-99] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:56:32.523 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:56:32.523 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.523 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:56:32.523 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.523 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:56:32.523 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.524 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:56:32.524 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.524 [http-nio-8080-exec-99] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:56:32.525 [http-nio-8080-exec-99] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:56:32.527 [http-nio-8080-exec-99] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:56:32.527 [http-nio-8080-exec-99] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:56:32.527 [http-nio-8080-exec-99] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:56:32.527 [http-nio-8080-exec-99] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:56:32.527 [http-nio-8080-exec-99] Loader - Done entity load
[DEBUG] 2020-02-28 13:56:32.527 [http-nio-8080-exec-99] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:56:32.528 [http-nio-8080-exec-99] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:56:32.529 [http-nio-8080-exec-99] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:58:21.675 [http-nio-8080-exec-100] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-28 13:58:21.678 [http-nio-8080-exec-100] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-28 13:58:21.680 [http-nio-8080-exec-100] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-28 13:58:21.780 [http-nio-8080-exec-100] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-28 13:58:21.781 [http-nio-8080-exec-100] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-28 13:58:21.941 [http-nio-8080-exec-100] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-28 13:58:21.942 [http-nio-8080-exec-100] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-28 13:58:21.943 [http-nio-8080-exec-100] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-28 13:58:22.124 [http-nio-8080-exec-100] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-28 13:58:22.147 [http-nio-8080-exec-100] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-28 13:58:22.148 [http-nio-8080-exec-100] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-28 13:58:22.165 [http-nio-8080-exec-100] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-28 13:58:22.201 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4f83b7b2
[DEBUG] 2020-02-28 13:58:22.201 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4f83b7b2
[DEBUG] 2020-02-28 13:58:22.201 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4f83b7b2
[DEBUG] 2020-02-28 13:58:22.202 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@275f6711
[DEBUG] 2020-02-28 13:58:22.202 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7eac16a0
[DEBUG] 2020-02-28 13:58:22.203 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@59ed399e
[DEBUG] 2020-02-28 13:58:22.204 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@18670ccc
[DEBUG] 2020-02-28 13:58:22.204 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@18670ccc
[DEBUG] 2020-02-28 13:58:22.204 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18670ccc
[DEBUG] 2020-02-28 13:58:22.206 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7f7b2b7d
[DEBUG] 2020-02-28 13:58:22.206 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7f7b2b7d
[DEBUG] 2020-02-28 13:58:22.206 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7f7b2b7d
[DEBUG] 2020-02-28 13:58:22.207 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@677c8f24
[DEBUG] 2020-02-28 13:58:22.208 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@677c8f24
[DEBUG] 2020-02-28 13:58:22.208 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@677c8f24
[DEBUG] 2020-02-28 13:58:22.209 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@273cf0f2
[DEBUG] 2020-02-28 13:58:22.209 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@273cf0f2
[DEBUG] 2020-02-28 13:58:22.210 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@273cf0f2
[DEBUG] 2020-02-28 13:58:22.210 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@c12542d
[DEBUG] 2020-02-28 13:58:22.210 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@c12542d
[DEBUG] 2020-02-28 13:58:22.210 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@c12542d
[DEBUG] 2020-02-28 13:58:22.211 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@fba14d7
[DEBUG] 2020-02-28 13:58:22.211 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@fba14d7
[DEBUG] 2020-02-28 13:58:22.211 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@fba14d7
[DEBUG] 2020-02-28 13:58:22.212 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@15dd9e8
[DEBUG] 2020-02-28 13:58:22.212 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@15dd9e8
[DEBUG] 2020-02-28 13:58:22.212 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@15dd9e8
[DEBUG] 2020-02-28 13:58:22.212 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d776f09
[DEBUG] 2020-02-28 13:58:22.212 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d776f09
[DEBUG] 2020-02-28 13:58:22.213 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f61ab8a
[DEBUG] 2020-02-28 13:58:22.213 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f61ab8a
[DEBUG] 2020-02-28 13:58:22.213 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@53de9ef9
[DEBUG] 2020-02-28 13:58:22.213 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@53de9ef9
[DEBUG] 2020-02-28 13:58:22.214 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@68cc9778
[DEBUG] 2020-02-28 13:58:22.214 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11df9739
[DEBUG] 2020-02-28 13:58:22.214 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1e86c584
[DEBUG] 2020-02-28 13:58:22.214 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1e86c584
[DEBUG] 2020-02-28 13:58:22.215 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@39f91ce9
[DEBUG] 2020-02-28 13:58:22.215 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@39f91ce9
[DEBUG] 2020-02-28 13:58:22.217 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6fdbeac9
[DEBUG] 2020-02-28 13:58:22.217 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6fdbeac9
[DEBUG] 2020-02-28 13:58:22.217 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1884a749
[DEBUG] 2020-02-28 13:58:22.218 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1884a749
[DEBUG] 2020-02-28 13:58:22.219 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2b421cd6
[DEBUG] 2020-02-28 13:58:22.220 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2b421cd6
[DEBUG] 2020-02-28 13:58:22.220 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1514ac4
[DEBUG] 2020-02-28 13:58:22.220 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1514ac4
[DEBUG] 2020-02-28 13:58:22.221 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d0aa364
[DEBUG] 2020-02-28 13:58:22.221 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d0aa364
[DEBUG] 2020-02-28 13:58:22.222 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@55293195
[DEBUG] 2020-02-28 13:58:22.222 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@55293195
[DEBUG] 2020-02-28 13:58:22.223 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60dd4a13
[DEBUG] 2020-02-28 13:58:22.223 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60dd4a13
[DEBUG] 2020-02-28 13:58:22.224 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@62d303c6
[DEBUG] 2020-02-28 13:58:22.224 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@62d303c6
[DEBUG] 2020-02-28 13:58:22.225 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7f44bf9f
[DEBUG] 2020-02-28 13:58:22.225 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7f44bf9f
[DEBUG] 2020-02-28 13:58:22.227 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5d96a3a5
[DEBUG] 2020-02-28 13:58:22.228 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5d96a3a5
[DEBUG] 2020-02-28 13:58:22.228 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5d96a3a5
[DEBUG] 2020-02-28 13:58:22.229 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2ab46c4
[DEBUG] 2020-02-28 13:58:22.229 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@19899757
[DEBUG] 2020-02-28 13:58:22.229 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@19899757
[DEBUG] 2020-02-28 13:58:22.230 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@19899757
[DEBUG] 2020-02-28 13:58:22.231 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@25f6c72b
[DEBUG] 2020-02-28 13:58:22.231 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7c118089
[DEBUG] 2020-02-28 13:58:22.231 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7c118089
[DEBUG] 2020-02-28 13:58:22.232 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@476a2f5b
[DEBUG] 2020-02-28 13:58:22.232 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@476a2f5b
[DEBUG] 2020-02-28 13:58:22.232 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6707f01
[DEBUG] 2020-02-28 13:58:22.232 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6707f01
[DEBUG] 2020-02-28 13:58:22.234 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@49d18e9
[DEBUG] 2020-02-28 13:58:22.234 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49d18e9
[DEBUG] 2020-02-28 13:58:22.235 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4841cd0b
[DEBUG] 2020-02-28 13:58:22.236 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4841cd0b
[DEBUG] 2020-02-28 13:58:22.236 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@36922b4c
[DEBUG] 2020-02-28 13:58:22.237 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@512a75e
[DEBUG] 2020-02-28 13:58:22.237 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@512a75e
[DEBUG] 2020-02-28 13:58:22.237 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@512a75e
[DEBUG] 2020-02-28 13:58:22.238 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4badb819
[DEBUG] 2020-02-28 13:58:22.238 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4badb819
[DEBUG] 2020-02-28 13:58:22.238 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4badb819
[DEBUG] 2020-02-28 13:58:22.239 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2efd8302
[DEBUG] 2020-02-28 13:58:22.240 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@29e9626c
[DEBUG] 2020-02-28 13:58:22.241 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6ca6dcd4
[DEBUG] 2020-02-28 13:58:22.241 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6ca6dcd4
[DEBUG] 2020-02-28 13:58:22.241 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6ca6dcd4
[DEBUG] 2020-02-28 13:58:22.243 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@41ff8aba
[DEBUG] 2020-02-28 13:58:22.243 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@41ff8aba
[DEBUG] 2020-02-28 13:58:22.243 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@41ff8aba
[DEBUG] 2020-02-28 13:58:22.243 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@451584d3
[DEBUG] 2020-02-28 13:58:22.244 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@600e3f18
[DEBUG] 2020-02-28 13:58:22.245 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@16b9f90d
[DEBUG] 2020-02-28 13:58:22.245 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@16b9f90d
[DEBUG] 2020-02-28 13:58:22.246 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2add81fa
[DEBUG] 2020-02-28 13:58:22.247 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@b6e2f3e
[DEBUG] 2020-02-28 13:58:22.247 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b6e2f3e
[DEBUG] 2020-02-28 13:58:22.247 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@54d488a
[DEBUG] 2020-02-28 13:58:22.247 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@54d488a
[DEBUG] 2020-02-28 13:58:22.248 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@51870e04
[DEBUG] 2020-02-28 13:58:22.248 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@689ef78a
[DEBUG] 2020-02-28 13:58:22.249 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@47ed9f45
[DEBUG] 2020-02-28 13:58:22.251 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2041552c
[DEBUG] 2020-02-28 13:58:22.251 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2041552c
[DEBUG] 2020-02-28 13:58:22.251 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@8326ba2
[DEBUG] 2020-02-28 13:58:22.251 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@23c14db1
[DEBUG] 2020-02-28 13:58:22.251 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@181b5d77
[DEBUG] 2020-02-28 13:58:22.251 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3fdb331b
[DEBUG] 2020-02-28 13:58:22.251 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24af2039
[DEBUG] 2020-02-28 13:58:22.251 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@daa4dd8
[DEBUG] 2020-02-28 13:58:22.251 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4f9849ff
[DEBUG] 2020-02-28 13:58:22.251 [http-nio-8080-exec-100] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@293de8fc
[DEBUG] 2020-02-28 13:58:22.283 [http-nio-8080-exec-100] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-28 13:58:22.284 [http-nio-8080-exec-100] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-28 13:58:22.285 [http-nio-8080-exec-100] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:58:22.286 [http-nio-8080-exec-100] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-28 13:58:22.287 [http-nio-8080-exec-100] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-28 13:58:22.287 [http-nio-8080-exec-100] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-28 13:58:22.288 [http-nio-8080-exec-100] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-28 13:58:22.289 [http-nio-8080-exec-100] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:58:22.289 [http-nio-8080-exec-100] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-28 13:58:22.289 [http-nio-8080-exec-100] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-28 13:58:22.290 [http-nio-8080-exec-100] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-28 13:58:22.290 [http-nio-8080-exec-100] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-28 13:58:22.290 [http-nio-8080-exec-100] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-28 13:58:22.290 [http-nio-8080-exec-100] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-28 13:58:22.297 [http-nio-8080-exec-100] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-28 13:58:22.297 [http-nio-8080-exec-100] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-28 13:58:22.297 [http-nio-8080-exec-100] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-28 13:58:22.431 [http-nio-8080-exec-100] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-28 13:58:22.784 [http-nio-8080-exec-100] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:58:22.784 [http-nio-8080-exec-100] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-28 13:58:22.784 [http-nio-8080-exec-100] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-28 13:58:22.802 [http-nio-8080-exec-100] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-02-28 13:58:22.818 [http-nio-8080-exec-100] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-28 13:58:22.845 [http-nio-8080-exec-100] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-28 13:58:22.871 [http-nio-8080-exec-100] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-28 13:58:22.874 [http-nio-8080-exec-100] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@530ff992] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70ee2cce]
[DEBUG] 2020-02-28 13:58:22.923 [http-nio-8080-exec-100] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:58:22.954 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:58:22.960 [http-nio-8080-exec-100] EntityBinder - Import with entity name User
[DEBUG] 2020-02-28 13:58:22.962 [http-nio-8080-exec-100] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-28 13:58:22.993 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:22.996 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-28 13:58:22.997 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-28 13:58:22.998 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-28 13:58:23.002 [http-nio-8080-exec-100] PropertyBinder - Building property userId
[DEBUG] 2020-02-28 13:58:23.005 [http-nio-8080-exec-100] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:58:23.007 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.007 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:58:23.007 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-28 13:58:23.007 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:58:23.007 [http-nio-8080-exec-100] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:58:23.008 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.008 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-28 13:58:23.008 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-28 13:58:23.008 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-28 13:58:23.008 [http-nio-8080-exec-100] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-28 13:58:23.009 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:58:23.009 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:58:23.009 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-28 13:58:23.009 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:58:23.009 [http-nio-8080-exec-100] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:58:23.009 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.009 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:58:23.009 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-28 13:58:23.009 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:58:23.009 [http-nio-8080-exec-100] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:58:23.011 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:58:23.012 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.013 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.019 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.020 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.021 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:58:23.022 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:58:23.022 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:58:23.023 [http-nio-8080-exec-100] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:58:23.026 [http-nio-8080-exec-100] PropertyBinder - Building property faqs
[DEBUG] 2020-02-28 13:58:23.026 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-28 13:58:23.027 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] PropertyBinder - Building property gender
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] PropertyBinder - Building property password
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] PropertyBinder - Building property picture
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.028 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.029 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.029 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.029 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:58:23.029 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:58:23.029 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:58:23.029 [http-nio-8080-exec-100] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:58:23.029 [http-nio-8080-exec-100] PropertyBinder - Building property roles
[DEBUG] 2020-02-28 13:58:23.029 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:58:23.029 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.029 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.029 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.030 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.030 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:58:23.030 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:58:23.030 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-28 13:58:23.030 [http-nio-8080-exec-100] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:58:23.030 [http-nio-8080-exec-100] PropertyBinder - Building property trailers
[DEBUG] 2020-02-28 13:58:23.030 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.030 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:58:23.030 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-28 13:58:23.030 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:58:23.030 [http-nio-8080-exec-100] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:58:23.030 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-28 13:58:23.030 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-28 13:58:23.030 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-28 13:58:23.030 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-28 13:58:23.030 [http-nio-8080-exec-100] PropertyBinder - Building property username
[DEBUG] 2020-02-28 13:58:23.031 [http-nio-8080-exec-100] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:58:23.031 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:58:23.031 [http-nio-8080-exec-100] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-28 13:58:23.032 [http-nio-8080-exec-100] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-28 13:58:23.036 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.036 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-28 13:58:23.036 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-28 13:58:23.036 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-28 13:58:23.036 [http-nio-8080-exec-100] PropertyBinder - Building property roleId
[DEBUG] 2020-02-28 13:58:23.036 [http-nio-8080-exec-100] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:58:23.037 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.037 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:58:23.037 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-28 13:58:23.037 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:58:23.037 [http-nio-8080-exec-100] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:58:23.047 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.047 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-28 13:58:23.047 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-28 13:58:23.047 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-28 13:58:23.047 [http-nio-8080-exec-100] PropertyBinder - Building property name
[DEBUG] 2020-02-28 13:58:23.047 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.047 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:58:23.047 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-28 13:58:23.047 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:58:23.047 [http-nio-8080-exec-100] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:58:23.048 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-28 13:58:23.048 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.049 [http-nio-8080-exec-100] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:58:23.049 [http-nio-8080-exec-100] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:58:23.050 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:58:23.050 [http-nio-8080-exec-100] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-02-28 13:58:23.050 [http-nio-8080-exec-100] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-02-28 13:58:23.050 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.051 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-02-28 13:58:23.051 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-02-28 13:58:23.051 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-02-28 13:58:23.051 [http-nio-8080-exec-100] PropertyBinder - Building property trailerId
[DEBUG] 2020-02-28 13:58:23.051 [http-nio-8080-exec-100] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:58:23.051 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.051 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-02-28 13:58:23.051 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-02-28 13:58:23.051 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-02-28 13:58:23.051 [http-nio-8080-exec-100] PropertyBinder - Building property author
[DEBUG] 2020-02-28 13:58:23.051 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.051 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:58:23.051 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-02-28 13:58:23.051 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:58:23.052 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] EntityBinder - Import with entity name Genre
[DEBUG] 2020-02-28 13:58:23.053 [http-nio-8080-exec-100] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-02-28 13:58:23.054 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.054 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-02-28 13:58:23.054 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-02-28 13:58:23.054 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-02-28 13:58:23.054 [http-nio-8080-exec-100] PropertyBinder - Building property genreId
[DEBUG] 2020-02-28 13:58:23.054 [http-nio-8080-exec-100] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:58:23.054 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.054 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:58:23.055 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-02-28 13:58:23.055 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:58:23.055 [http-nio-8080-exec-100] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:58:23.055 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.055 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:58:23.055 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-02-28 13:58:23.055 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:58:23.055 [http-nio-8080-exec-100] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:58:23.055 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.055 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.055 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.055 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:58:23.056 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:58:23.056 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-02-28 13:58:23.056 [http-nio-8080-exec-100] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:58:23.056 [http-nio-8080-exec-100] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:58:23.056 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.056 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:58:23.056 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-02-28 13:58:23.056 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:58:23.056 [http-nio-8080-exec-100] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:58:23.056 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.056 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:58:23.056 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-02-28 13:58:23.056 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:58:23.056 [http-nio-8080-exec-100] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:58:23.057 [http-nio-8080-exec-100] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:58:23.057 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:58:23.057 [http-nio-8080-exec-100] EntityBinder - Import with entity name Film
[DEBUG] 2020-02-28 13:58:23.057 [http-nio-8080-exec-100] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] PropertyBinder - Building property filmId
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] PropertyBinder - Building property cover
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:58:23.059 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] PropertyBinder - Building property crews
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] PropertyBinder - Building property director
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] PropertyBinder - Building property duration
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-02-28 13:58:23.060 [http-nio-8080-exec-100] PropertyBinder - Building property episode
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] PropertyBinder - Building property genres
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] PropertyBinder - Building property link
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] PropertyBinder - Building property publicationDate
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] PropertyBinder - Building property summary
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.061 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] PropertyBinder - Building property video
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-02-28 13:58:23.062 [http-nio-8080-exec-100] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-02-28 13:58:23.063 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.063 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-02-28 13:58:23.063 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-02-28 13:58:23.063 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-02-28 13:58:23.063 [http-nio-8080-exec-100] PropertyBinder - Building property faqId
[DEBUG] 2020-02-28 13:58:23.063 [http-nio-8080-exec-100] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:58:23.063 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.063 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-02-28 13:58:23.063 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] PropertyBinder - Building property category
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] PropertyBinder - Building property description
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] PropertyBinder - Building property title
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] PropertyBinder - Building property user
[DEBUG] 2020-02-28 13:58:23.064 [http-nio-8080-exec-100] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:58:23.065 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-28 13:58:23.065 [http-nio-8080-exec-100] EntityBinder - Import with entity name Crew
[DEBUG] 2020-02-28 13:58:23.065 [http-nio-8080-exec-100] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-02-28 13:58:23.067 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.068 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-02-28 13:58:23.068 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-02-28 13:58:23.068 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] PropertyBinder - Building property crewId
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] PropertyBinder - Building property biography
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=false, unique=false}
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-28 13:58:23.069 [http-nio-8080-exec-100] PropertyBinder - Building property email
[DEBUG] 2020-02-28 13:58:23.070 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.070 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.070 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.070 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-28 13:58:23.070 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:58:23.070 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-02-28 13:58:23.070 [http-nio-8080-exec-100] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:58:23.070 [http-nio-8080-exec-100] PropertyBinder - Building property films
[DEBUG] 2020-02-28 13:58:23.070 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.070 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-28 13:58:23.071 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-02-28 13:58:23.071 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-28 13:58:23.071 [http-nio-8080-exec-100] PropertyBinder - Building property firstName
[DEBUG] 2020-02-28 13:58:23.071 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.071 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-28 13:58:23.071 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-02-28 13:58:23.071 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-28 13:58:23.071 [http-nio-8080-exec-100] PropertyBinder - Building property lastName
[DEBUG] 2020-02-28 13:58:23.071 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.071 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-02-28 13:58:23.071 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-02-28 13:58:23.071 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-02-28 13:58:23.071 [http-nio-8080-exec-100] PropertyBinder - Building property profession
[DEBUG] 2020-02-28 13:58:23.072 [http-nio-8080-exec-100] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-28 13:58:23.072 [http-nio-8080-exec-100] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-28 13:58:23.072 [http-nio-8080-exec-100] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-02-28 13:58:23.072 [http-nio-8080-exec-100] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-28 13:58:23.072 [http-nio-8080-exec-100] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-28 13:58:23.074 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-28 13:58:23.074 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:58:23.074 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-28 13:58:23.074 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:58:23.074 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:58:23.074 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:58:23.074 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-28 13:58:23.074 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:58:23.074 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-28 13:58:23.074 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-28 13:58:23.074 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:58:23.074 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-28 13:58:23.074 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-28 13:58:23.074 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:58:23.074 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-28 13:58:23.075 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:58:23.075 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-02-28 13:58:23.075 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-02-28 13:58:23.075 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:58:23.075 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:58:23.075 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:58:23.075 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:58:23.075 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:58:23.075 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:58:23.075 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:58:23.075 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:58:23.075 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:58:23.075 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-02-28 13:58:23.076 [http-nio-8080-exec-100] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-28 13:58:23.085 [http-nio-8080-exec-100] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-28 13:58:23.086 [http-nio-8080-exec-100] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-28 13:58:23.086 [http-nio-8080-exec-100] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-02-28 13:58:23.086 [http-nio-8080-exec-100] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-02-28 13:58:23.086 [http-nio-8080-exec-100] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-02-28 13:58:23.086 [http-nio-8080-exec-100] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-02-28 13:58:23.086 [http-nio-8080-exec-100] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-02-28 13:58:23.086 [http-nio-8080-exec-100] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:58:23.086 [http-nio-8080-exec-100] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:58:23.088 [http-nio-8080-exec-100] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:58:23.088 [http-nio-8080-exec-100] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-02-28 13:58:23.088 [http-nio-8080-exec-100] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-02-28 13:58:23.088 [http-nio-8080-exec-100] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:58:23.088 [http-nio-8080-exec-100] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:58:23.088 [http-nio-8080-exec-100] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:58:23.088 [http-nio-8080-exec-100] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-02-28 13:58:23.088 [http-nio-8080-exec-100] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-02-28 13:58:23.088 [http-nio-8080-exec-100] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:58:23.088 [http-nio-8080-exec-100] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-02-28 13:58:23.088 [http-nio-8080-exec-100] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-02-28 13:58:23.088 [http-nio-8080-exec-100] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-02-28 13:58:23.088 [http-nio-8080-exec-100] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:58:23.088 [http-nio-8080-exec-100] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:58:23.088 [http-nio-8080-exec-100] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-02-28 13:58:23.088 [http-nio-8080-exec-100] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:58:23.089 [http-nio-8080-exec-100] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:58:23.090 [http-nio-8080-exec-100] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:58:23.090 [http-nio-8080-exec-100] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-02-28 13:58:23.090 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:58:23.090 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:58:23.093 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:58:23.093 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:58:23.093 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:58:23.093 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:58:23.093 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:58:23.093 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:58:23.093 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:58:23.095 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-28 13:58:23.095 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:58:23.095 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:58:23.095 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:58:23.095 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:58:23.095 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:58:23.095 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:58:23.095 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:58:23.095 [http-nio-8080-exec-100] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:58:23.148 [http-nio-8080-exec-100] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - SessionFactory name : null
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Statistics: disabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Default null ordering: NONE
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Query language substitutions: {}
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Named query checking : enabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Second-level cache: disabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - JDBC batch size: 15
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - JPA compliance - query : 
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-28 13:58:23.149 [http-nio-8080-exec-100] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-28 13:58:23.208 [http-nio-8080-exec-100] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-28 13:58:23.221 [http-nio-8080-exec-100] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-28 13:58:23.221 [http-nio-8080-exec-100] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4a99d8eb, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-28 13:58:23.239 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:58:23.239 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:58:23.240 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:58:23.240 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:58:23.240 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:58:23.240 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:58:23.241 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:58:23.241 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:58:23.241 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:58:23.241 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:58:23.241 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:58:23.241 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:58:23.242 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:58:23.242 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:58:23.267 [http-nio-8080-exec-100] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-28 13:58:23.268 [http-nio-8080-exec-100] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-28 13:58:23.268 [http-nio-8080-exec-100] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@530ff992] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@20a77caa]
[DEBUG] 2020-02-28 13:58:23.312 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:58:23.312 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:58:23.325 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-02-28 13:58:23.325 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:58:23.623 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:58:23.623 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:58:23.623 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-02-28 13:58:23.624 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:58:23.647 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:58:23.649 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:58:23.649 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-28 13:58:23.649 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:58:23.674 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:58:23.674 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:58:23.674 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-02-28 13:58:23.674 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:58:23.692 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:58:23.692 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:58:23.695 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-02-28 13:58:23.695 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:58:23.721 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:58:23.721 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:58:23.725 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-28 13:58:23.725 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-28 13:58:23.743 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:58:23.744 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:58:23.745 [http-nio-8080-exec-100] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-02-28 13:58:23.745 [http-nio-8080-exec-100] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:58:23.772 [http-nio-8080-exec-100] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-02-28 13:58:23.773 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-02-28 13:58:23.773 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-02-28 13:58:23.773 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-02-28 13:58:23.773 [http-nio-8080-exec-100] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-02-28 13:58:23.774 [http-nio-8080-exec-100] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:58:23.774 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-28 13:58:23.774 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-28 13:58:23.774 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-28 13:58:23.774 [http-nio-8080-exec-100] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-28 13:58:23.774 [http-nio-8080-exec-100] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-02-28 13:58:23.774 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-02-28 13:58:23.774 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-02-28 13:58:23.774 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-02-28 13:58:23.774 [http-nio-8080-exec-100] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-02-28 13:58:23.776 [http-nio-8080-exec-100] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-02-28 13:58:23.779 [http-nio-8080-exec-100] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-02-28 13:58:23.779 [http-nio-8080-exec-100] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-02-28 13:58:23.779 [http-nio-8080-exec-100] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-02-28 13:58:23.779 [http-nio-8080-exec-100] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:58:23.779 [http-nio-8080-exec-100] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-02-28 13:58:23.779 [http-nio-8080-exec-100] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-02-28 13:58:23.779 [http-nio-8080-exec-100] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:58:23.811 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d823ee0]
[DEBUG] 2020-02-28 13:58:23.812 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:58:23.812 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.812 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:58:23.815 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d39485f]
[DEBUG] 2020-02-28 13:58:23.816 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30991be8]
[DEBUG] 2020-02-28 13:58:23.816 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:58:23.816 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:58:23.816 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:58:23.816 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:58:23.816 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ee61eeb]
[DEBUG] 2020-02-28 13:58:23.816 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760a7c5f]
[DEBUG] 2020-02-28 13:58:23.817 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:58:23.817 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:58:23.817 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:58:23.817 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:58:23.817 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.817 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:58:23.818 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@452118a0]
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@559d10bd]
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31ec5efd]
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1bff28c2]
[DEBUG] 2020-02-28 13:58:23.819 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48b796f6]
[DEBUG] 2020-02-28 13:58:23.820 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:58:23.820 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:58:23.820 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:58:23.820 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:58:23.820 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:58:23.820 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:58:23.820 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6507da46]
[DEBUG] 2020-02-28 13:58:23.820 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6603d2de]
[DEBUG] 2020-02-28 13:58:23.820 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:58:23.820 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:58:23.820 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:58:23.821 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3c05c1d6]
[DEBUG] 2020-02-28 13:58:23.822 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:58:23.822 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:58:23.822 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.831 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.835 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:58:23.836 [http-nio-8080-exec-100] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:58:23.836 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51782d93]
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@735c132b]
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a59823e]
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2add3453]
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b7d5ba5]
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38abc0aa]
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d2927de]
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cc8f5ad]
[DEBUG] 2020-02-28 13:58:23.837 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:58:23.838 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:58:23.840 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:58:23.840 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:58:23.840 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:58:23.840 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:58:23.840 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:58:23.840 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:58:23.840 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a80c20e]
[DEBUG] 2020-02-28 13:58:23.840 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b1b58d8]
[DEBUG] 2020-02-28 13:58:23.841 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:58:23.841 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:58:23.841 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:58:23.841 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:58:23.841 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:58:23.842 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:58:23.842 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@281a5a53]
[DEBUG] 2020-02-28 13:58:23.842 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39d61a10]
[DEBUG] 2020-02-28 13:58:23.842 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:58:23.842 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:58:23.842 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:58:23.842 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@72584989]
[DEBUG] 2020-02-28 13:58:23.842 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:58:23.842 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:58:23.842 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.842 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.843 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:58:23.843 [http-nio-8080-exec-100] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-02-28 13:58:23.852 [http-nio-8080-exec-100] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:58:23.852 [http-nio-8080-exec-100] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4acf975b]
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e2b1882]
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c70d872]
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dd1417]
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b4e366]
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@140bba83]
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6799e3d4]
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e0f8206]
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@12a88f7c]
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.853 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fe8760a]
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b207df4]
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2daa9ae0]
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eaed4da]
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5619d326]
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30867e5e]
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9cafb35]
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a3d00dc]
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:58:23.854 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:58:23.855 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@571bc580]
[DEBUG] 2020-02-28 13:58:23.855 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:58:23.855 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.855 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.856 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:58:23.856 [http-nio-8080-exec-100] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:58:23.857 [http-nio-8080-exec-100] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:58:23.857 [http-nio-8080-exec-100] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c575bd6]
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67b07ee4]
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@531890f1]
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49078e63]
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2da48ef9]
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77aae10b]
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:58:23.858 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:58:23.859 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:58:23.859 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:58:23.859 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:58:23.859 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60a26817]
[DEBUG] 2020-02-28 13:58:23.859 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@152396f6]
[DEBUG] 2020-02-28 13:58:23.859 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:58:23.859 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:58:23.859 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:58:23.859 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1cf901ed]
[DEBUG] 2020-02-28 13:58:23.859 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:58:23.859 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.859 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.860 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:58:23.860 [http-nio-8080-exec-100] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:58:23.860 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f6a2c88]
[DEBUG] 2020-02-28 13:58:23.860 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.860 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:58:23.860 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.860 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:58:23.860 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12d500ef]
[DEBUG] 2020-02-28 13:58:23.861 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:58:23.861 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:58:23.861 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:58:23.861 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:58:23.861 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:58:23.861 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6814d258]
[DEBUG] 2020-02-28 13:58:23.861 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12a43ac0]
[DEBUG] 2020-02-28 13:58:23.861 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:58:23.861 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28cc9203]
[DEBUG] 2020-02-28 13:58:23.861 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7be8beb8]
[DEBUG] 2020-02-28 13:58:23.863 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35a0258f]
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e17bc1]
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4a71bd94]
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:58:23.864 [http-nio-8080-exec-100] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-28 13:58:23.866 [http-nio-8080-exec-100] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:58:23.866 [http-nio-8080-exec-100] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-28 13:58:23.866 [http-nio-8080-exec-100] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-02-28 13:58:23.866 [http-nio-8080-exec-100] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-02-28 13:58:23.866 [http-nio-8080-exec-100] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-02-28 13:58:23.867 [http-nio-8080-exec-100] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:58:23.867 [http-nio-8080-exec-100] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-02-28 13:58:23.867 [http-nio-8080-exec-100] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-02-28 13:58:23.867 [http-nio-8080-exec-100] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-02-28 13:58:23.868 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@406a0844]
[DEBUG] 2020-02-28 13:58:23.868 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a82d5c9]
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@688a19b2]
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@783214cf]
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b320f12]
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@534ddc4f]
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:58:23.869 [http-nio-8080-exec-100] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bb13e85]
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22e5e0f2]
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d80af28]
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@555e0adb]
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@583192f2]
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@789c5366]
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@504d4ab2]
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75e09ab2]
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:58:23.870 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:58:23.871 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:58:23.871 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:58:23.871 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:58:23.871 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:58:23.871 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:58:23.871 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:58:23.871 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1ad95c0]
[DEBUG] 2020-02-28 13:58:23.871 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:58:23.871 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:58:23.871 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.871 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.871 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:58:23.872 [http-nio-8080-exec-100] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:58:23.872 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404c716e]
[DEBUG] 2020-02-28 13:58:23.872 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:58:23.872 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:58:23.872 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.872 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:58:23.872 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:58:23.872 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:58:23.872 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:58:23.872 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:58:23.872 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.872 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c6a7e53]
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72885603]
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54eb45bc]
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6bcc3194]
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec700ae]
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e4f6d3b]
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@608703eb]
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:58:23.875 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:58:23.876 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@195ae36a]
[DEBUG] 2020-02-28 13:58:23.877 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:58:23.877 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:58:23.877 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.879 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.879 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:8>
                   - CompositeQuerySpaceImpl(uid=<gen:8>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-28 13:58:23.879 [http-nio-8080-exec-100] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45a4bf12]
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c8e9e6f]
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c9bb9a4]
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c27d10a]
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3548fcb4]
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d0d7194]
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c5aaf08]
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1acf2fee]
[DEBUG] 2020-02-28 13:58:23.880 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43b4f150]
[DEBUG] 2020-02-28 13:58:23.881 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:58:23.881 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:58:23.881 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:58:23.881 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@71f14efe]
[DEBUG] 2020-02-28 13:58:23.881 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:58:23.881 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.881 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.884 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2db40f13]
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@321374f9]
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ce57cc]
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e8f1431]
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7576ba01]
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c6bbcea]
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6daae09c]
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ad9333d]
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@204d9efa]
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@69caab08]
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.885 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.887 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:9>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:5>
             - CollectionQuerySpaceImpl(uid=<gen:5>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:9>
             - CompositeQuerySpaceImpl(uid=<gen:9>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-28 13:58:23.887 [http-nio-8080-exec-100] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:58:23.887 [http-nio-8080-exec-100] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:58:23.887 [http-nio-8080-exec-100] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:58:23.890 [http-nio-8080-exec-100] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] AbstractEntityPersister -  Update 0: update Crew set biography=?, email=?, first_name=?, last_name=?, profession=?, updated_at=? where crew_id=?
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d432d4]
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@596cde08]
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542b5c5c]
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.891 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.892 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:58:23.892 [http-nio-8080-exec-100] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:58:23.892 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7548969f]
[DEBUG] 2020-02-28 13:58:23.892 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:58:23.892 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.892 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:58:23.892 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:58:23.894 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19e6e892]
[DEBUG] 2020-02-28 13:58:23.894 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17a18e4e]
[DEBUG] 2020-02-28 13:58:23.894 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:58:23.894 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:58:23.894 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:58:23.894 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:58:23.894 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.895 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.895 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}

[DEBUG] 2020-02-28 13:58:23.895 [http-nio-8080-exec-100] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:58:23.895 [http-nio-8080-exec-100] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:58:23.895 [http-nio-8080-exec-100] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-02-28 13:58:23.898 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70f01108]
[DEBUG] 2020-02-28 13:58:23.898 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48ce9ab]
[DEBUG] 2020-02-28 13:58:23.898 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-02-28 13:58:23.898 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:58:23.898 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.898 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:58:23.898 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:58:23.898 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:58:23.898 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:58:23.898 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:58:23.898 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.898 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:58:23.898 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:58:23.899 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:58:23.899 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.902 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.902 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-02-28 13:58:23.903 [http-nio-8080-exec-100] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-02-28 13:58:23.903 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f65f641]
[DEBUG] 2020-02-28 13:58:23.903 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b9bbc6e]
[DEBUG] 2020-02-28 13:58:23.903 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.903 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-28 13:58:23.903 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.903 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:58:23.903 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:58:23.903 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.903 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.903 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fbe138b]
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3920acde]
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@105ab133]
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ca0a9ba]
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@108123d2]
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39c5b501]
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@226c7923]
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@500dc757]
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44f40dea]
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@590c136]
[DEBUG] 2020-02-28 13:58:23.904 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@131d0049]
[DEBUG] 2020-02-28 13:58:23.905 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:58:23.905 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d944a02]
[DEBUG] 2020-02-28 13:58:23.905 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49eb9907]
[DEBUG] 2020-02-28 13:58:23.905 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:58:23.905 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:58:23.905 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:58:23.905 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4a71787d]
[DEBUG] 2020-02-28 13:58:23.905 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:58:23.905 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:58:23.905 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.906 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.907 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:58:23.907 [http-nio-8080-exec-100] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-02-28 13:58:23.907 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72a71372]
[DEBUG] 2020-02-28 13:58:23.907 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39c05f10]
[DEBUG] 2020-02-28 13:58:23.907 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:58:23.907 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.907 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:58:23.907 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b210937]
[DEBUG] 2020-02-28 13:58:23.907 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1022eb9c]
[DEBUG] 2020-02-28 13:58:23.907 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:58:23.907 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:58:23.907 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:58:23.907 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:58:23.907 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-02-28 13:58:23.907 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1865ac1c]
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67723427]
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@600b5d5e]
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@553b080f]
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ea0474b]
[DEBUG] 2020-02-28 13:58:23.908 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-02-28 13:58:23.909 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@280583b4]
[DEBUG] 2020-02-28 13:58:23.909 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@125eda47]
[DEBUG] 2020-02-28 13:58:23.909 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-28 13:58:23.909 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-28 13:58:23.909 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-28 13:58:23.909 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1f28d373]
[DEBUG] 2020-02-28 13:58:23.909 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-28 13:58:23.909 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:58:23.909 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.909 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.910 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-02-28 13:58:23.910 [http-nio-8080-exec-100] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-02-28 13:58:23.911 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47f27638]
[DEBUG] 2020-02-28 13:58:23.911 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@239a1063]
[DEBUG] 2020-02-28 13:58:23.911 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-28 13:58:23.911 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.911 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-28 13:58:23.911 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:58:23.911 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:58:23.911 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-28 13:58:23.911 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-28 13:58:23.911 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-02-28 13:58:23.911 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-28 13:58:23.911 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id where crews0_.film_id=?
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f969a0f]
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cfc9896]
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a0b5cf1]
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@723b530e]
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-02-28 13:58:23.912 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20a66831]
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@82dfc08]
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34a6a360]
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@669ec7e5]
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-02-28 13:58:23.913 [http-nio-8080-exec-100] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-02-28 13:58:23.953 [http-nio-8080-exec-100] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-28 13:58:23.953 [http-nio-8080-exec-100] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-28 13:58:23.953 [http-nio-8080-exec-100] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-28 13:58:23.959 [http-nio-8080-exec-100] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-28 13:58:23.959 [http-nio-8080-exec-100] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-28 13:58:23.960 [http-nio-8080-exec-100] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-28 13:58:23.960 [http-nio-8080-exec-100] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-28 13:58:23.962 [http-nio-8080-exec-100] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@42e495e2
[DEBUG] 2020-02-28 13:58:23.963 [http-nio-8080-exec-100] SessionFactoryRegistry - Registering SessionFactory: 5ba56207-78ba-42b8-97d7-db656606cf0c (<unnamed>)
[DEBUG] 2020-02-28 13:58:23.963 [http-nio-8080-exec-100] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-28 13:58:24.044 [http-nio-8080-exec-100] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-28 13:58:24.070 [http-nio-8080-exec-100] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:58:24.088 [http-nio-8080-exec-100] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@280aea1
[DEBUG] 2020-02-28 13:58:24.113 [http-nio-8080-exec-100] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:58:24.121 [http-nio-8080-exec-100] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:58:24.135 [http-nio-8080-exec-100] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'FAQ'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-28 13:58:24.154 [http-nio-8080-exec-100] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-28 13:58:24.236 [http-nio-8080-exec-100] FromElement - FromClause{level=1} : com.streammedia.entity.FAQ (generatedAlias0) -> faq0_
[DEBUG] 2020-02-28 13:58:24.237 [http-nio-8080-exec-100] FromReferenceNode - Resolved : generatedAlias0 -> faq0_.faq_id
[DEBUG] 2020-02-28 13:58:24.239 [http-nio-8080-exec-100] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-28 13:58:24.239 [http-nio-8080-exec-100] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} faq0_.faq_id ) ( FromClause{level=1} faq faq0_ ) )
[DEBUG] 2020-02-28 13:58:24.246 [http-nio-8080-exec-100] JoinProcessor - Using FROM fragment [faq faq0_]
[DEBUG] 2020-02-28 13:58:24.246 [http-nio-8080-exec-100] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-28 13:58:24.246 [http-nio-8080-exec-100] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (faq)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faq0_.faq_id as faq_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.FAQ, tableAlias=faq0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[faq0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'faq faq0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=faq,tableAlias=faq0_,origin=null,columns={,className=com.streammedia.entity.FAQ}}

[DEBUG] 2020-02-28 13:58:24.246 [http-nio-8080-exec-100] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:58:24.252 [http-nio-8080-exec-100] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:58:24.252 [http-nio-8080-exec-100] QueryTranslatorImpl - SQL: select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:58:24.252 [http-nio-8080-exec-100] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-28 13:58:24.272 [http-nio-8080-exec-100] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:58:24.295 [http-nio-8080-exec-100] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:58:24.297 [http-nio-8080-exec-100] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:58:24.311 [http-nio-8080-exec-100] Loader - Result set row: 1
[DEBUG] 2020-02-28 13:58:24.311 [http-nio-8080-exec-100] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:58:24.313 [http-nio-8080-exec-100] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:58:24.316 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:58:24.316 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.316 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:58:24.316 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.316 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:58:24.316 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.316 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:58:24.316 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.316 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:58:24.316 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.316 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:58:24.316 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.319 [http-nio-8080-exec-100] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:58:24.323 [http-nio-8080-exec-100] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:58:24.325 [http-nio-8080-exec-100] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:58:24.334 [http-nio-8080-exec-100] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:58:24.345 [http-nio-8080-exec-100] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:58:24.346 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:58:24.346 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.346 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:58:24.346 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.346 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:58:24.346 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.346 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:58:24.346 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.346 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:58:24.346 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.347 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:58:24.347 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.347 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:58:24.347 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.347 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:58:24.347 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.347 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:58:24.347 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.347 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:58:24.347 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.347 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:58:24.347 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.347 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:58:24.347 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.347 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:58:24.348 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.348 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:58:24.348 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.348 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:58:24.348 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.348 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@41b69ec9
[DEBUG] 2020-02-28 13:58:24.348 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.349 [http-nio-8080-exec-100] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:58:24.349 [http-nio-8080-exec-100] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:58:24.349 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:58:24.349 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.349 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:58:24.349 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.349 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:58:24.349 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.349 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:58:24.349 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.349 [http-nio-8080-exec-100] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:58:24.349 [http-nio-8080-exec-100] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:58:24.351 [http-nio-8080-exec-100] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:58:24.352 [http-nio-8080-exec-100] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:58:24.352 [http-nio-8080-exec-100] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:58:24.352 [http-nio-8080-exec-100] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:58:24.353 [http-nio-8080-exec-100] Loader - Done entity load
[DEBUG] 2020-02-28 13:58:24.353 [http-nio-8080-exec-100] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:58:24.353 [http-nio-8080-exec-100] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:58:24.353 [http-nio-8080-exec-100] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:58:24.353 [http-nio-8080-exec-100] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:24.354 [http-nio-8080-exec-100] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:58:24.355 [http-nio-8080-exec-100] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-28 13:58:34.407 [http-nio-8080-exec-111] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from FAQ as generatedAlias0
[DEBUG] 2020-02-28 13:58:34.407 [http-nio-8080-exec-111] SQL - select faq0_.faq_id as faq_id1_1_, faq0_.category as category2_1_, faq0_.created_at as created_3_1_, faq0_.description as descript4_1_, faq0_.title as title5_1_, faq0_.updated_at as updated_6_1_, faq0_.user as user7_1_ from faq faq0_
[DEBUG] 2020-02-28 13:58:34.410 [http-nio-8080-exec-111] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:58:34.410 [http-nio-8080-exec-111] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:58:34.410 [http-nio-8080-exec-111] Loader - Result set row: 1
[DEBUG] 2020-02-28 13:58:34.410 [http-nio-8080-exec-111] Loader - Result row: EntityKey[com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:58:34.411 [http-nio-8080-exec-111] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:58:34.411 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `category` : value = Movie
[DEBUG] 2020-02-28 13:58:34.411 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.411 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:58:34.411 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.411 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `description` : value = This Is FAQ Creates Test
[DEBUG] 2020-02-28 13:58:34.411 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.411 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `title` : value = how movies are created!
[DEBUG] 2020-02-28 13:58:34.411 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.411 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:58:34.411 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.411 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:58:34.411 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.414 [http-nio-8080-exec-111] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-28 13:58:34.417 [http-nio-8080-exec-111] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-28 13:58:34.419 [http-nio-8080-exec-111] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin.
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-28 13:58:34.423 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.424 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@54d26fd4
[DEBUG] 2020-02-28 13:58:34.424 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.424 [http-nio-8080-exec-111] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:58:34.424 [http-nio-8080-exec-111] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:58:34.424 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-28 13:58:34.424 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.424 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-28 13:58:34.424 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.424 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-18
[DEBUG] 2020-02-28 13:58:34.424 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.424 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-28 13:58:34.424 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.424 [http-nio-8080-exec-111] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-28 13:58:34.424 [http-nio-8080-exec-111] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-28 13:58:34.426 [http-nio-8080-exec-111] Loader - Result set row: 0
[DEBUG] 2020-02-28 13:58:34.426 [http-nio-8080-exec-111] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-28 13:58:34.426 [http-nio-8080-exec-111] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-28 13:58:34.426 [http-nio-8080-exec-111] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:58:34.426 [http-nio-8080-exec-111] Loader - Done entity load
[DEBUG] 2020-02-28 13:58:34.426 [http-nio-8080-exec-111] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-28 13:58:34.426 [http-nio-8080-exec-111] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#2
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#1]
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `category` : value = Trailer
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `description` : value = This is a trailer Question
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `title` : value = Where to find new trailers
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-28
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.FAQ#2]
[DEBUG] 2020-02-28 13:58:34.427 [http-nio-8080-exec-111] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
