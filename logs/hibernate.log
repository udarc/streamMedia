[DEBUG] 2020-03-09 14:03:09.894 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-03-09 14:03:09.898 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-03-09 14:03:09.903 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-03-09 14:03:10.071 [http-nio-8080-exec-3] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-03-09 14:03:10.079 [http-nio-8080-exec-3] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-03-09 14:03:10.236 [http-nio-8080-exec-3] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-03-09 14:03:10.237 [http-nio-8080-exec-3] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-03-09 14:03:10.274 [http-nio-8080-exec-3] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-03-09 14:03:10.580 [http-nio-8080-exec-3] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-03-09 14:03:10.602 [http-nio-8080-exec-3] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-03-09 14:03:10.603 [http-nio-8080-exec-3] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-03-09 14:03:10.626 [http-nio-8080-exec-3] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-03-09 14:03:10.658 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46d948f2
[DEBUG] 2020-03-09 14:03:10.658 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46d948f2
[DEBUG] 2020-03-09 14:03:10.659 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@46d948f2
[DEBUG] 2020-03-09 14:03:10.659 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5c1b0271
[DEBUG] 2020-03-09 14:03:10.659 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@b104f64
[DEBUG] 2020-03-09 14:03:10.660 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@52cbd53b
[DEBUG] 2020-03-09 14:03:10.661 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@11a7effa
[DEBUG] 2020-03-09 14:03:10.661 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@11a7effa
[DEBUG] 2020-03-09 14:03:10.661 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@11a7effa
[DEBUG] 2020-03-09 14:03:10.663 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4942622b
[DEBUG] 2020-03-09 14:03:10.663 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4942622b
[DEBUG] 2020-03-09 14:03:10.663 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4942622b
[DEBUG] 2020-03-09 14:03:10.665 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2918176f
[DEBUG] 2020-03-09 14:03:10.665 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2918176f
[DEBUG] 2020-03-09 14:03:10.665 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2918176f
[DEBUG] 2020-03-09 14:03:10.666 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@facad1d
[DEBUG] 2020-03-09 14:03:10.666 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@facad1d
[DEBUG] 2020-03-09 14:03:10.666 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@facad1d
[DEBUG] 2020-03-09 14:03:10.667 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@79f46d46
[DEBUG] 2020-03-09 14:03:10.668 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@79f46d46
[DEBUG] 2020-03-09 14:03:10.668 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@79f46d46
[DEBUG] 2020-03-09 14:03:10.669 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@254a3232
[DEBUG] 2020-03-09 14:03:10.669 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@254a3232
[DEBUG] 2020-03-09 14:03:10.669 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@254a3232
[DEBUG] 2020-03-09 14:03:10.670 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6f5d5e81
[DEBUG] 2020-03-09 14:03:10.670 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6f5d5e81
[DEBUG] 2020-03-09 14:03:10.670 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f5d5e81
[DEBUG] 2020-03-09 14:03:10.670 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@45e3682b
[DEBUG] 2020-03-09 14:03:10.670 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@45e3682b
[DEBUG] 2020-03-09 14:03:10.671 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@74393754
[DEBUG] 2020-03-09 14:03:10.671 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@74393754
[DEBUG] 2020-03-09 14:03:10.672 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2917c887
[DEBUG] 2020-03-09 14:03:10.672 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2917c887
[DEBUG] 2020-03-09 14:03:10.672 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5bfde35b
[DEBUG] 2020-03-09 14:03:10.672 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@35eb9cda
[DEBUG] 2020-03-09 14:03:10.673 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@74f7037d
[DEBUG] 2020-03-09 14:03:10.673 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@74f7037d
[DEBUG] 2020-03-09 14:03:10.674 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@52c23152
[DEBUG] 2020-03-09 14:03:10.674 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@52c23152
[DEBUG] 2020-03-09 14:03:10.677 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@158bcb19
[DEBUG] 2020-03-09 14:03:10.677 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@158bcb19
[DEBUG] 2020-03-09 14:03:10.679 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3314a379
[DEBUG] 2020-03-09 14:03:10.679 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3314a379
[DEBUG] 2020-03-09 14:03:10.680 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@20978ff9
[DEBUG] 2020-03-09 14:03:10.681 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@20978ff9
[DEBUG] 2020-03-09 14:03:10.682 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@269e9e47
[DEBUG] 2020-03-09 14:03:10.682 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@269e9e47
[DEBUG] 2020-03-09 14:03:10.683 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@43a8ed69
[DEBUG] 2020-03-09 14:03:10.683 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@43a8ed69
[DEBUG] 2020-03-09 14:03:10.686 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@64e23e11
[DEBUG] 2020-03-09 14:03:10.686 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@64e23e11
[DEBUG] 2020-03-09 14:03:10.688 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1cc86cd4
[DEBUG] 2020-03-09 14:03:10.688 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1cc86cd4
[DEBUG] 2020-03-09 14:03:10.690 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@71cb6ab1
[DEBUG] 2020-03-09 14:03:10.690 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@71cb6ab1
[DEBUG] 2020-03-09 14:03:10.691 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@62a080db
[DEBUG] 2020-03-09 14:03:10.691 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@62a080db
[DEBUG] 2020-03-09 14:03:10.691 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@606772b2
[DEBUG] 2020-03-09 14:03:10.691 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@606772b2
[DEBUG] 2020-03-09 14:03:10.691 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@606772b2
[DEBUG] 2020-03-09 14:03:10.693 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4815bd5c
[DEBUG] 2020-03-09 14:03:10.693 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@c76f081
[DEBUG] 2020-03-09 14:03:10.693 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c76f081
[DEBUG] 2020-03-09 14:03:10.693 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c76f081
[DEBUG] 2020-03-09 14:03:10.694 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@601a4c7c
[DEBUG] 2020-03-09 14:03:10.695 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2ca7df39
[DEBUG] 2020-03-09 14:03:10.695 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2ca7df39
[DEBUG] 2020-03-09 14:03:10.695 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1d614c01
[DEBUG] 2020-03-09 14:03:10.696 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1d614c01
[DEBUG] 2020-03-09 14:03:10.696 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ddf2462
[DEBUG] 2020-03-09 14:03:10.696 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ddf2462
[DEBUG] 2020-03-09 14:03:10.697 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@59d19e3d
[DEBUG] 2020-03-09 14:03:10.697 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@59d19e3d
[DEBUG] 2020-03-09 14:03:10.698 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@52cc70a4
[DEBUG] 2020-03-09 14:03:10.698 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@52cc70a4
[DEBUG] 2020-03-09 14:03:10.698 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@12ee9803
[DEBUG] 2020-03-09 14:03:10.699 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5339b632
[DEBUG] 2020-03-09 14:03:10.699 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5339b632
[DEBUG] 2020-03-09 14:03:10.699 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5339b632
[DEBUG] 2020-03-09 14:03:10.700 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@c5a3855
[DEBUG] 2020-03-09 14:03:10.700 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@c5a3855
[DEBUG] 2020-03-09 14:03:10.700 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@c5a3855
[DEBUG] 2020-03-09 14:03:10.701 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2f1736e2
[DEBUG] 2020-03-09 14:03:10.702 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@373ea7de
[DEBUG] 2020-03-09 14:03:10.703 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3a94f01c
[DEBUG] 2020-03-09 14:03:10.703 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a94f01c
[DEBUG] 2020-03-09 14:03:10.703 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3a94f01c
[DEBUG] 2020-03-09 14:03:10.703 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4566c8f2
[DEBUG] 2020-03-09 14:03:10.703 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4566c8f2
[DEBUG] 2020-03-09 14:03:10.703 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4566c8f2
[DEBUG] 2020-03-09 14:03:10.704 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@38f5c507
[DEBUG] 2020-03-09 14:03:10.704 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3cf78b2c
[DEBUG] 2020-03-09 14:03:10.705 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6c832805
[DEBUG] 2020-03-09 14:03:10.705 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6c832805
[DEBUG] 2020-03-09 14:03:10.705 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1b173f56
[DEBUG] 2020-03-09 14:03:10.706 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@61051013
[DEBUG] 2020-03-09 14:03:10.706 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61051013
[DEBUG] 2020-03-09 14:03:10.707 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@761b42a
[DEBUG] 2020-03-09 14:03:10.707 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@761b42a
[DEBUG] 2020-03-09 14:03:10.708 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@46301f8b
[DEBUG] 2020-03-09 14:03:10.708 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1722ca81
[DEBUG] 2020-03-09 14:03:10.709 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3c5e0c41
[DEBUG] 2020-03-09 14:03:10.713 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@19cdabe
[DEBUG] 2020-03-09 14:03:10.713 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@19cdabe
[DEBUG] 2020-03-09 14:03:10.714 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ff0f0a7
[DEBUG] 2020-03-09 14:03:10.714 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@33c5e73d
[DEBUG] 2020-03-09 14:03:10.714 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@26b1d8f
[DEBUG] 2020-03-09 14:03:10.714 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4ed8b63e
[DEBUG] 2020-03-09 14:03:10.714 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1675128a
[DEBUG] 2020-03-09 14:03:10.714 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@a15e376
[DEBUG] 2020-03-09 14:03:10.714 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@50c810de
[DEBUG] 2020-03-09 14:03:10.714 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5baa25bf
[DEBUG] 2020-03-09 14:03:10.742 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-03-09 14:03:10.742 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-03-09 14:03:10.743 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-09 14:03:10.743 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-03-09 14:03:10.744 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-03-09 14:03:10.746 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-03-09 14:03:10.747 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-03-09 14:03:10.748 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-09 14:03:10.749 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-03-09 14:03:10.750 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-03-09 14:03:10.750 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-03-09 14:03:10.751 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-03-09 14:03:10.751 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-03-09 14:03:10.752 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-03-09 14:03:10.757 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-03-09 14:03:10.758 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-03-09 14:03:10.758 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-03-09 14:03:10.869 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-03-09 14:03:11.087 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-03-09 14:03:11.087 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-03-09 14:03:11.087 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-03-09 14:03:11.121 [http-nio-8080-exec-3] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2020-03-09 14:03:11.140 [http-nio-8080-exec-3] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-03-09 14:03:11.159 [http-nio-8080-exec-3] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-03-09 14:03:11.199 [http-nio-8080-exec-3] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-03-09 14:03:11.202 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47075cc8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6dc84335]
[DEBUG] 2020-03-09 14:03:11.275 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-03-09 14:03:11.307 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-09 14:03:11.313 [http-nio-8080-exec-3] EntityBinder - Import with entity name User
[DEBUG] 2020-03-09 14:03:11.316 [http-nio-8080-exec-3] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-03-09 14:03:11.348 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.353 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-03-09 14:03:11.355 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-03-09 14:03:11.358 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-03-09 14:03:11.360 [http-nio-8080-exec-3] PropertyBinder - Building property userId
[DEBUG] 2020-03-09 14:03:11.367 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-09 14:03:11.369 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.369 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-09 14:03:11.369 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-03-09 14:03:11.369 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-09 14:03:11.369 [http-nio-8080-exec-3] PropertyBinder - Building property biography
[DEBUG] 2020-03-09 14:03:11.369 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.370 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-03-09 14:03:11.370 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-03-09 14:03:11.370 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-03-09 14:03:11.370 [http-nio-8080-exec-3] PropertyBinder - Building property birthdate
[DEBUG] 2020-03-09 14:03:11.370 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.371 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-09 14:03:11.371 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-03-09 14:03:11.371 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-09 14:03:11.371 [http-nio-8080-exec-3] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-09 14:03:11.383 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-09 14:03:11.385 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=crews, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.390 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.400 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.401 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.401 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-09 14:03:11.403 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-09 14:03:11.403 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-09 14:03:11.404 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.User.crews
[DEBUG] 2020-03-09 14:03:11.408 [http-nio-8080-exec-3] PropertyBinder - Building property crews
[DEBUG] 2020-03-09 14:03:11.408 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.408 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-09 14:03:11.408 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-03-09 14:03:11.408 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-09 14:03:11.409 [http-nio-8080-exec-3] PropertyBinder - Building property email
[DEBUG] 2020-03-09 14:03:11.409 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-09 14:03:11.410 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.410 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.410 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.410 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=faqs_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.410 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='faqs_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-09 14:03:11.410 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-09 14:03:11.410 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-09 14:03:11.410 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-09 14:03:11.410 [http-nio-8080-exec-3] PropertyBinder - Building property faqs
[DEBUG] 2020-03-09 14:03:11.410 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-09 14:03:11.410 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.411 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.411 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.411 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.411 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-09 14:03:11.411 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-09 14:03:11.411 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-09 14:03:11.411 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.User.films
[DEBUG] 2020-03-09 14:03:11.411 [http-nio-8080-exec-3] PropertyBinder - Building property films
[DEBUG] 2020-03-09 14:03:11.411 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.413 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-09 14:03:11.413 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-03-09 14:03:11.413 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-09 14:03:11.414 [http-nio-8080-exec-3] PropertyBinder - Building property firstName
[DEBUG] 2020-03-09 14:03:11.414 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.414 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-03-09 14:03:11.414 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-03-09 14:03:11.414 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-03-09 14:03:11.414 [http-nio-8080-exec-3] PropertyBinder - Building property gender
[DEBUG] 2020-03-09 14:03:11.414 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.414 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-09 14:03:11.414 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-03-09 14:03:11.415 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-09 14:03:11.415 [http-nio-8080-exec-3] PropertyBinder - Building property lastName
[DEBUG] 2020-03-09 14:03:11.415 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.415 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-03-09 14:03:11.415 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-03-09 14:03:11.415 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-03-09 14:03:11.415 [http-nio-8080-exec-3] PropertyBinder - Building property password
[DEBUG] 2020-03-09 14:03:11.415 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.415 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-03-09 14:03:11.415 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-03-09 14:03:11.415 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-03-09 14:03:11.415 [http-nio-8080-exec-3] PropertyBinder - Building property picture
[DEBUG] 2020-03-09 14:03:11.415 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-09 14:03:11.415 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.416 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.416 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.416 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.416 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-09 14:03:11.416 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-09 14:03:11.417 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-09 14:03:11.417 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-09 14:03:11.417 [http-nio-8080-exec-3] PropertyBinder - Building property roles
[DEBUG] 2020-03-09 14:03:11.417 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-09 14:03:11.417 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.417 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.417 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.418 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=trailers_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.418 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='trailers_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-09 14:03:11.418 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-09 14:03:11.420 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-03-09 14:03:11.423 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-09 14:03:11.423 [http-nio-8080-exec-3] PropertyBinder - Building property trailers
[DEBUG] 2020-03-09 14:03:11.424 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.426 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-09 14:03:11.426 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-03-09 14:03:11.426 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-09 14:03:11.426 [http-nio-8080-exec-3] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-09 14:03:11.426 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-03-09 14:03:11.426 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-03-09 14:03:11.426 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-03-09 14:03:11.427 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-03-09 14:03:11.427 [http-nio-8080-exec-3] PropertyBinder - Building property username
[DEBUG] 2020-03-09 14:03:11.428 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-03-09 14:03:11.428 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-09 14:03:11.428 [http-nio-8080-exec-3] EntityBinder - Import with entity name Role
[DEBUG] 2020-03-09 14:03:11.428 [http-nio-8080-exec-3] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-03-09 14:03:11.435 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.435 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-03-09 14:03:11.435 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-03-09 14:03:11.435 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-03-09 14:03:11.435 [http-nio-8080-exec-3] PropertyBinder - Building property roleId
[DEBUG] 2020-03-09 14:03:11.435 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-09 14:03:11.435 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.436 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-09 14:03:11.436 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-03-09 14:03:11.436 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-09 14:03:11.436 [http-nio-8080-exec-3] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-09 14:03:11.436 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.436 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-03-09 14:03:11.436 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-03-09 14:03:11.436 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-03-09 14:03:11.436 [http-nio-8080-exec-3] PropertyBinder - Building property name
[DEBUG] 2020-03-09 14:03:11.436 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.436 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-09 14:03:11.436 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-03-09 14:03:11.438 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-09 14:03:11.439 [http-nio-8080-exec-3] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-09 14:03:11.439 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-03-09 14:03:11.439 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.441 [http-nio-8080-exec-3] PropertyBinder - Building property user
[DEBUG] 2020-03-09 14:03:11.441 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Trailer
[DEBUG] 2020-03-09 14:03:11.442 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-09 14:03:11.442 [http-nio-8080-exec-3] EntityBinder - Import with entity name Trailer
[DEBUG] 2020-03-09 14:03:11.442 [http-nio-8080-exec-3] EntityBinder - Bind entity com.streammedia.entity.Trailer on table Trailer
[DEBUG] 2020-03-09 14:03:11.444 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=trailer_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.444 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property trailerId with lazy=false
[DEBUG] 2020-03-09 14:03:11.444 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:trailerId]
[DEBUG] 2020-03-09 14:03:11.444 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for trailerId
[DEBUG] 2020-03-09 14:03:11.444 [http-nio-8080-exec-3] PropertyBinder - Building property trailerId
[DEBUG] 2020-03-09 14:03:11.444 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(trailer_id)]), trailerId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-09 14:03:11.444 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.444 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2020-03-09 14:03:11.444 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:author]
[DEBUG] 2020-03-09 14:03:11.444 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for author
[DEBUG] 2020-03-09 14:03:11.444 [http-nio-8080-exec-3] PropertyBinder - Building property author
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:cover]
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] PropertyBinder - Building property cover
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:createdAt]
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:duration]
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] PropertyBinder - Building property duration
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=links, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:link]
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-09 14:03:11.445 [http-nio-8080-exec-3] PropertyBinder - Building property link
[DEBUG] 2020-03-09 14:03:11.446 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.446 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-09 14:03:11.446 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:publicationDate]
[DEBUG] 2020-03-09 14:03:11.446 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-09 14:03:11.446 [http-nio-8080-exec-3] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-09 14:03:11.446 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.446 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-09 14:03:11.446 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:summary]
[DEBUG] 2020-03-09 14:03:11.446 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-09 14:03:11.446 [http-nio-8080-exec-3] PropertyBinder - Building property summary
[DEBUG] 2020-03-09 14:03:11.446 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.446 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-09 14:03:11.447 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:title]
[DEBUG] 2020-03-09 14:03:11.447 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-09 14:03:11.448 [http-nio-8080-exec-3] PropertyBinder - Building property title
[DEBUG] 2020-03-09 14:03:11.448 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.448 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-09 14:03:11.448 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:updatedAt]
[DEBUG] 2020-03-09 14:03:11.448 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-09 14:03:11.448 [http-nio-8080-exec-3] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-09 14:03:11.448 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-09 14:03:11.448 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.448 [http-nio-8080-exec-3] PropertyBinder - Building property user
[DEBUG] 2020-03-09 14:03:11.448 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Trailer), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.448 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-09 14:03:11.448 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Trailer:video]
[DEBUG] 2020-03-09 14:03:11.448 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-09 14:03:11.448 [http-nio-8080-exec-3] PropertyBinder - Building property video
[DEBUG] 2020-03-09 14:03:11.448 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.FAQ
[DEBUG] 2020-03-09 14:03:11.449 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-09 14:03:11.449 [http-nio-8080-exec-3] EntityBinder - Import with entity name FAQ
[DEBUG] 2020-03-09 14:03:11.449 [http-nio-8080-exec-3] EntityBinder - Bind entity com.streammedia.entity.FAQ on table faq
[DEBUG] 2020-03-09 14:03:11.449 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=faq_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.449 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property faqId with lazy=false
[DEBUG] 2020-03-09 14:03:11.449 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:faqId]
[DEBUG] 2020-03-09 14:03:11.449 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for faqId
[DEBUG] 2020-03-09 14:03:11.449 [http-nio-8080-exec-3] PropertyBinder - Building property faqId
[DEBUG] 2020-03-09 14:03:11.449 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(faq_id)]), faqId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-09 14:03:11.450 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.450 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2020-03-09 14:03:11.450 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:category]
[DEBUG] 2020-03-09 14:03:11.450 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2020-03-09 14:03:11.450 [http-nio-8080-exec-3] PropertyBinder - Building property category
[DEBUG] 2020-03-09 14:03:11.450 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.450 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-09 14:03:11.450 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:createdAt]
[DEBUG] 2020-03-09 14:03:11.450 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-09 14:03:11.450 [http-nio-8080-exec-3] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-09 14:03:11.450 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.450 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-09 14:03:11.450 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:description]
[DEBUG] 2020-03-09 14:03:11.450 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-09 14:03:11.450 [http-nio-8080-exec-3] PropertyBinder - Building property description
[DEBUG] 2020-03-09 14:03:11.450 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.451 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-09 14:03:11.451 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:title]
[DEBUG] 2020-03-09 14:03:11.451 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-09 14:03:11.451 [http-nio-8080-exec-3] PropertyBinder - Building property title
[DEBUG] 2020-03-09 14:03:11.451 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.451 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-09 14:03:11.451 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.FAQ:updatedAt]
[DEBUG] 2020-03-09 14:03:11.451 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-09 14:03:11.452 [http-nio-8080-exec-3] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-09 14:03:11.452 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-09 14:03:11.452 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(faq), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.452 [http-nio-8080-exec-3] PropertyBinder - Building property user
[DEBUG] 2020-03-09 14:03:11.453 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Genre
[DEBUG] 2020-03-09 14:03:11.453 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-09 14:03:11.453 [http-nio-8080-exec-3] EntityBinder - Import with entity name Genre
[DEBUG] 2020-03-09 14:03:11.453 [http-nio-8080-exec-3] EntityBinder - Bind entity com.streammedia.entity.Genre on table Genre
[DEBUG] 2020-03-09 14:03:11.455 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=genre_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.455 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property genreId with lazy=false
[DEBUG] 2020-03-09 14:03:11.456 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:genreId]
[DEBUG] 2020-03-09 14:03:11.456 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for genreId
[DEBUG] 2020-03-09 14:03:11.456 [http-nio-8080-exec-3] PropertyBinder - Building property genreId
[DEBUG] 2020-03-09 14:03:11.456 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(genre_id)]), genreId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-09 14:03:11.456 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.456 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-09 14:03:11.456 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:createdAt]
[DEBUG] 2020-03-09 14:03:11.456 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-09 14:03:11.456 [http-nio-8080-exec-3] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-09 14:03:11.456 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.456 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-03-09 14:03:11.456 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:description]
[DEBUG] 2020-03-09 14:03:11.456 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-03-09 14:03:11.457 [http-nio-8080-exec-3] PropertyBinder - Building property description
[DEBUG] 2020-03-09 14:03:11.457 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.457 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.457 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.457 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-09 14:03:11.458 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-09 14:03:11.458 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='genres'}
[DEBUG] 2020-03-09 14:03:11.458 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-09 14:03:11.458 [http-nio-8080-exec-3] PropertyBinder - Building property films
[DEBUG] 2020-03-09 14:03:11.458 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.458 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-09 14:03:11.458 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:title]
[DEBUG] 2020-03-09 14:03:11.458 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-09 14:03:11.458 [http-nio-8080-exec-3] PropertyBinder - Building property title
[DEBUG] 2020-03-09 14:03:11.458 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Genre), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.459 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-09 14:03:11.459 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Genre:updatedAt]
[DEBUG] 2020-03-09 14:03:11.459 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-09 14:03:11.459 [http-nio-8080-exec-3] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-09 14:03:11.459 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Film
[DEBUG] 2020-03-09 14:03:11.459 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-09 14:03:11.459 [http-nio-8080-exec-3] EntityBinder - Import with entity name Film
[DEBUG] 2020-03-09 14:03:11.459 [http-nio-8080-exec-3] EntityBinder - Bind entity com.streammedia.entity.Film on table Film
[DEBUG] 2020-03-09 14:03:11.462 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=film_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.462 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property filmId with lazy=false
[DEBUG] 2020-03-09 14:03:11.462 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:filmId]
[DEBUG] 2020-03-09 14:03:11.463 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for filmId
[DEBUG] 2020-03-09 14:03:11.463 [http-nio-8080-exec-3] PropertyBinder - Building property filmId
[DEBUG] 2020-03-09 14:03:11.463 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(film_id)]), filmId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-09 14:03:11.463 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=cover, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.463 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property cover with lazy=false
[DEBUG] 2020-03-09 14:03:11.463 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:cover]
[DEBUG] 2020-03-09 14:03:11.463 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for cover
[DEBUG] 2020-03-09 14:03:11.463 [http-nio-8080-exec-3] PropertyBinder - Building property cover
[DEBUG] 2020-03-09 14:03:11.463 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.463 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-09 14:03:11.463 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:createdAt]
[DEBUG] 2020-03-09 14:03:11.463 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-09 14:03:11.464 [http-nio-8080-exec-3] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-09 14:03:11.464 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.464 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.464 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=crews_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.464 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crews_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-09 14:03:11.464 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-09 14:03:11.465 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='crew_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-09 14:03:11.465 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-09 14:03:11.465 [http-nio-8080-exec-3] PropertyBinder - Building property crews
[DEBUG] 2020-03-09 14:03:11.465 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=director, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.465 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property director with lazy=false
[DEBUG] 2020-03-09 14:03:11.465 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:director]
[DEBUG] 2020-03-09 14:03:11.465 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for director
[DEBUG] 2020-03-09 14:03:11.465 [http-nio-8080-exec-3] PropertyBinder - Building property director
[DEBUG] 2020-03-09 14:03:11.465 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=duration, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.465 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property duration with lazy=false
[DEBUG] 2020-03-09 14:03:11.465 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:duration]
[DEBUG] 2020-03-09 14:03:11.465 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for duration
[DEBUG] 2020-03-09 14:03:11.465 [http-nio-8080-exec-3] PropertyBinder - Building property duration
[DEBUG] 2020-03-09 14:03:11.465 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=episode, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.466 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property episode with lazy=false
[DEBUG] 2020-03-09 14:03:11.466 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:episode]
[DEBUG] 2020-03-09 14:03:11.466 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for episode
[DEBUG] 2020-03-09 14:03:11.466 [http-nio-8080-exec-3] PropertyBinder - Building property episode
[DEBUG] 2020-03-09 14:03:11.466 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.466 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.466 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=genres_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.466 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genres_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-09 14:03:11.467 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='film_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-09 14:03:11.467 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='genre_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-09 14:03:11.467 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-09 14:03:11.467 [http-nio-8080-exec-3] PropertyBinder - Building property genres
[DEBUG] 2020-03-09 14:03:11.467 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=link, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.467 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property link with lazy=false
[DEBUG] 2020-03-09 14:03:11.467 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:link]
[DEBUG] 2020-03-09 14:03:11.467 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for link
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] PropertyBinder - Building property link
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=pub_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property publicationDate with lazy=false
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:publicationDate]
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for publicationDate
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] PropertyBinder - Building property publicationDate
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=summary, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property summary with lazy=false
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:summary]
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for summary
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] PropertyBinder - Building property summary
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:title]
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] PropertyBinder - Building property title
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:updatedAt]
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-03-09 14:03:11.468 [http-nio-8080-exec-3] PropertyBinder - Building property updatedAt
[DEBUG] 2020-03-09 14:03:11.469 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-09 14:03:11.469 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.469 [http-nio-8080-exec-3] PropertyBinder - Building property user
[DEBUG] 2020-03-09 14:03:11.469 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Film), mappingColumn=video, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.469 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property video with lazy=false
[DEBUG] 2020-03-09 14:03:11.469 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Film:video]
[DEBUG] 2020-03-09 14:03:11.469 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for video
[DEBUG] 2020-03-09 14:03:11.469 [http-nio-8080-exec-3] PropertyBinder - Building property video
[DEBUG] 2020-03-09 14:03:11.469 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Crew
[DEBUG] 2020-03-09 14:03:11.469 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-03-09 14:03:11.469 [http-nio-8080-exec-3] EntityBinder - Import with entity name Crew
[DEBUG] 2020-03-09 14:03:11.469 [http-nio-8080-exec-3] EntityBinder - Bind entity com.streammedia.entity.Crew on table Crew
[DEBUG] 2020-03-09 14:03:11.470 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=crew_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.470 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property crewId with lazy=false
[DEBUG] 2020-03-09 14:03:11.470 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:crewId]
[DEBUG] 2020-03-09 14:03:11.470 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for crewId
[DEBUG] 2020-03-09 14:03:11.470 [http-nio-8080-exec-3] PropertyBinder - Building property crewId
[DEBUG] 2020-03-09 14:03:11.470 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(crew_id)]), crewId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-03-09 14:03:11.470 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.470 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-03-09 14:03:11.470 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:biography]
[DEBUG] 2020-03-09 14:03:11.470 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-03-09 14:03:11.470 [http-nio-8080-exec-3] PropertyBinder - Building property biography
[DEBUG] 2020-03-09 14:03:11.470 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:createdAt]
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] PropertyBinder - Building property createdAt
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:email]
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] PropertyBinder - Building property email
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=films_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='films_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='crews'}
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] CollectionBinder - Collection role: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-09 14:03:11.471 [http-nio-8080-exec-3] PropertyBinder - Building property films
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:firstName]
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] PropertyBinder - Building property firstName
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:lastName]
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] PropertyBinder - Building property lastName
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=profession, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property profession with lazy=false
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:profession]
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for profession
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] PropertyBinder - Building property profession
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Crew:updateAt]
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] PropertyBinder - Building property updateAt
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user', referencedColumn='', mappedBy=''}
[DEBUG] 2020-03-09 14:03:11.472 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Crew), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-03-09 14:03:11.473 [http-nio-8080-exec-3] PropertyBinder - Building property user
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for trailerId
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for author
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for faqId
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2020-03-09 14:03:11.474 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-09 14:03:11.475 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-09 14:03:11.475 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-09 14:03:11.475 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-09 14:03:11.475 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for genreId
[DEBUG] 2020-03-09 14:03:11.475 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-09 14:03:11.475 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-03-09 14:03:11.475 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-09 14:03:11.475 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-09 14:03:11.475 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for filmId
[DEBUG] 2020-03-09 14:03:11.475 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for cover
[DEBUG] 2020-03-09 14:03:11.475 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-09 14:03:11.475 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for director
[DEBUG] 2020-03-09 14:03:11.475 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for duration
[DEBUG] 2020-03-09 14:03:11.476 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for episode
[DEBUG] 2020-03-09 14:03:11.476 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for link
[DEBUG] 2020-03-09 14:03:11.476 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for publicationDate
[DEBUG] 2020-03-09 14:03:11.476 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for summary
[DEBUG] 2020-03-09 14:03:11.476 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-03-09 14:03:11.476 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-03-09 14:03:11.477 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for video
[DEBUG] 2020-03-09 14:03:11.477 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for crewId
[DEBUG] 2020-03-09 14:03:11.477 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-03-09 14:03:11.477 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-03-09 14:03:11.477 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-03-09 14:03:11.477 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-03-09 14:03:11.477 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-03-09 14:03:11.477 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for profession
[DEBUG] 2020-03-09 14:03:11.477 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-03-09 14:03:11.482 [http-nio-8080-exec-3] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-03-09 14:03:11.482 [http-nio-8080-exec-3] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-03-09 14:03:11.482 [http-nio-8080-exec-3] PrimaryKey - Forcing column [trailer_id] to be non-null as it is part of the primary key for table [trailer]
[DEBUG] 2020-03-09 14:03:11.482 [http-nio-8080-exec-3] PrimaryKey - Forcing column [faq_id] to be non-null as it is part of the primary key for table [faq]
[DEBUG] 2020-03-09 14:03:11.482 [http-nio-8080-exec-3] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [genre]
[DEBUG] 2020-03-09 14:03:11.482 [http-nio-8080-exec-3] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [film]
[DEBUG] 2020-03-09 14:03:11.482 [http-nio-8080-exec-3] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [crew]
[DEBUG] 2020-03-09 14:03:11.482 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-09 14:03:11.483 [http-nio-8080-exec-3] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-09 14:03:11.485 [http-nio-8080-exec-3] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-09 14:03:11.485 [http-nio-8080-exec-3] PrimaryKey - Forcing column [genre_id] to be non-null as it is part of the primary key for table [filmgenre]
[DEBUG] 2020-03-09 14:03:11.486 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: film_id, element: genre_id
[DEBUG] 2020-03-09 14:03:11.486 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-09 14:03:11.486 [http-nio-8080-exec-3] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-09 14:03:11.486 [http-nio-8080-exec-3] PrimaryKey - Forcing column [film_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-09 14:03:11.486 [http-nio-8080-exec-3] PrimaryKey - Forcing column [crew_id] to be non-null as it is part of the primary key for table [filmcrew]
[DEBUG] 2020-03-09 14:03:11.487 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: film_id, element: crew_id
[DEBUG] 2020-03-09 14:03:11.487 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.crews
[DEBUG] 2020-03-09 14:03:11.487 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.crews through a foreign key
[DEBUG] 2020-03-09 14:03:11.487 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: com.streammedia.entity.User.crews -> Crew
[DEBUG] 2020-03-09 14:03:11.487 [http-nio-8080-exec-3] TableBinder - Retrieving property com.streammedia.entity.Crew.user
[DEBUG] 2020-03-09 14:03:11.487 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Crew
[DEBUG] 2020-03-09 14:03:11.487 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-09 14:03:11.487 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.faqs through a foreign key
[DEBUG] 2020-03-09 14:03:11.487 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: com.streammedia.entity.User.faqs -> faq
[DEBUG] 2020-03-09 14:03:11.487 [http-nio-8080-exec-3] TableBinder - Retrieving property com.streammedia.entity.FAQ.user
[DEBUG] 2020-03-09 14:03:11.487 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.FAQ
[DEBUG] 2020-03-09 14:03:11.487 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-09 14:03:11.487 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.films through a foreign key
[DEBUG] 2020-03-09 14:03:11.487 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: com.streammedia.entity.User.films -> Film
[DEBUG] 2020-03-09 14:03:11.487 [http-nio-8080-exec-3] TableBinder - Retrieving property com.streammedia.entity.Film.user
[DEBUG] 2020-03-09 14:03:11.488 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Film
[DEBUG] 2020-03-09 14:03:11.488 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-09 14:03:11.488 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-03-09 14:03:11.488 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-03-09 14:03:11.488 [http-nio-8080-exec-3] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-03-09 14:03:11.491 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-03-09 14:03:11.491 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-09 14:03:11.491 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.trailers through a foreign key
[DEBUG] 2020-03-09 14:03:11.491 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: com.streammedia.entity.User.trailers -> Trailer
[DEBUG] 2020-03-09 14:03:11.491 [http-nio-8080-exec-3] TableBinder - Retrieving property com.streammedia.entity.Trailer.user
[DEBUG] 2020-03-09 14:03:11.491 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: user, one-to-many: com.streammedia.entity.Trailer
[DEBUG] 2020-03-09 14:03:11.491 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-09 14:03:11.491 [http-nio-8080-exec-3] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-09 14:03:11.491 [http-nio-8080-exec-3] TableBinder - Retrieving property com.streammedia.entity.Film.genres
[DEBUG] 2020-03-09 14:03:11.492 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: genre_id, element: film_id
[DEBUG] 2020-03-09 14:03:11.494 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-09 14:03:11.494 [http-nio-8080-exec-3] CollectionBinder - Binding as ManyToMany: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-09 14:03:11.494 [http-nio-8080-exec-3] TableBinder - Retrieving property com.streammedia.entity.Film.crews
[DEBUG] 2020-03-09 14:03:11.494 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: crew_id, element: film_id
[DEBUG] 2020-03-09 14:03:11.494 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-09 14:03:11.495 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-09 14:03:11.496 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-09 14:03:11.497 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-09 14:03:11.497 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-09 14:03:11.497 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-09 14:03:11.497 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-09 14:03:11.497 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-09 14:03:11.497 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-09 14:03:11.497 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-09 14:03:11.499 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-03-09 14:03:11.499 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-09 14:03:11.500 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-09 14:03:11.500 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-09 14:03:11.500 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Crew
[DEBUG] 2020-03-09 14:03:11.500 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-09 14:03:11.500 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Genre
[DEBUG] 2020-03-09 14:03:11.500 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.Film
[DEBUG] 2020-03-09 14:03:11.500 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-09 14:03:11.500 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-03-09 14:03:11.565 [http-nio-8080-exec-3] SessionFactoryImpl - Building session factory
[DEBUG] 2020-03-09 14:03:11.566 [http-nio-8080-exec-3] Settings - SessionFactory name : null
[DEBUG] 2020-03-09 14:03:11.566 [http-nio-8080-exec-3] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-03-09 14:03:11.566 [http-nio-8080-exec-3] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-03-09 14:03:11.566 [http-nio-8080-exec-3] Settings - Statistics: disabled
[DEBUG] 2020-03-09 14:03:11.566 [http-nio-8080-exec-3] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-03-09 14:03:11.566 [http-nio-8080-exec-3] Settings - Default entity-mode: pojo
[DEBUG] 2020-03-09 14:03:11.566 [http-nio-8080-exec-3] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-03-09 14:03:11.566 [http-nio-8080-exec-3] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-03-09 14:03:11.566 [http-nio-8080-exec-3] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-03-09 14:03:11.566 [http-nio-8080-exec-3] Settings - Default batch fetch size: -1
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Default null ordering: NONE
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Query language substitutions: {}
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Named query checking : enabled
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Second-level cache: disabled
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Second-level query cache: disabled
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Second-level query cache factory: null
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Second-level cache region prefix: null
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - JDBC batch size: 15
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Scrollable result sets: enabled
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Wrap result sets: disabled
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - JDBC result set fetch size: null
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - JPA compliance - query : 
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - JPA compliance - lists : 
[DEBUG] 2020-03-09 14:03:11.567 [http-nio-8080-exec-3] Settings - JPA compliance - transactions : 
[INFO ] 2020-03-09 14:03:11.655 [http-nio-8080-exec-3] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-03-09 14:03:11.707 [http-nio-8080-exec-3] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-03-09 14:03:11.707 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-40-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1769c7ba, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-03-09 14:03:11.726 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-09 14:03:11.726 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-09 14:03:11.740 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-09 14:03:11.740 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-09 14:03:11.741 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-09 14:03:11.741 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-09 14:03:11.741 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-09 14:03:11.741 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-09 14:03:11.742 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-09 14:03:11.742 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-09 14:03:11.743 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-09 14:03:11.743 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-09 14:03:11.747 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-09 14:03:11.747 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-09 14:03:11.753 [http-nio-8080-exec-3] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-03-09 14:03:11.755 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-03-09 14:03:11.755 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47075cc8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3c88464d]
[DEBUG] 2020-03-09 14:03:11.806 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-09 14:03:11.806 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-09 14:03:11.819 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Film] is safe
[DEBUG] 2020-03-09 14:03:11.819 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Film
[DEBUG] 2020-03-09 14:03:12.037 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-09 14:03:12.037 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-09 14:03:12.037 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.FAQ] is safe
[DEBUG] 2020-03-09 14:03:12.037 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.FAQ
[DEBUG] 2020-03-09 14:03:12.068 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-09 14:03:12.068 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-09 14:03:12.069 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-03-09 14:03:12.069 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-03-09 14:03:12.085 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-09 14:03:12.085 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-09 14:03:12.085 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Genre] is safe
[DEBUG] 2020-03-09 14:03:12.085 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Genre
[DEBUG] 2020-03-09 14:03:12.096 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-09 14:03:12.096 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-09 14:03:12.096 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Trailer] is safe
[DEBUG] 2020-03-09 14:03:12.096 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Trailer
[DEBUG] 2020-03-09 14:03:12.115 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-09 14:03:12.115 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-09 14:03:12.117 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-03-09 14:03:12.118 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-03-09 14:03:12.139 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-09 14:03:12.139 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-09 14:03:12.139 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Crew] is safe
[DEBUG] 2020-03-09 14:03:12.139 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Crew
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.crews
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update Crew set user=? where crew_id=?
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update Crew set  where crew_id=?
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update Crew set user=null where user=? and crew_id=?
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update Crew set user=null where user=?
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.trailers
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update Trailer set user=? where trailer_id=?
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update Trailer set  where trailer_id=?
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update Trailer set user=null where user=? and trailer_id=?
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update Trailer set user=null where user=?
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.faqs
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update faq set user=? where faq_id=?
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update faq set  where faq_id=?
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update faq set user=null where user=? and faq_id=?
[DEBUG] 2020-03-09 14:03:12.164 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update faq set user=null where user=?
[DEBUG] 2020-03-09 14:03:12.167 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Crew.films
[DEBUG] 2020-03-09 14:03:12.167 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: insert into FilmCrew (crew_id, film_id) values (?, ?)
[DEBUG] 2020-03-09 14:03:12.167 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update FilmCrew set film_id=? where crew_id=? and film_id=?
[DEBUG] 2020-03-09 14:03:12.167 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: delete from FilmCrew where crew_id=? and film_id=?
[DEBUG] 2020-03-09 14:03:12.167 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where crew_id=?
[DEBUG] 2020-03-09 14:03:12.168 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Genre.films
[DEBUG] 2020-03-09 14:03:12.168 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: insert into FilmGenre (genre_id, film_id) values (?, ?)
[DEBUG] 2020-03-09 14:03:12.168 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update FilmGenre set film_id=? where genre_id=? and film_id=?
[DEBUG] 2020-03-09 14:03:12.168 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: delete from FilmGenre where genre_id=? and film_id=?
[DEBUG] 2020-03-09 14:03:12.168 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where genre_id=?
[DEBUG] 2020-03-09 14:03:12.168 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.crews
[DEBUG] 2020-03-09 14:03:12.168 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: insert into FilmCrew (film_id, crew_id) values (?, ?)
[DEBUG] 2020-03-09 14:03:12.168 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update FilmCrew set crew_id=? where film_id=? and crew_id=?
[DEBUG] 2020-03-09 14:03:12.168 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: delete from FilmCrew where film_id=? and crew_id=?
[DEBUG] 2020-03-09 14:03:12.168 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: delete from FilmCrew where film_id=?
[DEBUG] 2020-03-09 14:03:12.169 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.Film.genres
[DEBUG] 2020-03-09 14:03:12.169 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: insert into FilmGenre (film_id, genre_id) values (?, ?)
[DEBUG] 2020-03-09 14:03:12.169 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update FilmGenre set genre_id=? where film_id=? and genre_id=?
[DEBUG] 2020-03-09 14:03:12.169 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: delete from FilmGenre where film_id=? and genre_id=?
[DEBUG] 2020-03-09 14:03:12.169 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: delete from FilmGenre where film_id=?
[DEBUG] 2020-03-09 14:03:12.169 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.films
[DEBUG] 2020-03-09 14:03:12.169 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update Film set user=? where film_id=?
[DEBUG] 2020-03-09 14:03:12.169 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update Film set  where film_id=?
[DEBUG] 2020-03-09 14:03:12.169 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update Film set user=null where user=? and film_id=?
[DEBUG] 2020-03-09 14:03:12.169 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update Film set user=null where user=?
[DEBUG] 2020-03-09 14:03:12.174 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Film
[DEBUG] 2020-03-09 14:03:12.174 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select film_id from Film where film_id =?
[DEBUG] 2020-03-09 14:03:12.174 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select film_.film_id, film_.cover as cover2_2_, film_.created_at as created_3_2_, film_.director as director4_2_, film_.duration as duration5_2_, film_.episode as episode6_2_, film_.link as link7_2_, film_.pub_date as pub_date8_2_, film_.summary as summary9_2_, film_.title as title10_2_, film_.updated_at as updated11_2_, film_.user as user13_2_, film_.video as video12_2_ from Film film_ where film_.film_id=?
[DEBUG] 2020-03-09 14:03:12.174 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video, film_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-09 14:03:12.174 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update Film set cover=?, created_at=?, director=?, duration=?, episode=?, link=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where film_id=?
[DEBUG] 2020-03-09 14:03:12.174 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from Film where film_id=?
[DEBUG] 2020-03-09 14:03:12.174 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into Film (cover, created_at, director, duration, episode, link, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-09 14:03:12.201 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@142c9718]
[DEBUG] 2020-03-09 14:03:12.202 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-09 14:03:12.202 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.202 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-09 14:03:12.205 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@102ec77c]
[DEBUG] 2020-03-09 14:03:12.206 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@736cb94e]
[DEBUG] 2020-03-09 14:03:12.207 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-09 14:03:12.207 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-09 14:03:12.207 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-09 14:03:12.207 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-09 14:03:12.207 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ac02613]
[DEBUG] 2020-03-09 14:03:12.207 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78b0884b]
[DEBUG] 2020-03-09 14:03:12.207 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-09 14:03:12.207 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-09 14:03:12.207 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-09 14:03:12.207 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-09 14:03:12.207 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.207 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.207 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10637975]
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@430b0b95]
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2958b78b]
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36d73caa]
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ec995fd]
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-09 14:03:12.209 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-09 14:03:12.210 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56302c31]
[DEBUG] 2020-03-09 14:03:12.210 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34343d77]
[DEBUG] 2020-03-09 14:03:12.210 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-09 14:03:12.210 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-09 14:03:12.210 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-09 14:03:12.210 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-09 14:03:12.211 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-09 14:03:12.211 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-09 14:03:12.211 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ae5e257]
[DEBUG] 2020-03-09 14:03:12.211 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e392f5]
[DEBUG] 2020-03-09 14:03:12.211 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-09 14:03:12.211 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-09 14:03:12.211 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-09 14:03:12.212 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3df3183b]
[DEBUG] 2020-03-09 14:03:12.214 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-09 14:03:12.215 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-09 14:03:12.215 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.229 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.237 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:13>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:14>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:14>
                   - CompositeQuerySpaceImpl(uid=<gen:14>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Film [NONE]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b961fde]
[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59900bde]
[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d211c6c]
[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46b28cf9]
[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3541a526]
[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-09 14:03:12.239 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c5696ab]
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b26afa8]
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3376437f]
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6bcd7874]
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b155081]
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f0f3a4]
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49c25de]
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@177d867f]
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@722ae39b]
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@61b48bc4]
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-09 14:03:12.240 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.241 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.241 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Film)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Film, querySpaceUid=<gen:0>, path=com.streammedia.entity.Film)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.Film.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.Film.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:3>, path=com.streammedia.entity.Film.genres)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:4>, path=com.streammedia.entity.Film.genres.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:5>, path=com.streammedia.entity.Film.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:6>, path=com.streammedia.entity.Film.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:7>, path=com.streammedia.entity.Film.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:8>, path=com.streammedia.entity.Film.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:9>, path=com.streammedia.entity.Film.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:10>, path=com.streammedia.entity.Film.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:11>, path=com.streammedia.entity.Film.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:12>, path=com.streammedia.entity.Film.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:13>, path=com.streammedia.entity.Film.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:14>, path=com.streammedia.entity.Film.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Film)
          - SQL table alias mapping - film0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:5> -> <gen:10>
                   - CollectionQuerySpaceImpl(uid=<gen:10>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:10> -> <gen:11>
                         - EntityQuerySpaceImpl(uid=<gen:11>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:5> -> <gen:14>
                   - CompositeQuerySpaceImpl(uid=<gen:14>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-09 14:03:12.241 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Film [READ]: select film0_.film_id as film_id1_2_0_, film0_.cover as cover2_2_0_, film0_.created_at as created_3_2_0_, film0_.director as director4_2_0_, film0_.duration as duration5_2_0_, film0_.episode as episode6_2_0_, film0_.link as link7_2_0_, film0_.pub_date as pub_date8_2_0_, film0_.summary as summary9_2_0_, film0_.title as title10_2_0_, film0_.updated_at as updated11_2_0_, film0_.user as user13_2_0_, film0_.video as video12_2_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Film film0_ left outer join SM_Users user1_ on film0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where film0_.film_id=?
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_, crew2_.user as user9_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Film: select film0_.film_id as film_id1_2_1_, film0_.cover as cover2_2_1_, film0_.created_at as created_3_2_1_, film0_.director as director4_2_1_, film0_.duration as duration5_2_1_, film0_.episode as episode6_2_1_, film0_.link as link7_2_1_, film0_.pub_date as pub_date8_2_1_, film0_.summary as summary9_2_1_, film0_.title as title10_2_1_, film0_.updated_at as updated11_2_1_, film0_.user as user13_2_1_, film0_.video as video12_2_1_, crews1_.film_id as film_id1_3_3_, crew2_.crew_id as crew_id2_3_3_, crew2_.crew_id as crew_id1_0_0_, crew2_.biography as biograph2_0_0_, crew2_.created_at as created_3_0_0_, crew2_.email as email4_0_0_, crew2_.first_name as first_na5_0_0_, crew2_.last_name as last_nam6_0_0_, crew2_.profession as professi7_0_0_, crew2_.updated_at as updated_8_0_0_, crew2_.user as user9_0_0_ from Film film0_ left outer join FilmCrew crews1_ on film0_.film_id=crews1_.film_id left outer join Crew crew2_ on crews1_.crew_id=crew2_.crew_id where film0_.film_id=?
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.FAQ
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select faq_id from faq where faq_id =?
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select faq_.faq_id, faq_.category as category2_1_, faq_.created_at as created_3_1_, faq_.description as descript4_1_, faq_.title as title5_1_, faq_.updated_at as updated_6_1_, faq_.user as user7_1_ from faq faq_ where faq_.faq_id=?
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into faq (category, created_at, description, title, updated_at, user, faq_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update faq set category=?, created_at=?, description=?, title=?, updated_at=?, user=? where faq_id=?
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from faq where faq_id=?
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into faq (category, created_at, description, title, updated_at, user) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4afe0241]
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cde45b5]
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-09 14:03:12.258 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63f2dba5]
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b5c7200]
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55616f33]
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d0b11b3]
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58d1c844]
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20e56d2c]
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d15fcdc]
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5692665f]
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@34644e5f]
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.259 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:9>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.FAQ [NONE]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@498a06be]
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6f902a]
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67d6b8e8]
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1246101d]
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.faqs
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74ce3cbf]
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@db43fc6]
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-09 14:03:12.260 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f77c760]
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d93f26b]
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3576d940]
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5794652f]
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@472c457d]
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.261 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.FAQ)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:0>, path=com.streammedia.entity.FAQ)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.FAQ.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.FAQ.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.FAQ.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:4>, path=com.streammedia.entity.FAQ.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:5>, path=com.streammedia.entity.FAQ.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:6>, path=com.streammedia.entity.FAQ.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:7>, path=com.streammedia.entity.FAQ.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:8>, path=com.streammedia.entity.FAQ.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:9>, path=com.streammedia.entity.FAQ.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.FAQ.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.FAQ)
          - SQL table alias mapping - faq0_
          - alias suffix - 0_
          - suffixed key columns - {faq_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:6>
                   - CollectionQuerySpaceImpl(uid=<gen:6>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:6> -> <gen:7>
                         - EntityQuerySpaceImpl(uid=<gen:7>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.FAQ [READ]: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from faq faq0_ left outer join SM_Users user1_ on faq0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where faq0_.faq_id=?
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.FAQ: select faq0_.faq_id as faq_id1_1_0_, faq0_.category as category2_1_0_, faq0_.created_at as created_3_1_0_, faq0_.description as descript4_1_0_, faq0_.title as title5_1_0_, faq0_.updated_at as updated_6_1_0_, faq0_.user as user7_1_0_ from faq faq0_ where faq0_.faq_id=?
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_6_, role_.name as name3_6_, role_.updated_at as updated_4_6_, role_.username as username5_6_ from Role role_ where role_.role_id=?
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a0591f2]
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bee8599]
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63cc50f2]
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9bfc33]
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53367474]
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50c8e054]
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5102717f]
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@329b6508]
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-09 14:03:12.262 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52ee32fb]
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45b3b2b2]
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@778aaf2]
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:9>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4df8a2f5]
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57ebb8a2]
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-09 14:03:12.263 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20302d26]
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e83e95]
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a4ca882]
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c63c5dd]
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d9b926a]
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c461fda]
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1321b068]
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11eec2fc]
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@70070a69]
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.264 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Role.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Role.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Role.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Role.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Role.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:8>, path=com.streammedia.entity.Role.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:9>, path=com.streammedia.entity.Role.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_6_0_, role0_.created_at as created_2_6_0_, role0_.name as name3_6_0_, role0_.updated_at as updated_4_6_0_, role0_.username as username5_6_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Genre
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select genre_id from Genre where genre_id =?
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select genre_.genre_id, genre_.created_at as created_2_5_, genre_.description as descript3_5_, genre_.title as title4_5_, genre_.updated_at as updated_5_5_ from Genre genre_ where genre_.genre_id=?
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into Genre (created_at, description, title, updated_at, genre_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update Genre set created_at=?, description=?, title=?, updated_at=? where genre_id=?
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from Genre where genre_id=?
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into Genre (created_at, description, title, updated_at) values (?, ?, ?, ?)
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@224f366a]
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d4df76c]
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a821d3a]
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-09 14:03:12.265 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Genre [NONE]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71a59266]
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5965f53b]
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63b458e0]
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Genre)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:0>, path=com.streammedia.entity.Genre)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Genre.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Genre.films.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id1_5_0_}

[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Genre [READ]: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Genre: select genre0_.genre_id as genre_id1_5_0_, genre0_.created_at as created_2_5_0_, genre0_.description as descript3_5_0_, genre0_.title as title4_5_0_, genre0_.updated_at as updated_5_5_0_ from Genre genre0_ where genre0_.genre_id=?
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Trailer
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select trailer_id from Trailer where trailer_id =?
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select trailer_.trailer_id, trailer_.author as author2_8_, trailer_.cover as cover3_8_, trailer_.created_at as created_4_8_, trailer_.duration as duration5_8_, trailer_.links as links6_8_, trailer_.pub_date as pub_date7_8_, trailer_.summary as summary8_8_, trailer_.title as title9_8_, trailer_.updated_at as updated10_8_, trailer_.user as user12_8_, trailer_.video as video11_8_ from Trailer trailer_ where trailer_.trailer_id=?
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video, trailer_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update Trailer set author=?, cover=?, created_at=?, duration=?, links=?, pub_date=?, summary=?, title=?, updated_at=?, user=?, video=? where trailer_id=?
[DEBUG] 2020-03-09 14:03:12.266 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from Trailer where trailer_id=?
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into Trailer (author, cover, created_at, duration, links, pub_date, summary, title, updated_at, user, video) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3edfd052]
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fbe2862]
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e9116ee]
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51f83700]
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f8bf865]
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1386add]
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77e83a72]
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@673843b8]
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67f0c7ea]
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25dc274b]
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@57ff48ce]
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.267 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Trailer [NONE]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d037ba4]
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e4bd1be]
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@757b2d08]
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cdc835a]
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c5a735e]
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b3c778]
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e0ca94b]
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76923983]
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@597d748c]
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45e9f0dc]
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.trailers
[DEBUG] 2020-03-09 14:03:12.268 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-09 14:03:12.269 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-09 14:03:12.269 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-09 14:03:12.269 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@5b36e116]
[DEBUG] 2020-03-09 14:03:12.269 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-09 14:03:12.269 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-09 14:03:12.269 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.269 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.269 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Trailer)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:0>, path=com.streammedia.entity.Trailer)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Trailer.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:2>, path=com.streammedia.entity.Trailer.user.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=com.streammedia.entity.Trailer.user.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Trailer.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Trailer.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Trailer.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Trailer.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Trailer.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Trailer.user.roles.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:10>, path=com.streammedia.entity.Trailer.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Trailer)
          - SQL table alias mapping - trailer0_
          - alias suffix - 0_
          - suffixed key columns - {trailer_1_8_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:10>
                   - CompositeQuerySpaceImpl(uid=<gen:10>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-09 14:03:12.269 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Trailer [READ]: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Trailer trailer0_ left outer join SM_Users user1_ on trailer0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where trailer0_.trailer_id=?
[DEBUG] 2020-03-09 14:03:12.269 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-09 14:03:12.269 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Trailer: select trailer0_.trailer_id as trailer_1_8_0_, trailer0_.author as author2_8_0_, trailer0_.cover as cover3_8_0_, trailer0_.created_at as created_4_8_0_, trailer0_.duration as duration5_8_0_, trailer0_.links as links6_8_0_, trailer0_.pub_date as pub_date7_8_0_, trailer0_.summary as summary8_8_0_, trailer0_.title as title9_8_0_, trailer0_.updated_at as updated10_8_0_, trailer0_.user as user12_8_0_, trailer0_.video as video11_8_0_ from Trailer trailer0_ where trailer0_.trailer_id=?
[DEBUG] 2020-03-09 14:03:12.269 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-03-09 14:03:12.269 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-03-09 14:03:12.269 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_7_, user_.birthdate as birthdat3_7_, user_.created_at as created_4_7_, user_.email as email5_7_, user_.first_name as first_na6_7_, user_.gender as gender7_7_, user_.last_name as last_nam8_7_, user_.password as password9_7_, user_.picture as picture10_7_, user_.updated_at as updated11_7_, user_.username as usernam12_7_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-03-09 14:03:12.269 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7de592da]
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11e7343b]
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cd4adce]
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@df697cc]
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab2812c]
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@725c30ad]
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b1f59f5]
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32eef7ad]
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c1bab3d]
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5be6c649]
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a05dc4b]
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@1c18d53d]
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.270 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:7>
             - CollectionQuerySpaceImpl(uid=<gen:7>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:7> -> <gen:8>
                   - EntityQuerySpaceImpl(uid=<gen:8>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:11>
             - CompositeQuerySpaceImpl(uid=<gen:11>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f0280aa]
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61da65f3]
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dec0968]
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : faqs
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4610c9af]
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7261523e]
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4026547c]
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5ca259]
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5dc14dec]
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@254904c8]
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : trailers
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78f1994d]
[DEBUG] 2020-03-09 14:03:12.271 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1573bddf]
[DEBUG] 2020-03-09 14:03:12.272 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-09 14:03:12.272 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-03-09 14:03:12.272 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-03-09 14:03:12.272 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@33e6f5b1]
[DEBUG] 2020-03-09 14:03:12.272 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-09 14:03:12.272 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.272 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.272 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.crews)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.crews.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:3>, path=com.streammedia.entity.User.faqs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:4>, path=com.streammedia.entity.User.faqs.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:5>, path=com.streammedia.entity.User.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:6>, path=com.streammedia.entity.User.films.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=com.streammedia.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=com.streammedia.entity.User.trailers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=com.streammedia.entity.User.trailers.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_7_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:7>
             - CollectionQuerySpaceImpl(uid=<gen:7>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_6_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_6_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:7> -> <gen:8>
                   - EntityQuerySpaceImpl(uid=<gen:8>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_6_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:11>
             - CompositeQuerySpaceImpl(uid=<gen:11>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-03-09 14:03:12.273 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-09 14:03:12.273 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-09 14:03:12.273 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-09 14:03:12.278 [http-nio-8080-exec-3] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-09 14:03:12.278 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Crew
[DEBUG] 2020-03-09 14:03:12.278 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select crew_id from Crew where crew_id =?
[DEBUG] 2020-03-09 14:03:12.278 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select crew_.crew_id, crew_.biography as biograph2_0_, crew_.created_at as created_3_0_, crew_.email as email4_0_, crew_.first_name as first_na5_0_, crew_.last_name as last_nam6_0_, crew_.profession as professi7_0_, crew_.updated_at as updated_8_0_, crew_.user as user9_0_ from Crew crew_ where crew_.crew_id=?
[DEBUG] 2020-03-09 14:03:12.278 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, user, crew_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-09 14:03:12.278 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update Crew set biography=?, created_at=?, email=?, first_name=?, last_name=?, profession=?, updated_at=?, user=? where crew_id=?
[DEBUG] 2020-03-09 14:03:12.278 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from Crew where crew_id=?
[DEBUG] 2020-03-09 14:03:12.278 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into Crew (biography, created_at, email, first_name, last_name, profession, updated_at, user) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b8a82b6]
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@545417a5]
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31bf409a]
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e4feb29]
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@485c8c7e]
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32cbe7f]
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@221b0b90]
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14070802]
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-09 14:03:12.279 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38145980]
[DEBUG] 2020-03-09 14:03:12.280 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eadd7bb]
[DEBUG] 2020-03-09 14:03:12.280 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-09 14:03:12.280 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-09 14:03:12.280 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-09 14:03:12.280 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-09 14:03:12.280 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-09 14:03:12.280 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-09 14:03:12.280 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1239cb2b]
[DEBUG] 2020-03-09 14:03:12.280 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2299c6d8]
[DEBUG] 2020-03-09 14:03:12.280 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-09 14:03:12.280 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-09 14:03:12.280 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-09 14:03:12.280 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@62e7956]
[DEBUG] 2020-03-09 14:03:12.280 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-09 14:03:12.280 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.280 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.Crew.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Crew.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Crew.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Crew.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Crew.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Crew.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Crew.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Crew.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Crew.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Crew.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:3> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Crew [NONE]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_, crew0_.user as user9_0_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Crew crew0_ left outer join SM_Users user1_ on crew0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where crew0_.crew_id=?
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@864977e]
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11360eb7]
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ba0ca]
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2af80802]
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@569de340]
[DEBUG] 2020-03-09 14:03:12.281 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dcb94a9]
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6799250a]
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@682cfbaf]
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51128209]
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ad3a5e]
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.createdAt
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.name
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.updatedAt
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@640b4534]
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d9dfc21]
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@34e760e8]
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.282 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.283 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Crew)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:0>, path=com.streammedia.entity.Crew)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:1>, path=com.streammedia.entity.Crew.films)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:2>, path=com.streammedia.entity.Crew.films.<elements>)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.Crew.user)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:4>, path=com.streammedia.entity.Crew.user.faqs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:5>, path=com.streammedia.entity.Crew.user.faqs.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:6>, path=com.streammedia.entity.Crew.user.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:7>, path=com.streammedia.entity.Crew.user.films.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:8>, path=com.streammedia.entity.Crew.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:9>, path=com.streammedia.entity.Crew.user.roles.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:10>, path=com.streammedia.entity.Crew.user.trailers)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:11>, path=com.streammedia.entity.Crew.user.trailers.<elements>)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:12>, path=com.streammedia.entity.Crew.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Crew)
          - SQL table alias mapping - crew0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_7_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:3> -> <gen:8>
                   - CollectionQuerySpaceImpl(uid=<gen:8>, collection=com.streammedia.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {username5_6_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - role_id1_6_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=com.streammedia.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {role_id1_6_3_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:3> -> <gen:12>
                   - CompositeQuerySpaceImpl(uid=<gen:12>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-03-09 14:03:12.283 [http-nio-8080-exec-3] EntityLoader - Static select for entity com.streammedia.entity.Crew [READ]: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_, crew0_.user as user9_0_0_, user1_.user_id as user_id1_7_1_, user1_.biography as biograph2_7_1_, user1_.birthdate as birthdat3_7_1_, user1_.created_at as created_4_7_1_, user1_.email as email5_7_1_, user1_.first_name as first_na6_7_1_, user1_.gender as gender7_7_1_, user1_.last_name as last_nam8_7_1_, user1_.password as password9_7_1_, user1_.picture as picture10_7_1_, user1_.updated_at as updated11_7_1_, user1_.username as usernam12_7_1_, roles2_.username as username5_6_2_, roles2_.role_id as role_id1_6_2_, roles2_.role_id as role_id1_6_3_, roles2_.created_at as created_2_6_3_, roles2_.name as name3_6_3_, roles2_.updated_at as updated_4_6_3_, roles2_.username as username5_6_3_ from Crew crew0_ left outer join SM_Users user1_ on crew0_.user=user1_.user_id left outer join Role roles2_ on user1_.username=roles2_.username where crew0_.crew_id=?
[DEBUG] 2020-03-09 14:03:12.283 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_, crew0_.user as user9_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-09 14:03:12.283 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Crew: select crew0_.crew_id as crew_id1_0_0_, crew0_.biography as biograph2_0_0_, crew0_.created_at as created_3_0_0_, crew0_.email as email4_0_0_, crew0_.first_name as first_na5_0_0_, crew0_.last_name as last_nam6_0_0_, crew0_.profession as professi7_0_0_, crew0_.updated_at as updated_8_0_0_, crew0_.user as user9_0_0_ from Crew crew0_ where crew0_.crew_id=?
[DEBUG] 2020-03-09 14:03:12.287 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@29fe096]
[DEBUG] 2020-03-09 14:03:12.287 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20e73874]
[DEBUG] 2020-03-09 14:03:12.287 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-09 14:03:12.287 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.287 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-09 14:03:12.287 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-09 14:03:12.287 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@234269dd]
[DEBUG] 2020-03-09 14:03:12.287 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3affd159]
[DEBUG] 2020-03-09 14:03:12.287 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-09 14:03:12.287 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-09 14:03:12.287 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-09 14:03:12.287 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-09 14:03:12.287 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.287 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-09 14:03:12.287 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.289 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.289 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.crews].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.crews].<elements>.films)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.crews].<elements>.films.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {user9_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crews0_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}

[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.User.crews: select crews0_.user as user9_0_0_, crews0_.crew_id as crew_id1_0_0_, crews0_.crew_id as crew_id1_0_1_, crews0_.biography as biograph2_0_1_, crews0_.created_at as created_3_0_1_, crews0_.email as email4_0_1_, crews0_.first_name as first_na5_0_1_, crews0_.last_name as last_nam6_0_1_, crews0_.profession as professi7_0_1_, crews0_.updated_at as updated_8_0_1_, crews0_.user as user9_0_1_ from Crew crews0_ where crews0_.user=?
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@190a6f2a]
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8ce390c]
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : author
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.trailers)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.trailers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.trailers].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.trailers)
          - SQL table alias mapping - trailers0_
          - alias suffix - 0_
          - suffixed key columns - {user12_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - trailer_1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Trailer)
                - SQL table alias mapping - trailers0_
                - alias suffix - 1_
                - suffixed key columns - {trailer_1_8_1_}

[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.User.trailers: select trailers0_.user as user12_8_0_, trailers0_.trailer_id as trailer_1_8_0_, trailers0_.trailer_id as trailer_1_8_1_, trailers0_.author as author2_8_1_, trailers0_.cover as cover3_8_1_, trailers0_.created_at as created_4_8_1_, trailers0_.duration as duration5_8_1_, trailers0_.links as links6_8_1_, trailers0_.pub_date as pub_date7_8_1_, trailers0_.summary as summary8_8_1_, trailers0_.title as title9_8_1_, trailers0_.updated_at as updated10_8_1_, trailers0_.user as user12_8_1_, trailers0_.video as video11_8_1_ from Trailer trailers0_ where trailers0_.user=?
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1431fd3b]
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d4eb0e8]
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-09 14:03:12.290 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_6_1_}

[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6788263c]
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fd913d5]
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.faqs)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.faqs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.faqs].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.faqs)
          - SQL table alias mapping - faqs0_
          - alias suffix - 0_
          - suffixed key columns - {user7_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - faq_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.FAQ)
                - SQL table alias mapping - faqs0_
                - alias suffix - 1_
                - suffixed key columns - {faq_id1_1_1_}

[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.User.faqs: select faqs0_.user as user7_1_0_, faqs0_.faq_id as faq_id1_1_0_, faqs0_.faq_id as faq_id1_1_1_, faqs0_.category as category2_1_1_, faqs0_.created_at as created_3_1_1_, faqs0_.description as descript4_1_1_, faqs0_.title as title5_1_1_, faqs0_.updated_at as updated_6_1_1_, faqs0_.user as user7_1_1_ from faq faqs0_ where faqs0_.user=?
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62b34820]
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55c3a818]
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : crews
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c33812b]
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@247877dd]
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40254c21]
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6dc5da3b]
[DEBUG] 2020-03-09 14:03:12.291 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae48ec1]
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60ca9ff8]
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f22563]
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47a523c4]
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69992f77]
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d1848e3]
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d4b71e]
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@268116c3]
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-09 14:03:12.292 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.295 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.296 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Crew.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Crew.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Crew.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Crew.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Crew.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Crew.films].<elements>.genres.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Crew.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Crew.films].<elements>.user.crews)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Crew.films].<elements>.user.crews.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Crew.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Crew.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:12>, path=[com.streammedia.entity.Crew.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:13>, path=[com.streammedia.entity.Crew.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Crew.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {crew_id2_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:13>
                         - CompositeQuerySpaceImpl(uid=<gen:13>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-09 14:03:12.296 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.Crew.films: select films0_.crew_id as crew_id2_3_0_, films0_.film_id as film_id1_3_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.crew_id=?
[DEBUG] 2020-03-09 14:03:12.296 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47fa7ff3]
[DEBUG] 2020-03-09 14:03:12.296 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@453f882c]
[DEBUG] 2020-03-09 14:03:12.297 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-09 14:03:12.297 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.297 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-09 14:03:12.297 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@366a9e39]
[DEBUG] 2020-03-09 14:03:12.297 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f2d1e30]
[DEBUG] 2020-03-09 14:03:12.297 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-09 14:03:12.297 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-09 14:03:12.297 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-09 14:03:12.297 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-09 14:03:12.297 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : genres
[DEBUG] 2020-03-09 14:03:12.297 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-09 14:03:12.297 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-09 14:03:12.297 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-09 14:03:12.297 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-09 14:03:12.297 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.297 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a59f32a]
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51e1f1e7]
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36dab975]
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@339fcc27]
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4122f75d]
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.films
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f125857]
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c605bd1]
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31535e8e]
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@679dcfe6]
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6ac0e3a2]
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.298 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.299 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Genre.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Genre.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Genre.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Genre.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Genre.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Genre.films].<elements>.crews.<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Genre.films].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.crews, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Genre.films].<elements>.user.crews)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Genre.films].<elements>.user.crews.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Genre.films].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Genre.films].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:12>, path=[com.streammedia.entity.Genre.films].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:13>, path=[com.streammedia.entity.Genre.films].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Genre.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {genre_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - film1_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:4> -> <gen:13>
                         - CompositeQuerySpaceImpl(uid=<gen:13>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-09 14:03:12.299 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.Genre.films: select films0_.genre_id as genre_id2_4_0_, films0_.film_id as film_id1_4_0_, film1_.film_id as film_id1_2_1_, film1_.cover as cover2_2_1_, film1_.created_at as created_3_2_1_, film1_.director as director4_2_1_, film1_.duration as duration5_2_1_, film1_.episode as episode6_2_1_, film1_.link as link7_2_1_, film1_.pub_date as pub_date8_2_1_, film1_.summary as summary9_2_1_, film1_.title as title10_2_1_, film1_.updated_at as updated11_2_1_, film1_.user as user13_2_1_, film1_.video as video12_2_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmGenre films0_ inner join Film film1_ on films0_.film_id=film1_.film_id left outer join SM_Users user2_ on film1_.user=user2_.user_id where films0_.genre_id=?
[DEBUG] 2020-03-09 14:03:12.299 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f8c08d8]
[DEBUG] 2020-03-09 14:03:12.299 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36671230]
[DEBUG] 2020-03-09 14:03:12.299 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-03-09 14:03:12.299 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.299 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-03-09 14:03:12.299 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-09 14:03:12.299 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-09 14:03:12.299 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-03-09 14:03:12.299 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-03-09 14:03:12.299 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : profession
[DEBUG] 2020-03-09 14:03:12.299 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-03-09 14:03:12.299 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.299 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@144d6607]
[DEBUG] 2020-03-09 14:03:12.299 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.crews
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.crews
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.faqs
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78555385]
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@706ef2ee]
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.films
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f6cdfba]
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d6a0a1b]
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ff1af48]
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@680fc9da]
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.trailers
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f74a6e]
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c20b299]
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@ec9dbba]
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.300 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.301 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.crews)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.crews])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.crews].<elements>)
             - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=[com.streammedia.entity.Film.crews].<elements>.user)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.faqs, querySpaceUid=<gen:3>, path=[com.streammedia.entity.Film.crews].<elements>.user.faqs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.FAQ, querySpaceUid=<gen:4>, path=[com.streammedia.entity.Film.crews].<elements>.user.faqs.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:5>, path=[com.streammedia.entity.Film.crews].<elements>.user.films)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:6>, path=[com.streammedia.entity.Film.crews].<elements>.user.films.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:7>, path=[com.streammedia.entity.Film.crews].<elements>.user.roles)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:8>, path=[com.streammedia.entity.Film.crews].<elements>.user.roles.<elements>)
                - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.trailers, querySpaceUid=<gen:9>, path=[com.streammedia.entity.Film.crews].<elements>.user.trailers)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Trailer, querySpaceUid=<gen:10>, path=[com.streammedia.entity.Film.crews].<elements>.user.trailers.<elements>)
                - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:11>, path=[com.streammedia.entity.Film.crews].<elements>.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.crews)
          - SQL table alias mapping - crews0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - crew_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Crew)
                - SQL table alias mapping - crew1_
                - alias suffix - 1_
                - suffixed key columns - {crew_id1_0_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_7_2_}
                      - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:2> -> <gen:11>
                         - CompositeQuerySpaceImpl(uid=<gen:11>)
                            - SQL table alias mapping - user2_

[DEBUG] 2020-03-09 14:03:12.301 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.Film.crews: select crews0_.film_id as film_id1_3_0_, crews0_.crew_id as crew_id2_3_0_, crew1_.crew_id as crew_id1_0_1_, crew1_.biography as biograph2_0_1_, crew1_.created_at as created_3_0_1_, crew1_.email as email4_0_1_, crew1_.first_name as first_na5_0_1_, crew1_.last_name as last_nam6_0_1_, crew1_.profession as professi7_0_1_, crew1_.updated_at as updated_8_0_1_, crew1_.user as user9_0_1_, user2_.user_id as user_id1_7_2_, user2_.biography as biograph2_7_2_, user2_.birthdate as birthdat3_7_2_, user2_.created_at as created_4_7_2_, user2_.email as email5_7_2_, user2_.first_name as first_na6_7_2_, user2_.gender as gender7_7_2_, user2_.last_name as last_nam8_7_2_, user2_.password as password9_7_2_, user2_.picture as picture10_7_2_, user2_.updated_at as updated11_7_2_, user2_.username as usernam12_7_2_ from FilmCrew crews0_ inner join Crew crew1_ on crews0_.crew_id=crew1_.crew_id left outer join SM_Users user2_ on crew1_.user=user2_.user_id where crews0_.film_id=?
[DEBUG] 2020-03-09 14:03:12.301 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23810ff7]
[DEBUG] 2020-03-09 14:03:12.301 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a5cd564]
[DEBUG] 2020-03-09 14:03:12.301 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.301 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-03-09 14:03:12.301 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : films
[DEBUG] 2020-03-09 14:03:12.301 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : films
[DEBUG] 2020-03-09 14:03:12.301 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-09 14:03:12.301 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.301 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.301 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.Film.genres)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:0>, path=[com.streammedia.entity.Film.genres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:1>, path=[com.streammedia.entity.Film.genres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.Film.genres)
          - SQL table alias mapping - genres0_
          - alias suffix - 0_
          - suffixed key columns - {film_id1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - genre_id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {genre_id1_5_1_}

[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.Film.genres: select genres0_.film_id as film_id1_4_0_, genres0_.genre_id as genre_id2_4_0_, genre1_.genre_id as genre_id1_5_1_, genre1_.created_at as created_2_5_1_, genre1_.description as descript3_5_1_, genre1_.title as title4_5_1_, genre1_.updated_at as updated_5_5_1_ from FilmGenre genres0_ inner join Genre genre1_ on genres0_.genre_id=genre1_.genre_id where genres0_.film_id=?
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d3a1e70]
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e11546]
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cover
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : crews
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c4179e2]
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45630209]
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : director
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : duration
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : episode
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : genres
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25cc43f4]
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d005b3b]
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : link
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : publicationDate
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : summary
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : video
[DEBUG] 2020-03-09 14:03:12.302 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-03-09 14:03:12.303 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-03-09 14:03:12.303 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.films)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.films, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.films])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Film, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.films].<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.crews, querySpaceUid=<gen:2>, path=[com.streammedia.entity.User.films].<elements>.crews)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Crew, querySpaceUid=<gen:3>, path=[com.streammedia.entity.User.films].<elements>.crews.<elements>)
             - CollectionAttributeFetchImpl(collection=com.streammedia.entity.Film.genres, querySpaceUid=<gen:4>, path=[com.streammedia.entity.User.films].<elements>.genres)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Genre, querySpaceUid=<gen:5>, path=[com.streammedia.entity.User.films].<elements>.genres.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.films)
          - SQL table alias mapping - films0_
          - alias suffix - 0_
          - suffixed key columns - {user13_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - film_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Film)
                - SQL table alias mapping - films0_
                - alias suffix - 1_
                - suffixed key columns - {film_id1_2_1_}

[DEBUG] 2020-03-09 14:03:12.303 [http-nio-8080-exec-3] CollectionLoader - Static select for collection com.streammedia.entity.User.films: select films0_.user as user13_2_0_, films0_.film_id as film_id1_2_0_, films0_.film_id as film_id1_2_1_, films0_.cover as cover2_2_1_, films0_.created_at as created_3_2_1_, films0_.director as director4_2_1_, films0_.duration as duration5_2_1_, films0_.episode as episode6_2_1_, films0_.link as link7_2_1_, films0_.pub_date as pub_date8_2_1_, films0_.summary as summary9_2_1_, films0_.title as title10_2_1_, films0_.updated_at as updated11_2_1_, films0_.user as user13_2_1_, films0_.video as video12_2_1_ from Film films0_ where films0_.user=?
[DEBUG] 2020-03-09 14:03:12.342 [http-nio-8080-exec-3] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-03-09 14:03:12.342 [http-nio-8080-exec-3] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-03-09 14:03:12.342 [http-nio-8080-exec-3] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-03-09 14:03:12.348 [http-nio-8080-exec-3] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-03-09 14:03:12.348 [http-nio-8080-exec-3] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-03-09 14:03:12.348 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-03-09 14:03:12.349 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-03-09 14:03:12.350 [http-nio-8080-exec-3] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89f7fba
[DEBUG] 2020-03-09 14:03:12.351 [http-nio-8080-exec-3] SessionFactoryRegistry - Registering SessionFactory: 58bead08-1c75-410a-bb66-751974020c01 (<unnamed>)
[DEBUG] 2020-03-09 14:03:12.351 [http-nio-8080-exec-3] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-03-09 14:03:12.433 [http-nio-8080-exec-3] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-03-09 14:03:12.471 [http-nio-8080-exec-3] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
[DEBUG] 2020-03-09 14:03:12.490 [http-nio-8080-exec-3] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@34efeffb
[DEBUG] 2020-03-09 14:03:12.515 [http-nio-8080-exec-3] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0 where generatedAlias0.username=:param0
[DEBUG] 2020-03-09 14:03:12.519 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-09 14:03:12.525 [http-nio-8080-exec-3] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'streammedia'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-03-09 14:03:12.553 [http-nio-8080-exec-3] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-03-09 14:03:12.568 [http-nio-8080-exec-3] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-03-09 14:03:12.569 [http-nio-8080-exec-3] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-03-09 14:03:12.572 [http-nio-8080-exec-3] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-03-09 14:03:12.573 [http-nio-8080-exec-3] DotNode - getDataType() : username -> org.hibernate.type.StringType@2917c887
[DEBUG] 2020-03-09 14:03:12.574 [http-nio-8080-exec-3] FromReferenceNode - Resolved : generatedAlias0.username -> user0_.username
[DEBUG] 2020-03-09 14:03:12.575 [http-nio-8080-exec-3] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-03-09 14:03:12.575 [http-nio-8080-exec-3] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
[DEBUG] 2020-03-09 14:03:12.587 [http-nio-8080-exec-3] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-03-09 14:03:12.587 [http-nio-8080-exec-3] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-03-09 14:03:12.587 [http-nio-8080-exec-3] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_7_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_7_, user0_.birthdate as birthdat3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.first_name as first_na6_7_, user0_.gender as gender7_7_, user0_.last_name as last_nam8_7_, user0_.password as password9_7_, user0_.picture as picture10_7_, user0_.updated_at as updated11_7_, user0_.username as usernam12_7_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=generatedAlias0.username,tableAlias=user0_,className=com.streammedia.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2917c887}

[DEBUG] 2020-03-09 14:03:12.587 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-09 14:03:12.592 [http-nio-8080-exec-3] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0 where generatedAlias0.username=:param0
[DEBUG] 2020-03-09 14:03:12.592 [http-nio-8080-exec-3] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_7_, user0_.biography as biograph2_7_, user0_.birthdate as birthdat3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.first_name as first_na6_7_, user0_.gender as gender7_7_, user0_.last_name as last_nam8_7_, user0_.password as password9_7_, user0_.picture as picture10_7_, user0_.updated_at as updated11_7_, user0_.username as usernam12_7_ from SM_Users user0_ where user0_.username=?
[DEBUG] 2020-03-09 14:03:12.592 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-09 14:03:12.614 [http-nio-8080-exec-3] SQL - select user0_.user_id as user_id1_7_, user0_.biography as biograph2_7_, user0_.birthdate as birthdat3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.first_name as first_na6_7_, user0_.gender as gender7_7_, user0_.last_name as last_nam8_7_, user0_.password as password9_7_, user0_.picture as picture10_7_, user0_.updated_at as updated11_7_, user0_.username as usernam12_7_ from SM_Users user0_ where user0_.username=?
[DEBUG] 2020-03-09 14:03:12.643 [http-nio-8080-exec-3] Loader - Result set row: 0
[DEBUG] 2020-03-09 14:03:12.645 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-09 14:03:12.662 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-03-09 14:03:12.663 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `biography` : value = This is an admin Profile.This is an update
[DEBUG] 2020-03-09 14:03:12.664 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.664 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `birthdate` : value = 2005-07-27
[DEBUG] 2020-03-09 14:03:12.664 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.664 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-13
[DEBUG] 2020-03-09 14:03:12.664 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.664 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `crews` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-09 14:03:12.664 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`crews`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `firstName` : value = Jane
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `gender` : value = Female
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-09
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6e8123ed
[DEBUG] 2020-03-09 14:03:12.676 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.677 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-03-09 14:03:12.697 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=Jane, lastName=Doe, birthdate=2005-07-27, picture=, gender=Female, biography=This is an admin Profile.This is an update, createdAt=2020-02-13, updateAt=2020-03-09)]
[DEBUG] 2020-03-09 14:03:12.697 [http-nio-8080-exec-3] SQL - select roles0_.username as username5_6_0_, roles0_.role_id as role_id1_6_0_, roles0_.role_id as role_id1_6_1_, roles0_.created_at as created_2_6_1_, roles0_.name as name3_6_1_, roles0_.updated_at as updated_4_6_1_, roles0_.username as username5_6_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-03-09 14:03:12.699 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=Jane, lastName=Doe, birthdate=2005-07-27, picture=, gender=Female, biography=This is an admin Profile.This is an update, createdAt=2020-02-13, updateAt=2020-03-09)]
[DEBUG] 2020-03-09 14:03:12.703 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-09 14:03:12.704 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-09 14:03:12.707 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-09 14:03:12.707 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-13
[DEBUG] 2020-03-09 14:03:12.707 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.707 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-03-09 14:03:12.707 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.707 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-09
[DEBUG] 2020-03-09 14:03:12.707 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.707 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-09 14:03:12.707 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:12.708 [http-nio-8080-exec-3] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-03-09 14:03:12.708 [http-nio-8080-exec-3] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-09 14:03:12.709 [http-nio-8080-exec-3] Loader - Result set row: 0
[DEBUG] 2020-03-09 14:03:12.710 [http-nio-8080-exec-3] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-03-09 14:03:12.710 [http-nio-8080-exec-3] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-09 14:03:12.710 [http-nio-8080-exec-3] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-09 14:03:12.710 [http-nio-8080-exec-3] Loader - Done entity load
[DEBUG] 2020-03-09 14:03:12.710 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-03-09 14:03:12.711 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-09 14:03:12.712 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-03-09 14:03:12.712 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-09 14:03:12.713 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-09 14:03:12.713 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-03-09 14:03:12.715 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-03-09 14:03:19.610 [http-nio-8080-exec-7] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Trailer as generatedAlias0
[DEBUG] 2020-03-09 14:03:19.611 [http-nio-8080-exec-7] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.Trailer as generatedAlias0
[DEBUG] 2020-03-09 14:03:19.611 [http-nio-8080-exec-7] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-09 14:03:19.611 [http-nio-8080-exec-7] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Trailer'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-03-09 14:03:19.611 [http-nio-8080-exec-7] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-03-09 14:03:19.611 [http-nio-8080-exec-7] FromElement - FromClause{level=1} : com.streammedia.entity.Trailer (generatedAlias0) -> trailer0_
[DEBUG] 2020-03-09 14:03:19.611 [http-nio-8080-exec-7] FromReferenceNode - Resolved : generatedAlias0 -> trailer0_.trailer_id
[DEBUG] 2020-03-09 14:03:19.611 [http-nio-8080-exec-7] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-03-09 14:03:19.611 [http-nio-8080-exec-7] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} trailer0_.trailer_id ) ( FromClause{level=1} Trailer trailer0_ ) )
[DEBUG] 2020-03-09 14:03:19.611 [http-nio-8080-exec-7] JoinProcessor - Using FROM fragment [Trailer trailer0_]
[DEBUG] 2020-03-09 14:03:19.611 [http-nio-8080-exec-7] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-03-09 14:03:19.612 [http-nio-8080-exec-7] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Trailer)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'trailer0_.trailer_id as trailer_1_8_' {alias=generatedAlias0, className=com.streammedia.entity.Trailer, tableAlias=trailer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'trailer0_.author as author2_8_, trailer0_.cover as cover3_8_, trailer0_.created_at as created_4_8_, trailer0_.duration as duration5_8_, trailer0_.links as links6_8_, trailer0_.pub_date as pub_date7_8_, trailer0_.summary as summary8_8_, trailer0_.title as title9_8_, trailer0_.updated_at as updated10_8_, trailer0_.user as user12_8_, trailer0_.video as video11_8_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[trailer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Trailer trailer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Trailer,tableAlias=trailer0_,origin=null,columns={,className=com.streammedia.entity.Trailer}}

[DEBUG] 2020-03-09 14:03:19.612 [http-nio-8080-exec-7] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-09 14:03:19.612 [http-nio-8080-exec-7] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.Trailer as generatedAlias0
[DEBUG] 2020-03-09 14:03:19.612 [http-nio-8080-exec-7] QueryTranslatorImpl - SQL: select trailer0_.trailer_id as trailer_1_8_, trailer0_.author as author2_8_, trailer0_.cover as cover3_8_, trailer0_.created_at as created_4_8_, trailer0_.duration as duration5_8_, trailer0_.links as links6_8_, trailer0_.pub_date as pub_date7_8_, trailer0_.summary as summary8_8_, trailer0_.title as title9_8_, trailer0_.updated_at as updated10_8_, trailer0_.user as user12_8_, trailer0_.video as video11_8_ from Trailer trailer0_
[DEBUG] 2020-03-09 14:03:19.612 [http-nio-8080-exec-7] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-03-09 14:03:19.613 [http-nio-8080-exec-7] SQL - select trailer0_.trailer_id as trailer_1_8_, trailer0_.author as author2_8_, trailer0_.cover as cover3_8_, trailer0_.created_at as created_4_8_, trailer0_.duration as duration5_8_, trailer0_.links as links6_8_, trailer0_.pub_date as pub_date7_8_, trailer0_.summary as summary8_8_, trailer0_.title as title9_8_, trailer0_.updated_at as updated10_8_, trailer0_.user as user12_8_, trailer0_.video as video11_8_ from Trailer trailer0_
[DEBUG] 2020-03-09 14:03:19.615 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2020-03-09 14:03:19.616 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.Trailer#1]
[DEBUG] 2020-03-09 14:03:19.621 [http-nio-8080-exec-7] Loader - Result set row: 1
[DEBUG] 2020-03-09 14:03:19.621 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.Trailer#37]
[DEBUG] 2020-03-09 14:03:19.621 [http-nio-8080-exec-7] Loader - Result set row: 2
[DEBUG] 2020-03-09 14:03:19.621 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.Trailer#38]
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Trailer#1]
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `author` : value = Jeanne
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `cover` : value = 
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`cover`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-19
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `duration` : value = 23:01:20
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`duration`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `link` : value = 
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`link`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `publicationDate` : value = 2020-02-05
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`publicationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `summary` : value = This is a working Example of Editing a trailer.Is this Working?
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`summary`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = TomorrowHome
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-26
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-03-09 14:03:19.622 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.623 [http-nio-8080-exec-7] SQL - select user0_.user_id as user_id1_7_0_, user0_.biography as biograph2_7_0_, user0_.birthdate as birthdat3_7_0_, user0_.created_at as created_4_7_0_, user0_.email as email5_7_0_, user0_.first_name as first_na6_7_0_, user0_.gender as gender7_7_0_, user0_.last_name as last_nam8_7_0_, user0_.password as password9_7_0_, user0_.picture as picture10_7_0_, user0_.updated_at as updated11_7_0_, user0_.username as usernam12_7_0_, roles1_.username as username5_6_1_, roles1_.role_id as role_id1_6_1_, roles1_.role_id as role_id1_6_2_, roles1_.created_at as created_2_6_2_, roles1_.name as name3_6_2_, roles1_.updated_at as updated_4_6_2_, roles1_.username as username5_6_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-03-09 14:03:19.630 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-03-09 14:03:19.631 [http-nio-8080-exec-7] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-03-09 14:03:19.635 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-09 14:03:19.635 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-03-09 14:03:19.635 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `biography` : value = This is a Test.TestMore and More and more
[DEBUG] 2020-03-09 14:03:19.635 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.635 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-06-12
[DEBUG] 2020-03-09 14:03:19.635 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.635 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-15
[DEBUG] 2020-03-09 14:03:19.635 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.635 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `crews` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-09 14:03:19.635 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`crews`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.635 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-03-09 14:03:19.635 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.635 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `faqs` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-09 14:03:19.635 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`faqs`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.635 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `films` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-09 14:03:19.635 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`films`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.636 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-03-09 14:03:19.636 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.636 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `gender` : value = Male
[DEBUG] 2020-03-09 14:03:19.636 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.636 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-03-09 14:03:19.636 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.636 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-03-09 14:03:19.636 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.636 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `picture` : value = 
[DEBUG] 2020-03-09 14:03:19.636 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.636 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-09 14:03:19.636 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.636 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `trailers` : value = NOT NULL COLLECTION
[DEBUG] 2020-03-09 14:03:19.636 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`trailers`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.638 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-03-01
[DEBUG] 2020-03-09 14:03:19.638 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.638 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-03-09 14:03:19.638 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.638 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@686c9366
[DEBUG] 2020-03-09 14:03:19.638 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.638 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-03-09 14:03:19.638 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-09 14:03:19.639 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-15
[DEBUG] 2020-03-09 14:03:19.639 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.639 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-03-09 14:03:19.639 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.639 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-01
[DEBUG] 2020-03-09 14:03:19.639 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.639 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-03-09 14:03:19.639 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.641 [http-nio-8080-exec-7] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-03-09 14:03:19.641 [http-nio-8080-exec-7] SQL - select user0_.user_id as user_id1_7_1_, user0_.biography as biograph2_7_1_, user0_.birthdate as birthdat3_7_1_, user0_.created_at as created_4_7_1_, user0_.email as email5_7_1_, user0_.first_name as first_na6_7_1_, user0_.gender as gender7_7_1_, user0_.last_name as last_nam8_7_1_, user0_.password as password9_7_1_, user0_.picture as picture10_7_1_, user0_.updated_at as updated11_7_1_, user0_.username as usernam12_7_1_, roles1_.username as username5_6_3_, roles1_.role_id as role_id1_6_3_, roles1_.role_id as role_id1_6_0_, roles1_.created_at as created_2_6_0_, roles1_.name as name3_6_0_, roles1_.updated_at as updated_4_6_0_, roles1_.username as username5_6_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-03-09 14:03:19.643 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2020-03-09 14:03:19.643 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-03-09 14:03:19.643 [http-nio-8080-exec-7] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-03-09 14:03:19.643 [http-nio-8080-exec-7] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-09 14:03:19.643 [http-nio-8080-exec-7] Loader - Done entity load
[DEBUG] 2020-03-09 14:03:19.643 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-03-09 14:03:19.643 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-09 14:03:19.643 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-03-09 14:03:19.643 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-03-09 14:03:19.643 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-03-09 14:03:19.643 [http-nio-8080-exec-7] AbstractLoadPlanBasedEntityLoader - Done entity load : com.streammedia.entity.User#1
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `video` : value = 
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`video`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Trailer#1]
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Trailer#37]
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `author` : value = Mary
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `cover` : value = 
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`cover`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-26
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `duration` : value = 23:30:03
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`duration`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `link` : value = 
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`link`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `publicationDate` : value = 2020-02-26
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`publicationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `summary` : value = Test add Trailer.Mote Test Over and Over
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`summary`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = Moon Landing
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-26
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-03-09 14:03:19.644 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `video` : value = 
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`video`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Trailer#37]
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Trailer#38]
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `author` : value = Mary
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`author`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `cover` : value = 
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`cover`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-03-05
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `duration` : value = 23:02:30
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`duration`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `link` : value = 
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`link`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `publicationDate` : value = 2020-03-05
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`publicationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `summary` : value = This is a new Trailer before implementing Upload covers and videos
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`summary`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `title` : value = Once in blue moon
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-03-05
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `video` : value = 
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`video`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Trailer#38]
[DEBUG] 2020-03-09 14:03:19.645 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
