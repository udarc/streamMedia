[DEBUG] 2020-02-16 23:29:20.021 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 23:29:20.029 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 23:29:20.033 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 23:29:20.124 [http-nio-8080-exec-2] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 23:29:20.125 [http-nio-8080-exec-2] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 23:29:20.295 [http-nio-8080-exec-2] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 23:29:20.296 [http-nio-8080-exec-2] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 23:29:20.327 [http-nio-8080-exec-2] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 23:29:20.655 [http-nio-8080-exec-2] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 23:29:20.685 [http-nio-8080-exec-2] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 23:29:20.686 [http-nio-8080-exec-2] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 23:29:20.710 [http-nio-8080-exec-2] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 23:29:20.753 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@158974f4
[DEBUG] 2020-02-16 23:29:20.753 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@158974f4
[DEBUG] 2020-02-16 23:29:20.753 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@158974f4
[DEBUG] 2020-02-16 23:29:20.754 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4d559bae
[DEBUG] 2020-02-16 23:29:20.755 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b46b13c
[DEBUG] 2020-02-16 23:29:20.755 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@23e5e7f8
[DEBUG] 2020-02-16 23:29:20.756 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@46bafe73
[DEBUG] 2020-02-16 23:29:20.756 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@46bafe73
[DEBUG] 2020-02-16 23:29:20.756 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@46bafe73
[DEBUG] 2020-02-16 23:29:20.757 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@9cba2fe
[DEBUG] 2020-02-16 23:29:20.757 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@9cba2fe
[DEBUG] 2020-02-16 23:29:20.757 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@9cba2fe
[DEBUG] 2020-02-16 23:29:20.759 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7748f9c7
[DEBUG] 2020-02-16 23:29:20.760 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7748f9c7
[DEBUG] 2020-02-16 23:29:20.761 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7748f9c7
[DEBUG] 2020-02-16 23:29:20.762 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@24a8ae8c
[DEBUG] 2020-02-16 23:29:20.762 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@24a8ae8c
[DEBUG] 2020-02-16 23:29:20.763 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@24a8ae8c
[DEBUG] 2020-02-16 23:29:20.763 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31379bff
[DEBUG] 2020-02-16 23:29:20.763 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31379bff
[DEBUG] 2020-02-16 23:29:20.763 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31379bff
[DEBUG] 2020-02-16 23:29:20.764 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@75c63bbf
[DEBUG] 2020-02-16 23:29:20.764 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@75c63bbf
[DEBUG] 2020-02-16 23:29:20.764 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@75c63bbf
[DEBUG] 2020-02-16 23:29:20.765 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@bcd39e1
[DEBUG] 2020-02-16 23:29:20.765 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@bcd39e1
[DEBUG] 2020-02-16 23:29:20.765 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@bcd39e1
[DEBUG] 2020-02-16 23:29:20.766 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@34b23d83
[DEBUG] 2020-02-16 23:29:20.766 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@34b23d83
[DEBUG] 2020-02-16 23:29:20.767 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@64aa3751
[DEBUG] 2020-02-16 23:29:20.767 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@64aa3751
[DEBUG] 2020-02-16 23:29:20.768 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@205fae8b
[DEBUG] 2020-02-16 23:29:20.768 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@205fae8b
[DEBUG] 2020-02-16 23:29:20.769 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@488721bf
[DEBUG] 2020-02-16 23:29:20.770 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3b40cc4b
[DEBUG] 2020-02-16 23:29:20.772 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5ccee949
[DEBUG] 2020-02-16 23:29:20.772 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5ccee949
[DEBUG] 2020-02-16 23:29:20.773 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3101487e
[DEBUG] 2020-02-16 23:29:20.773 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3101487e
[DEBUG] 2020-02-16 23:29:20.777 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6558c348
[DEBUG] 2020-02-16 23:29:20.777 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6558c348
[DEBUG] 2020-02-16 23:29:20.779 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7b0edd2f
[DEBUG] 2020-02-16 23:29:20.779 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7b0edd2f
[DEBUG] 2020-02-16 23:29:20.780 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4b74beef
[DEBUG] 2020-02-16 23:29:20.780 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4b74beef
[DEBUG] 2020-02-16 23:29:20.782 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1d79b492
[DEBUG] 2020-02-16 23:29:20.783 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1d79b492
[DEBUG] 2020-02-16 23:29:20.785 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@375b9b91
[DEBUG] 2020-02-16 23:29:20.786 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@375b9b91
[DEBUG] 2020-02-16 23:29:20.787 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6f132ab8
[DEBUG] 2020-02-16 23:29:20.787 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6f132ab8
[DEBUG] 2020-02-16 23:29:20.799 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@468148d1
[DEBUG] 2020-02-16 23:29:20.799 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@468148d1
[DEBUG] 2020-02-16 23:29:20.800 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6a45be68
[DEBUG] 2020-02-16 23:29:20.800 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6a45be68
[DEBUG] 2020-02-16 23:29:20.801 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5809df22
[DEBUG] 2020-02-16 23:29:20.801 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5809df22
[DEBUG] 2020-02-16 23:29:20.802 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1f9b90e5
[DEBUG] 2020-02-16 23:29:20.802 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f9b90e5
[DEBUG] 2020-02-16 23:29:20.802 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f9b90e5
[DEBUG] 2020-02-16 23:29:20.805 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@62a23bfd
[DEBUG] 2020-02-16 23:29:20.806 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@20533b2e
[DEBUG] 2020-02-16 23:29:20.806 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@20533b2e
[DEBUG] 2020-02-16 23:29:20.806 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@20533b2e
[DEBUG] 2020-02-16 23:29:20.807 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@629ca0f8
[DEBUG] 2020-02-16 23:29:20.808 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@775d9749
[DEBUG] 2020-02-16 23:29:20.808 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@775d9749
[DEBUG] 2020-02-16 23:29:20.808 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7cf992de
[DEBUG] 2020-02-16 23:29:20.808 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7cf992de
[DEBUG] 2020-02-16 23:29:20.809 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@17327b8
[DEBUG] 2020-02-16 23:29:20.809 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17327b8
[DEBUG] 2020-02-16 23:29:20.810 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@34c5550b
[DEBUG] 2020-02-16 23:29:20.810 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@34c5550b
[DEBUG] 2020-02-16 23:29:20.810 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7f2ccac6
[DEBUG] 2020-02-16 23:29:20.811 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7f2ccac6
[DEBUG] 2020-02-16 23:29:20.811 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@44620167
[DEBUG] 2020-02-16 23:29:20.813 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@610da48a
[DEBUG] 2020-02-16 23:29:20.813 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@610da48a
[DEBUG] 2020-02-16 23:29:20.813 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@610da48a
[DEBUG] 2020-02-16 23:29:20.814 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@28d54b25
[DEBUG] 2020-02-16 23:29:20.814 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@28d54b25
[DEBUG] 2020-02-16 23:29:20.814 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@28d54b25
[DEBUG] 2020-02-16 23:29:20.816 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@29252077
[DEBUG] 2020-02-16 23:29:20.816 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5debd960
[DEBUG] 2020-02-16 23:29:20.818 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@f508828
[DEBUG] 2020-02-16 23:29:20.818 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@f508828
[DEBUG] 2020-02-16 23:29:20.818 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@f508828
[DEBUG] 2020-02-16 23:29:20.819 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5a79542a
[DEBUG] 2020-02-16 23:29:20.819 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5a79542a
[DEBUG] 2020-02-16 23:29:20.819 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5a79542a
[DEBUG] 2020-02-16 23:29:20.819 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5dcc5635
[DEBUG] 2020-02-16 23:29:20.820 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@19c2590d
[DEBUG] 2020-02-16 23:29:20.822 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4765d4e9
[DEBUG] 2020-02-16 23:29:20.822 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4765d4e9
[DEBUG] 2020-02-16 23:29:20.823 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@449f7d91
[DEBUG] 2020-02-16 23:29:20.824 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@43a6fa13
[DEBUG] 2020-02-16 23:29:20.824 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@43a6fa13
[DEBUG] 2020-02-16 23:29:20.825 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@458c6132
[DEBUG] 2020-02-16 23:29:20.825 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@458c6132
[DEBUG] 2020-02-16 23:29:20.825 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@41831a26
[DEBUG] 2020-02-16 23:29:20.825 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1d68352c
[DEBUG] 2020-02-16 23:29:20.826 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1ceb2150
[DEBUG] 2020-02-16 23:29:20.831 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@455ddc6e
[DEBUG] 2020-02-16 23:29:20.832 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@455ddc6e
[DEBUG] 2020-02-16 23:29:20.833 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@28207045
[DEBUG] 2020-02-16 23:29:20.833 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@50dc234e
[DEBUG] 2020-02-16 23:29:20.833 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@25e8dcce
[DEBUG] 2020-02-16 23:29:20.833 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@d6200e8
[DEBUG] 2020-02-16 23:29:20.833 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@26ebfb59
[DEBUG] 2020-02-16 23:29:20.833 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@179c6a99
[DEBUG] 2020-02-16 23:29:20.833 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@74f1da08
[DEBUG] 2020-02-16 23:29:20.833 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6989e13e
[DEBUG] 2020-02-16 23:29:20.878 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 23:29:20.879 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 23:29:20.879 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 23:29:20.879 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 23:29:20.880 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 23:29:20.880 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 23:29:20.881 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 23:29:20.886 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 23:29:20.887 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 23:29:20.888 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 23:29:20.889 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 23:29:20.889 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 23:29:20.889 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 23:29:20.890 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 23:29:20.913 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 23:29:20.913 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 23:29:20.913 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 23:29:21.112 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 23:29:21.738 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 23:29:21.739 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 23:29:21.739 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 23:29:21.782 [http-nio-8080-exec-2] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 23:29:21.807 [http-nio-8080-exec-2] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 23:29:21.846 [http-nio-8080-exec-2] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 23:29:21.931 [http-nio-8080-exec-2] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 23:29:21.941 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6f731f39] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7d92e236]
[DEBUG] 2020-02-16 23:29:22.115 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 23:29:22.241 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 23:29:22.259 [http-nio-8080-exec-2] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 23:29:22.262 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 23:29:22.302 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.309 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 23:29:22.311 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 23:29:22.319 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 23:29:22.322 [http-nio-8080-exec-2] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 23:29:22.326 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 23:29:22.328 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.328 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 23:29:22.328 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 23:29:22.328 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 23:29:22.328 [http-nio-8080-exec-2] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 23:29:22.328 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.328 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 23:29:22.328 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 23:29:22.328 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 23:29:22.328 [http-nio-8080-exec-2] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 23:29:22.328 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.332 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 23:29:22.332 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 23:29:22.332 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 23:29:22.332 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 23:29:22.332 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.333 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 23:29:22.335 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 23:29:22.335 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 23:29:22.335 [http-nio-8080-exec-2] PropertyBinder - Building property email
[DEBUG] 2020-02-16 23:29:22.336 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.336 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 23:29:22.339 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 23:29:22.339 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 23:29:22.340 [http-nio-8080-exec-2] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 23:29:22.340 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.340 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 23:29:22.340 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 23:29:22.340 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 23:29:22.340 [http-nio-8080-exec-2] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 23:29:22.340 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.341 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 23:29:22.342 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 23:29:22.343 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 23:29:22.343 [http-nio-8080-exec-2] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 23:29:22.343 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.343 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 23:29:22.344 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 23:29:22.344 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 23:29:22.344 [http-nio-8080-exec-2] PropertyBinder - Building property password
[DEBUG] 2020-02-16 23:29:22.344 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.344 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 23:29:22.344 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 23:29:22.345 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 23:29:22.345 [http-nio-8080-exec-2] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 23:29:22.347 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 23:29:22.348 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.351 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.369 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.370 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.371 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 23:29:22.374 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 23:29:22.377 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 23:29:22.377 [http-nio-8080-exec-2] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:29:22.380 [http-nio-8080-exec-2] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 23:29:22.380 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.381 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 23:29:22.381 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 23:29:22.381 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 23:29:22.381 [http-nio-8080-exec-2] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 23:29:22.381 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 23:29:22.382 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 23:29:22.382 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 23:29:22.382 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 23:29:22.382 [http-nio-8080-exec-2] PropertyBinder - Building property username
[DEBUG] 2020-02-16 23:29:22.383 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:29:22.383 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 23:29:22.384 [http-nio-8080-exec-2] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 23:29:22.384 [http-nio-8080-exec-2] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 23:29:22.410 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.410 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 23:29:22.410 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 23:29:22.410 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 23:29:22.410 [http-nio-8080-exec-2] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 23:29:22.410 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 23:29:22.410 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.410 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 23:29:22.411 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 23:29:22.411 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 23:29:22.411 [http-nio-8080-exec-2] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 23:29:22.431 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.432 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 23:29:22.432 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 23:29:22.434 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 23:29:22.435 [http-nio-8080-exec-2] PropertyBinder - Building property name
[DEBUG] 2020-02-16 23:29:22.437 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.437 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 23:29:22.437 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 23:29:22.437 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 23:29:22.437 [http-nio-8080-exec-2] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 23:29:22.438 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 23:29:22.438 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:29:22.440 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-02-16 23:29:22.445 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 23:29:22.447 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 23:29:22.448 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 23:29:22.448 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 23:29:22.448 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 23:29:22.448 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 23:29:22.448 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 23:29:22.448 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 23:29:22.448 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 23:29:22.452 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 23:29:22.452 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 23:29:22.452 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 23:29:22.452 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 23:29:22.453 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 23:29:22.453 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 23:29:22.453 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 23:29:22.461 [http-nio-8080-exec-2] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 23:29:22.461 [http-nio-8080-exec-2] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 23:29:22.461 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:29:22.461 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 23:29:22.462 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 23:29:22.465 [http-nio-8080-exec-2] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 23:29:22.465 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:29:22.465 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 23:29:22.465 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 23:29:22.470 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 23:29:22.471 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 23:29:22.542 [http-nio-8080-exec-2] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 23:29:22.543 [http-nio-8080-exec-2] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 23:29:22.543 [http-nio-8080-exec-2] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 23:29:22.543 [http-nio-8080-exec-2] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 23:29:22.543 [http-nio-8080-exec-2] Settings - Statistics: disabled
[DEBUG] 2020-02-16 23:29:22.543 [http-nio-8080-exec-2] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 23:29:22.543 [http-nio-8080-exec-2] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 23:29:22.543 [http-nio-8080-exec-2] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 23:29:22.543 [http-nio-8080-exec-2] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 23:29:22.543 [http-nio-8080-exec-2] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 23:29:22.543 [http-nio-8080-exec-2] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 23:29:22.543 [http-nio-8080-exec-2] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 23:29:22.543 [http-nio-8080-exec-2] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 23:29:22.543 [http-nio-8080-exec-2] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 23:29:22.544 [http-nio-8080-exec-2] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 23:29:22.639 [http-nio-8080-exec-2] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 23:29:22.708 [http-nio-8080-exec-2] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 23:29:22.708 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7e4e720a, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 23:29:22.739 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 23:29:22.739 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:29:22.755 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 23:29:22.755 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 23:29:22.762 [http-nio-8080-exec-2] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 23:29:22.762 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 23:29:22.763 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6f731f39] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@37bae373]
[DEBUG] 2020-02-16 23:29:22.823 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 23:29:22.823 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:29:22.840 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 23:29:22.840 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:29:23.110 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 23:29:23.110 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 23:29:23.113 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 23:29:23.113 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 23:29:23.198 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:29:23.198 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 23:29:23.198 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 23:29:23.198 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 23:29:23.198 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 23:29:23.204 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:29:23.204 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 23:29:23.204 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 23:29:23.204 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 23:29:23.204 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 23:29:23.204 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 23:29:23.204 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 23:29:23.229 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f95668f]
[DEBUG] 2020-02-16 23:29:23.231 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:29:23.231 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 23:29:23.231 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 23:29:23.231 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 23:29:23.236 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@669cf85e]
[DEBUG] 2020-02-16 23:29:23.240 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 23:29:23.240 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 23:29:23.240 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 23:29:23.240 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 23:29:23.240 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 23:29:23.240 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 23:29:23.240 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 23:29:23.240 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 23:29:23.240 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 23:29:23.240 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 23:29:23.240 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 23:29:23.241 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 23:29:23.241 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 23:29:23.241 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 23:29:23.242 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@77689cb9]
[DEBUG] 2020-02-16 23:29:23.244 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 23:29:23.244 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:29:23.267 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:29:23.275 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 23:29:23.279 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 23:29:23.279 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fb096fe]
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ab4ac82]
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@315a5335]
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 23:29:23.280 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:29:23.281 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:29:23.281 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 23:29:23.281 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 23:29:23.293 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 23:29:23.293 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f6cf1f6]
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 23:29:23.294 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 23:29:23.295 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@670146bb]
[DEBUG] 2020-02-16 23:29:23.296 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55c6bf8b]
[DEBUG] 2020-02-16 23:29:23.297 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 23:29:23.298 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 23:29:23.298 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 23:29:23.298 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 23:29:23.299 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 23:29:23.300 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 23:29:23.300 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 23:29:23.300 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 23:29:23.300 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@fee8be9]
[DEBUG] 2020-02-16 23:29:23.300 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 23:29:23.300 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:29:23.300 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:29:23.304 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 23:29:23.304 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 23:29:23.304 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8bc80bb]
[DEBUG] 2020-02-16 23:29:23.304 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 23:29:23.304 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 23:29:23.304 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:29:23.304 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 23:29:23.304 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c312fa9]
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7857bb]
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@26f290ba]
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:29:23.305 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:29:23.306 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 23:29:23.306 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 23:29:23.307 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 23:29:23.307 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 23:29:23.310 [http-nio-8080-exec-2] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 23:29:23.315 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e76646d]
[DEBUG] 2020-02-16 23:29:23.315 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a24697d]
[DEBUG] 2020-02-16 23:29:23.315 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:29:23.315 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 23:29:23.315 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 23:29:23.315 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 23:29:23.315 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 23:29:23.315 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:29:23.318 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:29:23.319 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 23:29:23.319 [http-nio-8080-exec-2] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 23:29:23.541 [http-nio-8080-exec-2] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 23:29:23.542 [http-nio-8080-exec-2] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 23:29:23.543 [http-nio-8080-exec-2] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 23:29:23.554 [http-nio-8080-exec-2] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 23:29:23.557 [http-nio-8080-exec-2] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 23:29:23.558 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 23:29:23.558 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 23:29:23.561 [http-nio-8080-exec-2] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3dd77ec
[DEBUG] 2020-02-16 23:29:23.563 [http-nio-8080-exec-2] SessionFactoryRegistry - Registering SessionFactory: d1beed3a-5632-4c11-a625-1b56417ee76e (<unnamed>)
[DEBUG] 2020-02-16 23:29:23.563 [http-nio-8080-exec-2] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 23:29:23.677 [http-nio-8080-exec-2] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 23:29:23.759 [http-nio-8080-exec-2] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 23:29:23.780 [http-nio-8080-exec-2] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18d8cdea
[DEBUG] 2020-02-16 23:29:23.845 [http-nio-8080-exec-2] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 23:29:23.852 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 23:29:23.860 [http-nio-8080-exec-2] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 23:29:23.888 [http-nio-8080-exec-2] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 23:29:23.906 [http-nio-8080-exec-2] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 23:29:23.907 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 23:29:23.908 [http-nio-8080-exec-2] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 23:29:23.908 [http-nio-8080-exec-2] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 23:29:23.919 [http-nio-8080-exec-2] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 23:29:23.920 [http-nio-8080-exec-2] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 23:29:23.920 [http-nio-8080-exec-2] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 23:29:23.920 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 23:29:23.931 [http-nio-8080-exec-2] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 23:29:23.931 [http-nio-8080-exec-2] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 23:29:23.931 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 23:29:23.962 [http-nio-8080-exec-2] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 23:29:24.003 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2020-02-16 23:29:24.026 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-02-16 23:29:24.043 [http-nio-8080-exec-2] Loader - Result set row: 1
[DEBUG] 2020-02-16 23:29:24.044 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-16 23:29:24.045 [http-nio-8080-exec-2] Loader - Result set row: 2
[DEBUG] 2020-02-16 23:29:24.045 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 23:29:24.049 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-02-16 23:29:24.050 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 23:29:24.050 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.050 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 23:29:24.050 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.050 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:29:24.050 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.050 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 23:29:24.050 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.050 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 23:29:24.050 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.050 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 23:29:24.050 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.051 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 23:29:24.051 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.051 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 23:29:24.051 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.055 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 23:29:24.055 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.056 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 23:29:24.056 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.064 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:29:24.065 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.065 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 23:29:24.065 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.065 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@8cd8a03
[DEBUG] 2020-02-16 23:29:24.065 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.067 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@69f8ef97
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `email` : value = mary@streammedia.com
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `firstName` : value = Mary
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `lastName` : value = Torrence
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 23:29:24.068 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.069 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 23:29:24.069 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.069 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 23:29:24.069 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.069 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:29:24.069 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.069 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = mary
[DEBUG] 2020-02-16 23:29:24.069 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.069 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@5f943f1
[DEBUG] 2020-02-16 23:29:24.069 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.069 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 23:29:24.120 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=mary, email=mary@streammedia.com, password=12345, firstName=Mary, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:29:24.121 [http-nio-8080-exec-2] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 23:29:24.126 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=mary, email=mary@streammedia.com, password=12345, firstName=Mary, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:29:24.131 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 23:29:24.136 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=mary, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:29:24.140 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#3]
[DEBUG] 2020-02-16 23:29:24.140 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:29:24.141 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.141 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 23:29:24.141 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.141 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:29:24.141 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.141 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=mary, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 23:29:24.141 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.142 [http-nio-8080-exec-2] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=mary}]
[DEBUG] 2020-02-16 23:29:24.142 [http-nio-8080-exec-2] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 23:29:24.145 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2020-02-16 23:29:24.146 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.Role#3], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 23:29:24.146 [http-nio-8080-exec-2] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=mary, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:29:24.146 [http-nio-8080-exec-2] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:29:24.146 [http-nio-8080-exec-2] Loader - Done entity load
[DEBUG] 2020-02-16 23:29:24.146 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#3]
[DEBUG] 2020-02-16 23:29:24.147 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:29:24.147 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 23:29:24.147 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:29:24.147 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 23:29:24.147 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 23:29:24.147 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:29:24.147 [http-nio-8080-exec-2] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 23:29:24.149 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:29:24.149 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 23:29:24.150 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:29:24.150 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 23:29:24.150 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:29:24.150 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.150 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 23:29:24.150 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.150 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:29:24.150 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.150 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 23:29:24.152 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.153 [http-nio-8080-exec-2] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 23:29:24.153 [http-nio-8080-exec-2] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 23:29:24.161 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2020-02-16 23:29:24.161 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-16 23:29:24.161 [http-nio-8080-exec-2] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:29:24.161 [http-nio-8080-exec-2] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:29:24.161 [http-nio-8080-exec-2] Loader - Done entity load
[DEBUG] 2020-02-16 23:29:24.161 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 23:29:24.161 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:29:24.161 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-16 23:29:24.161 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:29:24.161 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 23:29:24.161 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 23:29:24.164 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:29:24.164 [http-nio-8080-exec-2] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 23:29:24.168 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:29:24.169 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 23:29:24.170 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:29:24.170 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 23:29:24.170 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:29:24.170 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.170 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 23:29:24.170 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.170 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:29:24.170 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.170 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 23:29:24.170 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:29:24.170 [http-nio-8080-exec-2] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 23:29:24.170 [http-nio-8080-exec-2] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 23:29:24.171 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2020-02-16 23:29:24.171 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-02-16 23:29:24.171 [http-nio-8080-exec-2] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:29:24.171 [http-nio-8080-exec-2] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:29:24.171 [http-nio-8080-exec-2] Loader - Done entity load
[DEBUG] 2020-02-16 23:29:24.171 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 23:29:24.171 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:29:24.173 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-02-16 23:29:24.173 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:29:24.173 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 23:29:24.173 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 23:29:24.174 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 23:32:59.977 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 23:32:59.981 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 23:32:59.986 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 23:33:00.074 [http-nio-8080-exec-10] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 23:33:00.075 [http-nio-8080-exec-10] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 23:33:00.176 [http-nio-8080-exec-10] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 23:33:00.177 [http-nio-8080-exec-10] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 23:33:00.178 [http-nio-8080-exec-10] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 23:33:00.322 [http-nio-8080-exec-10] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 23:33:00.338 [http-nio-8080-exec-10] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 23:33:00.339 [http-nio-8080-exec-10] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 23:33:00.357 [http-nio-8080-exec-10] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 23:33:00.387 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@27952331
[DEBUG] 2020-02-16 23:33:00.387 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@27952331
[DEBUG] 2020-02-16 23:33:00.387 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@27952331
[DEBUG] 2020-02-16 23:33:00.387 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5351cd9b
[DEBUG] 2020-02-16 23:33:00.387 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@50f6617b
[DEBUG] 2020-02-16 23:33:00.388 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7fed1c66
[DEBUG] 2020-02-16 23:33:00.388 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7d17ca6c
[DEBUG] 2020-02-16 23:33:00.388 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7d17ca6c
[DEBUG] 2020-02-16 23:33:00.388 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d17ca6c
[DEBUG] 2020-02-16 23:33:00.389 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1132208f
[DEBUG] 2020-02-16 23:33:00.389 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1132208f
[DEBUG] 2020-02-16 23:33:00.389 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1132208f
[DEBUG] 2020-02-16 23:33:00.390 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4861aee0
[DEBUG] 2020-02-16 23:33:00.390 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4861aee0
[DEBUG] 2020-02-16 23:33:00.390 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4861aee0
[DEBUG] 2020-02-16 23:33:00.390 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@28ee8709
[DEBUG] 2020-02-16 23:33:00.390 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@28ee8709
[DEBUG] 2020-02-16 23:33:00.390 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28ee8709
[DEBUG] 2020-02-16 23:33:00.391 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4963a6f8
[DEBUG] 2020-02-16 23:33:00.391 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4963a6f8
[DEBUG] 2020-02-16 23:33:00.391 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4963a6f8
[DEBUG] 2020-02-16 23:33:00.391 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@478b0c1f
[DEBUG] 2020-02-16 23:33:00.391 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@478b0c1f
[DEBUG] 2020-02-16 23:33:00.391 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@478b0c1f
[DEBUG] 2020-02-16 23:33:00.392 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@190223e0
[DEBUG] 2020-02-16 23:33:00.392 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@190223e0
[DEBUG] 2020-02-16 23:33:00.392 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@190223e0
[DEBUG] 2020-02-16 23:33:00.393 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d5256f3
[DEBUG] 2020-02-16 23:33:00.393 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d5256f3
[DEBUG] 2020-02-16 23:33:00.393 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23949957
[DEBUG] 2020-02-16 23:33:00.393 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23949957
[DEBUG] 2020-02-16 23:33:00.394 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@74deff01
[DEBUG] 2020-02-16 23:33:00.394 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@74deff01
[DEBUG] 2020-02-16 23:33:00.394 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@36ab2dd3
[DEBUG] 2020-02-16 23:33:00.395 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@763237
[DEBUG] 2020-02-16 23:33:00.395 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2a8c7040
[DEBUG] 2020-02-16 23:33:00.395 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a8c7040
[DEBUG] 2020-02-16 23:33:00.396 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@b71aa6a
[DEBUG] 2020-02-16 23:33:00.396 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@b71aa6a
[DEBUG] 2020-02-16 23:33:00.397 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@8a1e838
[DEBUG] 2020-02-16 23:33:00.397 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@8a1e838
[DEBUG] 2020-02-16 23:33:00.397 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@22e41881
[DEBUG] 2020-02-16 23:33:00.397 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@22e41881
[DEBUG] 2020-02-16 23:33:00.398 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3179304a
[DEBUG] 2020-02-16 23:33:00.398 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3179304a
[DEBUG] 2020-02-16 23:33:00.398 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@43fd2d06
[DEBUG] 2020-02-16 23:33:00.399 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@43fd2d06
[DEBUG] 2020-02-16 23:33:00.399 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d201b5e
[DEBUG] 2020-02-16 23:33:00.399 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d201b5e
[DEBUG] 2020-02-16 23:33:00.400 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@9c7b04b
[DEBUG] 2020-02-16 23:33:00.400 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@9c7b04b
[DEBUG] 2020-02-16 23:33:00.401 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@57a7106d
[DEBUG] 2020-02-16 23:33:00.401 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@57a7106d
[DEBUG] 2020-02-16 23:33:00.402 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1c26e09f
[DEBUG] 2020-02-16 23:33:00.403 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c26e09f
[DEBUG] 2020-02-16 23:33:00.404 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@49e0c2cc
[DEBUG] 2020-02-16 23:33:00.404 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@49e0c2cc
[DEBUG] 2020-02-16 23:33:00.405 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@716554b2
[DEBUG] 2020-02-16 23:33:00.405 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@716554b2
[DEBUG] 2020-02-16 23:33:00.405 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@716554b2
[DEBUG] 2020-02-16 23:33:00.407 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@177698f3
[DEBUG] 2020-02-16 23:33:00.407 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@468ed157
[DEBUG] 2020-02-16 23:33:00.408 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@468ed157
[DEBUG] 2020-02-16 23:33:00.408 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@468ed157
[DEBUG] 2020-02-16 23:33:00.408 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2fe84754
[DEBUG] 2020-02-16 23:33:00.409 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5d911629
[DEBUG] 2020-02-16 23:33:00.409 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5d911629
[DEBUG] 2020-02-16 23:33:00.409 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5b3f1f39
[DEBUG] 2020-02-16 23:33:00.409 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5b3f1f39
[DEBUG] 2020-02-16 23:33:00.410 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@352425f3
[DEBUG] 2020-02-16 23:33:00.410 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@352425f3
[DEBUG] 2020-02-16 23:33:00.410 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@791a2c36
[DEBUG] 2020-02-16 23:33:00.410 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@791a2c36
[DEBUG] 2020-02-16 23:33:00.411 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@34a083ae
[DEBUG] 2020-02-16 23:33:00.411 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@34a083ae
[DEBUG] 2020-02-16 23:33:00.411 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@33ca23f9
[DEBUG] 2020-02-16 23:33:00.412 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@15bd5617
[DEBUG] 2020-02-16 23:33:00.412 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@15bd5617
[DEBUG] 2020-02-16 23:33:00.412 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@15bd5617
[DEBUG] 2020-02-16 23:33:00.412 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1856ee4b
[DEBUG] 2020-02-16 23:33:00.412 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1856ee4b
[DEBUG] 2020-02-16 23:33:00.412 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1856ee4b
[DEBUG] 2020-02-16 23:33:00.413 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@49028deb
[DEBUG] 2020-02-16 23:33:00.413 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@69777646
[DEBUG] 2020-02-16 23:33:00.414 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@17296826
[DEBUG] 2020-02-16 23:33:00.414 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@17296826
[DEBUG] 2020-02-16 23:33:00.414 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@17296826
[DEBUG] 2020-02-16 23:33:00.414 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6b83edab
[DEBUG] 2020-02-16 23:33:00.414 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6b83edab
[DEBUG] 2020-02-16 23:33:00.414 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6b83edab
[DEBUG] 2020-02-16 23:33:00.415 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@fca8fd2
[DEBUG] 2020-02-16 23:33:00.415 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@23997a4e
[DEBUG] 2020-02-16 23:33:00.416 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5a3128b1
[DEBUG] 2020-02-16 23:33:00.416 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5a3128b1
[DEBUG] 2020-02-16 23:33:00.416 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@550f293f
[DEBUG] 2020-02-16 23:33:00.417 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@46acad75
[DEBUG] 2020-02-16 23:33:00.417 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@46acad75
[DEBUG] 2020-02-16 23:33:00.418 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@731c2622
[DEBUG] 2020-02-16 23:33:00.418 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@731c2622
[DEBUG] 2020-02-16 23:33:00.418 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d48d693
[DEBUG] 2020-02-16 23:33:00.419 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@57362abf
[DEBUG] 2020-02-16 23:33:00.421 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2491d932
[DEBUG] 2020-02-16 23:33:00.423 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@48bbfa52
[DEBUG] 2020-02-16 23:33:00.424 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@48bbfa52
[DEBUG] 2020-02-16 23:33:00.424 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@29cbd71e
[DEBUG] 2020-02-16 23:33:00.424 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2bebafb0
[DEBUG] 2020-02-16 23:33:00.424 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61a6f620
[DEBUG] 2020-02-16 23:33:00.424 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@711c13a7
[DEBUG] 2020-02-16 23:33:00.424 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69849bd
[DEBUG] 2020-02-16 23:33:00.424 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@70f8e0f1
[DEBUG] 2020-02-16 23:33:00.424 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@26b90f38
[DEBUG] 2020-02-16 23:33:00.424 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@37a9a163
[DEBUG] 2020-02-16 23:33:00.446 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 23:33:00.447 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 23:33:00.447 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 23:33:00.447 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 23:33:00.447 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 23:33:00.448 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 23:33:00.448 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 23:33:00.449 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 23:33:00.449 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 23:33:00.450 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 23:33:00.450 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 23:33:00.450 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 23:33:00.450 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 23:33:00.451 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 23:33:00.458 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 23:33:00.458 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 23:33:00.458 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 23:33:00.555 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 23:33:00.764 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 23:33:00.765 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 23:33:00.765 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 23:33:00.805 [http-nio-8080-exec-10] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 23:33:00.822 [http-nio-8080-exec-10] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 23:33:00.844 [http-nio-8080-exec-10] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 23:33:00.878 [http-nio-8080-exec-10] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 23:33:00.880 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6d148998] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6d7afaa0]
[DEBUG] 2020-02-16 23:33:00.930 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 23:33:00.946 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 23:33:00.950 [http-nio-8080-exec-10] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 23:33:00.954 [http-nio-8080-exec-10] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 23:33:00.975 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:00.979 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 23:33:00.981 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 23:33:00.982 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 23:33:00.990 [http-nio-8080-exec-10] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 23:33:00.993 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 23:33:00.994 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:00.994 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 23:33:00.994 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 23:33:00.994 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 23:33:00.994 [http-nio-8080-exec-10] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 23:33:00.995 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:00.995 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 23:33:00.995 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 23:33:00.995 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 23:33:00.995 [http-nio-8080-exec-10] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 23:33:00.995 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:00.996 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 23:33:00.996 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 23:33:00.996 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 23:33:00.996 [http-nio-8080-exec-10] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 23:33:00.997 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:00.997 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 23:33:00.997 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 23:33:00.997 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 23:33:00.997 [http-nio-8080-exec-10] PropertyBinder - Building property email
[DEBUG] 2020-02-16 23:33:00.997 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:00.997 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 23:33:00.997 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 23:33:00.997 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 23:33:00.997 [http-nio-8080-exec-10] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 23:33:00.997 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:00.997 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 23:33:00.998 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 23:33:00.998 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 23:33:00.998 [http-nio-8080-exec-10] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 23:33:00.998 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:00.998 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 23:33:00.998 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 23:33:00.998 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 23:33:00.998 [http-nio-8080-exec-10] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 23:33:00.998 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:00.998 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 23:33:00.999 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 23:33:00.999 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 23:33:00.999 [http-nio-8080-exec-10] PropertyBinder - Building property password
[DEBUG] 2020-02-16 23:33:00.999 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:00.999 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 23:33:00.999 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 23:33:00.999 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 23:33:00.999 [http-nio-8080-exec-10] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 23:33:01.001 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 23:33:01.003 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:01.005 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:01.015 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:01.016 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:01.016 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 23:33:01.017 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 23:33:01.017 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 23:33:01.018 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:33:01.021 [http-nio-8080-exec-10] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 23:33:01.021 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:01.021 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 23:33:01.022 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 23:33:01.022 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 23:33:01.022 [http-nio-8080-exec-10] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 23:33:01.022 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 23:33:01.023 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 23:33:01.023 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 23:33:01.023 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 23:33:01.023 [http-nio-8080-exec-10] PropertyBinder - Building property username
[DEBUG] 2020-02-16 23:33:01.025 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:33:01.025 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 23:33:01.025 [http-nio-8080-exec-10] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 23:33:01.025 [http-nio-8080-exec-10] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 23:33:01.027 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:01.027 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 23:33:01.027 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 23:33:01.027 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 23:33:01.027 [http-nio-8080-exec-10] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 23:33:01.027 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 23:33:01.027 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:01.027 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 23:33:01.027 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 23:33:01.027 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 23:33:01.027 [http-nio-8080-exec-10] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 23:33:01.032 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:01.032 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 23:33:01.032 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 23:33:01.032 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 23:33:01.033 [http-nio-8080-exec-10] PropertyBinder - Building property name
[DEBUG] 2020-02-16 23:33:01.033 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:01.033 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 23:33:01.033 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 23:33:01.033 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 23:33:01.033 [http-nio-8080-exec-10] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 23:33:01.033 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 23:33:01.034 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:33:01.035 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2020-02-16 23:33:01.036 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 23:33:01.036 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 23:33:01.036 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 23:33:01.036 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 23:33:01.036 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 23:33:01.036 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 23:33:01.036 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 23:33:01.037 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 23:33:01.037 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 23:33:01.037 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 23:33:01.037 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 23:33:01.037 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 23:33:01.037 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 23:33:01.037 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 23:33:01.037 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 23:33:01.037 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 23:33:01.044 [http-nio-8080-exec-10] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 23:33:01.044 [http-nio-8080-exec-10] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 23:33:01.044 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:33:01.045 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 23:33:01.045 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 23:33:01.046 [http-nio-8080-exec-10] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 23:33:01.046 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:33:01.047 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 23:33:01.047 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 23:33:01.049 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 23:33:01.049 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 23:33:01.094 [http-nio-8080-exec-10] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 23:33:01.094 [http-nio-8080-exec-10] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 23:33:01.094 [http-nio-8080-exec-10] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 23:33:01.094 [http-nio-8080-exec-10] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 23:33:01.094 [http-nio-8080-exec-10] Settings - Statistics: disabled
[DEBUG] 2020-02-16 23:33:01.094 [http-nio-8080-exec-10] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 23:33:01.095 [http-nio-8080-exec-10] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 23:33:01.161 [http-nio-8080-exec-10] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 23:33:01.183 [http-nio-8080-exec-10] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 23:33:01.183 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@48e04b51, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 23:33:01.197 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 23:33:01.197 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:33:01.198 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 23:33:01.198 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 23:33:01.202 [http-nio-8080-exec-10] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 23:33:01.206 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 23:33:01.206 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6d148998] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@64b0fed3]
[DEBUG] 2020-02-16 23:33:01.244 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 23:33:01.244 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:33:01.251 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 23:33:01.251 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:33:01.418 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 23:33:01.418 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 23:33:01.424 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 23:33:01.424 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 23:33:01.478 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:33:01.478 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 23:33:01.478 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 23:33:01.478 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 23:33:01.478 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 23:33:01.482 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:33:01.482 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 23:33:01.482 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 23:33:01.482 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 23:33:01.482 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 23:33:01.482 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 23:33:01.482 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 23:33:01.505 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64fb6eea]
[DEBUG] 2020-02-16 23:33:01.506 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:33:01.507 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 23:33:01.507 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 23:33:01.507 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 23:33:01.511 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28e87ffe]
[DEBUG] 2020-02-16 23:33:01.512 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 23:33:01.513 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 23:33:01.513 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 23:33:01.513 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 23:33:01.513 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 23:33:01.513 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 23:33:01.513 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 23:33:01.513 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 23:33:01.514 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 23:33:01.515 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 23:33:01.515 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 23:33:01.515 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 23:33:01.515 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 23:33:01.515 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 23:33:01.516 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7349f66a]
[DEBUG] 2020-02-16 23:33:01.517 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 23:33:01.518 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:33:01.528 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:33:01.532 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 23:33:01.533 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 23:33:01.534 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e1c30cf]
[DEBUG] 2020-02-16 23:33:01.534 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:33:01.534 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 23:33:01.534 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 23:33:01.534 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 23:33:01.534 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d96bfdf]
[DEBUG] 2020-02-16 23:33:01.534 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 23:33:01.534 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 23:33:01.538 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 23:33:01.540 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 23:33:01.540 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 23:33:01.540 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 23:33:01.540 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 23:33:01.541 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 23:33:01.541 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 23:33:01.541 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 23:33:01.541 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 23:33:01.541 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 23:33:01.541 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 23:33:01.541 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 23:33:01.541 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@29eec7d1]
[DEBUG] 2020-02-16 23:33:01.541 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 23:33:01.541 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:33:01.541 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:33:01.541 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 23:33:01.541 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 23:33:01.553 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 23:33:01.555 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5830b537]
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 23:33:01.557 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 23:33:01.558 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3653ccd2]
[DEBUG] 2020-02-16 23:33:01.559 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13673f7c]
[DEBUG] 2020-02-16 23:33:01.560 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 23:33:01.560 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 23:33:01.560 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 23:33:01.560 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 23:33:01.560 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 23:33:01.561 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 23:33:01.561 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 23:33:01.561 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 23:33:01.561 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@4dc6dc80]
[DEBUG] 2020-02-16 23:33:01.561 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 23:33:01.561 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:33:01.561 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:33:01.563 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 23:33:01.563 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 23:33:01.563 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38f3c319]
[DEBUG] 2020-02-16 23:33:01.563 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 23:33:01.563 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 23:33:01.563 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:33:01.563 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 23:33:01.563 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72fd8021]
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f3d0ddc]
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@2a28be66]
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:33:01.564 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:33:01.565 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 23:33:01.565 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 23:33:01.566 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 23:33:01.566 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 23:33:01.568 [http-nio-8080-exec-10] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 23:33:01.576 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7786b270]
[DEBUG] 2020-02-16 23:33:01.577 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10a571f9]
[DEBUG] 2020-02-16 23:33:01.577 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:33:01.577 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 23:33:01.577 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 23:33:01.577 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 23:33:01.577 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 23:33:01.577 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:33:01.579 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:33:01.579 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 23:33:01.580 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 23:33:01.610 [http-nio-8080-exec-10] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 23:33:01.611 [http-nio-8080-exec-10] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 23:33:01.612 [http-nio-8080-exec-10] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 23:33:01.622 [http-nio-8080-exec-10] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 23:33:01.622 [http-nio-8080-exec-10] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 23:33:01.622 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 23:33:01.622 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 23:33:01.625 [http-nio-8080-exec-10] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6ddde639
[DEBUG] 2020-02-16 23:33:01.627 [http-nio-8080-exec-10] SessionFactoryRegistry - Registering SessionFactory: 6a0a1b38-da58-4110-b6da-c2b8a47cc6ec (<unnamed>)
[DEBUG] 2020-02-16 23:33:01.627 [http-nio-8080-exec-10] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 23:33:01.702 [http-nio-8080-exec-10] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 23:33:01.726 [http-nio-8080-exec-10] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 23:33:01.742 [http-nio-8080-exec-10] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4c638200
[DEBUG] 2020-02-16 23:33:01.764 [http-nio-8080-exec-10] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 23:33:01.767 [http-nio-8080-exec-10] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 23:33:01.771 [http-nio-8080-exec-10] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 23:33:01.793 [http-nio-8080-exec-10] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 23:33:01.807 [http-nio-8080-exec-10] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 23:33:01.807 [http-nio-8080-exec-10] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 23:33:01.810 [http-nio-8080-exec-10] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 23:33:01.810 [http-nio-8080-exec-10] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 23:33:01.816 [http-nio-8080-exec-10] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 23:33:01.816 [http-nio-8080-exec-10] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 23:33:01.817 [http-nio-8080-exec-10] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 23:33:01.817 [http-nio-8080-exec-10] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 23:33:01.827 [http-nio-8080-exec-10] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 23:33:01.827 [http-nio-8080-exec-10] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 23:33:01.827 [http-nio-8080-exec-10] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 23:33:01.841 [http-nio-8080-exec-10] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 23:33:01.861 [http-nio-8080-exec-10] Loader - Result set row: 0
[DEBUG] 2020-02-16 23:33:01.863 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-02-16 23:33:01.869 [http-nio-8080-exec-10] Loader - Result set row: 1
[DEBUG] 2020-02-16 23:33:01.874 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-16 23:33:01.875 [http-nio-8080-exec-10] Loader - Result set row: 2
[DEBUG] 2020-02-16 23:33:01.875 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 23:33:01.876 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-02-16 23:33:01.881 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 23:33:01.881 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.881 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 23:33:01.881 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.881 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:33:01.881 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.881 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 23:33:01.881 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.881 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 23:33:01.881 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.881 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 23:33:01.881 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.881 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 23:33:01.882 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.882 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 23:33:01.882 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.882 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 23:33:01.882 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.882 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 23:33:01.882 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.887 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:33:01.888 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.888 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 23:33:01.888 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.888 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@15d0eae2
[DEBUG] 2020-02-16 23:33:01.888 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.888 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@5cbf348d
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = mary@streammedia.com
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Mary
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Torrence
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.889 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:33:01.890 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.890 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `username` : value = mary
[DEBUG] 2020-02-16 23:33:01.890 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.890 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@2725e4f1
[DEBUG] 2020-02-16 23:33:01.890 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.890 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 23:33:01.895 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=mary, email=mary@streammedia.com, password=12345, firstName=Mary, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:33:01.896 [http-nio-8080-exec-10] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 23:33:01.900 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=mary, email=mary@streammedia.com, password=12345, firstName=Mary, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:33:01.904 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 23:33:01.906 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=mary, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:33:01.910 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#3]
[DEBUG] 2020-02-16 23:33:01.910 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:33:01.910 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.910 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 23:33:01.910 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.910 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:33:01.910 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.910 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=mary, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 23:33:01.910 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.910 [http-nio-8080-exec-10] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=mary}]
[DEBUG] 2020-02-16 23:33:01.910 [http-nio-8080-exec-10] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 23:33:01.914 [http-nio-8080-exec-10] Loader - Result set row: 0
[DEBUG] 2020-02-16 23:33:01.916 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.Role#3], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 23:33:01.917 [http-nio-8080-exec-10] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=mary, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:33:01.917 [http-nio-8080-exec-10] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:33:01.917 [http-nio-8080-exec-10] Loader - Done entity load
[DEBUG] 2020-02-16 23:33:01.918 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#3]
[DEBUG] 2020-02-16 23:33:01.918 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:33:01.919 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 23:33:01.919 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:33:01.919 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 23:33:01.919 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 23:33:01.919 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:33:01.919 [http-nio-8080-exec-10] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 23:33:01.922 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:33:01.922 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 23:33:01.923 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:33:01.924 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 23:33:01.924 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:33:01.925 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.925 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 23:33:01.925 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.925 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:33:01.925 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.925 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 23:33:01.926 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.926 [http-nio-8080-exec-10] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 23:33:01.926 [http-nio-8080-exec-10] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 23:33:01.927 [http-nio-8080-exec-10] Loader - Result set row: 0
[DEBUG] 2020-02-16 23:33:01.927 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-16 23:33:01.928 [http-nio-8080-exec-10] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:33:01.928 [http-nio-8080-exec-10] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:33:01.928 [http-nio-8080-exec-10] Loader - Done entity load
[DEBUG] 2020-02-16 23:33:01.928 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 23:33:01.928 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:33:01.928 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-16 23:33:01.928 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:33:01.928 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 23:33:01.928 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 23:33:01.928 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:33:01.928 [http-nio-8080-exec-10] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 23:33:01.932 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:33:01.932 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 23:33:01.933 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:33:01.934 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 23:33:01.934 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:33:01.934 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.934 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 23:33:01.934 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.934 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:33:01.934 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.934 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 23:33:01.934 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:33:01.934 [http-nio-8080-exec-10] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 23:33:01.934 [http-nio-8080-exec-10] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 23:33:01.937 [http-nio-8080-exec-10] Loader - Result set row: 0
[DEBUG] 2020-02-16 23:33:01.940 [http-nio-8080-exec-10] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-02-16 23:33:01.940 [http-nio-8080-exec-10] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:33:01.940 [http-nio-8080-exec-10] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:33:01.940 [http-nio-8080-exec-10] Loader - Done entity load
[DEBUG] 2020-02-16 23:33:01.940 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 23:33:01.940 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:33:01.940 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-02-16 23:33:01.940 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:33:01.940 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 23:33:01.940 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 23:33:01.942 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 23:35:04.817 [http-nio-8080-exec-16] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 23:35:04.824 [http-nio-8080-exec-16] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 23:35:04.829 [http-nio-8080-exec-16] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 23:35:04.910 [http-nio-8080-exec-16] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 23:35:04.913 [http-nio-8080-exec-16] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 23:35:05.008 [http-nio-8080-exec-16] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 23:35:05.009 [http-nio-8080-exec-16] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 23:35:05.015 [http-nio-8080-exec-16] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 23:35:05.249 [http-nio-8080-exec-16] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 23:35:05.267 [http-nio-8080-exec-16] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 23:35:05.268 [http-nio-8080-exec-16] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 23:35:05.289 [http-nio-8080-exec-16] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 23:35:05.318 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@236421ac
[DEBUG] 2020-02-16 23:35:05.318 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@236421ac
[DEBUG] 2020-02-16 23:35:05.318 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@236421ac
[DEBUG] 2020-02-16 23:35:05.319 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d0be3ef
[DEBUG] 2020-02-16 23:35:05.319 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@630f85b0
[DEBUG] 2020-02-16 23:35:05.319 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@39e826d
[DEBUG] 2020-02-16 23:35:05.320 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4a8250b6
[DEBUG] 2020-02-16 23:35:05.320 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4a8250b6
[DEBUG] 2020-02-16 23:35:05.320 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4a8250b6
[DEBUG] 2020-02-16 23:35:05.321 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7f4d4fbb
[DEBUG] 2020-02-16 23:35:05.321 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7f4d4fbb
[DEBUG] 2020-02-16 23:35:05.321 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7f4d4fbb
[DEBUG] 2020-02-16 23:35:05.322 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@47e55e97
[DEBUG] 2020-02-16 23:35:05.322 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@47e55e97
[DEBUG] 2020-02-16 23:35:05.322 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@47e55e97
[DEBUG] 2020-02-16 23:35:05.323 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6bab373c
[DEBUG] 2020-02-16 23:35:05.323 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6bab373c
[DEBUG] 2020-02-16 23:35:05.323 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6bab373c
[DEBUG] 2020-02-16 23:35:05.323 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@68de776d
[DEBUG] 2020-02-16 23:35:05.323 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@68de776d
[DEBUG] 2020-02-16 23:35:05.323 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@68de776d
[DEBUG] 2020-02-16 23:35:05.324 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1cb75e0f
[DEBUG] 2020-02-16 23:35:05.324 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1cb75e0f
[DEBUG] 2020-02-16 23:35:05.324 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1cb75e0f
[DEBUG] 2020-02-16 23:35:05.324 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@65d49d3
[DEBUG] 2020-02-16 23:35:05.324 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@65d49d3
[DEBUG] 2020-02-16 23:35:05.325 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@65d49d3
[DEBUG] 2020-02-16 23:35:05.325 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@719f5e4e
[DEBUG] 2020-02-16 23:35:05.325 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@719f5e4e
[DEBUG] 2020-02-16 23:35:05.326 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5f93c006
[DEBUG] 2020-02-16 23:35:05.326 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5f93c006
[DEBUG] 2020-02-16 23:35:05.326 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@a309ee3
[DEBUG] 2020-02-16 23:35:05.326 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@a309ee3
[DEBUG] 2020-02-16 23:35:05.327 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c90261d
[DEBUG] 2020-02-16 23:35:05.328 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38d29b55
[DEBUG] 2020-02-16 23:35:05.329 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@31a7e040
[DEBUG] 2020-02-16 23:35:05.329 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@31a7e040
[DEBUG] 2020-02-16 23:35:05.330 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@52f3b7ff
[DEBUG] 2020-02-16 23:35:05.330 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@52f3b7ff
[DEBUG] 2020-02-16 23:35:05.331 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@39f2d016
[DEBUG] 2020-02-16 23:35:05.331 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@39f2d016
[DEBUG] 2020-02-16 23:35:05.332 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@672b1193
[DEBUG] 2020-02-16 23:35:05.332 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@672b1193
[DEBUG] 2020-02-16 23:35:05.333 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6614565
[DEBUG] 2020-02-16 23:35:05.333 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6614565
[DEBUG] 2020-02-16 23:35:05.334 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@338c797e
[DEBUG] 2020-02-16 23:35:05.334 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@338c797e
[DEBUG] 2020-02-16 23:35:05.334 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7eeaa006
[DEBUG] 2020-02-16 23:35:05.334 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7eeaa006
[DEBUG] 2020-02-16 23:35:05.335 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@56733217
[DEBUG] 2020-02-16 23:35:05.335 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@56733217
[DEBUG] 2020-02-16 23:35:05.336 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@b416132
[DEBUG] 2020-02-16 23:35:05.336 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@b416132
[DEBUG] 2020-02-16 23:35:05.336 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@64f6c49
[DEBUG] 2020-02-16 23:35:05.337 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@64f6c49
[DEBUG] 2020-02-16 23:35:05.337 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5fbc0aeb
[DEBUG] 2020-02-16 23:35:05.337 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5fbc0aeb
[DEBUG] 2020-02-16 23:35:05.338 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15be3a95
[DEBUG] 2020-02-16 23:35:05.338 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15be3a95
[DEBUG] 2020-02-16 23:35:05.338 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15be3a95
[DEBUG] 2020-02-16 23:35:05.340 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@58fc8f9e
[DEBUG] 2020-02-16 23:35:05.341 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@25efd4a0
[DEBUG] 2020-02-16 23:35:05.342 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25efd4a0
[DEBUG] 2020-02-16 23:35:05.342 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25efd4a0
[DEBUG] 2020-02-16 23:35:05.343 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7adff521
[DEBUG] 2020-02-16 23:35:05.344 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@68e13a0e
[DEBUG] 2020-02-16 23:35:05.344 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@68e13a0e
[DEBUG] 2020-02-16 23:35:05.345 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5e353a10
[DEBUG] 2020-02-16 23:35:05.345 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5e353a10
[DEBUG] 2020-02-16 23:35:05.345 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2e20f424
[DEBUG] 2020-02-16 23:35:05.345 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2e20f424
[DEBUG] 2020-02-16 23:35:05.346 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@51363a82
[DEBUG] 2020-02-16 23:35:05.346 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@51363a82
[DEBUG] 2020-02-16 23:35:05.346 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4aece9f2
[DEBUG] 2020-02-16 23:35:05.346 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4aece9f2
[DEBUG] 2020-02-16 23:35:05.347 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@430e4233
[DEBUG] 2020-02-16 23:35:05.347 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@21769dd2
[DEBUG] 2020-02-16 23:35:05.347 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@21769dd2
[DEBUG] 2020-02-16 23:35:05.347 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@21769dd2
[DEBUG] 2020-02-16 23:35:05.348 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@700747f0
[DEBUG] 2020-02-16 23:35:05.348 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@700747f0
[DEBUG] 2020-02-16 23:35:05.348 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@700747f0
[DEBUG] 2020-02-16 23:35:05.349 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@28948bb7
[DEBUG] 2020-02-16 23:35:05.349 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@19771a48
[DEBUG] 2020-02-16 23:35:05.349 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1f6a6e62
[DEBUG] 2020-02-16 23:35:05.349 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f6a6e62
[DEBUG] 2020-02-16 23:35:05.349 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1f6a6e62
[DEBUG] 2020-02-16 23:35:05.350 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@236e49c2
[DEBUG] 2020-02-16 23:35:05.350 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@236e49c2
[DEBUG] 2020-02-16 23:35:05.350 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@236e49c2
[DEBUG] 2020-02-16 23:35:05.352 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@631bb253
[DEBUG] 2020-02-16 23:35:05.352 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@67fa0b6c
[DEBUG] 2020-02-16 23:35:05.353 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@c3d5a9
[DEBUG] 2020-02-16 23:35:05.353 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@c3d5a9
[DEBUG] 2020-02-16 23:35:05.354 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@356e1f25
[DEBUG] 2020-02-16 23:35:05.354 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7c8ff2df
[DEBUG] 2020-02-16 23:35:05.355 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7c8ff2df
[DEBUG] 2020-02-16 23:35:05.355 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@309791b6
[DEBUG] 2020-02-16 23:35:05.355 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@309791b6
[DEBUG] 2020-02-16 23:35:05.355 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@484b5534
[DEBUG] 2020-02-16 23:35:05.356 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6b10a14e
[DEBUG] 2020-02-16 23:35:05.356 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@505eba73
[DEBUG] 2020-02-16 23:35:05.358 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1906ee6c
[DEBUG] 2020-02-16 23:35:05.358 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1906ee6c
[DEBUG] 2020-02-16 23:35:05.359 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1348fc06
[DEBUG] 2020-02-16 23:35:05.359 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7dc8c14d
[DEBUG] 2020-02-16 23:35:05.359 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@879c29d
[DEBUG] 2020-02-16 23:35:05.359 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2d4d6264
[DEBUG] 2020-02-16 23:35:05.359 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@79b11307
[DEBUG] 2020-02-16 23:35:05.359 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@42c867d5
[DEBUG] 2020-02-16 23:35:05.359 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4e3283b
[DEBUG] 2020-02-16 23:35:05.359 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@427b3481
[DEBUG] 2020-02-16 23:35:05.385 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 23:35:05.386 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 23:35:05.386 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 23:35:05.386 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 23:35:05.387 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 23:35:05.387 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 23:35:05.388 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 23:35:05.389 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 23:35:05.390 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 23:35:05.391 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 23:35:05.391 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 23:35:05.391 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 23:35:05.392 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 23:35:05.393 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 23:35:05.399 [http-nio-8080-exec-16] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 23:35:05.399 [http-nio-8080-exec-16] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 23:35:05.399 [http-nio-8080-exec-16] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 23:35:05.497 [http-nio-8080-exec-16] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 23:35:05.679 [http-nio-8080-exec-16] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 23:35:05.679 [http-nio-8080-exec-16] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 23:35:05.679 [http-nio-8080-exec-16] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 23:35:05.714 [http-nio-8080-exec-16] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 23:35:05.730 [http-nio-8080-exec-16] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 23:35:05.757 [http-nio-8080-exec-16] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 23:35:05.789 [http-nio-8080-exec-16] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 23:35:05.792 [http-nio-8080-exec-16] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@638b336] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27d82656]
[DEBUG] 2020-02-16 23:35:05.845 [http-nio-8080-exec-16] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 23:35:05.867 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 23:35:05.871 [http-nio-8080-exec-16] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 23:35:05.875 [http-nio-8080-exec-16] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 23:35:05.895 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.897 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 23:35:05.899 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 23:35:05.900 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 23:35:05.907 [http-nio-8080-exec-16] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 23:35:05.909 [http-nio-8080-exec-16] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 23:35:05.910 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.910 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 23:35:05.910 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 23:35:05.910 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 23:35:05.910 [http-nio-8080-exec-16] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 23:35:05.910 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.910 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 23:35:05.911 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 23:35:05.911 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 23:35:05.911 [http-nio-8080-exec-16] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 23:35:05.911 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.913 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 23:35:05.913 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 23:35:05.913 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 23:35:05.913 [http-nio-8080-exec-16] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 23:35:05.914 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.914 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 23:35:05.914 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 23:35:05.914 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 23:35:05.914 [http-nio-8080-exec-16] PropertyBinder - Building property email
[DEBUG] 2020-02-16 23:35:05.914 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.914 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 23:35:05.914 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 23:35:05.914 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 23:35:05.914 [http-nio-8080-exec-16] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 23:35:05.915 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.915 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 23:35:05.915 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 23:35:05.915 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 23:35:05.915 [http-nio-8080-exec-16] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 23:35:05.915 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.915 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 23:35:05.915 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 23:35:05.915 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 23:35:05.915 [http-nio-8080-exec-16] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 23:35:05.915 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.915 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 23:35:05.915 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 23:35:05.915 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 23:35:05.915 [http-nio-8080-exec-16] PropertyBinder - Building property password
[DEBUG] 2020-02-16 23:35:05.915 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.916 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 23:35:05.916 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 23:35:05.916 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 23:35:05.916 [http-nio-8080-exec-16] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 23:35:05.917 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 23:35:05.918 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.919 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.929 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.929 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.929 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 23:35:05.930 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 23:35:05.930 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 23:35:05.930 [http-nio-8080-exec-16] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:35:05.932 [http-nio-8080-exec-16] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 23:35:05.932 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.932 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 23:35:05.932 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 23:35:05.932 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 23:35:05.932 [http-nio-8080-exec-16] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 23:35:05.933 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 23:35:05.933 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 23:35:05.933 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 23:35:05.933 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 23:35:05.933 [http-nio-8080-exec-16] PropertyBinder - Building property username
[DEBUG] 2020-02-16 23:35:05.934 [http-nio-8080-exec-16] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:35:05.935 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 23:35:05.936 [http-nio-8080-exec-16] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 23:35:05.936 [http-nio-8080-exec-16] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 23:35:05.938 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.939 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 23:35:05.939 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 23:35:05.939 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 23:35:05.939 [http-nio-8080-exec-16] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 23:35:05.939 [http-nio-8080-exec-16] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 23:35:05.939 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.939 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 23:35:05.939 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 23:35:05.939 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 23:35:05.940 [http-nio-8080-exec-16] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 23:35:05.949 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.949 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 23:35:05.949 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 23:35:05.949 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 23:35:05.949 [http-nio-8080-exec-16] PropertyBinder - Building property name
[DEBUG] 2020-02-16 23:35:05.949 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.949 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 23:35:05.949 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 23:35:05.949 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 23:35:05.949 [http-nio-8080-exec-16] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 23:35:05.950 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 23:35:05.950 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:35:05.951 [http-nio-8080-exec-16] PropertyBinder - Building property user
[DEBUG] 2020-02-16 23:35:05.952 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 23:35:05.952 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 23:35:05.952 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 23:35:05.952 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 23:35:05.952 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 23:35:05.953 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 23:35:05.953 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 23:35:05.953 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 23:35:05.953 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 23:35:05.953 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 23:35:05.953 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 23:35:05.953 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 23:35:05.953 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 23:35:05.953 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 23:35:05.953 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 23:35:05.953 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 23:35:05.961 [http-nio-8080-exec-16] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 23:35:05.961 [http-nio-8080-exec-16] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 23:35:05.961 [http-nio-8080-exec-16] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:35:05.961 [http-nio-8080-exec-16] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 23:35:05.961 [http-nio-8080-exec-16] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 23:35:05.962 [http-nio-8080-exec-16] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 23:35:05.962 [http-nio-8080-exec-16] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:35:05.962 [http-nio-8080-exec-16] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 23:35:05.962 [http-nio-8080-exec-16] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 23:35:05.964 [http-nio-8080-exec-16] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 23:35:05.964 [http-nio-8080-exec-16] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 23:35:06.005 [http-nio-8080-exec-16] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 23:35:06.006 [http-nio-8080-exec-16] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 23:35:06.006 [http-nio-8080-exec-16] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 23:35:06.006 [http-nio-8080-exec-16] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 23:35:06.006 [http-nio-8080-exec-16] Settings - Statistics: disabled
[DEBUG] 2020-02-16 23:35:06.006 [http-nio-8080-exec-16] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 23:35:06.007 [http-nio-8080-exec-16] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 23:35:06.008 [http-nio-8080-exec-16] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 23:35:06.048 [http-nio-8080-exec-16] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 23:35:06.065 [http-nio-8080-exec-16] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 23:35:06.065 [http-nio-8080-exec-16] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2ca263a1, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 23:35:06.091 [http-nio-8080-exec-16] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 23:35:06.092 [http-nio-8080-exec-16] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:35:06.093 [http-nio-8080-exec-16] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 23:35:06.093 [http-nio-8080-exec-16] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 23:35:06.098 [http-nio-8080-exec-16] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 23:35:06.098 [http-nio-8080-exec-16] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 23:35:06.099 [http-nio-8080-exec-16] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@638b336] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@147caf9d]
[DEBUG] 2020-02-16 23:35:06.142 [http-nio-8080-exec-16] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 23:35:06.142 [http-nio-8080-exec-16] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:35:06.149 [http-nio-8080-exec-16] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 23:35:06.149 [http-nio-8080-exec-16] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:35:06.330 [http-nio-8080-exec-16] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 23:35:06.330 [http-nio-8080-exec-16] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 23:35:06.331 [http-nio-8080-exec-16] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 23:35:06.331 [http-nio-8080-exec-16] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 23:35:06.382 [http-nio-8080-exec-16] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:35:06.382 [http-nio-8080-exec-16] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 23:35:06.382 [http-nio-8080-exec-16] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 23:35:06.382 [http-nio-8080-exec-16] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 23:35:06.382 [http-nio-8080-exec-16] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 23:35:06.384 [http-nio-8080-exec-16] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:35:06.384 [http-nio-8080-exec-16] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 23:35:06.384 [http-nio-8080-exec-16] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 23:35:06.384 [http-nio-8080-exec-16] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 23:35:06.384 [http-nio-8080-exec-16] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 23:35:06.384 [http-nio-8080-exec-16] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 23:35:06.384 [http-nio-8080-exec-16] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 23:35:06.404 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c1861d2]
[DEBUG] 2020-02-16 23:35:06.405 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:35:06.405 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 23:35:06.405 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 23:35:06.405 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 23:35:06.408 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28bc01a2]
[DEBUG] 2020-02-16 23:35:06.409 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 23:35:06.409 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 23:35:06.409 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 23:35:06.409 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 23:35:06.409 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 23:35:06.409 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 23:35:06.409 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 23:35:06.409 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 23:35:06.409 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 23:35:06.410 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 23:35:06.410 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 23:35:06.410 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 23:35:06.410 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 23:35:06.410 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 23:35:06.410 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@22a8c2b8]
[DEBUG] 2020-02-16 23:35:06.412 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 23:35:06.412 [http-nio-8080-exec-16] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:35:06.419 [http-nio-8080-exec-16] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:35:06.425 [http-nio-8080-exec-16] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5af40925]
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51ada452]
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 23:35:06.427 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 23:35:06.428 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@69191468]
[DEBUG] 2020-02-16 23:35:06.428 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 23:35:06.428 [http-nio-8080-exec-16] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:35:06.428 [http-nio-8080-exec-16] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:35:06.428 [http-nio-8080-exec-16] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 23:35:06.428 [http-nio-8080-exec-16] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30c65533]
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 23:35:06.439 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 23:35:06.440 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 23:35:06.440 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31c8d765]
[DEBUG] 2020-02-16 23:35:06.441 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c7a020c]
[DEBUG] 2020-02-16 23:35:06.442 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 23:35:06.442 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 23:35:06.442 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 23:35:06.442 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 23:35:06.442 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 23:35:06.442 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 23:35:06.442 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 23:35:06.443 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 23:35:06.443 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@37c5ec78]
[DEBUG] 2020-02-16 23:35:06.443 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 23:35:06.443 [http-nio-8080-exec-16] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:35:06.443 [http-nio-8080-exec-16] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:35:06.445 [http-nio-8080-exec-16] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 23:35:06.445 [http-nio-8080-exec-16] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 23:35:06.445 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@305e01e4]
[DEBUG] 2020-02-16 23:35:06.445 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 23:35:06.445 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 23:35:06.445 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:35:06.445 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 23:35:06.445 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 23:35:06.445 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@496337af]
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34cffbf8]
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@3b957657]
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:35:06.446 [http-nio-8080-exec-16] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 23:35:06.447 [http-nio-8080-exec-16] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 23:35:06.447 [http-nio-8080-exec-16] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 23:35:06.447 [http-nio-8080-exec-16] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 23:35:06.449 [http-nio-8080-exec-16] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 23:35:06.452 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3342091b]
[DEBUG] 2020-02-16 23:35:06.452 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44c2e91f]
[DEBUG] 2020-02-16 23:35:06.452 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:35:06.452 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 23:35:06.452 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 23:35:06.452 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 23:35:06.452 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 23:35:06.452 [http-nio-8080-exec-16] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:35:06.454 [http-nio-8080-exec-16] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:35:06.455 [http-nio-8080-exec-16] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 23:35:06.455 [http-nio-8080-exec-16] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 23:35:06.481 [http-nio-8080-exec-16] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 23:35:06.481 [http-nio-8080-exec-16] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 23:35:06.481 [http-nio-8080-exec-16] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 23:35:06.486 [http-nio-8080-exec-16] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 23:35:06.487 [http-nio-8080-exec-16] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 23:35:06.488 [http-nio-8080-exec-16] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 23:35:06.488 [http-nio-8080-exec-16] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 23:35:06.490 [http-nio-8080-exec-16] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@b6695ab
[DEBUG] 2020-02-16 23:35:06.496 [http-nio-8080-exec-16] SessionFactoryRegistry - Registering SessionFactory: 96831da7-7eee-4487-83e9-f4db51f8a915 (<unnamed>)
[DEBUG] 2020-02-16 23:35:06.496 [http-nio-8080-exec-16] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 23:35:06.571 [http-nio-8080-exec-16] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 23:35:06.632 [http-nio-8080-exec-16] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 23:35:06.648 [http-nio-8080-exec-16] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@79d0a725
[DEBUG] 2020-02-16 23:35:06.668 [http-nio-8080-exec-16] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 23:35:06.672 [http-nio-8080-exec-16] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 23:35:06.679 [http-nio-8080-exec-16] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 23:35:06.697 [http-nio-8080-exec-16] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 23:35:06.711 [http-nio-8080-exec-16] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 23:35:06.712 [http-nio-8080-exec-16] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 23:35:06.713 [http-nio-8080-exec-16] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 23:35:06.713 [http-nio-8080-exec-16] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 23:35:06.719 [http-nio-8080-exec-16] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 23:35:06.719 [http-nio-8080-exec-16] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 23:35:06.719 [http-nio-8080-exec-16] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 23:35:06.719 [http-nio-8080-exec-16] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 23:35:06.724 [http-nio-8080-exec-16] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 23:35:06.724 [http-nio-8080-exec-16] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 23:35:06.724 [http-nio-8080-exec-16] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 23:35:06.738 [http-nio-8080-exec-16] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 23:35:06.758 [http-nio-8080-exec-16] Loader - Result set row: 0
[DEBUG] 2020-02-16 23:35:06.761 [http-nio-8080-exec-16] Loader - Result row: EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-02-16 23:35:06.770 [http-nio-8080-exec-16] Loader - Result set row: 1
[DEBUG] 2020-02-16 23:35:06.770 [http-nio-8080-exec-16] Loader - Result row: EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-16 23:35:06.775 [http-nio-8080-exec-16] Loader - Result set row: 2
[DEBUG] 2020-02-16 23:35:06.775 [http-nio-8080-exec-16] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 23:35:06.777 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-02-16 23:35:06.779 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 23:35:06.779 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.779 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 23:35:06.779 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.780 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:35:06.780 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.780 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 23:35:06.780 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.780 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 23:35:06.780 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.780 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 23:35:06.780 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.780 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 23:35:06.780 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.780 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 23:35:06.780 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.780 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 23:35:06.780 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.780 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 23:35:06.780 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.785 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:35:06.785 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.786 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 23:35:06.786 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.786 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@379a5f94
[DEBUG] 2020-02-16 23:35:06.786 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.787 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6bb9ae93
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.788 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `email` : value = mary@streammedia.com
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `firstName` : value = Mary
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `lastName` : value = Torrence
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `username` : value = mary
[DEBUG] 2020-02-16 23:35:06.789 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.790 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@76e5fcf2
[DEBUG] 2020-02-16 23:35:06.790 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.790 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 23:35:06.796 [http-nio-8080-exec-16] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=mary, email=mary@streammedia.com, password=12345, firstName=Mary, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:35:06.796 [http-nio-8080-exec-16] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 23:35:06.799 [http-nio-8080-exec-16] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=mary, email=mary@streammedia.com, password=12345, firstName=Mary, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:35:06.806 [http-nio-8080-exec-16] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 23:35:06.809 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=mary, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:35:06.814 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#3]
[DEBUG] 2020-02-16 23:35:06.814 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:35:06.814 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.814 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 23:35:06.814 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.814 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:35:06.814 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.814 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=mary, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 23:35:06.814 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.815 [http-nio-8080-exec-16] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=mary}]
[DEBUG] 2020-02-16 23:35:06.815 [http-nio-8080-exec-16] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 23:35:06.818 [http-nio-8080-exec-16] Loader - Result set row: 0
[DEBUG] 2020-02-16 23:35:06.819 [http-nio-8080-exec-16] Loader - Result row: EntityKey[com.streammedia.entity.Role#3], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 23:35:06.819 [http-nio-8080-exec-16] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=mary, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:35:06.819 [http-nio-8080-exec-16] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:35:06.819 [http-nio-8080-exec-16] Loader - Done entity load
[DEBUG] 2020-02-16 23:35:06.820 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#3]
[DEBUG] 2020-02-16 23:35:06.820 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:35:06.820 [http-nio-8080-exec-16] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 23:35:06.820 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:35:06.820 [http-nio-8080-exec-16] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 23:35:06.822 [http-nio-8080-exec-16] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 23:35:06.822 [http-nio-8080-exec-16] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:35:06.823 [http-nio-8080-exec-16] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 23:35:06.827 [http-nio-8080-exec-16] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:35:06.827 [http-nio-8080-exec-16] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 23:35:06.829 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:35:06.829 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 23:35:06.829 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:35:06.829 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.829 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 23:35:06.829 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.830 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:35:06.830 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.830 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 23:35:06.830 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.830 [http-nio-8080-exec-16] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 23:35:06.830 [http-nio-8080-exec-16] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 23:35:06.837 [http-nio-8080-exec-16] Loader - Result set row: 0
[DEBUG] 2020-02-16 23:35:06.837 [http-nio-8080-exec-16] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-16 23:35:06.843 [http-nio-8080-exec-16] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:35:06.845 [http-nio-8080-exec-16] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:35:06.846 [http-nio-8080-exec-16] Loader - Done entity load
[DEBUG] 2020-02-16 23:35:06.846 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 23:35:06.846 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:35:06.846 [http-nio-8080-exec-16] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-16 23:35:06.846 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:35:06.846 [http-nio-8080-exec-16] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 23:35:06.846 [http-nio-8080-exec-16] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 23:35:06.846 [http-nio-8080-exec-16] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:35:06.846 [http-nio-8080-exec-16] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 23:35:06.849 [http-nio-8080-exec-16] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:35:06.849 [http-nio-8080-exec-16] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 23:35:06.849 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:35:06.850 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 23:35:06.850 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:35:06.850 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.850 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 23:35:06.850 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.850 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:35:06.850 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.850 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 23:35:06.850 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:35:06.850 [http-nio-8080-exec-16] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 23:35:06.850 [http-nio-8080-exec-16] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 23:35:06.852 [http-nio-8080-exec-16] Loader - Result set row: 0
[DEBUG] 2020-02-16 23:35:06.852 [http-nio-8080-exec-16] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-02-16 23:35:06.852 [http-nio-8080-exec-16] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:35:06.852 [http-nio-8080-exec-16] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:35:06.852 [http-nio-8080-exec-16] Loader - Done entity load
[DEBUG] 2020-02-16 23:35:06.852 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 23:35:06.852 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:35:06.852 [http-nio-8080-exec-16] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-02-16 23:35:06.853 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:35:06.853 [http-nio-8080-exec-16] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 23:35:06.853 [http-nio-8080-exec-16] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 23:35:06.854 [http-nio-8080-exec-16] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 23:36:37.201 [http-nio-8080-exec-25] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 23:36:37.214 [http-nio-8080-exec-25] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 23:36:37.219 [http-nio-8080-exec-25] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 23:36:37.288 [http-nio-8080-exec-25] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 23:36:37.289 [http-nio-8080-exec-25] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 23:36:37.400 [http-nio-8080-exec-25] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 23:36:37.400 [http-nio-8080-exec-25] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 23:36:37.406 [http-nio-8080-exec-25] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 23:36:37.623 [http-nio-8080-exec-25] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 23:36:37.648 [http-nio-8080-exec-25] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 23:36:37.649 [http-nio-8080-exec-25] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 23:36:37.667 [http-nio-8080-exec-25] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 23:36:37.698 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7e409e12
[DEBUG] 2020-02-16 23:36:37.698 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7e409e12
[DEBUG] 2020-02-16 23:36:37.698 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7e409e12
[DEBUG] 2020-02-16 23:36:37.713 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5094112
[DEBUG] 2020-02-16 23:36:37.714 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@36ebc345
[DEBUG] 2020-02-16 23:36:37.714 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@38869b1a
[DEBUG] 2020-02-16 23:36:37.715 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@282d6265
[DEBUG] 2020-02-16 23:36:37.715 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@282d6265
[DEBUG] 2020-02-16 23:36:37.715 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@282d6265
[DEBUG] 2020-02-16 23:36:37.716 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@48539507
[DEBUG] 2020-02-16 23:36:37.716 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@48539507
[DEBUG] 2020-02-16 23:36:37.716 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48539507
[DEBUG] 2020-02-16 23:36:37.718 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2cd1593d
[DEBUG] 2020-02-16 23:36:37.718 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2cd1593d
[DEBUG] 2020-02-16 23:36:37.718 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2cd1593d
[DEBUG] 2020-02-16 23:36:37.719 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7558dc39
[DEBUG] 2020-02-16 23:36:37.719 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7558dc39
[DEBUG] 2020-02-16 23:36:37.719 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7558dc39
[DEBUG] 2020-02-16 23:36:37.720 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5bfa69da
[DEBUG] 2020-02-16 23:36:37.720 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5bfa69da
[DEBUG] 2020-02-16 23:36:37.720 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5bfa69da
[DEBUG] 2020-02-16 23:36:37.720 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@77a097df
[DEBUG] 2020-02-16 23:36:37.720 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@77a097df
[DEBUG] 2020-02-16 23:36:37.720 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@77a097df
[DEBUG] 2020-02-16 23:36:37.721 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@132a32b0
[DEBUG] 2020-02-16 23:36:37.721 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@132a32b0
[DEBUG] 2020-02-16 23:36:37.721 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@132a32b0
[DEBUG] 2020-02-16 23:36:37.723 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7e87c887
[DEBUG] 2020-02-16 23:36:37.723 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7e87c887
[DEBUG] 2020-02-16 23:36:37.724 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7e356691
[DEBUG] 2020-02-16 23:36:37.725 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7e356691
[DEBUG] 2020-02-16 23:36:37.726 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@32dc512e
[DEBUG] 2020-02-16 23:36:37.726 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@32dc512e
[DEBUG] 2020-02-16 23:36:37.727 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@65e075e4
[DEBUG] 2020-02-16 23:36:37.727 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1fac517a
[DEBUG] 2020-02-16 23:36:37.728 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@828166b
[DEBUG] 2020-02-16 23:36:37.728 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@828166b
[DEBUG] 2020-02-16 23:36:37.729 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@76911a2b
[DEBUG] 2020-02-16 23:36:37.729 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@76911a2b
[DEBUG] 2020-02-16 23:36:37.730 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@10df4afc
[DEBUG] 2020-02-16 23:36:37.731 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@10df4afc
[DEBUG] 2020-02-16 23:36:37.731 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@712d1277
[DEBUG] 2020-02-16 23:36:37.731 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@712d1277
[DEBUG] 2020-02-16 23:36:37.732 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7f5dd65d
[DEBUG] 2020-02-16 23:36:37.732 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7f5dd65d
[DEBUG] 2020-02-16 23:36:37.733 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6740423
[DEBUG] 2020-02-16 23:36:37.733 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6740423
[DEBUG] 2020-02-16 23:36:37.734 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3f9a32e1
[DEBUG] 2020-02-16 23:36:37.734 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3f9a32e1
[DEBUG] 2020-02-16 23:36:37.735 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6b7a7c2e
[DEBUG] 2020-02-16 23:36:37.735 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6b7a7c2e
[DEBUG] 2020-02-16 23:36:37.736 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@20016f48
[DEBUG] 2020-02-16 23:36:37.736 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@20016f48
[DEBUG] 2020-02-16 23:36:37.737 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@21aa0aba
[DEBUG] 2020-02-16 23:36:37.738 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@21aa0aba
[DEBUG] 2020-02-16 23:36:37.739 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5f8bf4e9
[DEBUG] 2020-02-16 23:36:37.739 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f8bf4e9
[DEBUG] 2020-02-16 23:36:37.740 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3c3d6d7a
[DEBUG] 2020-02-16 23:36:37.740 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3c3d6d7a
[DEBUG] 2020-02-16 23:36:37.740 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3c3d6d7a
[DEBUG] 2020-02-16 23:36:37.741 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2cbac166
[DEBUG] 2020-02-16 23:36:37.742 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5d824c80
[DEBUG] 2020-02-16 23:36:37.742 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d824c80
[DEBUG] 2020-02-16 23:36:37.742 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d824c80
[DEBUG] 2020-02-16 23:36:37.743 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5829c86e
[DEBUG] 2020-02-16 23:36:37.744 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@98cac03
[DEBUG] 2020-02-16 23:36:37.745 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@98cac03
[DEBUG] 2020-02-16 23:36:37.745 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@697aef0d
[DEBUG] 2020-02-16 23:36:37.745 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@697aef0d
[DEBUG] 2020-02-16 23:36:37.746 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5868f2ed
[DEBUG] 2020-02-16 23:36:37.746 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5868f2ed
[DEBUG] 2020-02-16 23:36:37.746 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@f4369d3
[DEBUG] 2020-02-16 23:36:37.746 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f4369d3
[DEBUG] 2020-02-16 23:36:37.747 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25584398
[DEBUG] 2020-02-16 23:36:37.747 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25584398
[DEBUG] 2020-02-16 23:36:37.747 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@53bb6b75
[DEBUG] 2020-02-16 23:36:37.749 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@19b0d7f1
[DEBUG] 2020-02-16 23:36:37.749 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@19b0d7f1
[DEBUG] 2020-02-16 23:36:37.749 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@19b0d7f1
[DEBUG] 2020-02-16 23:36:37.750 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1add52d0
[DEBUG] 2020-02-16 23:36:37.750 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1add52d0
[DEBUG] 2020-02-16 23:36:37.750 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1add52d0
[DEBUG] 2020-02-16 23:36:37.752 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6002744b
[DEBUG] 2020-02-16 23:36:37.752 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@14df1263
[DEBUG] 2020-02-16 23:36:37.753 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@386e25bc
[DEBUG] 2020-02-16 23:36:37.753 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@386e25bc
[DEBUG] 2020-02-16 23:36:37.753 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@386e25bc
[DEBUG] 2020-02-16 23:36:37.754 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71eb2b7b
[DEBUG] 2020-02-16 23:36:37.754 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71eb2b7b
[DEBUG] 2020-02-16 23:36:37.754 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71eb2b7b
[DEBUG] 2020-02-16 23:36:37.754 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@752b422c
[DEBUG] 2020-02-16 23:36:37.754 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5e68fd0b
[DEBUG] 2020-02-16 23:36:37.756 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7546cf9b
[DEBUG] 2020-02-16 23:36:37.756 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7546cf9b
[DEBUG] 2020-02-16 23:36:37.757 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5a381d24
[DEBUG] 2020-02-16 23:36:37.760 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@be8873c
[DEBUG] 2020-02-16 23:36:37.760 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@be8873c
[DEBUG] 2020-02-16 23:36:37.761 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@629c661b
[DEBUG] 2020-02-16 23:36:37.762 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@629c661b
[DEBUG] 2020-02-16 23:36:37.762 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64ba00f1
[DEBUG] 2020-02-16 23:36:37.762 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2bd1fcf
[DEBUG] 2020-02-16 23:36:37.763 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2b1a2e1a
[DEBUG] 2020-02-16 23:36:37.769 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@525d7aac
[DEBUG] 2020-02-16 23:36:37.769 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@525d7aac
[DEBUG] 2020-02-16 23:36:37.769 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@39934488
[DEBUG] 2020-02-16 23:36:37.769 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4636fb85
[DEBUG] 2020-02-16 23:36:37.769 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3793bbbf
[DEBUG] 2020-02-16 23:36:37.769 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2116b861
[DEBUG] 2020-02-16 23:36:37.769 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2821fcf
[DEBUG] 2020-02-16 23:36:37.769 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@731936c9
[DEBUG] 2020-02-16 23:36:37.769 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@59fd2556
[DEBUG] 2020-02-16 23:36:37.769 [http-nio-8080-exec-25] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d3c4bb8
[DEBUG] 2020-02-16 23:36:37.795 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 23:36:37.796 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 23:36:37.796 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 23:36:37.796 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 23:36:37.797 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 23:36:37.798 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 23:36:37.798 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 23:36:37.799 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 23:36:37.799 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 23:36:37.801 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 23:36:37.801 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 23:36:37.801 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 23:36:37.802 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 23:36:37.802 [http-nio-8080-exec-25] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 23:36:37.810 [http-nio-8080-exec-25] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-16 23:36:37.810 [http-nio-8080-exec-25] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 23:36:37.810 [http-nio-8080-exec-25] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 23:36:37.903 [http-nio-8080-exec-25] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 23:36:38.094 [http-nio-8080-exec-25] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-16 23:36:38.095 [http-nio-8080-exec-25] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 23:36:38.095 [http-nio-8080-exec-25] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 23:36:38.134 [http-nio-8080-exec-25] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 23:36:38.153 [http-nio-8080-exec-25] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 23:36:38.184 [http-nio-8080-exec-25] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 23:36:38.230 [http-nio-8080-exec-25] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 23:36:38.258 [http-nio-8080-exec-25] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@745e3ce8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@18c89729]
[DEBUG] 2020-02-16 23:36:38.311 [http-nio-8080-exec-25] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-16 23:36:38.336 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 23:36:38.340 [http-nio-8080-exec-25] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 23:36:38.343 [http-nio-8080-exec-25] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-16 23:36:38.367 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.371 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-16 23:36:38.373 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-16 23:36:38.376 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-16 23:36:38.378 [http-nio-8080-exec-25] PropertyBinder - Building property userId
[DEBUG] 2020-02-16 23:36:38.383 [http-nio-8080-exec-25] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 23:36:38.384 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.384 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-16 23:36:38.384 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-16 23:36:38.384 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-16 23:36:38.384 [http-nio-8080-exec-25] PropertyBinder - Building property biography
[DEBUG] 2020-02-16 23:36:38.384 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.384 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-16 23:36:38.384 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-16 23:36:38.385 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-16 23:36:38.385 [http-nio-8080-exec-25] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-16 23:36:38.385 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.385 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 23:36:38.385 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-16 23:36:38.385 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 23:36:38.385 [http-nio-8080-exec-25] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 23:36:38.386 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.386 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 23:36:38.386 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-16 23:36:38.386 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] PropertyBinder - Building property email
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] PropertyBinder - Building property gender
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 23:36:38.387 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.388 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 23:36:38.388 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-16 23:36:38.388 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 23:36:38.388 [http-nio-8080-exec-25] PropertyBinder - Building property password
[DEBUG] 2020-02-16 23:36:38.388 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.388 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-16 23:36:38.393 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-16 23:36:38.393 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-16 23:36:38.393 [http-nio-8080-exec-25] PropertyBinder - Building property picture
[DEBUG] 2020-02-16 23:36:38.394 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 23:36:38.395 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.399 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.406 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.407 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.407 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-16 23:36:38.408 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 23:36:38.408 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-16 23:36:38.408 [http-nio-8080-exec-25] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:36:38.410 [http-nio-8080-exec-25] PropertyBinder - Building property roles
[DEBUG] 2020-02-16 23:36:38.410 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.410 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-16 23:36:38.410 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-16 23:36:38.410 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-16 23:36:38.410 [http-nio-8080-exec-25] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-16 23:36:38.411 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-16 23:36:38.411 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-16 23:36:38.411 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-16 23:36:38.411 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-16 23:36:38.411 [http-nio-8080-exec-25] PropertyBinder - Building property username
[DEBUG] 2020-02-16 23:36:38.411 [http-nio-8080-exec-25] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:36:38.412 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 23:36:38.412 [http-nio-8080-exec-25] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-16 23:36:38.412 [http-nio-8080-exec-25] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-16 23:36:38.415 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.415 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-16 23:36:38.415 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-16 23:36:38.415 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-16 23:36:38.415 [http-nio-8080-exec-25] PropertyBinder - Building property roleId
[DEBUG] 2020-02-16 23:36:38.416 [http-nio-8080-exec-25] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 23:36:38.416 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.416 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-16 23:36:38.416 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-16 23:36:38.416 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-16 23:36:38.416 [http-nio-8080-exec-25] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-16 23:36:38.421 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.421 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-16 23:36:38.421 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-16 23:36:38.421 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-16 23:36:38.421 [http-nio-8080-exec-25] PropertyBinder - Building property name
[DEBUG] 2020-02-16 23:36:38.421 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.421 [http-nio-8080-exec-25] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-16 23:36:38.421 [http-nio-8080-exec-25] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-16 23:36:38.421 [http-nio-8080-exec-25] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-16 23:36:38.421 [http-nio-8080-exec-25] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-16 23:36:38.424 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-16 23:36:38.424 [http-nio-8080-exec-25] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 23:36:38.426 [http-nio-8080-exec-25] PropertyBinder - Building property user
[DEBUG] 2020-02-16 23:36:38.428 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-16 23:36:38.429 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-16 23:36:38.429 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-16 23:36:38.429 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 23:36:38.429 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 23:36:38.429 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 23:36:38.429 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-16 23:36:38.429 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 23:36:38.429 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 23:36:38.429 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-16 23:36:38.429 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-16 23:36:38.429 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-16 23:36:38.429 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-16 23:36:38.429 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-16 23:36:38.429 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-16 23:36:38.429 [http-nio-8080-exec-25] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-16 23:36:38.435 [http-nio-8080-exec-25] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-16 23:36:38.435 [http-nio-8080-exec-25] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-16 23:36:38.435 [http-nio-8080-exec-25] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:36:38.435 [http-nio-8080-exec-25] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-16 23:36:38.436 [http-nio-8080-exec-25] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-16 23:36:38.436 [http-nio-8080-exec-25] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-16 23:36:38.437 [http-nio-8080-exec-25] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:36:38.437 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 23:36:38.437 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 23:36:38.440 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-16 23:36:38.440 [http-nio-8080-exec-25] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-16 23:36:38.481 [http-nio-8080-exec-25] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 23:36:38.481 [http-nio-8080-exec-25] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 23:36:38.481 [http-nio-8080-exec-25] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 23:36:38.481 [http-nio-8080-exec-25] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 23:36:38.481 [http-nio-8080-exec-25] Settings - Statistics: disabled
[DEBUG] 2020-02-16 23:36:38.481 [http-nio-8080-exec-25] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 23:36:38.482 [http-nio-8080-exec-25] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 23:36:38.531 [http-nio-8080-exec-25] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 23:36:38.558 [http-nio-8080-exec-25] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 23:36:38.558 [http-nio-8080-exec-25] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7cab49ed, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-16 23:36:38.578 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 23:36:38.578 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:36:38.582 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 23:36:38.582 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 23:36:38.584 [http-nio-8080-exec-25] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 23:36:38.585 [http-nio-8080-exec-25] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 23:36:38.585 [http-nio-8080-exec-25] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@745e3ce8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1cdfe378]
[DEBUG] 2020-02-16 23:36:38.624 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 23:36:38.624 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:36:38.634 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-16 23:36:38.634 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:36:38.834 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 23:36:38.835 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 23:36:38.836 [http-nio-8080-exec-25] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-16 23:36:38.836 [http-nio-8080-exec-25] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-16 23:36:38.896 [http-nio-8080-exec-25] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:36:38.897 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-16 23:36:38.898 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-16 23:36:38.898 [http-nio-8080-exec-25] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-16 23:36:38.898 [http-nio-8080-exec-25] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-16 23:36:38.902 [http-nio-8080-exec-25] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-16 23:36:38.902 [http-nio-8080-exec-25] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-16 23:36:38.902 [http-nio-8080-exec-25] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-16 23:36:38.902 [http-nio-8080-exec-25] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 23:36:38.902 [http-nio-8080-exec-25] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-16 23:36:38.902 [http-nio-8080-exec-25] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-16 23:36:38.902 [http-nio-8080-exec-25] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-16 23:36:38.922 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66c89af8]
[DEBUG] 2020-02-16 23:36:38.923 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:36:38.924 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 23:36:38.924 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 23:36:38.924 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 23:36:38.927 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12fb2b09]
[DEBUG] 2020-02-16 23:36:38.928 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 23:36:38.928 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 23:36:38.928 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 23:36:38.928 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 23:36:38.928 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 23:36:38.928 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 23:36:38.928 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 23:36:38.928 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 23:36:38.928 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 23:36:38.928 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 23:36:38.928 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 23:36:38.929 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 23:36:38.930 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 23:36:38.930 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 23:36:38.930 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@23352fc2]
[DEBUG] 2020-02-16 23:36:38.932 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 23:36:38.932 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:36:38.945 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:36:38.948 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 23:36:38.949 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd1307f]
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bdc828a]
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@b2995d1]
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:36:38.950 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:36:38.951 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-16 23:36:38.951 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-16 23:36:38.960 [http-nio-8080-exec-25] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 23:36:38.960 [http-nio-8080-exec-25] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-16 23:36:38.960 [http-nio-8080-exec-25] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-16 23:36:38.960 [http-nio-8080-exec-25] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31deeea5]
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 23:36:38.961 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72e2544b]
[DEBUG] 2020-02-16 23:36:38.964 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3585806e]
[DEBUG] 2020-02-16 23:36:38.966 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 23:36:38.966 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 23:36:38.966 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 23:36:38.966 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 23:36:38.966 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 23:36:38.966 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 23:36:38.966 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 23:36:38.966 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 23:36:38.966 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@54ef0143]
[DEBUG] 2020-02-16 23:36:38.966 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 23:36:38.966 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:36:38.967 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:36:38.968 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 23:36:38.968 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 23:36:38.968 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27c30974]
[DEBUG] 2020-02-16 23:36:38.968 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-16 23:36:38.968 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-16 23:36:38.968 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:36:38.968 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 23:36:38.968 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 23:36:38.968 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-16 23:36:38.968 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 23:36:38.968 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 23:36:38.968 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-16 23:36:38.968 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-16 23:36:38.968 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5120524b]
[DEBUG] 2020-02-16 23:36:38.968 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ac66435]
[DEBUG] 2020-02-16 23:36:38.969 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-16 23:36:38.969 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-16 23:36:38.969 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-16 23:36:38.969 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-16 23:36:38.969 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-16 23:36:38.969 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-16 23:36:38.969 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-16 23:36:38.969 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-16 23:36:38.969 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7648105b]
[DEBUG] 2020-02-16 23:36:38.969 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-16 23:36:38.969 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:36:38.969 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:36:38.969 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-16 23:36:38.969 [http-nio-8080-exec-25] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 23:36:38.970 [http-nio-8080-exec-25] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 23:36:38.970 [http-nio-8080-exec-25] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-16 23:36:38.971 [http-nio-8080-exec-25] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 23:36:38.977 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3736ef67]
[DEBUG] 2020-02-16 23:36:38.977 [http-nio-8080-exec-25] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fcd5093]
[DEBUG] 2020-02-16 23:36:38.977 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-16 23:36:38.978 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-16 23:36:38.978 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-16 23:36:38.978 [http-nio-8080-exec-25] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-16 23:36:38.978 [http-nio-8080-exec-25] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-16 23:36:38.978 [http-nio-8080-exec-25] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 23:36:38.979 [http-nio-8080-exec-25] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 23:36:38.979 [http-nio-8080-exec-25] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-16 23:36:38.980 [http-nio-8080-exec-25] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 23:36:39.003 [http-nio-8080-exec-25] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 23:36:39.003 [http-nio-8080-exec-25] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 23:36:39.003 [http-nio-8080-exec-25] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 23:36:39.011 [http-nio-8080-exec-25] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 23:36:39.011 [http-nio-8080-exec-25] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 23:36:39.012 [http-nio-8080-exec-25] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 23:36:39.012 [http-nio-8080-exec-25] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 23:36:39.014 [http-nio-8080-exec-25] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@42f23465
[DEBUG] 2020-02-16 23:36:39.016 [http-nio-8080-exec-25] SessionFactoryRegistry - Registering SessionFactory: 19ae5c4d-7ce7-4174-a36a-6e6b636754e9 (<unnamed>)
[DEBUG] 2020-02-16 23:36:39.016 [http-nio-8080-exec-25] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 23:36:39.082 [http-nio-8080-exec-25] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 23:36:39.123 [http-nio-8080-exec-25] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-16 23:36:39.139 [http-nio-8080-exec-25] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@341b1754
[DEBUG] 2020-02-16 23:36:39.155 [http-nio-8080-exec-25] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 23:36:39.159 [http-nio-8080-exec-25] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 23:36:39.162 [http-nio-8080-exec-25] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-16 23:36:39.176 [http-nio-8080-exec-25] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 23:36:39.195 [http-nio-8080-exec-25] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 23:36:39.196 [http-nio-8080-exec-25] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-16 23:36:39.198 [http-nio-8080-exec-25] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 23:36:39.198 [http-nio-8080-exec-25] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-16 23:36:39.208 [http-nio-8080-exec-25] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-16 23:36:39.209 [http-nio-8080-exec-25] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 23:36:39.209 [http-nio-8080-exec-25] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-16 23:36:39.209 [http-nio-8080-exec-25] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 23:36:39.218 [http-nio-8080-exec-25] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-16 23:36:39.218 [http-nio-8080-exec-25] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 23:36:39.218 [http-nio-8080-exec-25] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 23:36:39.235 [http-nio-8080-exec-25] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-16 23:36:39.252 [http-nio-8080-exec-25] Loader - Result set row: 0
[DEBUG] 2020-02-16 23:36:39.254 [http-nio-8080-exec-25] Loader - Result row: EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-02-16 23:36:39.270 [http-nio-8080-exec-25] Loader - Result set row: 1
[DEBUG] 2020-02-16 23:36:39.270 [http-nio-8080-exec-25] Loader - Result row: EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-16 23:36:39.272 [http-nio-8080-exec-25] Loader - Result set row: 2
[DEBUG] 2020-02-16 23:36:39.273 [http-nio-8080-exec-25] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 23:36:39.275 [http-nio-8080-exec-25] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-02-16 23:36:39.276 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 23:36:39.276 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.276 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 23:36:39.276 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.276 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:36:39.276 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.276 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-16 23:36:39.276 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.276 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-16 23:36:39.276 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.276 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 23:36:39.278 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.278 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-16 23:36:39.278 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.278 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 23:36:39.278 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.278 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 23:36:39.278 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.278 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 23:36:39.278 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.285 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:36:39.285 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.285 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-16 23:36:39.285 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.285 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@a8b5722
[DEBUG] 2020-02-16 23:36:39.285 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@cf9685
[DEBUG] 2020-02-16 23:36:39.286 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `email` : value = mary@streammedia.com
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `firstName` : value = Mary
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `lastName` : value = Torrence
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `username` : value = mary
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@a1ee2ca
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.287 [http-nio-8080-exec-25] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 23:36:39.292 [http-nio-8080-exec-25] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=mary, email=mary@streammedia.com, password=12345, firstName=Mary, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:36:39.293 [http-nio-8080-exec-25] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 23:36:39.298 [http-nio-8080-exec-25] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=mary, email=mary@streammedia.com, password=12345, firstName=Mary, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:36:39.301 [http-nio-8080-exec-25] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 23:36:39.302 [http-nio-8080-exec-25] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=mary, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:36:39.306 [http-nio-8080-exec-25] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#3]
[DEBUG] 2020-02-16 23:36:39.306 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:36:39.306 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.306 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 23:36:39.306 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.306 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:36:39.306 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.306 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=mary, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 23:36:39.307 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.307 [http-nio-8080-exec-25] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=mary}]
[DEBUG] 2020-02-16 23:36:39.308 [http-nio-8080-exec-25] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 23:36:39.310 [http-nio-8080-exec-25] Loader - Result set row: 0
[DEBUG] 2020-02-16 23:36:39.311 [http-nio-8080-exec-25] Loader - Result row: EntityKey[com.streammedia.entity.Role#3], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-16 23:36:39.311 [http-nio-8080-exec-25] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=mary, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:36:39.311 [http-nio-8080-exec-25] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:36:39.312 [http-nio-8080-exec-25] Loader - Done entity load
[DEBUG] 2020-02-16 23:36:39.312 [http-nio-8080-exec-25] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#3]
[DEBUG] 2020-02-16 23:36:39.312 [http-nio-8080-exec-25] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:36:39.312 [http-nio-8080-exec-25] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-16 23:36:39.312 [http-nio-8080-exec-25] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:36:39.313 [http-nio-8080-exec-25] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 23:36:39.313 [http-nio-8080-exec-25] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 23:36:39.313 [http-nio-8080-exec-25] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:36:39.313 [http-nio-8080-exec-25] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 23:36:39.314 [http-nio-8080-exec-25] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:36:39.315 [http-nio-8080-exec-25] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 23:36:39.318 [http-nio-8080-exec-25] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:36:39.319 [http-nio-8080-exec-25] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 23:36:39.319 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:36:39.319 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.320 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-16 23:36:39.320 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.320 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:36:39.320 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.320 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 23:36:39.320 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.321 [http-nio-8080-exec-25] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-16 23:36:39.321 [http-nio-8080-exec-25] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 23:36:39.328 [http-nio-8080-exec-25] Loader - Result set row: 0
[DEBUG] 2020-02-16 23:36:39.328 [http-nio-8080-exec-25] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-16 23:36:39.328 [http-nio-8080-exec-25] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:36:39.328 [http-nio-8080-exec-25] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:36:39.328 [http-nio-8080-exec-25] Loader - Done entity load
[DEBUG] 2020-02-16 23:36:39.328 [http-nio-8080-exec-25] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-16 23:36:39.328 [http-nio-8080-exec-25] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:36:39.328 [http-nio-8080-exec-25] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-16 23:36:39.329 [http-nio-8080-exec-25] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:36:39.329 [http-nio-8080-exec-25] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 23:36:39.329 [http-nio-8080-exec-25] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 23:36:39.329 [http-nio-8080-exec-25] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:36:39.329 [http-nio-8080-exec-25] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-16 23:36:39.330 [http-nio-8080-exec-25] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-16 23:36:39.330 [http-nio-8080-exec-25] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 23:36:39.330 [http-nio-8080-exec-25] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:36:39.330 [http-nio-8080-exec-25] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 23:36:39.330 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:36:39.330 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.330 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-16 23:36:39.330 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.330 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-16 23:36:39.330 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.330 [http-nio-8080-exec-25] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-16 23:36:39.330 [http-nio-8080-exec-25] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 23:36:39.331 [http-nio-8080-exec-25] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-16 23:36:39.331 [http-nio-8080-exec-25] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-16 23:36:39.332 [http-nio-8080-exec-25] Loader - Result set row: 0
[DEBUG] 2020-02-16 23:36:39.332 [http-nio-8080-exec-25] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-02-16 23:36:39.332 [http-nio-8080-exec-25] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-16 23:36:39.332 [http-nio-8080-exec-25] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:36:39.333 [http-nio-8080-exec-25] Loader - Done entity load
[DEBUG] 2020-02-16 23:36:39.333 [http-nio-8080-exec-25] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-16 23:36:39.333 [http-nio-8080-exec-25] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:36:39.333 [http-nio-8080-exec-25] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-02-16 23:36:39.333 [http-nio-8080-exec-25] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-16 23:36:39.333 [http-nio-8080-exec-25] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 23:36:39.333 [http-nio-8080-exec-25] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-16 23:36:39.334 [http-nio-8080-exec-25] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
