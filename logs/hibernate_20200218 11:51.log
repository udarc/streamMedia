[DEBUG] 2020-02-18 11:51:09.058 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-18 11:51:09.065 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-18 11:51:09.072 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-18 11:51:09.155 [http-nio-8080-exec-5] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-18 11:51:09.161 [http-nio-8080-exec-5] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-18 11:51:09.321 [http-nio-8080-exec-5] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-18 11:51:09.322 [http-nio-8080-exec-5] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-18 11:51:09.350 [http-nio-8080-exec-5] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-18 11:51:09.667 [http-nio-8080-exec-5] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-18 11:51:09.693 [http-nio-8080-exec-5] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-18 11:51:09.695 [http-nio-8080-exec-5] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-18 11:51:09.725 [http-nio-8080-exec-5] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-18 11:51:09.760 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@227e26c2
[DEBUG] 2020-02-18 11:51:09.760 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@227e26c2
[DEBUG] 2020-02-18 11:51:09.760 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@227e26c2
[DEBUG] 2020-02-18 11:51:09.761 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fd40ce6
[DEBUG] 2020-02-18 11:51:09.761 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@40fb4c7e
[DEBUG] 2020-02-18 11:51:09.762 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@68c7d85d
[DEBUG] 2020-02-18 11:51:09.762 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@497608a4
[DEBUG] 2020-02-18 11:51:09.762 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@497608a4
[DEBUG] 2020-02-18 11:51:09.762 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@497608a4
[DEBUG] 2020-02-18 11:51:09.763 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@612f7fe5
[DEBUG] 2020-02-18 11:51:09.763 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@612f7fe5
[DEBUG] 2020-02-18 11:51:09.764 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@612f7fe5
[DEBUG] 2020-02-18 11:51:09.765 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@70d2e4ba
[DEBUG] 2020-02-18 11:51:09.766 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@70d2e4ba
[DEBUG] 2020-02-18 11:51:09.767 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@70d2e4ba
[DEBUG] 2020-02-18 11:51:09.768 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5c703167
[DEBUG] 2020-02-18 11:51:09.768 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5c703167
[DEBUG] 2020-02-18 11:51:09.768 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5c703167
[DEBUG] 2020-02-18 11:51:09.770 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@37b951f9
[DEBUG] 2020-02-18 11:51:09.770 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@37b951f9
[DEBUG] 2020-02-18 11:51:09.771 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@37b951f9
[DEBUG] 2020-02-18 11:51:09.772 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@593b5f8f
[DEBUG] 2020-02-18 11:51:09.773 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@593b5f8f
[DEBUG] 2020-02-18 11:51:09.773 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@593b5f8f
[DEBUG] 2020-02-18 11:51:09.776 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6fa8f783
[DEBUG] 2020-02-18 11:51:09.776 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6fa8f783
[DEBUG] 2020-02-18 11:51:09.777 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fa8f783
[DEBUG] 2020-02-18 11:51:09.777 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2754ecee
[DEBUG] 2020-02-18 11:51:09.777 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2754ecee
[DEBUG] 2020-02-18 11:51:09.778 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4bfc59c1
[DEBUG] 2020-02-18 11:51:09.778 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4bfc59c1
[DEBUG] 2020-02-18 11:51:09.779 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2291f94a
[DEBUG] 2020-02-18 11:51:09.779 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2291f94a
[DEBUG] 2020-02-18 11:51:09.780 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6334195a
[DEBUG] 2020-02-18 11:51:09.780 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@32af3c61
[DEBUG] 2020-02-18 11:51:09.783 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@e32fbe2
[DEBUG] 2020-02-18 11:51:09.784 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@e32fbe2
[DEBUG] 2020-02-18 11:51:09.785 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@64226080
[DEBUG] 2020-02-18 11:51:09.785 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@64226080
[DEBUG] 2020-02-18 11:51:09.789 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@58a13cfd
[DEBUG] 2020-02-18 11:51:09.789 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@58a13cfd
[DEBUG] 2020-02-18 11:51:09.790 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@78acc2d7
[DEBUG] 2020-02-18 11:51:09.791 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@78acc2d7
[DEBUG] 2020-02-18 11:51:09.792 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1a734837
[DEBUG] 2020-02-18 11:51:09.792 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1a734837
[DEBUG] 2020-02-18 11:51:09.794 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d7a43e1
[DEBUG] 2020-02-18 11:51:09.794 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d7a43e1
[DEBUG] 2020-02-18 11:51:09.795 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5725243
[DEBUG] 2020-02-18 11:51:09.795 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5725243
[DEBUG] 2020-02-18 11:51:09.796 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@78a44515
[DEBUG] 2020-02-18 11:51:09.796 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@78a44515
[DEBUG] 2020-02-18 11:51:09.797 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7ec2552d
[DEBUG] 2020-02-18 11:51:09.798 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7ec2552d
[DEBUG] 2020-02-18 11:51:09.800 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@628862ad
[DEBUG] 2020-02-18 11:51:09.801 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@628862ad
[DEBUG] 2020-02-18 11:51:09.802 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6e1a6e18
[DEBUG] 2020-02-18 11:51:09.802 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6e1a6e18
[DEBUG] 2020-02-18 11:51:09.804 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@105b717
[DEBUG] 2020-02-18 11:51:09.804 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@105b717
[DEBUG] 2020-02-18 11:51:09.804 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@105b717
[DEBUG] 2020-02-18 11:51:09.806 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14958098
[DEBUG] 2020-02-18 11:51:09.807 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@48a10983
[DEBUG] 2020-02-18 11:51:09.807 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@48a10983
[DEBUG] 2020-02-18 11:51:09.807 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@48a10983
[DEBUG] 2020-02-18 11:51:09.809 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5329e474
[DEBUG] 2020-02-18 11:51:09.811 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1e0d8da
[DEBUG] 2020-02-18 11:51:09.811 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1e0d8da
[DEBUG] 2020-02-18 11:51:09.812 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2d58117
[DEBUG] 2020-02-18 11:51:09.812 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d58117
[DEBUG] 2020-02-18 11:51:09.813 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@16d4c109
[DEBUG] 2020-02-18 11:51:09.813 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@16d4c109
[DEBUG] 2020-02-18 11:51:09.814 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@207d267e
[DEBUG] 2020-02-18 11:51:09.814 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@207d267e
[DEBUG] 2020-02-18 11:51:09.815 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@bf0168e
[DEBUG] 2020-02-18 11:51:09.815 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@bf0168e
[DEBUG] 2020-02-18 11:51:09.815 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@74e50697
[DEBUG] 2020-02-18 11:51:09.816 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1d56d2f1
[DEBUG] 2020-02-18 11:51:09.816 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1d56d2f1
[DEBUG] 2020-02-18 11:51:09.816 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1d56d2f1
[DEBUG] 2020-02-18 11:51:09.817 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1cfd277f
[DEBUG] 2020-02-18 11:51:09.817 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1cfd277f
[DEBUG] 2020-02-18 11:51:09.817 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1cfd277f
[DEBUG] 2020-02-18 11:51:09.818 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@8a87a8d
[DEBUG] 2020-02-18 11:51:09.818 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4df7f47b
[DEBUG] 2020-02-18 11:51:09.820 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@52d31064
[DEBUG] 2020-02-18 11:51:09.820 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@52d31064
[DEBUG] 2020-02-18 11:51:09.820 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@52d31064
[DEBUG] 2020-02-18 11:51:09.821 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a128dc9
[DEBUG] 2020-02-18 11:51:09.821 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a128dc9
[DEBUG] 2020-02-18 11:51:09.821 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a128dc9
[DEBUG] 2020-02-18 11:51:09.822 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5f908cd7
[DEBUG] 2020-02-18 11:51:09.823 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@156ed5b6
[DEBUG] 2020-02-18 11:51:09.826 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@20717320
[DEBUG] 2020-02-18 11:51:09.826 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@20717320
[DEBUG] 2020-02-18 11:51:09.826 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16f76b91
[DEBUG] 2020-02-18 11:51:09.828 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5a701515
[DEBUG] 2020-02-18 11:51:09.828 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a701515
[DEBUG] 2020-02-18 11:51:09.829 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@148e39c7
[DEBUG] 2020-02-18 11:51:09.829 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@148e39c7
[DEBUG] 2020-02-18 11:51:09.830 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2190967a
[DEBUG] 2020-02-18 11:51:09.830 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@95c2948
[DEBUG] 2020-02-18 11:51:09.832 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@39c6434b
[DEBUG] 2020-02-18 11:51:09.838 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6619dd3
[DEBUG] 2020-02-18 11:51:09.838 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6619dd3
[DEBUG] 2020-02-18 11:51:09.839 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@520b1e95
[DEBUG] 2020-02-18 11:51:09.839 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b61b824
[DEBUG] 2020-02-18 11:51:09.839 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@20ab45e8
[DEBUG] 2020-02-18 11:51:09.839 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c732a30
[DEBUG] 2020-02-18 11:51:09.839 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@606729d
[DEBUG] 2020-02-18 11:51:09.842 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@50f04ae1
[DEBUG] 2020-02-18 11:51:09.842 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2a8ec112
[DEBUG] 2020-02-18 11:51:09.842 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3fb95cd9
[DEBUG] 2020-02-18 11:51:09.895 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-18 11:51:09.896 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-18 11:51:09.897 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-18 11:51:09.897 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-18 11:51:09.900 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-18 11:51:09.902 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-18 11:51:09.903 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-18 11:51:09.904 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-18 11:51:09.905 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-18 11:51:09.905 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-18 11:51:09.906 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-18 11:51:09.906 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-18 11:51:09.906 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-18 11:51:09.907 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-18 11:51:09.929 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/streamMedia
[INFO ] 2020-02-18 11:51:09.929 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-18 11:51:09.929 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-18 11:51:10.130 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-18 11:51:11.024 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
[DEBUG] 2020-02-18 11:51:11.026 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-18 11:51:11.026 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-18 11:51:11.121 [http-nio-8080-exec-5] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-18 11:51:11.177 [http-nio-8080-exec-5] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-18 11:51:11.358 [http-nio-8080-exec-5] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-18 11:51:11.406 [http-nio-8080-exec-5] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-18 11:51:11.411 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@dc9440b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2d706b52]
[DEBUG] 2020-02-18 11:51:11.451 [http-nio-8080-exec-5] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.streammedia.entity.Trailer]; ignoring
[DEBUG] 2020-02-18 11:51:11.468 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.User
[DEBUG] 2020-02-18 11:51:11.493 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-18 11:51:11.499 [http-nio-8080-exec-5] EntityBinder - Import with entity name User
[DEBUG] 2020-02-18 11:51:11.503 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.User on table SM_Users
[DEBUG] 2020-02-18 11:51:11.536 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.542 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-02-18 11:51:11.544 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:userId]
[DEBUG] 2020-02-18 11:51:11.548 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-02-18 11:51:11.552 [http-nio-8080-exec-5] PropertyBinder - Building property userId
[DEBUG] 2020-02-18 11:51:11.556 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-18 11:51:11.558 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=biography, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.558 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property biography with lazy=false
[DEBUG] 2020-02-18 11:51:11.558 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:biography]
[DEBUG] 2020-02-18 11:51:11.558 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for biography
[DEBUG] 2020-02-18 11:51:11.558 [http-nio-8080-exec-5] PropertyBinder - Building property biography
[DEBUG] 2020-02-18 11:51:11.558 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.558 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2020-02-18 11:51:11.558 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:birthdate]
[DEBUG] 2020-02-18 11:51:11.558 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2020-02-18 11:51:11.558 [http-nio-8080-exec-5] PropertyBinder - Building property birthdate
[DEBUG] 2020-02-18 11:51:11.559 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.559 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-18 11:51:11.560 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:createdAt]
[DEBUG] 2020-02-18 11:51:11.560 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-18 11:51:11.560 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-18 11:51:11.560 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.564 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-18 11:51:11.564 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:email]
[DEBUG] 2020-02-18 11:51:11.564 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-18 11:51:11.564 [http-nio-8080-exec-5] PropertyBinder - Building property email
[DEBUG] 2020-02-18 11:51:11.564 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.564 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-18 11:51:11.564 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:firstName]
[DEBUG] 2020-02-18 11:51:11.564 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-18 11:51:11.564 [http-nio-8080-exec-5] PropertyBinder - Building property firstName
[DEBUG] 2020-02-18 11:51:11.564 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=gender, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.564 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property gender with lazy=false
[DEBUG] 2020-02-18 11:51:11.564 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:gender]
[DEBUG] 2020-02-18 11:51:11.565 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for gender
[DEBUG] 2020-02-18 11:51:11.565 [http-nio-8080-exec-5] PropertyBinder - Building property gender
[DEBUG] 2020-02-18 11:51:11.565 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.565 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-18 11:51:11.565 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:lastName]
[DEBUG] 2020-02-18 11:51:11.565 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-18 11:51:11.565 [http-nio-8080-exec-5] PropertyBinder - Building property lastName
[DEBUG] 2020-02-18 11:51:11.565 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.565 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-18 11:51:11.566 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:password]
[DEBUG] 2020-02-18 11:51:11.566 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-18 11:51:11.566 [http-nio-8080-exec-5] PropertyBinder - Building property password
[DEBUG] 2020-02-18 11:51:11.566 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=picture, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.567 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property picture with lazy=false
[DEBUG] 2020-02-18 11:51:11.567 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:picture]
[DEBUG] 2020-02-18 11:51:11.567 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for picture
[DEBUG] 2020-02-18 11:51:11.567 [http-nio-8080-exec-5] PropertyBinder - Building property picture
[DEBUG] 2020-02-18 11:51:11.569 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-18 11:51:11.570 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.572 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.581 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.582 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.583 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-18 11:51:11.587 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-18 11:51:11.587 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-18 11:51:11.588 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-18 11:51:11.591 [http-nio-8080-exec-5] PropertyBinder - Building property roles
[DEBUG] 2020-02-18 11:51:11.591 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.591 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updateAt with lazy=false
[DEBUG] 2020-02-18 11:51:11.591 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:updateAt]
[DEBUG] 2020-02-18 11:51:11.591 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updateAt
[DEBUG] 2020-02-18 11:51:11.592 [http-nio-8080-exec-5] PropertyBinder - Building property updateAt
[DEBUG] 2020-02-18 11:51:11.592 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SM_Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
[DEBUG] 2020-02-18 11:51:11.592 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-02-18 11:51:11.593 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.User:username]
[DEBUG] 2020-02-18 11:51:11.593 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-02-18 11:51:11.593 [http-nio-8080-exec-5] PropertyBinder - Building property username
[DEBUG] 2020-02-18 11:51:11.594 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.streammedia.entity.Role
[DEBUG] 2020-02-18 11:51:11.594 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-18 11:51:11.594 [http-nio-8080-exec-5] EntityBinder - Import with entity name Role
[DEBUG] 2020-02-18 11:51:11.595 [http-nio-8080-exec-5] EntityBinder - Bind entity com.streammedia.entity.Role on table Role
[DEBUG] 2020-02-18 11:51:11.607 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.607 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2020-02-18 11:51:11.608 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:roleId]
[DEBUG] 2020-02-18 11:51:11.608 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2020-02-18 11:51:11.608 [http-nio-8080-exec-5] PropertyBinder - Building property roleId
[DEBUG] 2020-02-18 11:51:11.608 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-18 11:51:11.608 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=created_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.608 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
[DEBUG] 2020-02-18 11:51:11.608 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:createdAt]
[DEBUG] 2020-02-18 11:51:11.608 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for createdAt
[DEBUG] 2020-02-18 11:51:11.608 [http-nio-8080-exec-5] PropertyBinder - Building property createdAt
[DEBUG] 2020-02-18 11:51:11.628 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.629 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-18 11:51:11.629 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:name]
[DEBUG] 2020-02-18 11:51:11.629 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-18 11:51:11.629 [http-nio-8080-exec-5] PropertyBinder - Building property name
[DEBUG] 2020-02-18 11:51:11.630 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=updated_at, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.630 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false
[DEBUG] 2020-02-18 11:51:11.630 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.streammedia.entity.Role:updatedAt]
[DEBUG] 2020-02-18 11:51:11.630 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for updatedAt
[DEBUG] 2020-02-18 11:51:11.630 [http-nio-8080-exec-5] PropertyBinder - Building property updatedAt
[DEBUG] 2020-02-18 11:51:11.632 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='username', referencedColumn='username', mappedBy=''}
[DEBUG] 2020-02-18 11:51:11.633 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-18 11:51:11.636 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-02-18 11:51:11.639 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-02-18 11:51:11.644 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for biography
[DEBUG] 2020-02-18 11:51:11.646 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2020-02-18 11:51:11.646 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-18 11:51:11.646 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-18 11:51:11.646 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-18 11:51:11.646 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for gender
[DEBUG] 2020-02-18 11:51:11.647 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-18 11:51:11.647 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-18 11:51:11.647 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for picture
[DEBUG] 2020-02-18 11:51:11.647 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updateAt
[DEBUG] 2020-02-18 11:51:11.647 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-02-18 11:51:11.647 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2020-02-18 11:51:11.648 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for createdAt
[DEBUG] 2020-02-18 11:51:11.648 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-18 11:51:11.648 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for updatedAt
[DEBUG] 2020-02-18 11:51:11.657 [http-nio-8080-exec-5] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [sm_users]
[DEBUG] 2020-02-18 11:51:11.657 [http-nio-8080-exec-5] PrimaryKey - Forcing column [role_id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-02-18 11:51:11.657 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-18 11:51:11.657 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.streammedia.entity.User.roles through a foreign key
[DEBUG] 2020-02-18 11:51:11.658 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.streammedia.entity.User.roles -> Role
[DEBUG] 2020-02-18 11:51:11.660 [http-nio-8080-exec-5] TableBinder - Retrieving property com.streammedia.entity.Role.user
[DEBUG] 2020-02-18 11:51:11.660 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: username, one-to-many: com.streammedia.entity.Role
[DEBUG] 2020-02-18 11:51:11.660 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-18 11:51:11.661 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-18 11:51:11.666 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-18 11:51:11.667 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.streammedia.entity.User
[DEBUG] 2020-02-18 11:51:11.742 [http-nio-8080-exec-5] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-18 11:51:11.743 [http-nio-8080-exec-5] Settings - SessionFactory name : null
[DEBUG] 2020-02-18 11:51:11.743 [http-nio-8080-exec-5] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-18 11:51:11.743 [http-nio-8080-exec-5] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-18 11:51:11.743 [http-nio-8080-exec-5] Settings - Statistics: disabled
[DEBUG] 2020-02-18 11:51:11.743 [http-nio-8080-exec-5] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-18 11:51:11.743 [http-nio-8080-exec-5] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Default null ordering: NONE
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Query language substitutions: {}
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Named query checking : enabled
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Second-level cache: disabled
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-18 11:51:11.744 [http-nio-8080-exec-5] Settings - JDBC batch size: 15
[DEBUG] 2020-02-18 11:51:11.745 [http-nio-8080-exec-5] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-18 11:51:11.745 [http-nio-8080-exec-5] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-18 11:51:11.745 [http-nio-8080-exec-5] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-18 11:51:11.745 [http-nio-8080-exec-5] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-18 11:51:11.745 [http-nio-8080-exec-5] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-18 11:51:11.745 [http-nio-8080-exec-5] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-18 11:51:11.745 [http-nio-8080-exec-5] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-18 11:51:11.745 [http-nio-8080-exec-5] Settings - JPA compliance - query : 
[DEBUG] 2020-02-18 11:51:11.745 [http-nio-8080-exec-5] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-18 11:51:11.745 [http-nio-8080-exec-5] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-18 11:51:11.745 [http-nio-8080-exec-5] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-18 11:51:11.809 [http-nio-8080-exec-5] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-18 11:51:11.841 [http-nio-8080-exec-5] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-18 11:51:11.842 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.6, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.3.0-28-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/streamMedia, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.3/system/tomcat/Unnamed_streamMedia, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4292dae0, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/streamMedia, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-02-18 11:51:11.866 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-18 11:51:11.866 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-18 11:51:11.879 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-18 11:51:11.879 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-18 11:51:11.886 [http-nio-8080-exec-5] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-18 11:51:11.887 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-18 11:51:11.887 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@dc9440b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@407108b4]
[DEBUG] 2020-02-18 11:51:11.931 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-18 11:51:11.931 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-18 11:51:11.943 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.Role] is safe
[DEBUG] 2020-02-18 11:51:11.943 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.Role
[DEBUG] 2020-02-18 11:51:12.190 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-18 11:51:12.191 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-18 11:51:12.193 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.streammedia.entity.User] is safe
[DEBUG] 2020-02-18 11:51:12.193 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.streammedia.entity.User
[DEBUG] 2020-02-18 11:51:12.275 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.streammedia.entity.User.roles
[DEBUG] 2020-02-18 11:51:12.276 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update Role set username=? where role_id=?
[DEBUG] 2020-02-18 11:51:12.276 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update Role set  where role_id=?
[DEBUG] 2020-02-18 11:51:12.276 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update Role set username=null where username=? and role_id=?
[DEBUG] 2020-02-18 11:51:12.276 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update Role set username=null where username=?
[DEBUG] 2020-02-18 11:51:12.280 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.Role
[DEBUG] 2020-02-18 11:51:12.281 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select role_id from Role where role_id =?
[DEBUG] 2020-02-18 11:51:12.281 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select role_.role_id, role_.created_at as created_2_0_, role_.name as name3_0_, role_.updated_at as updated_4_0_, role_.username as username5_0_ from Role role_ where role_.role_id=?
[DEBUG] 2020-02-18 11:51:12.281 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into Role (created_at, name, updated_at, username, role_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-02-18 11:51:12.281 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update Role set created_at=?, name=?, updated_at=?, username=? where role_id=?
[DEBUG] 2020-02-18 11:51:12.281 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from Role where role_id=?
[DEBUG] 2020-02-18 11:51:12.281 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into Role (created_at, name, updated_at, username) values (?, ?, ?, ?)
[DEBUG] 2020-02-18 11:51:12.311 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c8471a0]
[DEBUG] 2020-02-18 11:51:12.312 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-18 11:51:12.312 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-18 11:51:12.312 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-18 11:51:12.312 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-18 11:51:12.317 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c8cc07f]
[DEBUG] 2020-02-18 11:51:12.318 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-18 11:51:12.319 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-18 11:51:12.319 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-18 11:51:12.319 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-18 11:51:12.319 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-18 11:51:12.319 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-18 11:51:12.319 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-18 11:51:12.319 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-18 11:51:12.320 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-18 11:51:12.321 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-18 11:51:12.321 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-18 11:51:12.322 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-18 11:51:12.322 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-18 11:51:12.322 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-18 11:51:12.323 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@47fdac86]
[DEBUG] 2020-02-18 11:51:12.328 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-18 11:51:12.328 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-18 11:51:12.343 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-18 11:51:12.351 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-18 11:51:12.354 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Role [NONE]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-18 11:51:12.355 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a46d0f2]
[DEBUG] 2020-02-18 11:51:12.355 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-18 11:51:12.355 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-18 11:51:12.355 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-18 11:51:12.356 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-18 11:51:12.358 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e026225]
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.biography
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.birthdate
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.createdAt
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.gender
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.picture
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.updateAt
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@525af42e]
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user._com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-18 11:51:12.360 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-18 11:51:12.365 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-18 11:51:12.366 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.Role, querySpaceUid=<gen:0>, path=com.streammedia.entity.Role)
          - EntityAttributeFetchImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:1>, path=com.streammedia.entity.Role.user)
             - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:2>, path=com.streammedia.entity.Role.user._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-18 11:51:12.367 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.Role [READ]: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_, user1_.user_id as user_id1_1_1_, user1_.biography as biograph2_1_1_, user1_.birthdate as birthdat3_1_1_, user1_.created_at as created_4_1_1_, user1_.email as email5_1_1_, user1_.first_name as first_na6_1_1_, user1_.gender as gender7_1_1_, user1_.last_name as last_nam8_1_1_, user1_.password as password9_1_1_, user1_.picture as picture10_1_1_, user1_.updated_at as updated11_1_1_, user1_.username as usernam12_1_1_ from Role role0_ inner join SM_Users user1_ on role0_.username=user1_.username where role0_.role_id=?
[DEBUG] 2020-02-18 11:51:12.379 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-18 11:51:12.380 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.Role: select role0_.role_id as role_id1_0_0_, role0_.created_at as created_2_0_0_, role0_.name as name3_0_0_, role0_.updated_at as updated_4_0_0_, role0_.username as username5_0_0_ from Role role0_ where role0_.role_id=?
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.streammedia.entity.User
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select user_id from SM_Users where user_id =?
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.biography as biograph2_1_, user_.birthdate as birthdat3_1_, user_.created_at as created_4_1_, user_.email as email5_1_, user_.first_name as first_na6_1_, user_.gender as gender7_1_, user_.last_name as last_nam8_1_, user_.password as password9_1_, user_.picture as picture10_1_, user_.updated_at as updated11_1_, user_.username as usernam12_1_ from SM_Users user_ where user_.user_id=?
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update SM_Users set biography=?, birthdate=?, created_at=?, email=?, first_name=?, gender=?, last_name=?, password=?, picture=?, updated_at=?, username=? where user_id=?
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from SM_Users where user_id=?
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into SM_Users (biography, birthdate, created_at, email, first_name, gender, last_name, password, picture, updated_at, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b233006]
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-18 11:51:12.381 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-18 11:51:12.382 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-18 11:51:12.384 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1818cbab]
[DEBUG] 2020-02-18 11:51:12.387 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@429aaf3b]
[DEBUG] 2020-02-18 11:51:12.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-18 11:51:12.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-18 11:51:12.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-18 11:51:12.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-18 11:51:12.388 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-18 11:51:12.389 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-18 11:51:12.389 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-18 11:51:12.389 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-18 11:51:12.389 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@13aca8db]
[DEBUG] 2020-02-18 11:51:12.389 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-18 11:51:12.389 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-18 11:51:12.389 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-18 11:51:12.391 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6601b067]
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : biography
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : gender
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : picture
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e44a133]
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2621faeb]
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.createdAt
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.updatedAt
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updateAt
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@9a55471]
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : _com_streammedia_entity_Role_user.username
[DEBUG] 2020-02-18 11:51:12.392 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-18 11:51:12.393 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-18 11:51:12.393 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.streammedia.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.streammedia.entity.User, querySpaceUid=<gen:0>, path=com.streammedia.entity.User)
          - CollectionAttributeFetchImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:1>, path=com.streammedia.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:2>, path=com.streammedia.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.streammedia.entity.User, querySpaceUid=<gen:3>, path=com.streammedia.entity.User._com_streammedia_entity_Role_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.streammedia.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.streammedia.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {username5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - role_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.streammedia.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {role_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_streammedia_entity_Role_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-18 11:51:12.393 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.streammedia.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.biography as biograph2_1_0_, user0_.birthdate as birthdat3_1_0_, user0_.created_at as created_4_1_0_, user0_.email as email5_1_0_, user0_.first_name as first_na6_1_0_, user0_.gender as gender7_1_0_, user0_.last_name as last_nam8_1_0_, user0_.password as password9_1_0_, user0_.picture as picture10_1_0_, user0_.updated_at as updated11_1_0_, user0_.username as usernam12_1_0_, roles1_.username as username5_0_1_, roles1_.role_id as role_id1_0_1_, roles1_.role_id as role_id1_0_2_, roles1_.created_at as created_2_0_2_, roles1_.name as name3_0_2_, roles1_.updated_at as updated_4_0_2_, roles1_.username as username5_0_2_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-18 11:51:12.394 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-18 11:51:12.395 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.streammedia.entity.User: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.user_id=?
[DEBUG] 2020-02-18 11:51:12.397 [http-nio-8080-exec-5] Loader - Static select for entity com.streammedia.entity.User [NONE]: select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-18 11:51:12.402 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76748f3e]
[DEBUG] 2020-02-18 11:51:12.402 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c9df8bb]
[DEBUG] 2020-02-18 11:51:12.402 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : createdAt
[DEBUG] 2020-02-18 11:51:12.402 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-18 11:51:12.403 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : updatedAt
[DEBUG] 2020-02-18 11:51:12.403 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-18 11:51:12.403 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-18 11:51:12.403 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-18 11:51:12.404 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-18 11:51:12.405 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.streammedia.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.streammedia.entity.User.roles, querySpaceUid=<gen:0>, path=[com.streammedia.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.streammedia.entity.Role, querySpaceUid=<gen:1>, path=[com.streammedia.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.streammedia.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {username5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - role_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.streammedia.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {role_id1_0_1_}

[DEBUG] 2020-02-18 11:51:12.405 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.streammedia.entity.User.roles: select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-18 11:51:12.440 [http-nio-8080-exec-5] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-18 11:51:12.441 [http-nio-8080-exec-5] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-18 11:51:12.441 [http-nio-8080-exec-5] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-18 11:51:12.447 [http-nio-8080-exec-5] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-18 11:51:12.447 [http-nio-8080-exec-5] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-18 11:51:12.448 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-18 11:51:12.448 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-18 11:51:12.450 [http-nio-8080-exec-5] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@418b2c6e
[DEBUG] 2020-02-18 11:51:12.451 [http-nio-8080-exec-5] SessionFactoryRegistry - Registering SessionFactory: fd328b22-54a1-4d6d-a853-ef7c0a2845eb (<unnamed>)
[DEBUG] 2020-02-18 11:51:12.452 [http-nio-8080-exec-5] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-18 11:51:12.524 [http-nio-8080-exec-5] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-18 11:51:12.551 [http-nio-8080-exec-5] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-02-18 11:51:12.566 [http-nio-8080-exec-5] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@498b088a
[DEBUG] 2020-02-18 11:51:12.585 [http-nio-8080-exec-5] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-18 11:51:12.588 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-18 11:51:12.593 [http-nio-8080-exec-5] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'streammedia'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-02-18 11:51:12.615 [http-nio-8080-exec-5] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-18 11:51:12.629 [http-nio-8080-exec-5] FromElement - FromClause{level=1} : com.streammedia.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-18 11:51:12.630 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-02-18 11:51:12.633 [http-nio-8080-exec-5] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-18 11:51:12.633 [http-nio-8080-exec-5] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} SM_Users user0_ ) )
[DEBUG] 2020-02-18 11:51:12.643 [http-nio-8080-exec-5] JoinProcessor - Using FROM fragment [SM_Users user0_]
[DEBUG] 2020-02-18 11:51:12.644 [http-nio-8080-exec-5] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-18 11:51:12.644 [http-nio-8080-exec-5] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SM_Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.streammedia.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SM_Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SM_Users,tableAlias=user0_,origin=null,columns={,className=com.streammedia.entity.User}}

[DEBUG] 2020-02-18 11:51:12.644 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-18 11:51:12.650 [http-nio-8080-exec-5] QueryTranslatorImpl - HQL: select generatedAlias0 from com.streammedia.entity.User as generatedAlias0
[DEBUG] 2020-02-18 11:51:12.650 [http-nio-8080-exec-5] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-18 11:51:12.651 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-18 11:51:12.666 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_1_, user0_.biography as biograph2_1_, user0_.birthdate as birthdat3_1_, user0_.created_at as created_4_1_, user0_.email as email5_1_, user0_.first_name as first_na6_1_, user0_.gender as gender7_1_, user0_.last_name as last_nam8_1_, user0_.password as password9_1_, user0_.picture as picture10_1_, user0_.updated_at as updated11_1_, user0_.username as usernam12_1_ from SM_Users user0_
[DEBUG] 2020-02-18 11:51:12.689 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-02-18 11:51:12.692 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-02-18 11:51:12.703 [http-nio-8080-exec-5] Loader - Result set row: 1
[DEBUG] 2020-02-18 11:51:12.703 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-18 11:51:12.703 [http-nio-8080-exec-5] Loader - Result set row: 2
[DEBUG] 2020-02-18 11:51:12.703 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-18 11:51:12.704 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#1]
[DEBUG] 2020-02-18 11:51:12.705 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-18 11:51:12.705 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `email` : value = ian@madisoncollege.edu
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Ian
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Declan
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-18 11:51:12.706 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.716 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-18 11:51:12.716 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.716 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = ian
[DEBUG] 2020-02-18 11:51:12.716 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.716 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@42494d9a
[DEBUG] 2020-02-18 11:51:12.716 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#1]
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#2]
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `email` : value = admin@streammedia.com
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = 
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = 
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.717 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = admin
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@6e64ba08
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#2]
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.User#3]
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `biography` : value = null
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`biography`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `birthdate` : value = null
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `email` : value = mary@streammedia.com
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Mary
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `gender` : value = null
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`gender`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Torrence
[DEBUG] 2020-02-18 11:51:12.718 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.719 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2020-02-18 11:51:12.719 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.719 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `picture` : value = null
[DEBUG] 2020-02-18 11:51:12.719 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`picture`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.719 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-18 11:51:12.719 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.719 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updateAt` : value = 2020-02-16
[DEBUG] 2020-02-18 11:51:12.719 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updateAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.719 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = mary
[DEBUG] 2020-02-18 11:51:12.719 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.719 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `_com_streammedia_entity_Role_user` : value = [Ljava.lang.Object;@489ee4bc
[DEBUG] 2020-02-18 11:51:12.719 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`_com_streammedia_entity_Role_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.719 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.User#3]
[DEBUG] 2020-02-18 11:51:12.745 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=3, username=mary, email=mary@streammedia.com, password=12345, firstName=Mary, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-18 11:51:12.745 [http-nio-8080-exec-5] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-18 11:51:12.849 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=3, username=mary, email=mary@streammedia.com, password=12345, firstName=Mary, lastName=Torrence, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-18 11:51:12.854 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 11:51:12.856 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=mary, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-18 11:51:12.860 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#3]
[DEBUG] 2020-02-18 11:51:12.860 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-18 11:51:12.860 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.860 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-18 11:51:12.860 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.860 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-18 11:51:12.862 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.862 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=mary, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-18 11:51:12.862 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.862 [http-nio-8080-exec-5] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=mary}]
[DEBUG] 2020-02-18 11:51:12.863 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-18 11:51:12.867 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-02-18 11:51:12.867 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.Role#3], EntityKey[com.streammedia.entity.User#3]
[DEBUG] 2020-02-18 11:51:12.867 [http-nio-8080-exec-5] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=mary, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-18 11:51:12.868 [http-nio-8080-exec-5] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-18 11:51:12.868 [http-nio-8080-exec-5] Loader - Done entity load
[DEBUG] 2020-02-18 11:51:12.868 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#3]
[DEBUG] 2020-02-18 11:51:12.868 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-18 11:51:12.868 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#3]
[DEBUG] 2020-02-18 11:51:12.868 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-18 11:51:12.868 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 11:51:12.868 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-18 11:51:12.868 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-18 11:51:12.868 [http-nio-8080-exec-5] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-18 11:51:12.871 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=2, username=admin, email=admin@streammedia.com, password=12345, firstName=, lastName=, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-18 11:51:12.871 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 11:51:12.871 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-18 11:51:12.872 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-18 11:51:12.872 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-18 11:51:12.872 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.872 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = admin
[DEBUG] 2020-02-18 11:51:12.872 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.872 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-18 11:51:12.872 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.872 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-18 11:51:12.872 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.872 [http-nio-8080-exec-5] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=admin}]
[DEBUG] 2020-02-18 11:51:12.877 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-18 11:51:12.882 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-02-18 11:51:12.882 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.Role#2], EntityKey[com.streammedia.entity.User#2]
[DEBUG] 2020-02-18 11:51:12.882 [http-nio-8080-exec-5] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=admin, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-18 11:51:12.882 [http-nio-8080-exec-5] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-18 11:51:12.882 [http-nio-8080-exec-5] Loader - Done entity load
[DEBUG] 2020-02-18 11:51:12.883 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#2]
[DEBUG] 2020-02-18 11:51:12.883 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-18 11:51:12.883 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#2]
[DEBUG] 2020-02-18 11:51:12.883 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-18 11:51:12.883 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 11:51:12.883 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-18 11:51:12.883 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-18 11:51:12.883 [http-nio-8080-exec-5] SQL - select roles0_.username as username5_0_0_, roles0_.role_id as role_id1_0_0_, roles0_.role_id as role_id1_0_1_, roles0_.created_at as created_2_0_1_, roles0_.name as name3_0_1_, roles0_.updated_at as updated_4_0_1_, roles0_.username as username5_0_1_ from Role roles0_ where roles0_.username=?
[DEBUG] 2020-02-18 11:51:12.884 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [com.streammedia.entity.User.roles#User(userId=1, username=ian, email=ian@madisoncollege.edu, password=12345, firstName=Ian, lastName=Declan, birthdate=null, picture=null, gender=null, biography=null, createdAt=2020-02-16, updateAt=2020-02-16)]
[DEBUG] 2020-02-18 11:51:12.884 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-18 11:51:12.884 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-18 11:51:12.884 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-18 11:51:12.884 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `createdAt` : value = 2020-02-16
[DEBUG] 2020-02-18 11:51:12.884 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`createdAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.884 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = user
[DEBUG] 2020-02-18 11:51:12.884 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.885 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `updatedAt` : value = 2020-02-16
[DEBUG] 2020-02-18 11:51:12.886 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`updatedAt`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.886 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)
[DEBUG] 2020-02-18 11:51:12.886 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-18 11:51:12.886 [http-nio-8080-exec-5] Loader - Loading entity: [com.streammedia.entity.User#component[username]{username=ian}]
[DEBUG] 2020-02-18 11:51:12.886 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_1_1_, user0_.biography as biograph2_1_1_, user0_.birthdate as birthdat3_1_1_, user0_.created_at as created_4_1_1_, user0_.email as email5_1_1_, user0_.first_name as first_na6_1_1_, user0_.gender as gender7_1_1_, user0_.last_name as last_nam8_1_1_, user0_.password as password9_1_1_, user0_.picture as picture10_1_1_, user0_.updated_at as updated11_1_1_, user0_.username as usernam12_1_1_, roles1_.username as username5_0_3_, roles1_.role_id as role_id1_0_3_, roles1_.role_id as role_id1_0_0_, roles1_.created_at as created_2_0_0_, roles1_.name as name3_0_0_, roles1_.updated_at as updated_4_0_0_, roles1_.username as username5_0_0_ from SM_Users user0_ left outer join Role roles1_ on user0_.username=roles1_.username where user0_.username=?
[DEBUG] 2020-02-18 11:51:12.888 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-02-18 11:51:12.888 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.streammedia.entity.Role#1], EntityKey[com.streammedia.entity.User#1]
[DEBUG] 2020-02-18 11:51:12.888 [http-nio-8080-exec-5] Loader - Found row of collection: [com.streammedia.entity.User.roles#User(userId=0, username=ian, email=null, password=null, firstName=null, lastName=null, birthdate=null, picture=null, gender=null, biography=null, createdAt=null, updateAt=null)]
[DEBUG] 2020-02-18 11:51:12.888 [http-nio-8080-exec-5] CollectionLoadContext - No collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-18 11:51:12.888 [http-nio-8080-exec-5] Loader - Done entity load
[DEBUG] 2020-02-18 11:51:12.888 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.streammedia.entity.Role#1]
[DEBUG] 2020-02-18 11:51:12.888 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-18 11:51:12.888 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.streammedia.entity.User.roles#1]
[DEBUG] 2020-02-18 11:51:12.888 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.streammedia.entity.User.roles
[DEBUG] 2020-02-18 11:51:12.888 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-18 11:51:12.888 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-18 11:51:12.889 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
